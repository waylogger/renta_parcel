var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "getRequestBuilder", function () {
  return getRequestBuilder;
});
_parcelHelpers.export(exports, "getTarrifs", function () {
  return getTarrifs;
});
_parcelHelpers.export(exports, "getCityList", function () {
  return getCityList;
});
_parcelHelpers.export(exports, "getCarList", function () {
  return getCarList;
});
_parcelHelpers.export(exports, "getServiceTypeList", function () {
  return getServiceTypeList;
});
_parcelHelpers.export(exports, "getServiceList", function () {
  return getServiceList;
});
_parcelHelpers.export(exports, "getPlaceList", function () {
  return getPlaceList;
});
_parcelHelpers.export(exports, "getCarFreeList", function () {
  return getCarFreeList;
});
_parcelHelpers.export(exports, "getCarPeriodList", function () {
  return getCarPeriodList;
});
_parcelHelpers.export(exports, "getCost", function () {
  return getCost;
});
_parcelHelpers.export(exports, "sendRequest", function () {
  return sendRequest;
});
require('regenerator-runtime/runtime');
var _auth = require('./auth');
const queryString = {
  stringify: params => {
    if (!params) return;
    return Object.keys(params).map(key => key + '=' + params[key]).join('&');
  }
};
async function getRequestBuilder(urlSuffix, query) {
  let url = '';
  query ? url = `${_auth.server}:${_auth.port}/${_auth.dataApiEndpoint}/${urlSuffix}?${query}` : url = `${_auth.server}:${_auth.port}/${_auth.dataApiEndpoint}/${urlSuffix}`;
  const token = await _auth.getAccess();
  const res = await fetch(url, {
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    }
  });
  return res.json();
}
async function getTarrifs(reqObj) {
  return (await getRequestBuilder('tariff_list', queryString.stringify(reqObj))).cars;
}
async function getCityList() {
  return (await getRequestBuilder('city_list', {})).cities;
}
async function getCarList() {
  return (await getRequestBuilder('car_list', {})).cars;
}
async function getServiceTypeList() {
  return getRequestBuilder('service_type_list', {});
}
async function getServiceList() {
  return getRequestBuilder('service_list', {});
}
async function getPlaceList() {
  return await getRequestBuilder('place_list', {});
}
async function getCarFreeList(reqObj) {
  const res = (await getRequestBuilder('car_free_list', queryString.stringify(reqObj))).cars;
  return res;
}
async function getCarPeriodList(reqObj) {
  return (await getRequestBuilder('car_period_list', queryString.stringify(reqObj))).car_periods;
}
async function getCost(reqObj) {
  return await getRequestBuilder('bid_cost', queryString.stringify(reqObj, {
    arrayFormat: 'bracket'
  }));
}
async function sendRequest(body) {
  const urlSuffix = 'bid_create';
  let url = `${_auth.server}:${_auth.port}/${_auth.dataApiEndpoint}/${urlSuffix}`;
  const token = await _auth.getAccess();
  const res = await fetch(url, {
    method: 'PUT',
    headers: {
      'Authorization': `Bearer ${token}`
    },
    body: body
  });
  return res.json();
}
