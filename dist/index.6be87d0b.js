// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function(modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function() {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"eJe8r":[function(require,module,exports) {
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "69f74e7f31319ffd";
module.bundle.HMR_BUNDLE_ID = "569be81c6be87d0b";
"use strict";
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F1() {
            };
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e) {
                    throw _e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = o[Symbol.iterator]();
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e2) {
            didErr = true;
            err = _e2;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function accept(fn) {
            this._acceptCallbacks.push(fn || function() {
            });
        },
        dispose: function dispose(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';
    var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe
    ws.onmessage = function(event) {
        checkedAssets = {
        };
        acceptedAssets = {
        };
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === 'update') {
            // Remove error overlay if there is one
            removeErrorOverlay();
            var assets = data.assets.filter(function(asset) {
                return asset.envHash === HMR_ENV_HASH;
            }); // Handle HMR Update
            var handled = assets.every(function(asset) {
                return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                assets.forEach(function(asset) {
                    hmrApply(module.bundle.root, asset);
                });
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else window.location.reload();
        }
        if (data.type === 'error') {
            // Log parcel errors to console
            var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var ansiDiagnostic = _step.value;
                    var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                    console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
                } // Render the fancy html overlay
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
            document.body.appendChild(overlay);
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn('[parcel] 🚨 Connection to the HMR server was lost');
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log('[parcel] ✨ Error resolved');
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    var errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    var _iterator2 = _createForOfIteratorHelper(diagnostics), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var diagnostic = _step2.value;
            var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
            errorHTML += "\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \uD83D\uDEA8 ".concat(diagnostic.message, "\n        </div>\n        <pre>\n          ").concat(stack, "\n        </pre>\n        <div>\n          ").concat(diagnostic.hints.map(function(hint) {
                return '<div>' + hint + '</div>';
            }).join(''), "\n        </div>\n      </div>\n    ");
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') {
        reloadCSS();
        return;
    }
    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
    if (deps) {
        var fn = new Function('require', 'module', 'exports', asset.output);
        modules[asset.id] = [
            fn,
            deps
        ];
    } else if (bundle.parent) hmrApply(bundle.parent, asset);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) return true;
    return getParents(module.bundle.root, id).some(function(v) {
        return hmrAcceptCheck(v[0], v[1], null);
    });
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {
    };
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"7Mc0f":[function(require,module,exports) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
var template_1 = require("./app/views/template");
var shared = __importStar(require("./app/shared/sharedData"));
var jquery_1 = __importDefault(require("jquery"));
var state_1 = require("./app/state/state");
var placeSelect_1 = require("./app/components/placeSelect");
var timeSelect_1 = require("./app/components/timeSelect");
var customersPhone_1 = require("./app/components/customersPhone");
var customersName_1 = require("./app/components/customersName");
var carSelect_1 = require("./app/components/carSelect");
var bidPreview_1 = require("./app/components/bidPreview");
var createBid_1 = require("./app/components/createBid");
var sharedActions_1 = require("./app/shared/sharedActions");
var checkHash = function() {
    if (location.hash === '#') jquery_1.default("#" + shared.domElementId.bookModuleId).addClass('carNotSelect');
    else jquery_1.default("#" + shared.domElementId.bookModuleId).removeClass('carNotSelect');
};
(function() {
    return __awaiter(void 0, void 0, void 0, function() {
        var state;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    jquery_1.default("#" + shared.domElementId.rootSectionId).html(template_1.rootSection());
                    return [
                        4 /*yield*/ ,
                        state_1.BookingState()
                    ];
                case 1:
                    state = _a.sent();
                    return [
                        4 /*yield*/ ,
                        carSelect_1.carSelect(state)
                    ];
                case 2:
                    _a.sent();
                    jquery_1.default.when(jquery_1.default.ready).then(function() {
                        return __awaiter(void 0, void 0, void 0, function() {
                            return __generator(this, function(_a1) {
                                customersPhone_1.customersPhoneValidateAndSave(state);
                                customersName_1.nameValidateAndSave(state);
                                placeSelect_1.placeOptions(state);
                                placeSelect_1.selectPlace(state);
                                bidPreview_1.onPreview(state);
                                jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).on('change', function() {
                                    return timeSelect_1.correctionSecondTimeAfterFirst(state);
                                });
                                jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).on('change', function() {
                                    var _a2;
                                    var strT = (_a2 = jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).val()) === null || _a2 === void 0 ? void 0 : _a2.toString().split(':');
                                    if (!strT) return;
                                    var h = parseInt(strT[0], 10);
                                    var m = parseInt(strT[1], 10);
                                    var timestamp = state.getFirstDateOfRange();
                                    timestamp.setHours(h);
                                    timestamp.setMinutes(m);
                                    state.setFirstTimeOfRange(timestamp);
                                });
                                jquery_1.default("#" + shared.domElementId.selectReturnTimeId).on('change', function() {
                                    var _a2;
                                    var strT = (_a2 = jquery_1.default("#" + shared.domElementId.selectReturnTimeId).val()) === null || _a2 === void 0 ? void 0 : _a2.toString().split(':');
                                    if (!strT) return;
                                    var h = parseInt(strT[0], 10);
                                    var m = parseInt(strT[1], 10);
                                    var timestamp = state.getSecondDateOfRange();
                                    timestamp.setHours(h);
                                    timestamp.setMinutes(m);
                                    state.setSecondTimeOfRange(timestamp);
                                    state.setMainCar();
                                });
                                jquery_1.default("#" + shared.domElementId.bookButtonId).on('click', function() {
                                    return createBid_1.createBid(state);
                                });
                                jquery_1.default("#proofOfAgeAndExperience").on('click', function() {
                                    var check = state.toggleAgeChecker();
                                    if (check) jquery_1.default("#" + shared.domElementId.ageAgree).attr('checked', 'true');
                                    else jquery_1.default("#" + shared.domElementId.ageAgree).attr('checked', null);
                                    sharedActions_1.validateChecker(shared.domElementId.ageAgree, shared.domElementId.proofOfAgeId);
                                });
                                jquery_1.default("#agreementWithPolicy").on('click', function() {
                                    var check = state.togglePolicyChecker();
                                    if (check) jquery_1.default("#" + shared.domElementId.policyAgree).attr('checked', 'true');
                                    else jquery_1.default("#" + shared.domElementId.policyAgree).attr('checked', null);
                                    sharedActions_1.validateChecker(shared.domElementId.policyAgree, shared.domElementId.proofOfPolicyId);
                                });
                                jquery_1.default("#" + shared.domElementId.receiveCustomPlaceInputId).on('focusout', function() {
                                    sharedActions_1.validateField(shared.domElementId.receiveCustomPlaceInputId, shared.domElementId.receiveCustomTextId);
                                });
                                jquery_1.default("#" + shared.domElementId.returnCustomPlaceInputId).on('focusout', function() {
                                    sharedActions_1.validateField(shared.domElementId.returnCustomPlaceInputId, shared.domElementId.returnCustomTextId);
                                });
                                return [
                                    2 /*return*/ 
                                ];
                            });
                        });
                    });
                    return [
                        2 /*return*/ 
                    ];
            }
        });
    });
})();

},{"./app/views/template":"5e85r","./app/shared/sharedData":"iUwdp","jquery":"igaHu","./app/state/state":"hLUnm","./app/components/placeSelect":"9YS9I","./app/components/timeSelect":"dSg0O","./app/components/customersPhone":"1v4sM","./app/components/customersName":"fBU2t","./app/components/carSelect":"jZFUc","./app/components/bidPreview":"1m9fP","./app/components/createBid":"7Hwd1","./app/shared/sharedActions":"htU3t"}],"5e85r":[function(require,module,exports) {
"use strict";
/**
* @module template.ts
*/ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rootSection = void 0;
var shared = __importStar(require("../shared/sharedData"));
var rootSection = function() {
    return "\n<div id=\"" + shared.domElementId.bookSelectDivId + "\" class=\"book__title tn-atom\">\u0417\u0430\u0431\u0440\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C\n\t<span class=\"bool_title-price\" id=\"carPrice\"></span>\n\t<select id=\"" + shared.domElementId.carSelectId + "\">\n\t</select>\n</div>\n<div id=\"" + shared.domElementId.bookModuleId + "\" class=\"carNotSelect\">\n\t<div id=\"" + shared.domElementId.formInputId + "\">\n\t\t<div id=\"somes\" style=\"background: #FAFAFB; padding: 15px\">\n\n\t\t\t<div id=\"dateListener\" class=\"book__dates ex-inputs\">\n\t\t\t\t<div id=\"leftDateFrame\" class=\"book__field-start book__field-wrap book__outline\">\n\t\t\t\t\t<input id=\"" + shared.domElementId.receiveDataId + "\"\n\t\t\t\t\t\tclass=\"ex-inputs-start book__field-value\" placeholder=\"DD.MM.YYYY\"\n\t\t\t\t\t\treadonly />\n\t\t\t\t\t<div id=\"" + shared.domElementId.receiveDateTextId + "\" class=\"book__field-subtitle\">\u0414\u0430\u0442\u0430 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F</div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"receiveSelects\" class=\"receiveSelects\">\n\t\t\t\t\t<select id=\"" + shared.domElementId.selectReceiveTimeId + "\" size=\"1\"\n\t\t\t\t\t\tclass=\"dateTimeSelect\" disabled placeholder=\"--:--\">\n\t\t\t\t\t\t<option>\n\t\t\t\t\t\t\t00:00\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"rightDateFrame\" class=\"book__field-end book__field-wrap\">\n\t\t\t\t\t<input id=\"" + shared.domElementId.returnDataId + "\"\n\t\t\t\t\t\tclass=\"ex-inputs-end book__field-value\" placeholder=\"DD.MM.YYYY\"\n\t\t\t\t\t\treadonly />\n\t\t\t\t\t<div id=\"" + shared.domElementId.returnDateTextId + "\" class=\"book__field-subtitle\">\u0414\u0430\u0442\u0430 \u0432\u043E\u0437\u0432\u0440\u0430\u0442\u0430</div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"returnSelects\" class=\"returnSelects\">\n\t\t\t\t\t<select id=\"" + shared.domElementId.selectReturnTimeId + "\" class=\"dateTimeSelect\"\n\t\t\t\t\t\tdisabled placeholder=\"--:--\">\n\t\t\t\t\t\t<option>\n\t\t\t\t\t\t\t00:00\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"ex-inputs-picker\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"book__field-wrap\">\n\t\t\t\t<select class=\"book__field book__field-receivePlaceSelect\"\n\t\t\t\t\tid=\"" + shared.domElementId.receivePlaceSelectId + "\">\n\t\t\t\t</select>\n\t\t\t\t<div class=\"book__field-subtitle\">\u041C\u0435\u0441\u0442\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F</div>\n\t\t\t</div>\n\t\t\t<div id=\"" + shared.domElementId.receiveCustomPlaceId + "\"\n\t\t\t\tclass=\"book__field-wrap customPlace-wrap-start\">\n\t\t\t\t<input maxlength=\"200\" type=\"text\" id=\"" + shared.domElementId.receiveCustomPlaceInputId + "\"\n\t\t\t\t\tclass=\"book__field customPlace-hidden\" placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441\">\n\t\t\t\t<div class=\"book__field-subtitle\" id=\"" + shared.domElementId.receiveCustomTextId + "\">\u041A\u0443\u0434\u0430 \u043F\u043E\u0434\u0430\u0442\u044C \u0430\u0432\u0442\u043E?</div>\n\t\t\t</div>\n\t\t\t<div class=\"book__field-wrap\">\n\t\t\t\t<select class=\"book__field book__field-receivePlaceSelect\"\n\t\t\t\t\tid=\"" + shared.domElementId.returnPlaceSelectId + "\">\n\t\t\t\t</select>\n\t\t\t\t<div class=\"book__field-subtitle\">\u041C\u0435\u0441\u0442\u043E \u0432\u043E\u0437\u0432\u0440\u0430\u0442\u0430</div>\n\t\t\t</div>\n\t\t\t<div id=\"" + shared.domElementId.returnCustomPlaceId + "\"\n\t\t\t\tclass=\"book__field-wrap customPlace-wrap-end\">\n\t\t\t\t<input maxlength=\"200\" type=\"text\" id=\"" + shared.domElementId.returnCustomPlaceInputId + "\"\n\t\t\t\t\tclass=\"book__field customPlace-hidden\" placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441\">\n\t\t\t\t<div class=\"book__field-subtitle\" id=\"" + shared.domElementId.returnCustomTextId + "\">\u0423\u043A\u0430\u0436\u0438\u0442\u0435 \u043C\u0435\u0441\u0442\u043E \u0432\u043E\u0437\u0432\u0440\u0430\u0442\u0430 \u0430\u0432\u0442\u043E</div>\n\t\t\t</div>\n\t\t\t<div class=\"book__subtitle\">\u0412\u0430\u0448\u0438 \u0434\u0430\u043D\u043D\u044B\u0435</div>\n\t\t\t<form autocomplete=\"on\">\n\t\t\t\t<div class=\"book__field-wrap\">\n\t\t\t\t\t<input class=\"book__field\" id=\"" + shared.domElementId.custonersNameId + "\"\n\t\t\t\t\t\tname=\"name\" maxlength=\"50\" type=\"text\" required\n\t\t\t\t\t\tplaceholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u043C\u044F\" />\n\t\t\t\t\t<div id=\"" + shared.domElementId.customersNameTextId + "\" class=\"book__field-subtitle\">\u0418\u043C\u044F \u0438 \u0444\u0430\u043C\u0438\u043B\u0438\u044F</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"book__field-wrap\">\n\t\t\t\t\t<input class=\"book__field\" id=\"" + shared.domElementId.customersPhoneId + "\"\n\t\t\t\t\t\tmaxlength=\"14\" name=\"phone\" type=\"tel\" required placeholder=\"+7\" />\n\t\t\t\t\t<div id=\"" + shared.domElementId.customersPhoneTextId + "\" class=\"book__field-subtitle\">\u0422\u0435\u043B\u0435\u0444\u043E\u043D</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<div id=\"lawAgreement\">\n\t\t\t\t<input type=\"checkbox\" class=\"book__checkbox\" id=\"" + shared.domElementId.ageAgree + "\"\n\t\t\t\t\tvalue=\"yes\">\n\t\t\t\t<label id=\"" + shared.domElementId.proofOfAgeId + "\" class=\"book__radio\" for=\"age\">\u041C\u043D\u0435 \u0431\u043E\u043B\u044C\u0448\u0435 23 \u043B\u0435\u0442 \u0438\n\t\t\t\t\t\u043C\u043E\u0439\n\t\t\t\t\t\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C\u0441\u043A\u0438\u0439\n\t\t\t\t\t\u0441\u0442\u0430\u0436 \u0431\u043E\u043B\u044C\u0448\u0435 3 \u043B\u0435\u0442</label><br>\n\t\t\t\t<input type=\"checkbox\" class=\"book__checkbox\" id=\"" + shared.domElementId.policyAgree + "\"\n\t\t\t\t\tvalue=\"yes\">\n\t\t\t\t<label id=\"" + shared.domElementId.proofOfPolicyId + "\" class=\"book__radio\" for=\"agree\">\u042F \u0441\u043E\u0433\u043B\u0430\u0441\u0435\u043D \u0441 \u041F\u043E\u043B\u0438\u0442\u0438\u043A\u043E\u0439\n\t\t\t\t\t\u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438\n\t\t\t\t\t\u0434\u0430\u043D\u043D\u044B\u0445.</label>\n\n\t\t\t</div>\n\t\t\t<button class=\"book__btn\" type=\"submit\"\n\t\t\t\tid=\"" + shared.domElementId.bookButtonId + "\">\u0417\u0430\u0431\u0440\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C</button>\n\t\t\t<div id=\"" + shared.domElementId.bidTextId + "\" class=\"book__checkup\">\n\t\t\t\t<span id=\"" + shared.domElementId.carNameId + "\"></span>\n\t\t\t\t<span id=\"" + shared.domElementId.periodRentId + "\"></span>\n\t\t\t\t<span id=\"" + shared.domElementId.bidCostId + "\"></span>\n\t\t\t\t<span id=\"" + shared.domElementId.deliveryCostId + "\"></span>\n\t\t\t\t<br>\n\t\t\t\t<span id=\"" + shared.domElementId.costResolutionId + "\"></span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div id=\"console\"></div>\n\n</div>";
};
exports.rootSection = rootSection;

},{"../shared/sharedData":"iUwdp"}],"iUwdp":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.badDateEqualNull = exports.domElementId = void 0;
exports.domElementId = {
    rootSectionId: 'rootSection',
    bookModuleId: 'bookModuleId',
    carSelectId: 'carSelectId',
    carNameId: 'carNameId',
    periodRentId: 'periodRentId',
    bidCostId: 'bidCostId',
    costResolutionId: 'costResolutionId',
    //------------------------------------------
    customersPhoneId: 'customersPhoneId',
    custonersNameId: 'customersNameId',
    //------------------------------------------
    receiveCustomPlaceId: 'receiveCustomPlace-wrap',
    receiveCustomPlaceInputId: 'receiveCustomPlaceInputId',
    receiveCustomTextId: "receiveCustomTextId",
    returnCustomTextId: "returnCustomTextId",
    returnCustomPlaceInputId: 'returnCustomPlaceInputId',
    returnCustomPlaceId: 'returnCustomPlace-wrap',
    receivePlaceSelectId: 'receivePlaceSelect',
    returnPlaceSelectId: 'returnPlaceSelect',
    //-------------------------------------------
    selectReceiveTimeId: 'selectReceiveTimeId',
    selectReturnTimeId: 'selectReturnTimeId',
    //-------------------------------------------
    bidTextId: 'bidTextId',
    receiveDataId: 'leftDate',
    returnDataId: 'rightDate',
    deliveryCostId: 'deliveryCostId',
    //--------------------------------------------
    bookButtonId: 'bookButtonId',
    policyAgree: 'policyAgree',
    ageAgree: 'ageAgree',
    //--------------------------------------------
    formInputId: "formInputId",
    bigBidTextClass: 'bigBidTextClass',
    bookSelectDivId: 'bookSelectDivId',
    receiveDateTextId: 'receiveDateTextId',
    returnDateTextId: 'returnDateTextId',
    customersPhoneTextId: 'customersPhoneTextId',
    customersNameTextId: 'customersNameTextId',
    proofOfAgeId: 'proofOfAgeAndExperience',
    proofOfPolicyId: 'agreementWithPolicy',
    //--------------------------------------------
    incorrectFieldClass: 'incorrectFieldClass',
    correctFieldClass: 'correctFieldClass',
    closePickerId: 'closeIt',
    closePickerClass: 'closeIt'
};
exports.badDateEqualNull = new Date(0, 0, 0, 0, 0);

},{}],"igaHu":[function(require,module,exports) {
/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */ (function(global, factory) {
    if (typeof module === "object" && typeof module.exports === "object") // For CommonJS and CommonJS-like environments where a proper `window`
    // is present, execute the factory and get jQuery.
    // For environments that do not have a `window` with a `document`
    // (such as Node.js), expose a factory as module.exports.
    // This accentuates the need for the creation of a real `window`.
    // e.g. var jQuery = require("jquery")(window);
    // See ticket #14549 for more info.
    module.exports = global.document ? factory(global, true) : function(w) {
        if (!w.document) throw new Error("jQuery requires a window with a document");
        return factory(w);
    };
    else factory(global);
// Pass this if window is not defined yet
})(typeof window !== "undefined" ? window : this, function(window, noGlobal) {
    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
    // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
    // enough that all such attempts are guarded in a try block.
    "use strict";
    var arr = [];
    var getProto = Object.getPrototypeOf;
    var slice = arr.slice;
    var flat = arr.flat ? function(array) {
        return arr.flat.call(array);
    } : function(array) {
        return arr.concat.apply([], array);
    };
    var push = arr.push;
    var indexOf = arr.indexOf;
    var class2type = {
    };
    var toString = class2type.toString;
    var hasOwn = class2type.hasOwnProperty;
    var fnToString = hasOwn.toString;
    var ObjectFunctionString = fnToString.call(Object);
    var support = {
    };
    var isFunction = function isFunction1(obj) {
        // Support: Chrome <=57, Firefox <=52
        // In some browsers, typeof returns "function" for HTML <object> elements
        // (i.e., `typeof document.createElement( "object" ) === "function"`).
        // We don't want to classify *any* DOM node as a function.
        // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
        // Plus for old WebKit, typeof returns "function" for HTML collections
        // (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
        return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
    };
    var isWindow = function isWindow1(obj) {
        return obj != null && obj === obj.window;
    };
    var document = window.document;
    var preservedScriptAttributes = {
        type: true,
        src: true,
        nonce: true,
        noModule: true
    };
    function DOMEval(code, node, doc) {
        doc = doc || document;
        var i, val, script = doc.createElement("script");
        script.text = code;
        if (node) for(i in preservedScriptAttributes){
            // Support: Firefox 64+, Edge 18+
            // Some browsers don't support the "nonce" property on scripts.
            // On the other hand, just using `getAttribute` is not enough as
            // the `nonce` attribute is reset to an empty string whenever it
            // becomes browsing-context connected.
            // See https://github.com/whatwg/html/issues/2369
            // See https://html.spec.whatwg.org/#nonce-attributes
            // The `node.getAttribute` check was added for the sake of
            // `jQuery.globalEval` so that it can fake a nonce-containing node
            // via an object.
            val = node[i] || node.getAttribute && node.getAttribute(i);
            if (val) script.setAttribute(i, val);
        }
        doc.head.appendChild(script).parentNode.removeChild(script);
    }
    function toType(obj) {
        if (obj == null) return obj + "";
        // Support: Android <=2.3 only (functionish RegExp)
        return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
    }
    /* global Symbol */ // Defining this global in .eslintrc.json would create a danger of using the global
    // unguarded in another place, it seems safer to define global only for this module
    var version = "3.6.0", // Define a local copy of jQuery
    jQuery = function(selector, context) {
        // The jQuery object is actually just the init constructor 'enhanced'
        // Need init if jQuery is called (just allow error to be thrown if not included)
        return new jQuery.fn.init(selector, context);
    };
    jQuery.fn = jQuery.prototype = {
        // The current version of jQuery being used
        jquery: version,
        constructor: jQuery,
        // The default length of a jQuery object is 0
        length: 0,
        toArray: function() {
            return slice.call(this);
        },
        // Get the Nth element in the matched element set OR
        // Get the whole matched element set as a clean array
        get: function(num) {
            // Return all the elements in a clean array
            if (num == null) return slice.call(this);
            // Return just the one element from the set
            return num < 0 ? this[num + this.length] : this[num];
        },
        // Take an array of elements and push it onto the stack
        // (returning the new matched element set)
        pushStack: function(elems) {
            // Build a new jQuery matched element set
            var ret = jQuery.merge(this.constructor(), elems);
            // Add the old object onto the stack (as a reference)
            ret.prevObject = this;
            // Return the newly-formed element set
            return ret;
        },
        // Execute a callback for every element in the matched set.
        each: function(callback) {
            return jQuery.each(this, callback);
        },
        map: function(callback) {
            return this.pushStack(jQuery.map(this, function(elem, i) {
                return callback.call(elem, i, elem);
            }));
        },
        slice: function() {
            return this.pushStack(slice.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        even: function() {
            return this.pushStack(jQuery.grep(this, function(_elem, i) {
                return (i + 1) % 2;
            }));
        },
        odd: function() {
            return this.pushStack(jQuery.grep(this, function(_elem, i) {
                return i % 2;
            }));
        },
        eq: function(i) {
            var len = this.length, j = +i + (i < 0 ? len : 0);
            return this.pushStack(j >= 0 && j < len ? [
                this[j]
            ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor();
        },
        // For internal use only.
        // Behaves like an Array's method, not like a jQuery method.
        push: push,
        sort: arr.sort,
        splice: arr.splice
    };
    jQuery.extend = jQuery.fn.extend = function() {
        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {
        }, i = 1, length = arguments.length, deep = false;
        // Handle a deep copy situation
        if (typeof target === "boolean") {
            deep = target;
            // Skip the boolean and the target
            target = arguments[i] || {
            };
            i++;
        }
        // Handle case when target is a string or something (possible in deep copy)
        if (typeof target !== "object" && !isFunction(target)) target = {
        };
        // Extend jQuery itself if only one argument is passed
        if (i === length) {
            target = this;
            i--;
        }
        for(; i < length; i++){
            // Only deal with non-null/undefined values
            if ((options = arguments[i]) != null) // Extend the base object
            for(name in options){
                copy = options[name];
                // Prevent Object.prototype pollution
                // Prevent never-ending loop
                if (name === "__proto__" || target === copy) continue;
                // Recurse if we're merging plain objects or arrays
                if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                    src = target[name];
                    // Ensure proper type for the source value
                    if (copyIsArray && !Array.isArray(src)) clone = [];
                    else if (!copyIsArray && !jQuery.isPlainObject(src)) clone = {
                    };
                    else clone = src;
                    copyIsArray = false;
                    // Never move original objects, clone them
                    target[name] = jQuery.extend(deep, clone, copy);
                // Don't bring in undefined values
                } else if (copy !== undefined) target[name] = copy;
            }
        }
        // Return the modified object
        return target;
    };
    jQuery.extend({
        // Unique for each copy of jQuery on the page
        expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
        // Assume jQuery is ready without the ready module
        isReady: true,
        error: function(msg) {
            throw new Error(msg);
        },
        noop: function() {
        },
        isPlainObject: function(obj) {
            var proto, Ctor;
            // Detect obvious negatives
            // Use toString instead of jQuery.type to catch host objects
            if (!obj || toString.call(obj) !== "[object Object]") return false;
            proto = getProto(obj);
            // Objects with no prototype (e.g., `Object.create( null )`) are plain
            if (!proto) return true;
            // Objects with prototype are plain iff they were constructed by a global Object function
            Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
            return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
        },
        isEmptyObject: function(obj) {
            var name;
            for(name in obj)return false;
            return true;
        },
        // Evaluates a script in a provided context; falls back to the global one
        // if not specified.
        globalEval: function(code, options, doc) {
            DOMEval(code, {
                nonce: options && options.nonce
            }, doc);
        },
        each: function(obj, callback) {
            var length, i = 0;
            if (isArrayLike(obj)) {
                length = obj.length;
                for(; i < length; i++){
                    if (callback.call(obj[i], i, obj[i]) === false) break;
                }
            } else for(i in obj){
                if (callback.call(obj[i], i, obj[i]) === false) break;
            }
            return obj;
        },
        // results is for internal usage only
        makeArray: function(arr1, results) {
            var ret = results || [];
            if (arr1 != null) {
                if (isArrayLike(Object(arr1))) jQuery.merge(ret, typeof arr1 === "string" ? [
                    arr1
                ] : arr1);
                else push.call(ret, arr1);
            }
            return ret;
        },
        inArray: function(elem, arr1, i) {
            return arr1 == null ? -1 : indexOf.call(arr1, elem, i);
        },
        // Support: Android <=4.0 only, PhantomJS 1 only
        // push.apply(_, arraylike) throws on ancient WebKit
        merge: function(first, second) {
            var len = +second.length, j = 0, i = first.length;
            for(; j < len; j++)first[i++] = second[j];
            first.length = i;
            return first;
        },
        grep: function(elems, callback, invert) {
            var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;
            // Go through the array, only saving the items
            // that pass the validator function
            for(; i < length; i++){
                callbackInverse = !callback(elems[i], i);
                if (callbackInverse !== callbackExpect) matches.push(elems[i]);
            }
            return matches;
        },
        // arg is for internal usage only
        map: function(elems, callback, arg) {
            var length, value, i = 0, ret = [];
            // Go through the array, translating each of the items to their new values
            if (isArrayLike(elems)) {
                length = elems.length;
                for(; i < length; i++){
                    value = callback(elems[i], i, arg);
                    if (value != null) ret.push(value);
                }
            // Go through every key on the object,
            } else for(i in elems){
                value = callback(elems[i], i, arg);
                if (value != null) ret.push(value);
            }
            // Flatten any nested arrays
            return flat(ret);
        },
        // A global GUID counter for objects
        guid: 1,
        // jQuery.support is not used in Core but other projects attach their
        // properties to it so it needs to exist.
        support: support
    });
    if (typeof Symbol === "function") jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
    // Populate the class2type map
    jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(_i, name) {
        class2type["[object " + name + "]"] = name.toLowerCase();
    });
    function isArrayLike(obj) {
        // Support: real iOS 8.2 only (not reproducible in simulator)
        // `in` check used to prevent JIT error (gh-2145)
        // hasOwn isn't used here due to false negatives
        // regarding Nodelist length in IE
        var length = !!obj && "length" in obj && obj.length, type = toType(obj);
        if (isFunction(obj) || isWindow(obj)) return false;
        return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
    }
    var Sizzle = /*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */ function(window1) {
        var i, support1, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, // Local document vars
        setDocument, document1, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, // Instance-specific data
        expando = "sizzle" + 1 * new Date(), preferredDoc = window1.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a, b) {
            if (a === b) hasDuplicate = true;
            return 0;
        }, // Instance methods
        hasOwn1 = {
        }.hasOwnProperty, arr1 = [], pop = arr1.pop, pushNative = arr1.push, push1 = arr1.push, slice1 = arr1.slice, // Use a stripped-down indexOf as it's faster than native
        // https://jsperf.com/thor-indexof-vs-for/5
        indexOf1 = function(list, elem) {
            var i1 = 0, len = list.length;
            for(; i1 < len; i1++){
                if (list[i1] === elem) return i1;
            }
            return -1;
        }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", // Regular expressions
        // http://www.w3.org/TR/css3-selectors/#whitespace
        whitespace = "[\\x20\\t\\r\\n\\f]", // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
        identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
        attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)
        "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5]
        // or strings [capture 3 or capture 4]"
        "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]", pseudos = ":(" + identifier + ")(?:\\((" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
        // 1. quoted (capture 3; capture 4 or capture 5)
        "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + // 2. simple (capture 6)
        "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + // 3. anything else (capture 2)
        ".*" + ")\\)|)", // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
        rwhitespace = new RegExp(whitespace + "+", "g"), rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"), rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"), rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"), rdescend = new RegExp(whitespace + "|>"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
            "ID": new RegExp("^#(" + identifier + ")"),
            "CLASS": new RegExp("^\\.(" + identifier + ")"),
            "TAG": new RegExp("^(" + identifier + "|[*])"),
            "ATTR": new RegExp("^" + attributes),
            "PSEUDO": new RegExp("^" + pseudos),
            "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
            "bool": new RegExp("^(?:" + booleans + ")$", "i"),
            // For use in libraries implementing .is()
            // We use this for POS matching in `select`
            "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        }, rhtml = /HTML$/i, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, // Easily-parseable/retrievable ID or TAG or CLASS selectors
        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, // CSS escapes
        // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
        runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"), funescape = function(escape, nonHex) {
            var high = "0x" + escape.slice(1) - 65536;
            return nonHex ? // Strip the backslash prefix from a non-hex escape sequence
            nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point
            // Support: IE <=11+
            // For values outside the Basic Multilingual Plane (BMP), manually construct a
            // surrogate pair
            high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
        }, // CSS string/identifier serialization
        // https://drafts.csswg.org/cssom/#common-serializing-idioms
        rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, fcssescape = function(ch, asCodePoint) {
            if (asCodePoint) {
                // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                if (ch === "\0") return "\uFFFD";
                // Control characters and (dependent upon position) numbers get escaped as code points
                return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
            }
            // Other potentially-special ASCII characters get backslash-escaped
            return "\\" + ch;
        }, // Used for iframes
        // See setDocument()
        // Removing the function wrapper causes a "Permission Denied"
        // error in IE
        unloadHandler = function() {
            setDocument();
        }, inDisabledFieldset = addCombinator(function(elem) {
            return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
        }, {
            dir: "parentNode",
            next: "legend"
        });
        // Optimize for push.apply( _, NodeList )
        try {
            push1.apply(arr1 = slice1.call(preferredDoc.childNodes), preferredDoc.childNodes);
            // Support: Android<4.0
            // Detect silently failing push.apply
            // eslint-disable-next-line no-unused-expressions
            arr1[preferredDoc.childNodes.length].nodeType;
        } catch (e) {
            push1 = {
                apply: arr1.length ? // Leverage slice if possible
                function(target, els) {
                    pushNative.apply(target, slice1.call(els));
                } : // Support: IE<9
                // Otherwise append directly
                function(target, els) {
                    var j = target.length, i1 = 0;
                    // Can't trust NodeList.length
                    while(target[j++] = els[i1++]);
                    target.length = j - 1;
                }
            };
        }
        function Sizzle1(selector, context, results, seed) {
            var m, i1, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, // nodeType defaults to 9, since context defaults to document
            nodeType = context ? context.nodeType : 9;
            results = results || [];
            // Return early from calls with invalid selector or context
            if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) return results;
            // Try to shortcut find operations (as opposed to filters) in HTML documents
            if (!seed) {
                setDocument(context);
                context = context || document1;
                if (documentIsHTML) {
                    // If the selector is sufficiently simple, try using a "get*By*" DOM method
                    // (excepting DocumentFragment context, where the methods don't exist)
                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
                        // ID selector
                        if (m = match[1]) {
                            // Document context
                            if (nodeType === 9) {
                                if (elem = context.getElementById(m)) // Support: IE, Opera, Webkit
                                // TODO: identify versions
                                // getElementById can match elements by name instead of ID
                                {
                                    if (elem.id === m) {
                                        results.push(elem);
                                        return results;
                                    }
                                } else return results;
                            // Element context
                            } else // Support: IE, Opera, Webkit
                            // TODO: identify versions
                            // getElementById can match elements by name instead of ID
                            if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                                results.push(elem);
                                return results;
                            }
                        // Type selector
                        } else if (match[2]) {
                            push1.apply(results, context.getElementsByTagName(selector));
                            return results;
                        // Class selector
                        } else if ((m = match[3]) && support1.getElementsByClassName && context.getElementsByClassName) {
                            push1.apply(results, context.getElementsByClassName(m));
                            return results;
                        }
                    }
                    // Take advantage of querySelectorAll
                    if (support1.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {
                        newSelector = selector;
                        newContext = context;
                        // qSA considers elements outside a scoping root when evaluating child or
                        // descendant combinators, which is not what we want.
                        // In such cases, we work around the behavior by prefixing every selector in the
                        // list with an ID selector referencing the scope context.
                        // The technique has to be used as well when a leading combinator is used
                        // as such selectors are not recognized by querySelectorAll.
                        // Thanks to Andrew Dupont for this technique.
                        if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {
                            // Expand context for sibling selectors
                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                            // We can use :scope instead of the ID hack if the browser
                            // supports it & if we're not changing the context.
                            if (newContext !== context || !support1.scope) {
                                // Capture the context ID, setting it first if necessary
                                if (nid = context.getAttribute("id")) nid = nid.replace(rcssescape, fcssescape);
                                else context.setAttribute("id", nid = expando);
                            }
                            // Prefix every selector in the list
                            groups = tokenize(selector);
                            i1 = groups.length;
                            while(i1--)groups[i1] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i1]);
                            newSelector = groups.join(",");
                        }
                        try {
                            push1.apply(results, newContext.querySelectorAll(newSelector));
                            return results;
                        } catch (qsaError) {
                            nonnativeSelectorCache(selector, true);
                        } finally{
                            if (nid === expando) context.removeAttribute("id");
                        }
                    }
                }
            }
            // All others
            return select(selector.replace(rtrim, "$1"), context, results, seed);
        }
        /**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */ function createCache() {
            var keys = [];
            function cache(key, value) {
                // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                if (keys.push(key + " ") > Expr.cacheLength) // Only keep the most recent entries
                delete cache[keys.shift()];
                return cache[key + " "] = value;
            }
            return cache;
        }
        /**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */ function markFunction(fn) {
            fn[expando] = true;
            return fn;
        }
        /**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */ function assert(fn) {
            var el = document1.createElement("fieldset");
            try {
                return !!fn(el);
            } catch (e) {
                return false;
            } finally{
                // Remove from its parent by default
                if (el.parentNode) el.parentNode.removeChild(el);
                // release memory in IE
                el = null;
            }
        }
        /**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */ function addHandle(attrs, handler) {
            var arr2 = attrs.split("|"), i1 = arr2.length;
            while(i1--)Expr.attrHandle[arr2[i1]] = handler;
        }
        /**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */ function siblingCheck(a, b) {
            var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;
            // Use IE sourceIndex if available on both nodes
            if (diff) return diff;
            // Check if b follows a
            if (cur) while(cur = cur.nextSibling){
                if (cur === b) return -1;
            }
            return a ? 1 : -1;
        }
        /**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */ function createInputPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return name === "input" && elem.type === type;
            };
        }
        /**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */ function createButtonPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return (name === "input" || name === "button") && elem.type === type;
            };
        }
        /**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */ function createDisabledPseudo(disabled) {
            // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
            return function(elem) {
                // Only certain elements can match :enabled or :disabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                if ("form" in elem) {
                    // Check for inherited disabledness on relevant non-disabled elements:
                    // * listed form-associated elements in a disabled fieldset
                    //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
                    // * option elements in a disabled optgroup
                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
                    // All such elements have a "form" property.
                    if (elem.parentNode && elem.disabled === false) {
                        // Option elements defer to a parent optgroup if present
                        if ("label" in elem) {
                            if ("label" in elem.parentNode) return elem.parentNode.disabled === disabled;
                            else return elem.disabled === disabled;
                        }
                        // Support: IE 6 - 11
                        // Use the isDisabled shortcut property to check for disabled fieldset ancestors
                        return elem.isDisabled === disabled || // Where there is no isDisabled, check manually
                        /* jshint -W018 */ elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
                    }
                    return elem.disabled === disabled;
                // Try to winnow out elements that can't be disabled before trusting the disabled property.
                // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
                // even exist on them, let alone have a boolean value.
                } else if ("label" in elem) return elem.disabled === disabled;
                // Remaining elements are neither :enabled nor :disabled
                return false;
            };
        }
        /**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */ function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
                argument = +argument;
                return markFunction(function(seed, matches1) {
                    var j, matchIndexes = fn([], seed.length, argument), i1 = matchIndexes.length;
                    // Match elements found at the specified indexes
                    while(i1--)if (seed[j = matchIndexes[i1]]) seed[j] = !(matches1[j] = seed[j]);
                });
            });
        }
        /**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */ function testContext(context) {
            return context && typeof context.getElementsByTagName !== "undefined" && context;
        }
        // Expose support vars for convenience
        support1 = Sizzle1.support = {
        };
        /**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */ isXML = Sizzle1.isXML = function(elem) {
            var namespace = elem && elem.namespaceURI, docElem1 = elem && (elem.ownerDocument || elem).documentElement;
            // Support: IE <=8
            // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
            // https://bugs.jquery.com/ticket/4833
            return !rhtml.test(namespace || docElem1 && docElem1.nodeName || "HTML");
        };
        /**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */ setDocument = Sizzle1.setDocument = function(node) {
            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
            // Return early if doc is invalid or already selected
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if (doc == document1 || doc.nodeType !== 9 || !doc.documentElement) return document1;
            // Update global variables
            document1 = doc;
            docElem = document1.documentElement;
            documentIsHTML = !isXML(document1);
            // Support: IE 9 - 11+, Edge 12 - 18+
            // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if (preferredDoc != document1 && (subWindow = document1.defaultView) && subWindow.top !== subWindow) {
                // Support: IE 11, Edge
                if (subWindow.addEventListener) subWindow.addEventListener("unload", unloadHandler, false);
                else if (subWindow.attachEvent) subWindow.attachEvent("onunload", unloadHandler);
            }
            // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
            // Safari 4 - 5 only, Opera <=11.6 - 12.x only
            // IE/Edge & older browsers don't support the :scope pseudo-class.
            // Support: Safari 6.0 only
            // Safari 6.0 supports :scope but it's an alias of :root there.
            support1.scope = assert(function(el) {
                docElem.appendChild(el).appendChild(document1.createElement("div"));
                return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;
            });
            /* Attributes
	---------------------------------------------------------------------- */ // Support: IE<8
            // Verify that getAttribute really returns attributes and not properties
            // (excepting IE8 booleans)
            support1.attributes = assert(function(el) {
                el.className = "i";
                return !el.getAttribute("className");
            });
            /* getElement(s)By*
	---------------------------------------------------------------------- */ // Check if getElementsByTagName("*") returns only elements
            support1.getElementsByTagName = assert(function(el) {
                el.appendChild(document1.createComment(""));
                return !el.getElementsByTagName("*").length;
            });
            // Support: IE<9
            support1.getElementsByClassName = rnative.test(document1.getElementsByClassName);
            // Support: IE<10
            // Check if getElementById returns elements by name
            // The broken getElementById methods don't pick up programmatically-set names,
            // so use a roundabout getElementsByName test
            support1.getById = assert(function(el) {
                docElem.appendChild(el).id = expando;
                return !document1.getElementsByName || !document1.getElementsByName(expando).length;
            });
            // ID filter and find
            if (support1.getById) {
                Expr.filter["ID"] = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        return elem.getAttribute("id") === attrId;
                    };
                };
                Expr.find["ID"] = function(id, context) {
                    if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                        var elem = context.getElementById(id);
                        return elem ? [
                            elem
                        ] : [];
                    }
                };
            } else {
                Expr.filter["ID"] = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        var node1 = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                        return node1 && node1.value === attrId;
                    };
                };
                // Support: IE 6 - 7 only
                // getElementById is not reliable as a find shortcut
                Expr.find["ID"] = function(id, context) {
                    if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                        var node1, i1, elems, elem = context.getElementById(id);
                        if (elem) {
                            // Verify the id attribute
                            node1 = elem.getAttributeNode("id");
                            if (node1 && node1.value === id) return [
                                elem
                            ];
                            // Fall back on getElementsByName
                            elems = context.getElementsByName(id);
                            i1 = 0;
                            while(elem = elems[i1++]){
                                node1 = elem.getAttributeNode("id");
                                if (node1 && node1.value === id) return [
                                    elem
                                ];
                            }
                        }
                        return [];
                    }
                };
            }
            // Tag
            Expr.find["TAG"] = support1.getElementsByTagName ? function(tag, context) {
                if (typeof context.getElementsByTagName !== "undefined") return context.getElementsByTagName(tag);
                else if (support1.qsa) return context.querySelectorAll(tag);
            } : function(tag, context) {
                var elem, tmp = [], i2 = 0, // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                results = context.getElementsByTagName(tag);
                // Filter out possible comments
                if (tag === "*") {
                    while(elem = results[i2++])if (elem.nodeType === 1) tmp.push(elem);
                    return tmp;
                }
                return results;
            };
            // Class
            Expr.find["CLASS"] = support1.getElementsByClassName && function(className, context) {
                if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) return context.getElementsByClassName(className);
            };
            /* QSA/matchesSelector
	---------------------------------------------------------------------- */ // QSA and matchesSelector support
            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
            rbuggyMatches = [];
            // qSa(:focus) reports false when true (Chrome 21)
            // We allow this because of a bug in IE8/9 that throws an error
            // whenever `document.activeElement` is accessed on an iframe
            // So, we allow :focus to pass through QSA all the time to avoid the IE error
            // See https://bugs.jquery.com/ticket/13378
            rbuggyQSA = [];
            if (support1.qsa = rnative.test(document1.querySelectorAll)) {
                // Build QSA regex
                // Regex strategy adopted from Diego Perini
                assert(function(el) {
                    var input;
                    // Select is set to empty string on purpose
                    // This is to test IE's treatment of not explicitly
                    // setting a boolean content attribute,
                    // since its presence should be enough
                    // https://bugs.jquery.com/ticket/12359
                    docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>";
                    // Support: IE8, Opera 11-12.16
                    // Nothing should be selected when empty strings follow ^= or $= or *=
                    // The test attribute must be unknown in Opera but "safe" for WinRT
                    // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                    if (el.querySelectorAll("[msallowcapture^='']").length) rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
                    // Support: IE8
                    // Boolean attributes and "value" are not treated correctly
                    if (!el.querySelectorAll("[selected]").length) rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
                    // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                    if (!el.querySelectorAll("[id~=" + expando + "-]").length) rbuggyQSA.push("~=");
                    // Support: IE 11+, Edge 15 - 18+
                    // IE 11/Edge don't find elements on a `[name='']` query in some cases.
                    // Adding a temporary attribute to the document before the selection works
                    // around the issue.
                    // Interestingly, IE 10 & older don't seem to have the issue.
                    input = document1.createElement("input");
                    input.setAttribute("name", "");
                    el.appendChild(input);
                    if (!el.querySelectorAll("[name='']").length) rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:''|\"\")");
                    // Webkit/Opera - :checked should return selected option elements
                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                    // IE8 throws error here and will not see later tests
                    if (!el.querySelectorAll(":checked").length) rbuggyQSA.push(":checked");
                    // Support: Safari 8+, iOS 8+
                    // https://bugs.webkit.org/show_bug.cgi?id=136851
                    // In-page `selector#id sibling-combinator selector` fails
                    if (!el.querySelectorAll("a#" + expando + "+*").length) rbuggyQSA.push(".#.+[+~]");
                    // Support: Firefox <=3.6 - 5 only
                    // Old Firefox doesn't throw on a badly-escaped identifier.
                    el.querySelectorAll("\\\f");
                    rbuggyQSA.push("[\\r\\n\\f]");
                });
                assert(function(el) {
                    el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    // Support: Windows 8 Native Apps
                    // The type and name attributes are restricted during .innerHTML assignment
                    var input = document1.createElement("input");
                    input.setAttribute("type", "hidden");
                    el.appendChild(input).setAttribute("name", "D");
                    // Support: IE8
                    // Enforce case-sensitivity of name attribute
                    if (el.querySelectorAll("[name=d]").length) rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                    // IE8 throws error here and will not see later tests
                    if (el.querySelectorAll(":enabled").length !== 2) rbuggyQSA.push(":enabled", ":disabled");
                    // Support: IE9-11+
                    // IE's :disabled selector does not pick up the children of disabled fieldsets
                    docElem.appendChild(el).disabled = true;
                    if (el.querySelectorAll(":disabled").length !== 2) rbuggyQSA.push(":enabled", ":disabled");
                    // Support: Opera 10 - 11 only
                    // Opera 10-11 does not throw on post-comma invalid pseudos
                    el.querySelectorAll("*,:x");
                    rbuggyQSA.push(",.*:");
                });
            }
            if (support1.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) assert(function(el) {
                // Check to see if it's possible to do matchesSelector
                // on a disconnected node (IE 9)
                support1.disconnectedMatch = matches.call(el, "*");
                // This should fail with an exception
                // Gecko does not error, returns false instead
                matches.call(el, "[s!='']:x");
                rbuggyMatches.push("!=", pseudos);
            });
            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
            /* Contains
	---------------------------------------------------------------------- */ hasCompare = rnative.test(docElem.compareDocumentPosition);
            // Element contains another
            // Purposefully self-exclusive
            // As in, an element does not contain itself
            contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
            } : function(a, b) {
                if (b) while(b = b.parentNode){
                    if (b === a) return true;
                }
                return false;
            };
            /* Sorting
	---------------------------------------------------------------------- */ // Document order sorting
            sortOrder = hasCompare ? function(a, b) {
                // Flag for duplicate removal
                if (a === b) {
                    hasDuplicate = true;
                    return 0;
                }
                // Sort on method existence if only one input has compareDocumentPosition
                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                if (compare) return compare;
                // Calculate position if both inputs belong to the same document
                // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                // eslint-disable-next-line eqeqeq
                compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected
                1;
                // Disconnected nodes
                if (compare & 1 || !support1.sortDetached && b.compareDocumentPosition(a) === compare) {
                    // Choose the first element that is related to our preferred document
                    // Support: IE 11+, Edge 17 - 18+
                    // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                    // two documents; shallow comparisons work.
                    // eslint-disable-next-line eqeqeq
                    if (a == document1 || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) return -1;
                    // Support: IE 11+, Edge 17 - 18+
                    // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                    // two documents; shallow comparisons work.
                    // eslint-disable-next-line eqeqeq
                    if (b == document1 || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) return 1;
                    // Maintain original order
                    return sortInput ? indexOf1(sortInput, a) - indexOf1(sortInput, b) : 0;
                }
                return compare & 4 ? -1 : 1;
            } : function(a, b) {
                // Exit early if the nodes are identical
                if (a === b) {
                    hasDuplicate = true;
                    return 0;
                }
                var cur, i2 = 0, aup = a.parentNode, bup = b.parentNode, ap = [
                    a
                ], bp = [
                    b
                ];
                // Parentless nodes are either documents or disconnected
                if (!aup || !bup) // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                /* eslint-disable eqeqeq */ return a == document1 ? -1 : b == document1 ? 1 : /* eslint-enable eqeqeq */ aup ? -1 : bup ? 1 : sortInput ? indexOf1(sortInput, a) - indexOf1(sortInput, b) : 0;
                else if (aup === bup) return siblingCheck(a, b);
                // Otherwise we need full lists of their ancestors for comparison
                cur = a;
                while(cur = cur.parentNode)ap.unshift(cur);
                cur = b;
                while(cur = cur.parentNode)bp.unshift(cur);
                // Walk down the tree looking for a discrepancy
                while(ap[i2] === bp[i2])i2++;
                return i2 ? // Do a sibling check if the nodes have a common ancestor
                siblingCheck(ap[i2], bp[i2]) : // Otherwise nodes in our document sort first
                // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                /* eslint-disable eqeqeq */ ap[i2] == preferredDoc ? -1 : bp[i2] == preferredDoc ? 1 : /* eslint-enable eqeqeq */ 0;
            };
            return document1;
        };
        Sizzle1.matches = function(expr, elements) {
            return Sizzle1(expr, null, null, elements);
        };
        Sizzle1.matchesSelector = function(elem, expr) {
            setDocument(elem);
            if (support1.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) try {
                var ret = matches.call(elem, expr);
                // IE 9's matchesSelector returns false on disconnected nodes
                if (ret || support1.disconnectedMatch || // As well, disconnected nodes are said to be in a document
                // fragment in IE 9
                elem.document && elem.document.nodeType !== 11) return ret;
            } catch (e) {
                nonnativeSelectorCache(expr, true);
            }
            return Sizzle1(expr, document1, null, [
                elem
            ]).length > 0;
        };
        Sizzle1.contains = function(context, elem) {
            // Set document vars if needed
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if ((context.ownerDocument || context) != document1) setDocument(context);
            return contains(context, elem);
        };
        Sizzle1.attr = function(elem, name) {
            // Set document vars if needed
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if ((elem.ownerDocument || elem) != document1) setDocument(elem);
            var fn = Expr.attrHandle[name.toLowerCase()], // Don't get fooled by Object.prototype properties (jQuery #13807)
            val = fn && hasOwn1.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
            return val !== undefined ? val : support1.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        };
        Sizzle1.escape = function(sel) {
            return (sel + "").replace(rcssescape, fcssescape);
        };
        Sizzle1.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
        };
        /**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */ Sizzle1.uniqueSort = function(results) {
            var elem, duplicates = [], j = 0, i2 = 0;
            // Unless we *know* we can detect duplicates, assume their presence
            hasDuplicate = !support1.detectDuplicates;
            sortInput = !support1.sortStable && results.slice(0);
            results.sort(sortOrder);
            if (hasDuplicate) {
                while(elem = results[i2++])if (elem === results[i2]) j = duplicates.push(i2);
                while(j--)results.splice(duplicates[j], 1);
            }
            // Clear input after sorting to release objects
            // See https://github.com/jquery/sizzle/pull/225
            sortInput = null;
            return results;
        };
        /**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */ getText = Sizzle1.getText = function(elem) {
            var node2, ret = "", i2 = 0, nodeType = elem.nodeType;
            if (!nodeType) // If no nodeType, this is expected to be an array
            while(node2 = elem[i2++])// Do not traverse comment nodes
            ret += getText(node2);
            else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
                // Use textContent for elements
                // innerText usage removed for consistency of new lines (jQuery #11153)
                if (typeof elem.textContent === "string") return elem.textContent;
                else // Traverse its children
                for(elem = elem.firstChild; elem; elem = elem.nextSibling)ret += getText(elem);
            } else if (nodeType === 3 || nodeType === 4) return elem.nodeValue;
            // Do not include comment or processing instruction nodes
            return ret;
        };
        Expr = Sizzle1.selectors = {
            // Can be adjusted by the user
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {
            },
            find: {
            },
            relative: {
                ">": {
                    dir: "parentNode",
                    first: true
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: true
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                "ATTR": function(match) {
                    match[1] = match[1].replace(runescape, funescape);
                    // Move the given value to match[3] whether quoted or unquoted
                    match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
                    if (match[2] === "~=") match[3] = " " + match[3] + " ";
                    return match.slice(0, 4);
                },
                "CHILD": function(match) {
                    /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/ match[1] = match[1].toLowerCase();
                    if (match[1].slice(0, 3) === "nth") {
                        // nth-* requires argument
                        if (!match[3]) Sizzle1.error(match[0]);
                        // numeric x and y parameters for Expr.filter.CHILD
                        // remember that false/true cast respectively to 0/1
                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
                        match[5] = +(match[7] + match[8] || match[3] === "odd");
                    // other types prohibit arguments
                    } else if (match[3]) Sizzle1.error(match[0]);
                    return match;
                },
                "PSEUDO": function(match) {
                    var excess, unquoted = !match[6] && match[2];
                    if (matchExpr["CHILD"].test(match[0])) return null;
                    // Accept quoted arguments as-is
                    if (match[3]) match[2] = match[4] || match[5] || "";
                    else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
                        // excess is a negative index
                        match[0] = match[0].slice(0, excess);
                        match[2] = unquoted.slice(0, excess);
                    }
                    // Return only captures needed by the pseudo filter method (type and argument)
                    return match.slice(0, 3);
                }
            },
            filter: {
                "TAG": function(nodeNameSelector) {
                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                    return nodeNameSelector === "*" ? function() {
                        return true;
                    } : function(elem) {
                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                    };
                },
                "CLASS": function(className) {
                    var pattern = classCache[className + " "];
                    return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)"), classCache(className, function(elem) {
                        return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
                    }));
                },
                "ATTR": function(name, operator, check) {
                    return function(elem) {
                        var result = Sizzle1.attr(elem, name);
                        if (result == null) return operator === "!=";
                        if (!operator) return true;
                        result += "";
                        /* eslint-disable max-len */ return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
                    /* eslint-enable max-len */ };
                },
                "CHILD": function(type, what, _argument, first, last) {
                    var simple = type.slice(0, 3) !== "nth", forward = type.slice(-4) !== "last", ofType = what === "of-type";
                    return first === 1 && last === 0 ? // Shortcut for :nth-*(n)
                    function(elem) {
                        return !!elem.parentNode;
                    } : function(elem, _context, xml) {
                        var cache, uniqueCache, outerCache, node2, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                        if (parent) {
                            // :(first|last|only)-(child|of-type)
                            if (simple) {
                                while(dir){
                                    node2 = elem;
                                    while(node2 = node2[dir]){
                                        if (ofType ? node2.nodeName.toLowerCase() === name : node2.nodeType === 1) return false;
                                    }
                                    // Reverse direction for :only-* (if we haven't yet done so)
                                    start = dir = type === "only" && !start && "nextSibling";
                                }
                                return true;
                            }
                            start = [
                                forward ? parent.firstChild : parent.lastChild
                            ];
                            // non-xml :nth-child(...) stores cache data on `parent`
                            if (forward && useCache) {
                                // Seek `elem` from a previously-cached index
                                // ...in a gzip-friendly way
                                node2 = parent;
                                outerCache = node2[expando] || (node2[expando] = {
                                });
                                // Support: IE <9 only
                                // Defend against cloned attroperties (jQuery gh-1709)
                                uniqueCache = outerCache[node2.uniqueID] || (outerCache[node2.uniqueID] = {
                                });
                                cache = uniqueCache[type] || [];
                                nodeIndex = cache[0] === dirruns && cache[1];
                                diff = nodeIndex && cache[2];
                                node2 = nodeIndex && parent.childNodes[nodeIndex];
                                while(node2 = (++nodeIndex) && node2 && node2[dir] || (diff = nodeIndex = 0) || start.pop())// When found, cache indexes on `parent` and break
                                if (node2.nodeType === 1 && ++diff && node2 === elem) {
                                    uniqueCache[type] = [
                                        dirruns,
                                        nodeIndex,
                                        diff
                                    ];
                                    break;
                                }
                            } else {
                                // Use previously-cached element index if available
                                if (useCache) {
                                    // ...in a gzip-friendly way
                                    node2 = elem;
                                    outerCache = node2[expando] || (node2[expando] = {
                                    });
                                    // Support: IE <9 only
                                    // Defend against cloned attroperties (jQuery gh-1709)
                                    uniqueCache = outerCache[node2.uniqueID] || (outerCache[node2.uniqueID] = {
                                    });
                                    cache = uniqueCache[type] || [];
                                    nodeIndex = cache[0] === dirruns && cache[1];
                                    diff = nodeIndex;
                                }
                                // xml :nth-child(...)
                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                                if (diff === false) {
                                    // Use the same loop as above to seek `elem` from the start
                                    while(node2 = (++nodeIndex) && node2 && node2[dir] || (diff = nodeIndex = 0) || start.pop())if ((ofType ? node2.nodeName.toLowerCase() === name : node2.nodeType === 1) && ++diff) {
                                        // Cache the index of each encountered element
                                        if (useCache) {
                                            outerCache = node2[expando] || (node2[expando] = {
                                            });
                                            // Support: IE <9 only
                                            // Defend against cloned attroperties (jQuery gh-1709)
                                            uniqueCache = outerCache[node2.uniqueID] || (outerCache[node2.uniqueID] = {
                                            });
                                            uniqueCache[type] = [
                                                dirruns,
                                                diff
                                            ];
                                        }
                                        if (node2 === elem) break;
                                    }
                                }
                            }
                            // Incorporate the offset, then check against cycle size
                            diff -= last;
                            return diff === first || diff % first === 0 && diff / first >= 0;
                        }
                    };
                },
                "PSEUDO": function(pseudo, argument) {
                    // pseudo-class names are case-insensitive
                    // http://www.w3.org/TR/selectors/#pseudo-classes
                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                    // Remember that setFilters inherits from pseudos
                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle1.error("unsupported pseudo: " + pseudo);
                    // The user may use createPseudo to indicate that
                    // arguments are needed to create the filter function
                    // just as Sizzle does
                    if (fn[expando]) return fn(argument);
                    // But maintain support for old signatures
                    if (fn.length > 1) {
                        args = [
                            pseudo,
                            pseudo,
                            "",
                            argument
                        ];
                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches1) {
                            var idx, matched = fn(seed, argument), i2 = matched.length;
                            while(i2--){
                                idx = indexOf1(seed, matched[i2]);
                                seed[idx] = !(matches1[idx] = matched[i2]);
                            }
                        }) : function(elem) {
                            return fn(elem, 0, args);
                        };
                    }
                    return fn;
                }
            },
            pseudos: {
                // Potentially complex pseudos
                "not": markFunction(function(selector) {
                    // Trim the selector passed to compile
                    // to avoid treating leading and trailing
                    // spaces as combinators
                    var input = [], results = [], matcher = compile(selector.replace(rtrim, "$1"));
                    return matcher[expando] ? markFunction(function(seed, matches1, _context, xml) {
                        var elem, unmatched = matcher(seed, null, xml, []), i2 = seed.length;
                        // Match elements unmatched by `matcher`
                        while(i2--)if (elem = unmatched[i2]) seed[i2] = !(matches1[i2] = elem);
                    }) : function(elem, _context, xml) {
                        input[0] = elem;
                        matcher(input, null, xml, results);
                        // Don't keep the element (issue #299)
                        input[0] = null;
                        return !results.pop();
                    };
                }),
                "has": markFunction(function(selector) {
                    return function(elem) {
                        return Sizzle1(selector, elem).length > 0;
                    };
                }),
                "contains": markFunction(function(text) {
                    text = text.replace(runescape, funescape);
                    return function(elem) {
                        return (elem.textContent || getText(elem)).indexOf(text) > -1;
                    };
                }),
                // "Whether an element is represented by a :lang() selector
                // is based solely on the element's language value
                // being equal to the identifier C,
                // or beginning with the identifier C immediately followed by "-".
                // The matching of C against the element's language value is performed case-insensitively.
                // The identifier C does not have to be a valid language name."
                // http://www.w3.org/TR/selectors/#lang-pseudo
                "lang": markFunction(function(lang) {
                    // lang value must be a valid identifier
                    if (!ridentifier.test(lang || "")) Sizzle1.error("unsupported lang: " + lang);
                    lang = lang.replace(runescape, funescape).toLowerCase();
                    return function(elem) {
                        var elemLang;
                        do if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                            elemLang = elemLang.toLowerCase();
                            return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
                        }
                        while ((elem = elem.parentNode) && elem.nodeType === 1)
                        return false;
                    };
                }),
                // Miscellaneous
                "target": function(elem) {
                    var hash = window1.location && window1.location.hash;
                    return hash && hash.slice(1) === elem.id;
                },
                "root": function(elem) {
                    return elem === docElem;
                },
                "focus": function(elem) {
                    return elem === document1.activeElement && (!document1.hasFocus || document1.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                },
                // Boolean properties
                "enabled": createDisabledPseudo(false),
                "disabled": createDisabledPseudo(true),
                "checked": function(elem) {
                    // In CSS3, :checked should return both checked and selected elements
                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                    var nodeName = elem.nodeName.toLowerCase();
                    return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;
                },
                "selected": function(elem) {
                    // Accessing this property makes selected-by-default
                    // options in Safari work properly
                    if (elem.parentNode) // eslint-disable-next-line no-unused-expressions
                    elem.parentNode.selectedIndex;
                    return elem.selected === true;
                },
                // Contents
                "empty": function(elem) {
                    // http://www.w3.org/TR/selectors/#empty-pseudo
                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                    //   but not by others (comment: 8; processing instruction: 7; etc.)
                    // nodeType < 6 works because attributes (2) do not appear as children
                    for(elem = elem.firstChild; elem; elem = elem.nextSibling){
                        if (elem.nodeType < 6) return false;
                    }
                    return true;
                },
                "parent": function(elem) {
                    return !Expr.pseudos["empty"](elem);
                },
                // Element/input types
                "header": function(elem) {
                    return rheader.test(elem.nodeName);
                },
                "input": function(elem) {
                    return rinputs.test(elem.nodeName);
                },
                "button": function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return name === "input" && elem.type === "button" || name === "button";
                },
                "text": function(elem) {
                    var attr;
                    return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
                },
                // Position-in-collection
                "first": createPositionalPseudo(function() {
                    return [
                        0
                    ];
                }),
                "last": createPositionalPseudo(function(_matchIndexes, length) {
                    return [
                        length - 1
                    ];
                }),
                "eq": createPositionalPseudo(function(_matchIndexes, length, argument) {
                    return [
                        argument < 0 ? argument + length : argument
                    ];
                }),
                "even": createPositionalPseudo(function(matchIndexes, length) {
                    var i2 = 0;
                    for(; i2 < length; i2 += 2)matchIndexes.push(i2);
                    return matchIndexes;
                }),
                "odd": createPositionalPseudo(function(matchIndexes, length) {
                    var i2 = 1;
                    for(; i2 < length; i2 += 2)matchIndexes.push(i2);
                    return matchIndexes;
                }),
                "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
                    var i2 = argument < 0 ? argument + length : argument > length ? length : argument;
                    for(; (--i2) >= 0;)matchIndexes.push(i2);
                    return matchIndexes;
                }),
                "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
                    var i2 = argument < 0 ? argument + length : argument;
                    for(; (++i2) < length;)matchIndexes.push(i2);
                    return matchIndexes;
                })
            }
        };
        Expr.pseudos["nth"] = Expr.pseudos["eq"];
        // Add button/input type pseudos
        for(i in {
            radio: true,
            checkbox: true,
            file: true,
            password: true,
            image: true
        })Expr.pseudos[i] = createInputPseudo(i);
        for(i in {
            submit: true,
            reset: true
        })Expr.pseudos[i] = createButtonPseudo(i);
        // Easy API for creating new setFilters
        function setFilters() {
        }
        setFilters.prototype = Expr.filters = Expr.pseudos;
        Expr.setFilters = new setFilters();
        tokenize = Sizzle1.tokenize = function(selector, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
            if (cached) return parseOnly ? 0 : cached.slice(0);
            soFar = selector;
            groups = [];
            preFilters = Expr.preFilter;
            while(soFar){
                // Comma and first run
                if (!matched || (match = rcomma.exec(soFar))) {
                    if (match) // Don't consume trailing commas as valid
                    soFar = soFar.slice(match[0].length) || soFar;
                    groups.push(tokens = []);
                }
                matched = false;
                // Combinators
                if (match = rcombinators.exec(soFar)) {
                    matched = match.shift();
                    tokens.push({
                        value: matched,
                        // Cast descendant combinators to space
                        type: match[0].replace(rtrim, " ")
                    });
                    soFar = soFar.slice(matched.length);
                }
                // Filters
                for(type in Expr.filter)if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                    matched = match.shift();
                    tokens.push({
                        value: matched,
                        type: type,
                        matches: match
                    });
                    soFar = soFar.slice(matched.length);
                }
                if (!matched) break;
            }
            // Return the length of the invalid excess
            // if we're just parsing
            // Otherwise, throw an error or return tokens
            return parseOnly ? soFar.length : soFar ? Sizzle1.error(selector) : // Cache the tokens
            tokenCache(selector, groups).slice(0);
        };
        function toSelector(tokens) {
            var i2 = 0, len = tokens.length, selector = "";
            for(; i2 < len; i2++)selector += tokens[i2].value;
            return selector;
        }
        function addCombinator(matcher, combinator, base) {
            var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === "parentNode", doneName = done++;
            return combinator.first ? // Check against closest ancestor/preceding element
            function(elem, context, xml) {
                while(elem = elem[dir]){
                    if (elem.nodeType === 1 || checkNonElements) return matcher(elem, context, xml);
                }
                return false;
            } : // Check against all ancestor/preceding elements
            function(elem, context, xml) {
                var oldCache, uniqueCache, outerCache, newCache = [
                    dirruns,
                    doneName
                ];
                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                if (xml) {
                    while(elem = elem[dir])if (elem.nodeType === 1 || checkNonElements) {
                        if (matcher(elem, context, xml)) return true;
                    }
                } else {
                    while(elem = elem[dir])if (elem.nodeType === 1 || checkNonElements) {
                        outerCache = elem[expando] || (elem[expando] = {
                        });
                        // Support: IE <9 only
                        // Defend against cloned attroperties (jQuery gh-1709)
                        uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {
                        });
                        if (skip && skip === elem.nodeName.toLowerCase()) elem = elem[dir] || elem;
                        else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) // Assign to newCache so results back-propagate to previous elements
                        return newCache[2] = oldCache[2];
                        else {
                            // Reuse newcache so results back-propagate to previous elements
                            uniqueCache[key] = newCache;
                            // A match means we're done; a fail means we have to keep checking
                            if (newCache[2] = matcher(elem, context, xml)) return true;
                        }
                    }
                }
                return false;
            };
        }
        function elementMatcher(matchers) {
            return matchers.length > 1 ? function(elem, context, xml) {
                var i2 = matchers.length;
                while(i2--){
                    if (!matchers[i2](elem, context, xml)) return false;
                }
                return true;
            } : matchers[0];
        }
        function multipleContexts(selector, contexts, results) {
            var i2 = 0, len = contexts.length;
            for(; i2 < len; i2++)Sizzle1(selector, contexts[i2], results);
            return results;
        }
        function condense(unmatched, map, filter, context, xml) {
            var elem, newUnmatched = [], i2 = 0, len = unmatched.length, mapped = map != null;
            for(; i2 < len; i2++){
                if (elem = unmatched[i2]) {
                    if (!filter || filter(elem, context, xml)) {
                        newUnmatched.push(elem);
                        if (mapped) map.push(i2);
                    }
                }
            }
            return newUnmatched;
        }
        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            if (postFilter && !postFilter[expando]) postFilter = setMatcher(postFilter);
            if (postFinder && !postFinder[expando]) postFinder = setMatcher(postFinder, postSelector);
            return markFunction(function(seed, results, context, xml) {
                var temp, i2, elem, preMap = [], postMap = [], preexisting = results.length, // Get initial elements from seed or context
                elems = seed || multipleContexts(selector || "*", context.nodeType ? [
                    context
                ] : context, []), // Prefilter to get matcher input, preserving a map for seed-results synchronization
                matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary
                [] : // ...otherwise use results directly
                results : matcherIn;
                // Find primary matches
                if (matcher) matcher(matcherIn, matcherOut, context, xml);
                // Apply postFilter
                if (postFilter) {
                    temp = condense(matcherOut, postMap);
                    postFilter(temp, [], context, xml);
                    // Un-match failing elements by moving them back to matcherIn
                    i2 = temp.length;
                    while(i2--)if (elem = temp[i2]) matcherOut[postMap[i2]] = !(matcherIn[postMap[i2]] = elem);
                }
                if (seed) {
                    if (postFinder || preFilter) {
                        if (postFinder) {
                            // Get the final matcherOut by condensing this intermediate into postFinder contexts
                            temp = [];
                            i2 = matcherOut.length;
                            while(i2--)if (elem = matcherOut[i2]) // Restore matcherIn since elem is not yet a final match
                            temp.push(matcherIn[i2] = elem);
                            postFinder(null, matcherOut = [], temp, xml);
                        }
                        // Move matched elements from seed to results to keep them synchronized
                        i2 = matcherOut.length;
                        while(i2--)if ((elem = matcherOut[i2]) && (temp = postFinder ? indexOf1(seed, elem) : preMap[i2]) > -1) seed[temp] = !(results[temp] = elem);
                    }
                } else {
                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
                    if (postFinder) postFinder(null, results, matcherOut, xml);
                    else push1.apply(results, matcherOut);
                }
            });
        }
        function matcherFromTokens(tokens) {
            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i2 = leadingRelative ? 1 : 0, // The foundational matcher ensures that elements are reachable from top-level context(s)
            matchContext = addCombinator(function(elem) {
                return elem === checkContext;
            }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {
                return indexOf1(checkContext, elem) > -1;
            }, implicitRelative, true), matchers = [
                function(elem, context, xml) {
                    var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                    // Avoid hanging onto element (issue #299)
                    checkContext = null;
                    return ret;
                }
            ];
            for(; i2 < len; i2++)if (matcher = Expr.relative[tokens[i2].type]) matchers = [
                addCombinator(elementMatcher(matchers), matcher)
            ];
            else {
                matcher = Expr.filter[tokens[i2].type].apply(null, tokens[i2].matches);
                // Return special upon seeing a positional matcher
                if (matcher[expando]) {
                    // Find the next relative operator (if any) for proper handling
                    j = ++i2;
                    for(; j < len; j++){
                        if (Expr.relative[tokens[j].type]) break;
                    }
                    return setMatcher(i2 > 1 && elementMatcher(matchers), i2 > 1 && toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`
                    tokens.slice(0, i2 - 1).concat({
                        value: tokens[i2 - 2].type === " " ? "*" : ""
                    })).replace(rtrim, "$1"), matcher, i2 < j && matcherFromTokens(tokens.slice(i2, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
                }
                matchers.push(matcher);
            }
            return elementMatcher(matchers);
        }
        function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {
                var elem, j, matcher, matchedCount = 0, i2 = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, // We must always have either seed elements or outermost context
                elems = seed || byElement && Expr.find["TAG"]("*", outermost), // Use integer dirruns iff this is the outermost matcher
                dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
                if (outermost) // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                // eslint-disable-next-line eqeqeq
                outermostContext = context == document1 || context || outermost;
                // Add elements passing elementMatchers directly to results
                // Support: IE<9, Safari
                // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                for(; i2 !== len && (elem = elems[i2]) != null; i2++){
                    if (byElement && elem) {
                        j = 0;
                        // Support: IE 11+, Edge 17 - 18+
                        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                        // two documents; shallow comparisons work.
                        // eslint-disable-next-line eqeqeq
                        if (!context && elem.ownerDocument != document1) {
                            setDocument(elem);
                            xml = !documentIsHTML;
                        }
                        while(matcher = elementMatchers[j++])if (matcher(elem, context || document1, xml)) {
                            results.push(elem);
                            break;
                        }
                        if (outermost) dirruns = dirrunsUnique;
                    }
                    // Track unmatched elements for set filters
                    if (bySet) {
                        // They will have gone through all possible matchers
                        if (elem = !matcher && elem) matchedCount--;
                        // Lengthen the array for every element, matched or not
                        if (seed) unmatched.push(elem);
                    }
                }
                // `i` is now the count of elements visited above, and adding it to `matchedCount`
                // makes the latter nonnegative.
                matchedCount += i2;
                // Apply set filters to unmatched elements
                // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                // no element matchers and no seed.
                // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                // numerically zero.
                if (bySet && i2 !== matchedCount) {
                    j = 0;
                    while(matcher = setMatchers[j++])matcher(unmatched, setMatched, context, xml);
                    if (seed) {
                        // Reintegrate element matches to eliminate the need for sorting
                        if (matchedCount > 0) {
                            while(i2--)if (!(unmatched[i2] || setMatched[i2])) setMatched[i2] = pop.call(results);
                        }
                        // Discard index placeholder values to get only actual matches
                        setMatched = condense(setMatched);
                    }
                    // Add matches to results
                    push1.apply(results, setMatched);
                    // Seedless set matches succeeding multiple successful matchers stipulate sorting
                    if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) Sizzle1.uniqueSort(results);
                }
                // Override manipulation of globals by nested matchers
                if (outermost) {
                    dirruns = dirrunsUnique;
                    outermostContext = contextBackup;
                }
                return unmatched;
            };
            return bySet ? markFunction(superMatcher) : superMatcher;
        }
        compile = Sizzle1.compile = function(selector, match /* Internal Use Only */ ) {
            var i2, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
            if (!cached) {
                // Generate a function of recursive functions that can be used to check each element
                if (!match) match = tokenize(selector);
                i2 = match.length;
                while(i2--){
                    cached = matcherFromTokens(match[i2]);
                    if (cached[expando]) setMatchers.push(cached);
                    else elementMatchers.push(cached);
                }
                // Cache the compiled function
                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
                // Save selector and tokenization
                cached.selector = selector;
            }
            return cached;
        };
        /**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */ select = Sizzle1.select = function(selector, context, results, seed) {
            var i2, tokens, token, type, find, compiled = typeof selector === "function" && selector, match = !seed && tokenize(selector = compiled.selector || selector);
            results = results || [];
            // Try to minimize operations if there is only one selector in the list and no seed
            // (the latter of which guarantees us context)
            if (match.length === 1) {
                // Reduce context if the leading compound selector is an ID
                tokens = match[0] = match[0].slice(0);
                if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
                    context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
                    if (!context) return results;
                    else if (compiled) context = context.parentNode;
                    selector = selector.slice(tokens.shift().value.length);
                }
                // Fetch a seed set for right-to-left matching
                i2 = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
                while(i2--){
                    token = tokens[i2];
                    // Abort if we hit a combinator
                    if (Expr.relative[type = token.type]) break;
                    if (find = Expr.find[type]) // Search, expanding context for leading sibling combinators
                    {
                        if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                            // If seed is empty or no tokens remain, we can return early
                            tokens.splice(i2, 1);
                            selector = seed.length && toSelector(tokens);
                            if (!selector) {
                                push1.apply(results, seed);
                                return results;
                            }
                            break;
                        }
                    }
                }
            }
            // Compile and execute a filtering function if one is not provided
            // Provide `match` to avoid retokenization if we modified the selector above
            (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
            return results;
        };
        // One-time assignments
        // Sort stability
        support1.sortStable = expando.split("").sort(sortOrder).join("") === expando;
        // Support: Chrome 14-35+
        // Always assume duplicates if they aren't passed to the comparison function
        support1.detectDuplicates = !!hasDuplicate;
        // Initialize against the default document
        setDocument();
        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
        // Detached nodes confoundingly follow *each other*
        support1.sortDetached = assert(function(el) {
            // Should return 1, but returns 4 (following)
            return el.compareDocumentPosition(document1.createElement("fieldset")) & 1;
        });
        // Support: IE<8
        // Prevent attribute/property "interpolation"
        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
        if (!assert(function(el) {
            el.innerHTML = "<a href='#'></a>";
            return el.firstChild.getAttribute("href") === "#";
        })) addHandle("type|href|height|width", function(elem, name, isXML1) {
            if (!isXML1) return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        });
        // Support: IE<9
        // Use defaultValue in place of getAttribute("value")
        if (!support1.attributes || !assert(function(el) {
            el.innerHTML = "<input/>";
            el.firstChild.setAttribute("value", "");
            return el.firstChild.getAttribute("value") === "";
        })) addHandle("value", function(elem, _name, isXML1) {
            if (!isXML1 && elem.nodeName.toLowerCase() === "input") return elem.defaultValue;
        });
        // Support: IE<9
        // Use getAttributeNode to fetch booleans when getAttribute lies
        if (!assert(function(el) {
            return el.getAttribute("disabled") == null;
        })) addHandle(booleans, function(elem, name, isXML1) {
            var val;
            if (!isXML1) return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        });
        return Sizzle1;
    }(window);
    jQuery.find = Sizzle;
    jQuery.expr = Sizzle.selectors;
    // Deprecated
    jQuery.expr[":"] = jQuery.expr.pseudos;
    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
    jQuery.text = Sizzle.getText;
    jQuery.isXMLDoc = Sizzle.isXML;
    jQuery.contains = Sizzle.contains;
    jQuery.escapeSelector = Sizzle.escape;
    var dir = function(elem, dir1, until) {
        var matched = [], truncate = until !== undefined;
        while((elem = elem[dir1]) && elem.nodeType !== 9)if (elem.nodeType === 1) {
            if (truncate && jQuery(elem).is(until)) break;
            matched.push(elem);
        }
        return matched;
    };
    var siblings = function(n, elem) {
        var matched = [];
        for(; n; n = n.nextSibling)if (n.nodeType === 1 && n !== elem) matched.push(n);
        return matched;
    };
    var rneedsContext = jQuery.expr.match.needsContext;
    function nodeName(elem, name) {
        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    }
    var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    // Implement the identical functionality for filter and not
    function winnow(elements, qualifier, not) {
        if (isFunction(qualifier)) return jQuery.grep(elements, function(elem, i2) {
            return !!qualifier.call(elem, i2, elem) !== not;
        });
        // Single element
        if (qualifier.nodeType) return jQuery.grep(elements, function(elem) {
            return elem === qualifier !== not;
        });
        // Arraylike of elements (jQuery, arguments, Array)
        if (typeof qualifier !== "string") return jQuery.grep(elements, function(elem) {
            return indexOf.call(qualifier, elem) > -1 !== not;
        });
        // Filtered directly for both simple and complex selectors
        return jQuery.filter(qualifier, elements, not);
    }
    jQuery.filter = function(expr, elems, not) {
        var elem = elems[0];
        if (not) expr = ":not(" + expr + ")";
        if (elems.length === 1 && elem.nodeType === 1) return jQuery.find.matchesSelector(elem, expr) ? [
            elem
        ] : [];
        return jQuery.find.matches(expr, jQuery.grep(elems, function(elem1) {
            return elem1.nodeType === 1;
        }));
    };
    jQuery.fn.extend({
        find: function(selector) {
            var i2, ret, len = this.length, self = this;
            if (typeof selector !== "string") return this.pushStack(jQuery(selector).filter(function() {
                for(i2 = 0; i2 < len; i2++){
                    if (jQuery.contains(self[i2], this)) return true;
                }
            }));
            ret = this.pushStack([]);
            for(i2 = 0; i2 < len; i2++)jQuery.find(selector, self[i2], ret);
            return len > 1 ? jQuery.uniqueSort(ret) : ret;
        },
        filter: function(selector) {
            return this.pushStack(winnow(this, selector || [], false));
        },
        not: function(selector) {
            return this.pushStack(winnow(this, selector || [], true));
        },
        is: function(selector) {
            return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set
            // so $("p:first").is("p:last") won't return true for a doc with two "p".
            typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
        }
    });
    // Initialize a jQuery object
    // A central reference to the root jQuery(document)
    var rootjQuery, // A simple way to check for HTML strings
    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
    // Strict HTML recognition (#11290: must start with <)
    // Shortcut simple #id case for speed
    rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, init = jQuery.fn.init = function(selector, context, root) {
        var match, elem;
        // HANDLE: $(""), $(null), $(undefined), $(false)
        if (!selector) return this;
        // Method init() accepts an alternate rootjQuery
        // so migrate can support jQuery.sub (gh-2101)
        root = root || rootjQuery;
        // Handle HTML strings
        if (typeof selector === "string") {
            if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) // Assume that strings that start and end with <> are HTML and skip the regex check
            match = [
                null,
                selector,
                null
            ];
            else match = rquickExpr.exec(selector);
            // Match html or make sure no context is specified for #id
            if (match && (match[1] || !context)) {
                // HANDLE: $(html) -> $(array)
                if (match[1]) {
                    context = context instanceof jQuery ? context[0] : context;
                    // Option to run scripts is true for back-compat
                    // Intentionally let the error be thrown if parseHTML is not present
                    jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
                    // HANDLE: $(html, props)
                    if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                        for(match in context)// Properties of context are called as methods if possible
                        if (isFunction(this[match])) this[match](context[match]);
                        else this.attr(match, context[match]);
                    }
                    return this;
                // HANDLE: $(#id)
                } else {
                    elem = document.getElementById(match[2]);
                    if (elem) {
                        // Inject the element directly into the jQuery object
                        this[0] = elem;
                        this.length = 1;
                    }
                    return this;
                }
            } else if (!context || context.jquery) return (context || root).find(selector);
            else return this.constructor(context).find(selector);
        // HANDLE: $(DOMElement)
        } else if (selector.nodeType) {
            this[0] = selector;
            this.length = 1;
            return this;
        // HANDLE: $(function)
        // Shortcut for document ready
        } else if (isFunction(selector)) return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present
        selector(jQuery);
        return jQuery.makeArray(selector, this);
    };
    // Give the init function the jQuery prototype for later instantiation
    init.prototype = jQuery.fn;
    // Initialize central reference
    rootjQuery = jQuery(document);
    var rparentsprev = /^(?:parents|prev(?:Until|All))/, // Methods guaranteed to produce a unique set when starting from a unique set
    guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
    };
    jQuery.fn.extend({
        has: function(target) {
            var targets = jQuery(target, this), l = targets.length;
            return this.filter(function() {
                var i2 = 0;
                for(; i2 < l; i2++){
                    if (jQuery.contains(this, targets[i2])) return true;
                }
            });
        },
        closest: function(selectors, context) {
            var cur, i2 = 0, l = this.length, matched = [], targets = typeof selectors !== "string" && jQuery(selectors);
            // Positional selectors never match, since there's no _selection_ context
            if (!rneedsContext.test(selectors)) for(; i2 < l; i2++){
                for(cur = this[i2]; cur && cur !== context; cur = cur.parentNode)// Always skip document fragments
                if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle
                cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
                    matched.push(cur);
                    break;
                }
            }
            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
        },
        // Determine the position of an element within the set
        index: function(elem) {
            // No argument, return index in parent
            if (!elem) return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            // Index in selector
            if (typeof elem === "string") return indexOf.call(jQuery(elem), this[0]);
            // Locate the position of the desired element
            return indexOf.call(this, // If it receives a jQuery object, the first element is used
            elem.jquery ? elem[0] : elem);
        },
        add: function(selector, context) {
            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
        },
        addBack: function(selector) {
            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
        }
    });
    function sibling(cur, dir1) {
        while((cur = cur[dir1]) && cur.nodeType !== 1);
        return cur;
    }
    jQuery.each({
        parent: function(elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null;
        },
        parents: function(elem) {
            return dir(elem, "parentNode");
        },
        parentsUntil: function(elem, _i, until) {
            return dir(elem, "parentNode", until);
        },
        next: function(elem) {
            return sibling(elem, "nextSibling");
        },
        prev: function(elem) {
            return sibling(elem, "previousSibling");
        },
        nextAll: function(elem) {
            return dir(elem, "nextSibling");
        },
        prevAll: function(elem) {
            return dir(elem, "previousSibling");
        },
        nextUntil: function(elem, _i, until) {
            return dir(elem, "nextSibling", until);
        },
        prevUntil: function(elem, _i, until) {
            return dir(elem, "previousSibling", until);
        },
        siblings: function(elem) {
            return siblings((elem.parentNode || {
            }).firstChild, elem);
        },
        children: function(elem) {
            return siblings(elem.firstChild);
        },
        contents: function(elem) {
            if (elem.contentDocument != null && // Support: IE 11+
            // <object> elements with no `data` attribute has an object
            // `contentDocument` with a `null` prototype.
            getProto(elem.contentDocument)) return elem.contentDocument;
            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
            // Treat the template element as a regular one in browsers that
            // don't support it.
            if (nodeName(elem, "template")) elem = elem.content || elem;
            return jQuery.merge([], elem.childNodes);
        }
    }, function(name, fn) {
        jQuery.fn[name] = function(until, selector) {
            var matched = jQuery.map(this, fn, until);
            if (name.slice(-5) !== "Until") selector = until;
            if (selector && typeof selector === "string") matched = jQuery.filter(selector, matched);
            if (this.length > 1) {
                // Remove duplicates
                if (!guaranteedUnique[name]) jQuery.uniqueSort(matched);
                // Reverse order for parents* and prev-derivatives
                if (rparentsprev.test(name)) matched.reverse();
            }
            return this.pushStack(matched);
        };
    });
    var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
    // Convert String-formatted options into Object-formatted ones
    function createOptions(options) {
        var object = {
        };
        jQuery.each(options.match(rnothtmlwhite) || [], function(_, flag) {
            object[flag] = true;
        });
        return object;
    }
    /*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */ jQuery.Callbacks = function(options) {
        // Convert options from String-formatted to Object-formatted if needed
        // (we check in cache first)
        options = typeof options === "string" ? createOptions(options) : jQuery.extend({
        }, options);
        var firing, // Last fire value for non-forgettable lists
        memory, // Flag to know if list was already fired
        fired, // Flag to prevent firing
        locked, // Actual callback list
        list = [], // Queue of execution data for repeatable lists
        queue = [], // Index of currently firing callback (modified by add/remove as needed)
        firingIndex = -1, // Fire callbacks
        fire = function() {
            // Enforce single-firing
            locked = locked || options.once;
            // Execute callbacks for all pending executions,
            // respecting firingIndex overrides and runtime changes
            fired = firing = true;
            for(; queue.length; firingIndex = -1){
                memory = queue.shift();
                while((++firingIndex) < list.length)// Run callback and check for early termination
                if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                    // Jump to end and forget the data so .add doesn't re-fire
                    firingIndex = list.length;
                    memory = false;
                }
            }
            // Forget the data if we're done with it
            if (!options.memory) memory = false;
            firing = false;
            // Clean up if we're done firing for good
            if (locked) {
                // Keep an empty list if we have data for future add calls
                if (memory) list = [];
                else list = "";
            }
        }, // Actual Callbacks object
        self = {
            // Add a callback or a collection of callbacks to the list
            add: function() {
                if (list) {
                    // If we have memory from a past run, we should fire after adding
                    if (memory && !firing) {
                        firingIndex = list.length - 1;
                        queue.push(memory);
                    }
                    (function add(args) {
                        jQuery.each(args, function(_, arg) {
                            if (isFunction(arg)) {
                                if (!options.unique || !self.has(arg)) list.push(arg);
                            } else if (arg && arg.length && toType(arg) !== "string") // Inspect recursively
                            add(arg);
                        });
                    })(arguments);
                    if (memory && !firing) fire();
                }
                return this;
            },
            // Remove a callback from the list
            remove: function() {
                jQuery.each(arguments, function(_, arg) {
                    var index;
                    while((index = jQuery.inArray(arg, list, index)) > -1){
                        list.splice(index, 1);
                        // Handle firing indexes
                        if (index <= firingIndex) firingIndex--;
                    }
                });
                return this;
            },
            // Check if a given callback is in the list.
            // If no argument is given, return whether or not list has callbacks attached.
            has: function(fn) {
                return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
            },
            // Remove all callbacks from the list
            empty: function() {
                if (list) list = [];
                return this;
            },
            // Disable .fire and .add
            // Abort any current/pending executions
            // Clear all callbacks and values
            disable: function() {
                locked = queue = [];
                list = memory = "";
                return this;
            },
            disabled: function() {
                return !list;
            },
            // Disable .fire
            // Also disable .add unless we have memory (since it would have no effect)
            // Abort any pending executions
            lock: function() {
                locked = queue = [];
                if (!memory && !firing) list = memory = "";
                return this;
            },
            locked: function() {
                return !!locked;
            },
            // Call all callbacks with the given context and arguments
            fireWith: function(context, args) {
                if (!locked) {
                    args = args || [];
                    args = [
                        context,
                        args.slice ? args.slice() : args
                    ];
                    queue.push(args);
                    if (!firing) fire();
                }
                return this;
            },
            // Call all the callbacks with the given arguments
            fire: function() {
                self.fireWith(this, arguments);
                return this;
            },
            // To know if the callbacks have already been called at least once
            fired: function() {
                return !!fired;
            }
        };
        return self;
    };
    function Identity(v) {
        return v;
    }
    function Thrower(ex) {
        throw ex;
    }
    function adoptValue(value, resolve, reject, noValue) {
        var method;
        try {
            // Check for promise aspect first to privilege synchronous behavior
            if (value && isFunction(method = value.promise)) method.call(value).done(resolve).fail(reject);
            else if (value && isFunction(method = value.then)) method.call(value, resolve, reject);
            else // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
            // * false: [ value ].slice( 0 ) => resolve( value )
            // * true: [ value ].slice( 1 ) => resolve()
            resolve.apply(undefined, [
                value
            ].slice(noValue));
        // For Promises/A+, convert exceptions into rejections
        // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
        // Deferred#then to conditionally suppress rejection.
        } catch (value1) {
            // Support: Android 4.0 only
            // Strict mode functions invoked without .call/.apply get global-object context
            reject.apply(undefined, [
                value1
            ]);
        }
    }
    jQuery.extend({
        Deferred: function(func) {
            var tuples = [
                // action, add listener, callbacks,
                // ... .then handlers, argument index, [final state]
                [
                    "notify",
                    "progress",
                    jQuery.Callbacks("memory"),
                    jQuery.Callbacks("memory"),
                    2
                ],
                [
                    "resolve",
                    "done",
                    jQuery.Callbacks("once memory"),
                    jQuery.Callbacks("once memory"),
                    0,
                    "resolved"
                ],
                [
                    "reject",
                    "fail",
                    jQuery.Callbacks("once memory"),
                    jQuery.Callbacks("once memory"),
                    1,
                    "rejected"
                ]
            ], state = "pending", promise = {
                state: function() {
                    return state;
                },
                always: function() {
                    deferred.done(arguments).fail(arguments);
                    return this;
                },
                "catch": function(fn) {
                    return promise.then(null, fn);
                },
                // Keep pipe for back-compat
                pipe: function() {
                    var fns = arguments;
                    return jQuery.Deferred(function(newDefer) {
                        jQuery.each(tuples, function(_i, tuple) {
                            // Map tuples (progress, done, fail) to arguments (done, fail, progress)
                            var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                            // deferred.progress(function() { bind to newDefer or newDefer.notify })
                            // deferred.done(function() { bind to newDefer or newDefer.resolve })
                            // deferred.fail(function() { bind to newDefer or newDefer.reject })
                            deferred[tuple[1]](function() {
                                var returned = fn && fn.apply(this, arguments);
                                if (returned && isFunction(returned.promise)) returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                                else newDefer[tuple[0] + "With"](this, fn ? [
                                    returned
                                ] : arguments);
                            });
                        });
                        fns = null;
                    }).promise();
                },
                then: function(onFulfilled, onRejected, onProgress) {
                    var maxDepth = 0;
                    function resolve(depth, deferred, handler, special) {
                        return function() {
                            var that = this, args = arguments, mightThrow = function() {
                                var returned, then;
                                // Support: Promises/A+ section 2.3.3.3.3
                                // https://promisesaplus.com/#point-59
                                // Ignore double-resolution attempts
                                if (depth < maxDepth) return;
                                returned = handler.apply(that, args);
                                // Support: Promises/A+ section 2.3.1
                                // https://promisesaplus.com/#point-48
                                if (returned === deferred.promise()) throw new TypeError("Thenable self-resolution");
                                // Support: Promises/A+ sections 2.3.3.1, 3.5
                                // https://promisesaplus.com/#point-54
                                // https://promisesaplus.com/#point-75
                                // Retrieve `then` only once
                                then = returned && (typeof returned === "object" || typeof returned === "function") && returned.then;
                                // Handle a returned thenable
                                if (isFunction(then)) {
                                    // Special processors (notify) just wait for resolution
                                    if (special) then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));
                                    else {
                                        // ...and disregard older resolution values
                                        maxDepth++;
                                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
                                    }
                                } else {
                                    // Only substitute handlers pass on context
                                    // and multiple values (non-spec behavior)
                                    if (handler !== Identity) {
                                        that = undefined;
                                        args = [
                                            returned
                                        ];
                                    }
                                    // Process the value(s)
                                    // Default process is resolve
                                    (special || deferred.resolveWith)(that, args);
                                }
                            }, // Only normal processors (resolve) catch and reject exceptions
                            process = special ? mightThrow : function() {
                                try {
                                    mightThrow();
                                } catch (e) {
                                    if (jQuery.Deferred.exceptionHook) jQuery.Deferred.exceptionHook(e, process.stackTrace);
                                    // Support: Promises/A+ section 2.3.3.3.4.1
                                    // https://promisesaplus.com/#point-61
                                    // Ignore post-resolution exceptions
                                    if (depth + 1 >= maxDepth) {
                                        // Only substitute handlers pass on context
                                        // and multiple values (non-spec behavior)
                                        if (handler !== Thrower) {
                                            that = undefined;
                                            args = [
                                                e
                                            ];
                                        }
                                        deferred.rejectWith(that, args);
                                    }
                                }
                            };
                            // Support: Promises/A+ section 2.3.3.3.1
                            // https://promisesaplus.com/#point-57
                            // Re-resolve promises immediately to dodge false rejection from
                            // subsequent errors
                            if (depth) process();
                            else {
                                // Call an optional hook to record the stack, in case of exception
                                // since it's otherwise lost when execution goes async
                                if (jQuery.Deferred.getStackHook) process.stackTrace = jQuery.Deferred.getStackHook();
                                window.setTimeout(process);
                            }
                        };
                    }
                    return jQuery.Deferred(function(newDefer) {
                        // progress_handlers.add( ... )
                        tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));
                        // fulfilled_handlers.add( ... )
                        tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));
                        // rejected_handlers.add( ... )
                        tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
                    }).promise();
                },
                // Get a promise for this deferred
                // If obj is provided, the promise aspect is added to the object
                promise: function(obj) {
                    return obj != null ? jQuery.extend(obj, promise) : promise;
                }
            }, deferred = {
            };
            // Add list-specific methods
            jQuery.each(tuples, function(i2, tuple) {
                var list = tuple[2], stateString = tuple[5];
                // promise.progress = list.add
                // promise.done = list.add
                // promise.fail = list.add
                promise[tuple[1]] = list.add;
                // Handle state
                if (stateString) list.add(function() {
                    // state = "resolved" (i.e., fulfilled)
                    // state = "rejected"
                    state = stateString;
                }, // rejected_callbacks.disable
                // fulfilled_callbacks.disable
                tuples[3 - i2][2].disable, // rejected_handlers.disable
                // fulfilled_handlers.disable
                tuples[3 - i2][3].disable, // progress_callbacks.lock
                tuples[0][2].lock, // progress_handlers.lock
                tuples[0][3].lock);
                // progress_handlers.fire
                // fulfilled_handlers.fire
                // rejected_handlers.fire
                list.add(tuple[3].fire);
                // deferred.notify = function() { deferred.notifyWith(...) }
                // deferred.resolve = function() { deferred.resolveWith(...) }
                // deferred.reject = function() { deferred.rejectWith(...) }
                deferred[tuple[0]] = function() {
                    deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);
                    return this;
                };
                // deferred.notifyWith = list.fireWith
                // deferred.resolveWith = list.fireWith
                // deferred.rejectWith = list.fireWith
                deferred[tuple[0] + "With"] = list.fireWith;
            });
            // Make the deferred a promise
            promise.promise(deferred);
            // Call given func if any
            if (func) func.call(deferred, deferred);
            // All done!
            return deferred;
        },
        // Deferred helper
        when: function(singleValue) {
            var // count of uncompleted subordinates
            remaining = arguments.length, // count of unprocessed arguments
            i2 = remaining, // subordinate fulfillment data
            resolveContexts = Array(i2), resolveValues = slice.call(arguments), // the primary Deferred
            primary = jQuery.Deferred(), // subordinate callback factory
            updateFunc = function(i3) {
                return function(value) {
                    resolveContexts[i3] = this;
                    resolveValues[i3] = arguments.length > 1 ? slice.call(arguments) : value;
                    if (!--remaining) primary.resolveWith(resolveContexts, resolveValues);
                };
            };
            // Single- and empty arguments are adopted like Promise.resolve
            if (remaining <= 1) {
                adoptValue(singleValue, primary.done(updateFunc(i2)).resolve, primary.reject, !remaining);
                // Use .then() to unwrap secondary thenables (cf. gh-3000)
                if (primary.state() === "pending" || isFunction(resolveValues[i2] && resolveValues[i2].then)) return primary.then();
            }
            // Multiple arguments are aggregated like Promise.all array elements
            while(i2--)adoptValue(resolveValues[i2], updateFunc(i2), primary.reject);
            return primary.promise();
        }
    });
    // These usually indicate a programmer mistake during development,
    // warn about them ASAP rather than swallowing them by default.
    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    jQuery.Deferred.exceptionHook = function(error, stack) {
        // Support: IE 8 - 9 only
        // Console exists when dev tools are open, which can happen at any time
        if (window.console && window.console.warn && error && rerrorNames.test(error.name)) window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
    };
    jQuery.readyException = function(error) {
        window.setTimeout(function() {
            throw error;
        });
    };
    // The deferred used on DOM ready
    var readyList = jQuery.Deferred();
    jQuery.fn.ready = function(fn) {
        readyList.then(fn)// Wrap jQuery.readyException in a function so that the lookup
        // happens at the time of error handling instead of callback
        // registration.
        .catch(function(error) {
            jQuery.readyException(error);
        });
        return this;
    };
    jQuery.extend({
        // Is the DOM ready to be used? Set to true once it occurs.
        isReady: false,
        // A counter to track how many items to wait for before
        // the ready event fires. See #6781
        readyWait: 1,
        // Handle when the DOM is ready
        ready: function(wait) {
            // Abort if there are pending holds or we're already ready
            if (wait === true ? --jQuery.readyWait : jQuery.isReady) return;
            // Remember that the DOM is ready
            jQuery.isReady = true;
            // If a normal DOM Ready event fired, decrement, and wait if need be
            if (wait !== true && (--jQuery.readyWait) > 0) return;
            // If there are functions bound, to execute
            readyList.resolveWith(document, [
                jQuery
            ]);
        }
    });
    jQuery.ready.then = readyList.then;
    // The ready event handler and self cleanup method
    function completed() {
        document.removeEventListener("DOMContentLoaded", completed);
        window.removeEventListener("load", completed);
        jQuery.ready();
    }
    // Catch cases where $(document).ready() is called
    // after the browser event has already occurred.
    // Support: IE <=9 - 10 only
    // Older IE sometimes signals "interactive" too soon
    if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) // Handle it asynchronously to allow scripts the opportunity to delay ready
    window.setTimeout(jQuery.ready);
    else {
        // Use the handy event callback
        document.addEventListener("DOMContentLoaded", completed);
        // A fallback to window.onload, that will always work
        window.addEventListener("load", completed);
    }
    // Multifunctional method to get and set values of a collection
    // The value/s can optionally be executed if it's a function
    var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
        var i2 = 0, len = elems.length, bulk = key == null;
        // Sets many values
        if (toType(key) === "object") {
            chainable = true;
            for(i2 in key)access(elems, fn, i2, key[i2], true, emptyGet, raw);
        // Sets one value
        } else if (value !== undefined) {
            chainable = true;
            if (!isFunction(value)) raw = true;
            if (bulk) {
                // Bulk operations run against the entire set
                if (raw) {
                    fn.call(elems, value);
                    fn = null;
                // ...except when executing function values
                } else {
                    bulk = fn;
                    fn = function(elem, _key, value1) {
                        return bulk.call(jQuery(elem), value1);
                    };
                }
            }
            if (fn) for(; i2 < len; i2++)fn(elems[i2], key, raw ? value : value.call(elems[i2], i2, fn(elems[i2], key)));
        }
        if (chainable) return elems;
        // Gets
        if (bulk) return fn.call(elems);
        return len ? fn(elems[0], key) : emptyGet;
    };
    // Matches dashed string for camelizing
    var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
    // Used by camelCase as callback to replace()
    function fcamelCase(_all, letter) {
        return letter.toUpperCase();
    }
    // Convert dashed to camelCase; used by the css and data modules
    // Support: IE <=9 - 11, Edge 12 - 15
    // Microsoft forgot to hump their vendor prefix (#9572)
    function camelCase(string) {
        return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    }
    var acceptData = function(owner) {
        // Accepts only:
        //  - Node
        //    - Node.ELEMENT_NODE
        //    - Node.DOCUMENT_NODE
        //  - Object
        //    - Any
        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
    };
    function Data() {
        this.expando = jQuery.expando + Data.uid++;
    }
    Data.uid = 1;
    Data.prototype = {
        cache: function(owner) {
            // Check if the owner object already has a cache
            var value = owner[this.expando];
            // If not, create one
            if (!value) {
                value = {
                };
                // We can accept data for non-element nodes in modern browsers,
                // but we should not, see #8335.
                // Always return an empty object.
                if (acceptData(owner)) {
                    // If it is a node unlikely to be stringify-ed or looped over
                    // use plain assignment
                    if (owner.nodeType) owner[this.expando] = value;
                    else Object.defineProperty(owner, this.expando, {
                        value: value,
                        configurable: true
                    });
                }
            }
            return value;
        },
        set: function(owner, data, value) {
            var prop, cache = this.cache(owner);
            // Handle: [ owner, key, value ] args
            // Always use camelCase key (gh-2257)
            if (typeof data === "string") cache[camelCase(data)] = value;
            else // Copy the properties one-by-one to the cache object
            for(prop in data)cache[camelCase(prop)] = data[prop];
            return cache;
        },
        get: function(owner, key) {
            return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)
            owner[this.expando] && owner[this.expando][camelCase(key)];
        },
        access: function(owner, key, value) {
            // In cases where either:
            //
            //   1. No key was specified
            //   2. A string key was specified, but no value provided
            //
            // Take the "read" path and allow the get method to determine
            // which value to return, respectively either:
            //
            //   1. The entire cache object
            //   2. The data stored at the key
            //
            if (key === undefined || key && typeof key === "string" && value === undefined) return this.get(owner, key);
            // When the key is not a string, or both a key and value
            // are specified, set or extend (existing objects) with either:
            //
            //   1. An object of properties
            //   2. A key and value
            //
            this.set(owner, key, value);
            // Since the "set" path can have two possible entry points
            // return the expected data based on which path was taken[*]
            return value !== undefined ? value : key;
        },
        remove: function(owner, key) {
            var i2, cache = owner[this.expando];
            if (cache === undefined) return;
            if (key !== undefined) {
                // Support array or space separated string of keys
                if (Array.isArray(key)) // If key is an array of keys...
                // We always set camelCase keys, so remove that.
                key = key.map(camelCase);
                else {
                    key = camelCase(key);
                    // If a key with the spaces exists, use it.
                    // Otherwise, create an array by matching non-whitespace
                    key = key in cache ? [
                        key
                    ] : key.match(rnothtmlwhite) || [];
                }
                i2 = key.length;
                while(i2--)delete cache[key[i2]];
            }
            // Remove the expando if there's no more data
            if (key === undefined || jQuery.isEmptyObject(cache)) {
                // Support: Chrome <=35 - 45
                // Webkit & Blink performance suffers when deleting properties
                // from DOM nodes, so set to undefined instead
                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
                if (owner.nodeType) owner[this.expando] = undefined;
                else delete owner[this.expando];
            }
        },
        hasData: function(owner) {
            var cache = owner[this.expando];
            return cache !== undefined && !jQuery.isEmptyObject(cache);
        }
    };
    var dataPriv = new Data();
    var dataUser = new Data();
    //	Implementation Summary
    //
    //	1. Enforce API surface and semantic compatibility with 1.9.x branch
    //	2. Improve the module's maintainability by reducing the storage
    //		paths to a single mechanism.
    //	3. Use the same single mechanism to support "private" and "user" data.
    //	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
    //	5. Avoid exposing implementation details on user objects (eg. expando properties)
    //	6. Provide a clear path for implementation upgrade to WeakMap in 2014
    var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
    function getData(data) {
        if (data === "true") return true;
        if (data === "false") return false;
        if (data === "null") return null;
        // Only convert to a number if it doesn't change the string
        if (data === +data + "") return +data;
        if (rbrace.test(data)) return JSON.parse(data);
        return data;
    }
    function dataAttr(elem, key, data) {
        var name;
        // If nothing was found internally, try to fetch any
        // data from the HTML5 data-* attribute
        if (data === undefined && elem.nodeType === 1) {
            name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
                try {
                    data = getData(data);
                } catch (e) {
                }
                // Make sure we set the data so it isn't changed later
                dataUser.set(elem, key, data);
            } else data = undefined;
        }
        return data;
    }
    jQuery.extend({
        hasData: function(elem) {
            return dataUser.hasData(elem) || dataPriv.hasData(elem);
        },
        data: function(elem, name, data) {
            return dataUser.access(elem, name, data);
        },
        removeData: function(elem, name) {
            dataUser.remove(elem, name);
        },
        // TODO: Now that all calls to _data and _removeData have been replaced
        // with direct calls to dataPriv methods, these can be deprecated.
        _data: function(elem, name, data) {
            return dataPriv.access(elem, name, data);
        },
        _removeData: function(elem, name) {
            dataPriv.remove(elem, name);
        }
    });
    jQuery.fn.extend({
        data: function(key, value) {
            var i2, name, data, elem = this[0], attrs = elem && elem.attributes;
            // Gets all values
            if (key === undefined) {
                if (this.length) {
                    data = dataUser.get(elem);
                    if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
                        i2 = attrs.length;
                        while(i2--)// Support: IE 11 only
                        // The attrs elements can be null (#14894)
                        if (attrs[i2]) {
                            name = attrs[i2].name;
                            if (name.indexOf("data-") === 0) {
                                name = camelCase(name.slice(5));
                                dataAttr(elem, name, data[name]);
                            }
                        }
                        dataPriv.set(elem, "hasDataAttrs", true);
                    }
                }
                return data;
            }
            // Sets multiple values
            if (typeof key === "object") return this.each(function() {
                dataUser.set(this, key);
            });
            return access(this, function(value1) {
                var data1;
                // The calling jQuery object (element matches) is not empty
                // (and therefore has an element appears at this[ 0 ]) and the
                // `value` parameter was not undefined. An empty jQuery object
                // will result in `undefined` for elem = this[ 0 ] which will
                // throw an exception if an attempt to read a data cache is made.
                if (elem && value1 === undefined) {
                    // Attempt to get data from the cache
                    // The key will always be camelCased in Data
                    data1 = dataUser.get(elem, key);
                    if (data1 !== undefined) return data1;
                    // Attempt to "discover" the data in
                    // HTML5 custom data-* attrs
                    data1 = dataAttr(elem, key);
                    if (data1 !== undefined) return data1;
                    // We tried really hard, but the data doesn't exist.
                    return;
                }
                // Set the data...
                this.each(function() {
                    // We always store the camelCased key
                    dataUser.set(this, key, value1);
                });
            }, null, value, arguments.length > 1, null, true);
        },
        removeData: function(key) {
            return this.each(function() {
                dataUser.remove(this, key);
            });
        }
    });
    jQuery.extend({
        queue: function(elem, type, data) {
            var queue;
            if (elem) {
                type = (type || "fx") + "queue";
                queue = dataPriv.get(elem, type);
                // Speed up dequeue by getting out quickly if this is just a lookup
                if (data) {
                    if (!queue || Array.isArray(data)) queue = dataPriv.access(elem, type, jQuery.makeArray(data));
                    else queue.push(data);
                }
                return queue || [];
            }
        },
        dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function() {
                jQuery.dequeue(elem, type);
            };
            // If the fx queue is dequeued, always remove the progress sentinel
            if (fn === "inprogress") {
                fn = queue.shift();
                startLength--;
            }
            if (fn) {
                // Add a progress sentinel to prevent the fx queue from being
                // automatically dequeued
                if (type === "fx") queue.unshift("inprogress");
                // Clear up the last queue stop function
                delete hooks.stop;
                fn.call(elem, next, hooks);
            }
            if (!startLength && hooks) hooks.empty.fire();
        },
        // Not public - generate a queueHooks object, or return the current one
        _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
                empty: jQuery.Callbacks("once memory").add(function() {
                    dataPriv.remove(elem, [
                        type + "queue",
                        key
                    ]);
                })
            });
        }
    });
    jQuery.fn.extend({
        queue: function(type, data) {
            var setter = 2;
            if (typeof type !== "string") {
                data = type;
                type = "fx";
                setter--;
            }
            if (arguments.length < setter) return jQuery.queue(this[0], type);
            return data === undefined ? this : this.each(function() {
                var queue = jQuery.queue(this, type, data);
                // Ensure a hooks for this queue
                jQuery._queueHooks(this, type);
                if (type === "fx" && queue[0] !== "inprogress") jQuery.dequeue(this, type);
            });
        },
        dequeue: function(type) {
            return this.each(function() {
                jQuery.dequeue(this, type);
            });
        },
        clearQueue: function(type) {
            return this.queue(type || "fx", []);
        },
        // Get a promise resolved when queues of a certain type
        // are emptied (fx is the type by default)
        promise: function(type, obj) {
            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i2 = this.length, resolve = function() {
                if (!--count) defer.resolveWith(elements, [
                    elements
                ]);
            };
            if (typeof type !== "string") {
                obj = type;
                type = undefined;
            }
            type = type || "fx";
            while(i2--){
                tmp = dataPriv.get(elements[i2], type + "queueHooks");
                if (tmp && tmp.empty) {
                    count++;
                    tmp.empty.add(resolve);
                }
            }
            resolve();
            return defer.promise(obj);
        }
    });
    var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
    var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
    var cssExpand = [
        "Top",
        "Right",
        "Bottom",
        "Left"
    ];
    var documentElement = document.documentElement;
    var isAttached = function(elem) {
        return jQuery.contains(elem.ownerDocument, elem);
    }, composed = {
        composed: true
    };
    // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
    // Check attachment across shadow DOM boundaries when possible (gh-3504)
    // Support: iOS 10.0-10.2 only
    // Early iOS 10 versions support `attachShadow` but not `getRootNode`,
    // leading to errors. We need to check for `getRootNode`.
    if (documentElement.getRootNode) isAttached = function(elem) {
        return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
    };
    var isHiddenWithinTree = function(elem, el) {
        // isHiddenWithinTree might be called from jQuery#filter function;
        // in that case, element will be second argument
        elem = el || elem;
        // Inline style trumps all
        return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style
        // Support: Firefox <=43 - 45
        // Disconnected elements can have computed display: none, so first confirm that elem is
        // in the document.
        isAttached(elem) && jQuery.css(elem, "display") === "none";
    };
    function adjustCSS(elem, prop, valueParts, tween) {
        var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {
            return tween.cur();
        } : function() {
            return jQuery.css(elem, prop, "");
        }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"), // Starting value computation is required for potential unit mismatches
        initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));
        if (initialInUnit && initialInUnit[3] !== unit) {
            // Support: Firefox <=54
            // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
            initial = initial / 2;
            // Trust units reported by jQuery.css
            unit = unit || initialInUnit[3];
            // Iteratively approximate from a nonzero starting point
            initialInUnit = +initial || 1;
            while(maxIterations--){
                // Evaluate and update our best guess (doubling guesses that zero out).
                // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
                jQuery.style(elem, prop, initialInUnit + unit);
                if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) maxIterations = 0;
                initialInUnit = initialInUnit / scale;
            }
            initialInUnit = initialInUnit * 2;
            jQuery.style(elem, prop, initialInUnit + unit);
            // Make sure we update the tween properties later on
            valueParts = valueParts || [];
        }
        if (valueParts) {
            initialInUnit = +initialInUnit || +initial || 0;
            // Apply relative offset (+=/-=) if specified
            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
            if (tween) {
                tween.unit = unit;
                tween.start = initialInUnit;
                tween.end = adjusted;
            }
        }
        return adjusted;
    }
    var defaultDisplayMap = {
    };
    function getDefaultDisplay(elem) {
        var temp, doc = elem.ownerDocument, nodeName1 = elem.nodeName, display = defaultDisplayMap[nodeName1];
        if (display) return display;
        temp = doc.body.appendChild(doc.createElement(nodeName1));
        display = jQuery.css(temp, "display");
        temp.parentNode.removeChild(temp);
        if (display === "none") display = "block";
        defaultDisplayMap[nodeName1] = display;
        return display;
    }
    function showHide(elements, show) {
        var display, elem, values = [], index = 0, length = elements.length;
        // Determine new display value for elements that need to change
        for(; index < length; index++){
            elem = elements[index];
            if (!elem.style) continue;
            display = elem.style.display;
            if (show) {
                // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
                // check is required in this first loop unless we have a nonempty display value (either
                // inline or about-to-be-restored)
                if (display === "none") {
                    values[index] = dataPriv.get(elem, "display") || null;
                    if (!values[index]) elem.style.display = "";
                }
                if (elem.style.display === "" && isHiddenWithinTree(elem)) values[index] = getDefaultDisplay(elem);
            } else if (display !== "none") {
                values[index] = "none";
                // Remember what we're overwriting
                dataPriv.set(elem, "display", display);
            }
        }
        // Set the display of the elements in a second loop to avoid constant reflow
        for(index = 0; index < length; index++)if (values[index] != null) elements[index].style.display = values[index];
        return elements;
    }
    jQuery.fn.extend({
        show: function() {
            return showHide(this, true);
        },
        hide: function() {
            return showHide(this);
        },
        toggle: function(state) {
            if (typeof state === "boolean") return state ? this.show() : this.hide();
            return this.each(function() {
                if (isHiddenWithinTree(this)) jQuery(this).show();
                else jQuery(this).hide();
            });
        }
    });
    var rcheckableType = /^(?:checkbox|radio)$/i;
    var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
    var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;
    (function() {
        var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement("div")), input = document.createElement("input");
        // Support: Android 4.0 - 4.3 only
        // Check state lost if the name is set (#11217)
        // Support: Windows Web Apps (WWA)
        // `name` and `type` must use .setAttribute for WWA (#14901)
        input.setAttribute("type", "radio");
        input.setAttribute("checked", "checked");
        input.setAttribute("name", "t");
        div.appendChild(input);
        // Support: Android <=4.1 only
        // Older WebKit doesn't clone checked state correctly in fragments
        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
        // Support: IE <=11 only
        // Make sure textarea (and checkbox) defaultValue is properly cloned
        div.innerHTML = "<textarea>x</textarea>";
        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
        // Support: IE <=9 only
        // IE <=9 replaces <option> tags with their contents when inserted outside of
        // the select element.
        div.innerHTML = "<option></option>";
        support.option = !!div.lastChild;
    })();
    // We have to close these tags to support XHTML (#13200)
    var wrapMap = {
        // XHTML parsers do not magically insert elements in the
        // same way that tag soup parsers do. So we cannot shorten
        // this by omitting <tbody> or other required elements.
        thead: [
            1,
            "<table>",
            "</table>"
        ],
        col: [
            2,
            "<table><colgroup>",
            "</colgroup></table>"
        ],
        tr: [
            2,
            "<table><tbody>",
            "</tbody></table>"
        ],
        td: [
            3,
            "<table><tbody><tr>",
            "</tr></tbody></table>"
        ],
        _default: [
            0,
            "",
            ""
        ]
    };
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    // Support: IE <=9 only
    if (!support.option) wrapMap.optgroup = wrapMap.option = [
        1,
        "<select multiple='multiple'>",
        "</select>"
    ];
    function getAll(context, tag) {
        // Support: IE <=9 - 11 only
        // Use typeof to avoid zero-argument method invocation on host objects (#15151)
        var ret;
        if (typeof context.getElementsByTagName !== "undefined") ret = context.getElementsByTagName(tag || "*");
        else if (typeof context.querySelectorAll !== "undefined") ret = context.querySelectorAll(tag || "*");
        else ret = [];
        if (tag === undefined || tag && nodeName(context, tag)) return jQuery.merge([
            context
        ], ret);
        return ret;
    }
    // Mark scripts as having already been evaluated
    function setGlobalEval(elems, refElements) {
        var i2 = 0, l = elems.length;
        for(; i2 < l; i2++)dataPriv.set(elems[i2], "globalEval", !refElements || dataPriv.get(refElements[i2], "globalEval"));
    }
    var rhtml = /<|&#?\w+;/;
    function buildFragment(elems, context, scripts, selection, ignored) {
        var elem, tmp, tag, wrap, attached, j, fragment = context.createDocumentFragment(), nodes = [], i2 = 0, l = elems.length;
        for(; i2 < l; i2++){
            elem = elems[i2];
            if (elem || elem === 0) {
                // Add nodes directly
                if (toType(elem) === "object") // Support: Android <=4.0 only, PhantomJS 1 only
                // push.apply(_, arraylike) throws on ancient WebKit
                jQuery.merge(nodes, elem.nodeType ? [
                    elem
                ] : elem);
                else if (!rhtml.test(elem)) nodes.push(context.createTextNode(elem));
                else {
                    tmp = tmp || fragment.appendChild(context.createElement("div"));
                    // Deserialize a standard representation
                    tag = (rtagName.exec(elem) || [
                        "",
                        ""
                    ])[1].toLowerCase();
                    wrap = wrapMap[tag] || wrapMap._default;
                    tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
                    // Descend through wrappers to the right content
                    j = wrap[0];
                    while(j--)tmp = tmp.lastChild;
                    // Support: Android <=4.0 only, PhantomJS 1 only
                    // push.apply(_, arraylike) throws on ancient WebKit
                    jQuery.merge(nodes, tmp.childNodes);
                    // Remember the top-level container
                    tmp = fragment.firstChild;
                    // Ensure the created nodes are orphaned (#12392)
                    tmp.textContent = "";
                }
            }
        }
        // Remove wrapper from fragment
        fragment.textContent = "";
        i2 = 0;
        while(elem = nodes[i2++]){
            // Skip elements already in the context collection (trac-4087)
            if (selection && jQuery.inArray(elem, selection) > -1) {
                if (ignored) ignored.push(elem);
                continue;
            }
            attached = isAttached(elem);
            // Append to fragment
            tmp = getAll(fragment.appendChild(elem), "script");
            // Preserve script evaluation history
            if (attached) setGlobalEval(tmp);
            // Capture executables
            if (scripts) {
                j = 0;
                while(elem = tmp[j++])if (rscriptType.test(elem.type || "")) scripts.push(elem);
            }
        }
        return fragment;
    }
    var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
    function returnTrue() {
        return true;
    }
    function returnFalse() {
        return false;
    }
    // Support: IE <=9 - 11+
    // focus() and blur() are asynchronous, except when they are no-op.
    // So expect focus to be synchronous when the element is already active,
    // and blur to be synchronous when the element is not already active.
    // (focus and blur are always synchronous in other supported browsers,
    // this just defines when we can count on it).
    function expectSync(elem, type) {
        return elem === safeActiveElement() === (type === "focus");
    }
    // Support: IE <=9 only
    // Accessing document.activeElement can throw unexpectedly
    // https://bugs.jquery.com/ticket/13393
    function safeActiveElement() {
        try {
            return document.activeElement;
        } catch (err) {
        }
    }
    function on(elem, types, selector, data, fn, one) {
        var origFn, type;
        // Types can be a map of types/handlers
        if (typeof types === "object") {
            // ( types-Object, selector, data )
            if (typeof selector !== "string") {
                // ( types-Object, data )
                data = data || selector;
                selector = undefined;
            }
            for(type in types)on(elem, type, selector, data, types[type], one);
            return elem;
        }
        if (data == null && fn == null) {
            // ( types, fn )
            fn = selector;
            data = selector = undefined;
        } else if (fn == null) {
            if (typeof selector === "string") {
                // ( types, selector, fn )
                fn = data;
                data = undefined;
            } else {
                // ( types, data, fn )
                fn = data;
                data = selector;
                selector = undefined;
            }
        }
        if (fn === false) fn = returnFalse;
        else if (!fn) return elem;
        if (one === 1) {
            origFn = fn;
            fn = function(event) {
                // Can use an empty set, since event contains the info
                jQuery().off(event);
                return origFn.apply(this, arguments);
            };
            // Use same guid so caller can remove using origFn
            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
        }
        return elem.each(function() {
            jQuery.event.add(this, types, fn, data, selector);
        });
    }
    /*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */ jQuery.event = {
        global: {
        },
        add: function(elem, types, handler, data, selector) {
            var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
            // Only attach events to objects that accept data
            if (!acceptData(elem)) return;
            // Caller can pass in an object of custom data in lieu of the handler
            if (handler.handler) {
                handleObjIn = handler;
                handler = handleObjIn.handler;
                selector = handleObjIn.selector;
            }
            // Ensure that invalid selectors throw exceptions at attach time
            // Evaluate against documentElement in case elem is a non-element node (e.g., document)
            if (selector) jQuery.find.matchesSelector(documentElement, selector);
            // Make sure that the handler has a unique ID, used to find/remove it later
            if (!handler.guid) handler.guid = jQuery.guid++;
            // Init the element's event structure and main handler, if this is the first
            if (!(events = elemData.events)) events = elemData.events = Object.create(null);
            if (!(eventHandle = elemData.handle)) eventHandle = elemData.handle = function(e) {
                // Discard the second event of a jQuery.event.trigger() and
                // when an event is called after a page has unloaded
                return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
            };
            // Handle multiple events separated by a space
            types = (types || "").match(rnothtmlwhite) || [
                ""
            ];
            t = types.length;
            while(t--){
                tmp = rtypenamespace.exec(types[t]) || [];
                type = origType = tmp[1];
                namespaces = (tmp[2] || "").split(".").sort();
                // There *must* be a type, no attaching namespace-only handlers
                if (!type) continue;
                // If event changes its type, use the special event handlers for the changed type
                special = jQuery.event.special[type] || {
                };
                // If selector defined, determine special event api type, otherwise given type
                type = (selector ? special.delegateType : special.bindType) || type;
                // Update special based on newly reset type
                special = jQuery.event.special[type] || {
                };
                // handleObj is passed to all event handlers
                handleObj = jQuery.extend({
                    type: type,
                    origType: origType,
                    data: data,
                    handler: handler,
                    guid: handler.guid,
                    selector: selector,
                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                    namespace: namespaces.join(".")
                }, handleObjIn);
                // Init the event handler queue if we're the first
                if (!(handlers = events[type])) {
                    handlers = events[type] = [];
                    handlers.delegateCount = 0;
                    // Only use addEventListener if the special events handler returns false
                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                        if (elem.addEventListener) elem.addEventListener(type, eventHandle);
                    }
                }
                if (special.add) {
                    special.add.call(elem, handleObj);
                    if (!handleObj.handler.guid) handleObj.handler.guid = handler.guid;
                }
                // Add to the element's handler list, delegates in front
                if (selector) handlers.splice(handlers.delegateCount++, 0, handleObj);
                else handlers.push(handleObj);
                // Keep track of which events have ever been used, for event optimization
                jQuery.event.global[type] = true;
            }
        },
        // Detach an event or set of events from an element
        remove: function(elem, types, handler, selector, mappedTypes) {
            var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
            if (!elemData || !(events = elemData.events)) return;
            // Once for each type.namespace in types; type may be omitted
            types = (types || "").match(rnothtmlwhite) || [
                ""
            ];
            t = types.length;
            while(t--){
                tmp = rtypenamespace.exec(types[t]) || [];
                type = origType = tmp[1];
                namespaces = (tmp[2] || "").split(".").sort();
                // Unbind all events (on this namespace, if provided) for the element
                if (!type) {
                    for(type in events)jQuery.event.remove(elem, type + types[t], handler, selector, true);
                    continue;
                }
                special = jQuery.event.special[type] || {
                };
                type = (selector ? special.delegateType : special.bindType) || type;
                handlers = events[type] || [];
                tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
                // Remove matching events
                origCount = j = handlers.length;
                while(j--){
                    handleObj = handlers[j];
                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
                        handlers.splice(j, 1);
                        if (handleObj.selector) handlers.delegateCount--;
                        if (special.remove) special.remove.call(elem, handleObj);
                    }
                }
                // Remove generic event handler if we removed something and no more handlers exist
                // (avoids potential for endless recursion during removal of special event handlers)
                if (origCount && !handlers.length) {
                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) jQuery.removeEvent(elem, type, elemData.handle);
                    delete events[type];
                }
            }
            // Remove data and the expando if it's no longer used
            if (jQuery.isEmptyObject(events)) dataPriv.remove(elem, "handle events");
        },
        dispatch: function(nativeEvent) {
            var i2, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), // Make a writable jQuery.Event from the native event object
            event = jQuery.event.fix(nativeEvent), handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [], special = jQuery.event.special[event.type] || {
            };
            // Use the fix-ed jQuery.Event rather than the (read-only) native event
            args[0] = event;
            for(i2 = 1; i2 < arguments.length; i2++)args[i2] = arguments[i2];
            event.delegateTarget = this;
            // Call the preDispatch hook for the mapped type, and let it bail if desired
            if (special.preDispatch && special.preDispatch.call(this, event) === false) return;
            // Determine handlers
            handlerQueue = jQuery.event.handlers.call(this, event, handlers);
            // Run delegates first; they may want to stop propagation beneath us
            i2 = 0;
            while((matched = handlerQueue[i2++]) && !event.isPropagationStopped()){
                event.currentTarget = matched.elem;
                j = 0;
                while((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped())// If the event is namespaced, then each handler is only invoked if it is
                // specially universal or its namespaces are a superset of the event's.
                if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {
                    event.handleObj = handleObj;
                    event.data = handleObj.data;
                    ret = ((jQuery.event.special[handleObj.origType] || {
                    }).handle || handleObj.handler).apply(matched.elem, args);
                    if (ret !== undefined) {
                        if ((event.result = ret) === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                    }
                }
            }
            // Call the postDispatch hook for the mapped type
            if (special.postDispatch) special.postDispatch.call(this, event);
            return event.result;
        },
        handlers: function(event, handlers) {
            var i2, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
            // Find delegate handlers
            if (delegateCount && // Support: IE <=9
            // Black-hole SVG <use> instance trees (trac-13180)
            cur.nodeType && // Support: Firefox <=42
            // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
            // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
            // Support: IE 11 only
            // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
            !(event.type === "click" && event.button >= 1)) {
                for(; cur !== this; cur = cur.parentNode || this)// Don't check non-elements (#13208)
                // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
                if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
                    matchedHandlers = [];
                    matchedSelectors = {
                    };
                    for(i2 = 0; i2 < delegateCount; i2++){
                        handleObj = handlers[i2];
                        // Don't conflict with Object.prototype properties (#13203)
                        sel = handleObj.selector + " ";
                        if (matchedSelectors[sel] === undefined) matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [
                            cur
                        ]).length;
                        if (matchedSelectors[sel]) matchedHandlers.push(handleObj);
                    }
                    if (matchedHandlers.length) handlerQueue.push({
                        elem: cur,
                        handlers: matchedHandlers
                    });
                }
            }
            // Add the remaining (directly-bound) handlers
            cur = this;
            if (delegateCount < handlers.length) handlerQueue.push({
                elem: cur,
                handlers: handlers.slice(delegateCount)
            });
            return handlerQueue;
        },
        addProp: function(name, hook) {
            Object.defineProperty(jQuery.Event.prototype, name, {
                enumerable: true,
                configurable: true,
                get: isFunction(hook) ? function() {
                    if (this.originalEvent) return hook(this.originalEvent);
                } : function() {
                    if (this.originalEvent) return this.originalEvent[name];
                },
                set: function(value) {
                    Object.defineProperty(this, name, {
                        enumerable: true,
                        configurable: true,
                        writable: true,
                        value: value
                    });
                }
            });
        },
        fix: function(originalEvent) {
            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
        },
        special: {
            load: {
                // Prevent triggered image.load events from bubbling to window.load
                noBubble: true
            },
            click: {
                // Utilize native event to ensure correct state for checkable inputs
                setup: function(data) {
                    // For mutual compressibility with _default, replace `this` access with a local var.
                    // `|| data` is dead code meant only to preserve the variable through minification.
                    var el = this || data;
                    // Claim the first handler
                    if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) // dataPriv.set( el, "click", ... )
                    leverageNative(el, "click", returnTrue);
                    // Return false to allow normal processing in the caller
                    return false;
                },
                trigger: function(data) {
                    // For mutual compressibility with _default, replace `this` access with a local var.
                    // `|| data` is dead code meant only to preserve the variable through minification.
                    var el = this || data;
                    // Force setup before triggering a click
                    if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) leverageNative(el, "click");
                    // Return non-false to allow normal event-path propagation
                    return true;
                },
                // For cross-browser consistency, suppress native .click() on links
                // Also prevent it if we're currently inside a leveraged native-event stack
                _default: function(event) {
                    var target = event.target;
                    return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
                }
            },
            beforeunload: {
                postDispatch: function(event) {
                    // Support: Firefox 20+
                    // Firefox doesn't alert if the returnValue field is not set.
                    if (event.result !== undefined && event.originalEvent) event.originalEvent.returnValue = event.result;
                }
            }
        }
    };
    // Ensure the presence of an event listener that handles manually-triggered
    // synthetic events by interrupting progress until reinvoked in response to
    // *native* events that it fires directly, ensuring that state changes have
    // already occurred before other listeners are invoked.
    function leverageNative(el, type, expectSync1) {
        // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
        if (!expectSync1) {
            if (dataPriv.get(el, type) === undefined) jQuery.event.add(el, type, returnTrue);
            return;
        }
        // Register the controller as a special universal handler for all event namespaces
        dataPriv.set(el, type, false);
        jQuery.event.add(el, type, {
            namespace: false,
            handler: function(event) {
                var notAsync, result, saved = dataPriv.get(this, type);
                if (event.isTrigger & 1 && this[type]) {
                    // Interrupt processing of the outer synthetic .trigger()ed event
                    // Saved data should be false in such cases, but might be a leftover capture object
                    // from an async native handler (gh-4350)
                    if (!saved.length) {
                        // Store arguments for use when handling the inner native event
                        // There will always be at least one argument (an event object), so this array
                        // will not be confused with a leftover capture object.
                        saved = slice.call(arguments);
                        dataPriv.set(this, type, saved);
                        // Trigger the native event and capture its result
                        // Support: IE <=9 - 11+
                        // focus() and blur() are asynchronous
                        notAsync = expectSync1(this, type);
                        this[type]();
                        result = dataPriv.get(this, type);
                        if (saved !== result || notAsync) dataPriv.set(this, type, false);
                        else result = {
                        };
                        if (saved !== result) {
                            // Cancel the outer synthetic event
                            event.stopImmediatePropagation();
                            event.preventDefault();
                            // Support: Chrome 86+
                            // In Chrome, if an element having a focusout handler is blurred by
                            // clicking outside of it, it invokes the handler synchronously. If
                            // that handler calls `.remove()` on the element, the data is cleared,
                            // leaving `result` undefined. We need to guard against this.
                            return result && result.value;
                        }
                    // If this is an inner synthetic event for an event with a bubbling surrogate
                    // (focus or blur), assume that the surrogate already propagated from triggering the
                    // native event and prevent that from happening again here.
                    // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
                    // bubbling surrogate propagates *after* the non-bubbling base), but that seems
                    // less bad than duplication.
                    } else if ((jQuery.event.special[type] || {
                    }).delegateType) event.stopPropagation();
                // If this is a native event triggered above, everything is now in order
                // Fire an inner synthetic event with the original arguments
                } else if (saved.length) {
                    // ...and capture the result
                    dataPriv.set(this, type, {
                        value: jQuery.event.trigger(// Support: IE <=9 - 11+
                        // Extend with the prototype to reset the above stopImmediatePropagation()
                        jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)
                    });
                    // Abort handling of the native event
                    event.stopImmediatePropagation();
                }
            }
        });
    }
    jQuery.removeEvent = function(elem, type, handle) {
        // This "if" is needed for plain objects
        if (elem.removeEventListener) elem.removeEventListener(type, handle);
    };
    jQuery.Event = function(src, props) {
        // Allow instantiation without the 'new' keyword
        if (!(this instanceof jQuery.Event)) return new jQuery.Event(src, props);
        // Event object
        if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            // Events bubbling up the document may have been marked as prevented
            // by a handler lower down the tree; reflect the correct value.
            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only
            src.returnValue === false ? returnTrue : returnFalse;
            // Create target properties
            // Support: Safari <=6 - 7 only
            // Target should not be a text node (#504, #13143)
            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
            this.currentTarget = src.currentTarget;
            this.relatedTarget = src.relatedTarget;
        // Event type
        } else this.type = src;
        // Put explicitly provided properties onto the event object
        if (props) jQuery.extend(this, props);
        // Create a timestamp if incoming event doesn't have one
        this.timeStamp = src && src.timeStamp || Date.now();
        // Mark it as fixed
        this[jQuery.expando] = true;
    };
    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
    // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
    jQuery.Event.prototype = {
        constructor: jQuery.Event,
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse,
        isSimulated: false,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = returnTrue;
            if (e && !this.isSimulated) e.preventDefault();
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = returnTrue;
            if (e && !this.isSimulated) e.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = returnTrue;
            if (e && !this.isSimulated) e.stopImmediatePropagation();
            this.stopPropagation();
        }
    };
    // Includes all common event props including KeyEvent and MouseEvent specific props
    jQuery.each({
        altKey: true,
        bubbles: true,
        cancelable: true,
        changedTouches: true,
        ctrlKey: true,
        detail: true,
        eventPhase: true,
        metaKey: true,
        pageX: true,
        pageY: true,
        shiftKey: true,
        view: true,
        "char": true,
        code: true,
        charCode: true,
        key: true,
        keyCode: true,
        button: true,
        buttons: true,
        clientX: true,
        clientY: true,
        offsetX: true,
        offsetY: true,
        pointerId: true,
        pointerType: true,
        screenX: true,
        screenY: true,
        targetTouches: true,
        toElement: true,
        touches: true,
        which: true
    }, jQuery.event.addProp);
    jQuery.each({
        focus: "focusin",
        blur: "focusout"
    }, function(type, delegateType) {
        jQuery.event.special[type] = {
            // Utilize native event if possible so blur/focus sequence is correct
            setup: function() {
                // Claim the first handler
                // dataPriv.set( this, "focus", ... )
                // dataPriv.set( this, "blur", ... )
                leverageNative(this, type, expectSync);
                // Return false to allow normal processing in the caller
                return false;
            },
            trigger: function() {
                // Force setup before trigger
                leverageNative(this, type);
                // Return non-false to allow normal event-path propagation
                return true;
            },
            // Suppress native focus or blur as it's already being fired
            // in leverageNative.
            _default: function() {
                return true;
            },
            delegateType: delegateType
        };
    });
    // Create mouseenter/leave events using mouseover/out and event-time checks
    // so that event delegation works in jQuery.
    // Do the same for pointerenter/pointerleave and pointerover/pointerout
    //
    // Support: Safari 7 only
    // Safari sends mouseenter too often; see:
    // https://bugs.chromium.org/p/chromium/issues/detail?id=470258
    // for the description of the bug (it existed in older Chrome versions as well).
    jQuery.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(orig, fix) {
        jQuery.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event) {
                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
                // For mouseenter/leave call the handler if related is outside the target.
                // NB: No relatedTarget if the mouse left/entered the browser window
                if (!related || related !== target && !jQuery.contains(target, related)) {
                    event.type = handleObj.origType;
                    ret = handleObj.handler.apply(this, arguments);
                    event.type = fix;
                }
                return ret;
            }
        };
    });
    jQuery.fn.extend({
        on: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn);
        },
        one: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn, 1);
        },
        off: function(types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) {
                // ( event )  dispatched jQuery.Event
                handleObj = types.handleObj;
                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
                return this;
            }
            if (typeof types === "object") {
                // ( types-object [, selector] )
                for(type in types)this.off(type, selector, types[type]);
                return this;
            }
            if (selector === false || typeof selector === "function") {
                // ( types [, fn] )
                fn = selector;
                selector = undefined;
            }
            if (fn === false) fn = returnFalse;
            return this.each(function() {
                jQuery.event.remove(this, types, fn, selector);
            });
        }
    });
    var // Support: IE <=10 - 11, Edge 12 - 13 only
    // In IE/Edge using regex groups here causes severe slowdowns.
    // See https://connect.microsoft.com/IE/feedback/details/1736512/
    rnoInnerhtml = /<script|<style|<link/i, // checked="checked" or checked
    rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    // Prefer a tbody over its parent table for containing new rows
    function manipulationTarget(elem, content) {
        if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) return jQuery(elem).children("tbody")[0] || elem;
        return elem;
    }
    // Replace/restore the type attribute of script elements for safe DOM manipulation
    function disableScript(elem) {
        elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
        return elem;
    }
    function restoreScript(elem) {
        if ((elem.type || "").slice(0, 5) === "true/") elem.type = elem.type.slice(5);
        else elem.removeAttribute("type");
        return elem;
    }
    function cloneCopyEvent(src, dest) {
        var i2, l, type, pdataOld, udataOld, udataCur, events;
        if (dest.nodeType !== 1) return;
        // 1. Copy private data: events, handlers, etc.
        if (dataPriv.hasData(src)) {
            pdataOld = dataPriv.get(src);
            events = pdataOld.events;
            if (events) {
                dataPriv.remove(dest, "handle events");
                for(type in events)for(i2 = 0, l = events[type].length; i2 < l; i2++)jQuery.event.add(dest, type, events[type][i2]);
            }
        }
        // 2. Copy user data
        if (dataUser.hasData(src)) {
            udataOld = dataUser.access(src);
            udataCur = jQuery.extend({
            }, udataOld);
            dataUser.set(dest, udataCur);
        }
    }
    // Fix IE bugs, see support tests
    function fixInput(src, dest) {
        var nodeName1 = dest.nodeName.toLowerCase();
        // Fails to persist the checked state of a cloned checkbox or radio button.
        if (nodeName1 === "input" && rcheckableType.test(src.type)) dest.checked = src.checked;
        else if (nodeName1 === "input" || nodeName1 === "textarea") dest.defaultValue = src.defaultValue;
    }
    function domManip(collection, args, callback, ignored) {
        // Flatten any nested arrays
        args = flat(args);
        var fragment, first, scripts, hasScripts, node2, doc, i2 = 0, l = collection.length, iNoClone = l - 1, value = args[0], valueIsFunction = isFunction(value);
        // We can't cloneNode fragments that contain checked, in WebKit
        if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) return collection.each(function(index) {
            var self = collection.eq(index);
            if (valueIsFunction) args[0] = value.call(this, index, self.html());
            domManip(self, args, callback, ignored);
        });
        if (l) {
            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
            first = fragment.firstChild;
            if (fragment.childNodes.length === 1) fragment = first;
            // Require either new content or an interest in ignored elements to invoke the callback
            if (first || ignored) {
                scripts = jQuery.map(getAll(fragment, "script"), disableScript);
                hasScripts = scripts.length;
                // Use the original fragment for the last item
                // instead of the first because it can end up
                // being emptied incorrectly in certain situations (#8070).
                for(; i2 < l; i2++){
                    node2 = fragment;
                    if (i2 !== iNoClone) {
                        node2 = jQuery.clone(node2, true, true);
                        // Keep references to cloned scripts for later restoration
                        if (hasScripts) // Support: Android <=4.0 only, PhantomJS 1 only
                        // push.apply(_, arraylike) throws on ancient WebKit
                        jQuery.merge(scripts, getAll(node2, "script"));
                    }
                    callback.call(collection[i2], node2, i2);
                }
                if (hasScripts) {
                    doc = scripts[scripts.length - 1].ownerDocument;
                    // Reenable scripts
                    jQuery.map(scripts, restoreScript);
                    // Evaluate executable scripts on first document insertion
                    for(i2 = 0; i2 < hasScripts; i2++){
                        node2 = scripts[i2];
                        if (rscriptType.test(node2.type || "") && !dataPriv.access(node2, "globalEval") && jQuery.contains(doc, node2)) {
                            if (node2.src && (node2.type || "").toLowerCase() !== "module") // Optional AJAX dependency, but won't run scripts if not present
                            {
                                if (jQuery._evalUrl && !node2.noModule) jQuery._evalUrl(node2.src, {
                                    nonce: node2.nonce || node2.getAttribute("nonce")
                                }, doc);
                            } else DOMEval(node2.textContent.replace(rcleanScript, ""), node2, doc);
                        }
                    }
                }
            }
        }
        return collection;
    }
    function remove(elem, selector, keepData) {
        var node2, nodes = selector ? jQuery.filter(selector, elem) : elem, i2 = 0;
        for(; (node2 = nodes[i2]) != null; i2++){
            if (!keepData && node2.nodeType === 1) jQuery.cleanData(getAll(node2));
            if (node2.parentNode) {
                if (keepData && isAttached(node2)) setGlobalEval(getAll(node2, "script"));
                node2.parentNode.removeChild(node2);
            }
        }
        return elem;
    }
    jQuery.extend({
        htmlPrefilter: function(html) {
            return html;
        },
        clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var i2, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = isAttached(elem);
            // Fix IE cloning issues
            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
                // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
                destElements = getAll(clone);
                srcElements = getAll(elem);
                for(i2 = 0, l = srcElements.length; i2 < l; i2++)fixInput(srcElements[i2], destElements[i2]);
            }
            // Copy the events from the original to the clone
            if (dataAndEvents) {
                if (deepDataAndEvents) {
                    srcElements = srcElements || getAll(elem);
                    destElements = destElements || getAll(clone);
                    for(i2 = 0, l = srcElements.length; i2 < l; i2++)cloneCopyEvent(srcElements[i2], destElements[i2]);
                } else cloneCopyEvent(elem, clone);
            }
            // Preserve script evaluation history
            destElements = getAll(clone, "script");
            if (destElements.length > 0) setGlobalEval(destElements, !inPage && getAll(elem, "script"));
            // Return the cloned set
            return clone;
        },
        cleanData: function(elems) {
            var data, elem, type, special = jQuery.event.special, i2 = 0;
            for(; (elem = elems[i2]) !== undefined; i2++)if (acceptData(elem)) {
                if (data = elem[dataPriv.expando]) {
                    if (data.events) {
                        for(type in data.events)if (special[type]) jQuery.event.remove(elem, type);
                        else jQuery.removeEvent(elem, type, data.handle);
                    }
                    // Support: Chrome <=35 - 45+
                    // Assign undefined instead of using delete, see Data#remove
                    elem[dataPriv.expando] = undefined;
                }
                if (elem[dataUser.expando]) // Support: Chrome <=35 - 45+
                // Assign undefined instead of using delete, see Data#remove
                elem[dataUser.expando] = undefined;
            }
        }
    });
    jQuery.fn.extend({
        detach: function(selector) {
            return remove(this, selector, true);
        },
        remove: function(selector) {
            return remove(this, selector);
        },
        text: function(value) {
            return access(this, function(value1) {
                return value1 === undefined ? jQuery.text(this) : this.empty().each(function() {
                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) this.textContent = value1;
                });
            }, null, value, arguments.length);
        },
        append: function() {
            return domManip(this, arguments, function(elem) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var target = manipulationTarget(this, elem);
                    target.appendChild(elem);
                }
            });
        },
        prepend: function() {
            return domManip(this, arguments, function(elem) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var target = manipulationTarget(this, elem);
                    target.insertBefore(elem, target.firstChild);
                }
            });
        },
        before: function() {
            return domManip(this, arguments, function(elem) {
                if (this.parentNode) this.parentNode.insertBefore(elem, this);
            });
        },
        after: function() {
            return domManip(this, arguments, function(elem) {
                if (this.parentNode) this.parentNode.insertBefore(elem, this.nextSibling);
            });
        },
        empty: function() {
            var elem, i2 = 0;
            for(; (elem = this[i2]) != null; i2++)if (elem.nodeType === 1) {
                // Prevent memory leaks
                jQuery.cleanData(getAll(elem, false));
                // Remove any remaining nodes
                elem.textContent = "";
            }
            return this;
        },
        clone: function(dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function() {
                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
            });
        },
        html: function(value) {
            return access(this, function(value1) {
                var elem = this[0] || {
                }, i2 = 0, l = this.length;
                if (value1 === undefined && elem.nodeType === 1) return elem.innerHTML;
                // See if we can take a shortcut and just use innerHTML
                if (typeof value1 === "string" && !rnoInnerhtml.test(value1) && !wrapMap[(rtagName.exec(value1) || [
                    "",
                    ""
                ])[1].toLowerCase()]) {
                    value1 = jQuery.htmlPrefilter(value1);
                    try {
                        for(; i2 < l; i2++){
                            elem = this[i2] || {
                            };
                            // Remove element nodes and prevent memory leaks
                            if (elem.nodeType === 1) {
                                jQuery.cleanData(getAll(elem, false));
                                elem.innerHTML = value1;
                            }
                        }
                        elem = 0;
                    // If using innerHTML throws an exception, use the fallback method
                    } catch (e) {
                    }
                }
                if (elem) this.empty().append(value1);
            }, null, value, arguments.length);
        },
        replaceWith: function() {
            var ignored = [];
            // Make the changes, replacing each non-ignored context element with the new content
            return domManip(this, arguments, function(elem) {
                var parent = this.parentNode;
                if (jQuery.inArray(this, ignored) < 0) {
                    jQuery.cleanData(getAll(this));
                    if (parent) parent.replaceChild(elem, this);
                }
            // Force callback invocation
            }, ignored);
        }
    });
    jQuery.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(name, original) {
        jQuery.fn[name] = function(selector) {
            var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i2 = 0;
            for(; i2 <= last; i2++){
                elems = i2 === last ? this : this.clone(true);
                jQuery(insert[i2])[original](elems);
                // Support: Android <=4.0 only, PhantomJS 1 only
                // .get() because push.apply(_, arraylike) throws on ancient WebKit
                push.apply(ret, elems.get());
            }
            return this.pushStack(ret);
        };
    });
    var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
    var getStyles = function(elem) {
        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
        // IE throws on elements created in popups
        // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
        var view = elem.ownerDocument.defaultView;
        if (!view || !view.opener) view = window;
        return view.getComputedStyle(elem);
    };
    var swap = function(elem, options, callback) {
        var ret, name, old = {
        };
        // Remember the old values, and insert the new ones
        for(name in options){
            old[name] = elem.style[name];
            elem.style[name] = options[name];
        }
        ret = callback.call(elem);
        // Revert the old values
        for(name in options)elem.style[name] = old[name];
        return ret;
    };
    var rboxStyle = new RegExp(cssExpand.join("|"), "i");
    (function() {
        // Executing both pixelPosition & boxSizingReliable tests require only one layout
        // so they're executed at the same time to save the second computation.
        function computeStyleTests() {
            // This is a singleton, we need to execute it only once
            if (!div) return;
            container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
            div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
            documentElement.appendChild(container).appendChild(div);
            var divStyle = window.getComputedStyle(div);
            pixelPositionVal = divStyle.top !== "1%";
            // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
            reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;
            // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
            // Some styles come back with percentage values, even though they shouldn't
            div.style.right = "60%";
            pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;
            // Support: IE 9 - 11 only
            // Detect misreporting of content dimensions for box-sizing:border-box elements
            boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;
            // Support: IE 9 only
            // Detect overflow:scroll screwiness (gh-3699)
            // Support: Chrome <=64
            // Don't get tricked when zoom affects offsetWidth (gh-4029)
            div.style.position = "absolute";
            scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
            documentElement.removeChild(container);
            // Nullify the div so it wouldn't be stored in the memory and
            // it will also be a sign that checks already performed
            div = null;
        }
        function roundPixelMeasures(measure) {
            return Math.round(parseFloat(measure));
        }
        var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document.createElement("div"), div = document.createElement("div");
        // Finish early in limited (non-browser) environments
        if (!div.style) return;
        // Support: IE <=9 - 11 only
        // Style of cloned element affects source element cloned (#8908)
        div.style.backgroundClip = "content-box";
        div.cloneNode(true).style.backgroundClip = "";
        support.clearCloneStyle = div.style.backgroundClip === "content-box";
        jQuery.extend(support, {
            boxSizingReliable: function() {
                computeStyleTests();
                return boxSizingReliableVal;
            },
            pixelBoxStyles: function() {
                computeStyleTests();
                return pixelBoxStylesVal;
            },
            pixelPosition: function() {
                computeStyleTests();
                return pixelPositionVal;
            },
            reliableMarginLeft: function() {
                computeStyleTests();
                return reliableMarginLeftVal;
            },
            scrollboxSize: function() {
                computeStyleTests();
                return scrollboxSizeVal;
            },
            // Support: IE 9 - 11+, Edge 15 - 18+
            // IE/Edge misreport `getComputedStyle` of table rows with width/height
            // set in CSS while `offset*` properties report correct values.
            // Behavior in IE 9 is more subtle than in newer versions & it passes
            // some versions of this test; make sure not to make it pass there!
            //
            // Support: Firefox 70+
            // Only Firefox includes border widths
            // in computed dimensions. (gh-4529)
            reliableTrDimensions: function() {
                var table, tr, trChild, trStyle;
                if (reliableTrDimensionsVal == null) {
                    table = document.createElement("table");
                    tr = document.createElement("tr");
                    trChild = document.createElement("div");
                    table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
                    tr.style.cssText = "border:1px solid";
                    // Support: Chrome 86+
                    // Height set through cssText does not get applied.
                    // Computed height then comes back as 0.
                    tr.style.height = "1px";
                    trChild.style.height = "9px";
                    // Support: Android 8 Chrome 86+
                    // In our bodyBackground.html iframe,
                    // display for all div elements is set to "inline",
                    // which causes a problem only in Android 8 Chrome 86.
                    // Ensuring the div is display: block
                    // gets around this issue.
                    trChild.style.display = "block";
                    documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
                    trStyle = window.getComputedStyle(tr);
                    reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;
                    documentElement.removeChild(table);
                }
                return reliableTrDimensionsVal;
            }
        });
    })();
    function curCSS(elem, name, computed) {
        var width, minWidth, maxWidth, ret, // Support: Firefox 51+
        // Retrieving style before computed somehow
        // fixes an issue with getting wrong values
        // on detached elements
        style = elem.style;
        computed = computed || getStyles(elem);
        // getPropertyValue is needed for:
        //   .css('filter') (IE 9 only, #12537)
        //   .css('--customProperty) (#3144)
        if (computed) {
            ret = computed.getPropertyValue(name) || computed[name];
            if (ret === "" && !isAttached(elem)) ret = jQuery.style(elem, name);
            // A tribute to the "awesome hack by Dean Edwards"
            // Android Browser returns percentage for some values,
            // but width seems to be reliably pixels.
            // This is against the CSSOM draft spec:
            // https://drafts.csswg.org/cssom/#resolved-values
            if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
                // Remember the original values
                width = style.width;
                minWidth = style.minWidth;
                maxWidth = style.maxWidth;
                // Put in the new values to get a computed value out
                style.minWidth = style.maxWidth = style.width = ret;
                ret = computed.width;
                // Revert the changed values
                style.width = width;
                style.minWidth = minWidth;
                style.maxWidth = maxWidth;
            }
        }
        return ret !== undefined ? // Support: IE <=9 - 11 only
        // IE returns zIndex value as an integer.
        ret + "" : ret;
    }
    function addGetHookIf(conditionFn, hookFn) {
        // Define the hook, we'll check on the first run if it's really needed.
        return {
            get: function() {
                if (conditionFn()) {
                    // Hook not needed (or it's not possible to use it due
                    // to missing dependency), remove it.
                    delete this.get;
                    return;
                }
                // Hook needed; redefine it so that the support test is not executed again.
                return (this.get = hookFn).apply(this, arguments);
            }
        };
    }
    var cssPrefixes = [
        "Webkit",
        "Moz",
        "ms"
    ], emptyStyle = document.createElement("div").style, vendorProps = {
    };
    // Return a vendor-prefixed property or undefined
    function vendorPropName(name) {
        // Check for vendor prefixed names
        var capName = name[0].toUpperCase() + name.slice(1), i2 = cssPrefixes.length;
        while(i2--){
            name = cssPrefixes[i2] + capName;
            if (name in emptyStyle) return name;
        }
    }
    // Return a potentially-mapped jQuery.cssProps or vendor prefixed property
    function finalPropName(name) {
        var final = jQuery.cssProps[name] || vendorProps[name];
        if (final) return final;
        if (name in emptyStyle) return name;
        return vendorProps[name] = vendorPropName(name) || name;
    }
    var // Swappable if display is none or starts with table
    // except "table", "table-cell", or "table-caption"
    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
    rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
    };
    function setPositiveNumber(_elem, value, subtract) {
        // Any relative (+/-) values have already been
        // normalized at this point
        var matches = rcssNum.exec(value);
        return matches ? // Guard against undefined "subtract", e.g., when used as in cssHooks
        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
    }
    function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
        var i2 = dimension === "width" ? 1 : 0, extra = 0, delta = 0;
        // Adjustment may not be necessary
        if (box === (isBorderBox ? "border" : "content")) return 0;
        for(; i2 < 4; i2 += 2){
            // Both box models exclude margin
            if (box === "margin") delta += jQuery.css(elem, box + cssExpand[i2], true, styles);
            // If we get here with a content-box, we're seeking "padding" or "border" or "margin"
            if (!isBorderBox) {
                // Add padding
                delta += jQuery.css(elem, "padding" + cssExpand[i2], true, styles);
                // For "border" or "margin", add border
                if (box !== "padding") delta += jQuery.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
                else extra += jQuery.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
            // If we get here with a border-box (content + padding + border), we're seeking "content" or
            // "padding" or "margin"
            } else {
                // For "content", subtract padding
                if (box === "content") delta -= jQuery.css(elem, "padding" + cssExpand[i2], true, styles);
                // For "content" or "padding", subtract border
                if (box !== "margin") delta -= jQuery.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
            }
        }
        // Account for positive content-box scroll gutter when requested by providing computedVal
        if (!isBorderBox && computedVal >= 0) // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
        // Assuming integer scroll gutter, subtract the rest and round down
        delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5)) || 0;
        return delta;
    }
    function getWidthOrHeight(elem, dimension, extra) {
        // Start with computed style
        var styles = getStyles(elem), // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
        // Fake content-box until we know it's needed to know the true value.
        boxSizingNeeded = !support.boxSizingReliable() || extra, isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box", valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
        // Support: Firefox <=54
        // Return a confounding non-pixel value or feign ignorance, as appropriate.
        if (rnumnonpx.test(val)) {
            if (!extra) return val;
            val = "auto";
        }
        // Support: IE 9 - 11 only
        // Use offsetWidth/offsetHeight for when box sizing is unreliable.
        // In those cases, the computed value can be trusted to be border-box.
        if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+
        // IE/Edge misreport `getComputedStyle` of table rows with width/height
        // set in CSS while `offset*` properties report correct values.
        // Interestingly, in some cases IE 9 doesn't suffer from this issue.
        !support.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
        // This happens for inline elements with no explicit setting (gh-3571)
        val === "auto" || // Support: Android <=4.1 - 4.3 only
        // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
        !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected
        elem.getClientRects().length) {
            isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";
            // Where available, offsetWidth/offsetHeight approximate border box dimensions.
            // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
            // retrieved value as a content box dimension.
            valueIsBorderBox = offsetProp in elem;
            if (valueIsBorderBox) val = elem[offsetProp];
        }
        // Normalize "" and auto
        val = parseFloat(val) || 0;
        // Adjust for the element's box model
        return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)
        val) + "px";
    }
    jQuery.extend({
        // Add in style property hooks for overriding the default
        // behavior of getting and setting a style property
        cssHooks: {
            opacity: {
                get: function(elem, computed) {
                    if (computed) {
                        // We should always get a number back from opacity
                        var ret = curCSS(elem, "opacity");
                        return ret === "" ? "1" : ret;
                    }
                }
            }
        },
        // Don't automatically add "px" to these possibly-unitless properties
        cssNumber: {
            "animationIterationCount": true,
            "columnCount": true,
            "fillOpacity": true,
            "flexGrow": true,
            "flexShrink": true,
            "fontWeight": true,
            "gridArea": true,
            "gridColumn": true,
            "gridColumnEnd": true,
            "gridColumnStart": true,
            "gridRow": true,
            "gridRowEnd": true,
            "gridRowStart": true,
            "lineHeight": true,
            "opacity": true,
            "order": true,
            "orphans": true,
            "widows": true,
            "zIndex": true,
            "zoom": true
        },
        // Add in properties whose names you wish to fix before
        // setting or getting the value
        cssProps: {
        },
        // Get and set the style property on a DOM Node
        style: function(elem, name, value, extra) {
            // Don't set styles on text and comment nodes
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) return;
            // Make sure that we're working with the right name
            var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
            // Make sure that we're working with the right name. We don't
            // want to query the value if it is a CSS custom property
            // since they are user-defined.
            if (!isCustomProp) name = finalPropName(origName);
            // Gets hook for the prefixed version, then unprefixed version
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            // Check if we're setting a value
            if (value !== undefined) {
                type = typeof value;
                // Convert "+=" or "-=" to relative numbers (#7345)
                if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
                    value = adjustCSS(elem, name, ret);
                    // Fixes bug #9237
                    type = "number";
                }
                // Make sure that null and NaN values aren't set (#7116)
                if (value == null || value !== value) return;
                // If a number was passed in, add the unit (except for certain CSS properties)
                // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
                // "px" to a few hardcoded values.
                if (type === "number" && !isCustomProp) value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
                // background-* props affect original clone's values
                if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) style[name] = "inherit";
                // If a hook was provided, use that value, otherwise just set the specified value
                if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
                    if (isCustomProp) style.setProperty(name, value);
                    else style[name] = value;
                }
            } else {
                // If a hook was provided get the non-computed value from there
                if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) return ret;
                // Otherwise just get the value from the style object
                return style[name];
            }
        },
        css: function(elem, name, extra, styles) {
            var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);
            // Make sure that we're working with the right name. We don't
            // want to modify the value if it is a CSS custom property
            // since they are user-defined.
            if (!isCustomProp) name = finalPropName(origName);
            // Try prefixed name followed by the unprefixed name
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            // If a hook was provided get the computed value from there
            if (hooks && "get" in hooks) val = hooks.get(elem, true, extra);
            // Otherwise, if a way to get the computed value exists, use that
            if (val === undefined) val = curCSS(elem, name, styles);
            // Convert "normal" to computed value
            if (val === "normal" && name in cssNormalTransform) val = cssNormalTransform[name];
            // Make numeric if forced or a qualifier was provided and val looks numeric
            if (extra === "" || extra) {
                num = parseFloat(val);
                return extra === true || isFinite(num) ? num || 0 : val;
            }
            return val;
        }
    });
    jQuery.each([
        "height",
        "width"
    ], function(_i, dimension) {
        jQuery.cssHooks[dimension] = {
            get: function(elem, computed, extra) {
                if (computed) // Certain elements can have dimension info if we invisibly show them
                // but it must have a current display style that would benefit
                return rdisplayswap.test(jQuery.css(elem, "display")) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function() {
                    return getWidthOrHeight(elem, dimension, extra);
                }) : getWidthOrHeight(elem, dimension, extra);
            },
            set: function(elem, value, extra) {
                var matches, styles = getStyles(elem), // Only read styles.position if the test has a chance to fail
                // to avoid forcing a reflow.
                scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute", // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
                boxSizingNeeded = scrollboxSizeBuggy || extra, isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box", subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;
                // Account for unreliable border-box dimensions by comparing offset* to computed and
                // faking a content-box to get border and padding (gh-3699)
                if (isBorderBox && scrollboxSizeBuggy) subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);
                // Convert to pixels if value adjustment is needed
                if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
                    elem.style[dimension] = value;
                    value = jQuery.css(elem, dimension);
                }
                return setPositiveNumber(elem, value, subtract);
            }
        };
    });
    jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
        if (computed) return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
            marginLeft: 0
        }, function() {
            return elem.getBoundingClientRect().left;
        })) + "px";
    });
    // These hooks are used by animate to expand properties
    jQuery.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(prefix, suffix) {
        jQuery.cssHooks[prefix + suffix] = {
            expand: function(value) {
                var i2 = 0, expanded = {
                }, // Assumes a single number if not a string
                parts = typeof value === "string" ? value.split(" ") : [
                    value
                ];
                for(; i2 < 4; i2++)expanded[prefix + cssExpand[i2] + suffix] = parts[i2] || parts[i2 - 2] || parts[0];
                return expanded;
            }
        };
        if (prefix !== "margin") jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    });
    jQuery.fn.extend({
        css: function(name, value) {
            return access(this, function(elem, name1, value1) {
                var styles, len, map = {
                }, i2 = 0;
                if (Array.isArray(name1)) {
                    styles = getStyles(elem);
                    len = name1.length;
                    for(; i2 < len; i2++)map[name1[i2]] = jQuery.css(elem, name1[i2], false, styles);
                    return map;
                }
                return value1 !== undefined ? jQuery.style(elem, name1, value1) : jQuery.css(elem, name1);
            }, name, value, arguments.length > 1);
        }
    });
    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.Tween = Tween;
    Tween.prototype = {
        constructor: Tween,
        init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || jQuery.easing._default;
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
        },
        cur: function() {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
        },
        run: function(percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            if (this.options.duration) this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
            else this.pos = eased = percent;
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) this.options.step.call(this.elem, this.now, this);
            if (hooks && hooks.set) hooks.set(this);
            else Tween.propHooks._default.set(this);
            return this;
        }
    };
    Tween.prototype.init.prototype = Tween.prototype;
    Tween.propHooks = {
        _default: {
            get: function(tween) {
                var result;
                // Use a property on the element directly when it is not a DOM element,
                // or when there is no matching style property that exists.
                if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) return tween.elem[tween.prop];
                // Passing an empty string as a 3rd parameter to .css will automatically
                // attempt a parseFloat and fallback to a string if the parse fails.
                // Simple values such as "10px" are parsed to Float;
                // complex values such as "rotate(1rad)" are returned as-is.
                result = jQuery.css(tween.elem, tween.prop, "");
                // Empty strings, null, undefined and "auto" are converted to 0.
                return !result || result === "auto" ? 0 : result;
            },
            set: function(tween) {
                // Use step hook for back compat.
                // Use cssHook if its there.
                // Use .style if available and use plain properties where available.
                if (jQuery.fx.step[tween.prop]) jQuery.fx.step[tween.prop](tween);
                else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
                else tween.elem[tween.prop] = tween.now;
            }
        }
    };
    // Support: IE <=9 only
    // Panic based approach to setting things on disconnected nodes
    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function(tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) tween.elem[tween.prop] = tween.now;
        }
    };
    jQuery.easing = {
        linear: function(p) {
            return p;
        },
        swing: function(p) {
            return 0.5 - Math.cos(p * Math.PI) / 2;
        },
        _default: "swing"
    };
    jQuery.fx = Tween.prototype.init;
    // Back compat <1.8 extension point
    jQuery.fx.step = {
    };
    var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
    function schedule() {
        if (inProgress) {
            if (document.hidden === false && window.requestAnimationFrame) window.requestAnimationFrame(schedule);
            else window.setTimeout(schedule, jQuery.fx.interval);
            jQuery.fx.tick();
        }
    }
    // Animations created synchronously will run synchronously
    function createFxNow() {
        window.setTimeout(function() {
            fxNow = undefined;
        });
        return fxNow = Date.now();
    }
    // Generate parameters to create a standard animation
    function genFx(type, includeWidth) {
        var which, i2 = 0, attrs = {
            height: type
        };
        // If we include width, step value is 1 to do all cssExpand values,
        // otherwise step value is 2 to skip over Left and Right
        includeWidth = includeWidth ? 1 : 0;
        for(; i2 < 4; i2 += 2 - includeWidth){
            which = cssExpand[i2];
            attrs["margin" + which] = attrs["padding" + which] = type;
        }
        if (includeWidth) attrs.opacity = attrs.width = type;
        return attrs;
    }
    function createTween(value, prop, animation) {
        var tween, collection = (Animation1.tweeners[prop] || []).concat(Animation1.tweeners["*"]), index = 0, length = collection.length;
        for(; index < length; index++){
            if (tween = collection[index].call(animation, prop, value)) // We're done with this property
            return tween;
        }
    }
    function defaultPrefilter(elem, props, opts) {
        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = "width" in props || "height" in props, anim = this, orig = {
        }, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, "fxshow");
        // Queue-skipping animations hijack the fx hooks
        if (!opts.queue) {
            hooks = jQuery._queueHooks(elem, "fx");
            if (hooks.unqueued == null) {
                hooks.unqueued = 0;
                oldfire = hooks.empty.fire;
                hooks.empty.fire = function() {
                    if (!hooks.unqueued) oldfire();
                };
            }
            hooks.unqueued++;
            anim.always(function() {
                // Ensure the complete handler is called before this completes
                anim.always(function() {
                    hooks.unqueued--;
                    if (!jQuery.queue(elem, "fx").length) hooks.empty.fire();
                });
            });
        }
        // Detect show/hide animations
        for(prop in props){
            value = props[prop];
            if (rfxtypes.test(value)) {
                delete props[prop];
                toggle = toggle || value === "toggle";
                if (value === (hidden ? "hide" : "show")) {
                    // Pretend to be hidden if this is a "show" and
                    // there is still data from a stopped show/hide
                    if (value === "show" && dataShow && dataShow[prop] !== undefined) hidden = true;
                    else continue;
                }
                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
            }
        }
        // Bail out if this is a no-op like .hide().hide()
        propTween = !jQuery.isEmptyObject(props);
        if (!propTween && jQuery.isEmptyObject(orig)) return;
        // Restrict "overflow" and "display" styles during box animations
        if (isBox && elem.nodeType === 1) {
            // Support: IE <=9 - 11, Edge 12 - 15
            // Record all 3 overflow attributes because IE does not infer the shorthand
            // from identically-valued overflowX and overflowY and Edge just mirrors
            // the overflowX value there.
            opts.overflow = [
                style.overflow,
                style.overflowX,
                style.overflowY
            ];
            // Identify a display type, preferring old show/hide data over the CSS cascade
            restoreDisplay = dataShow && dataShow.display;
            if (restoreDisplay == null) restoreDisplay = dataPriv.get(elem, "display");
            display = jQuery.css(elem, "display");
            if (display === "none") {
                if (restoreDisplay) display = restoreDisplay;
                else {
                    // Get nonempty value(s) by temporarily forcing visibility
                    showHide([
                        elem
                    ], true);
                    restoreDisplay = elem.style.display || restoreDisplay;
                    display = jQuery.css(elem, "display");
                    showHide([
                        elem
                    ]);
                }
            }
            // Animate inline elements as inline-block
            if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
                if (jQuery.css(elem, "float") === "none") {
                    // Restore the original display value at the end of pure show/hide animations
                    if (!propTween) {
                        anim.done(function() {
                            style.display = restoreDisplay;
                        });
                        if (restoreDisplay == null) {
                            display = style.display;
                            restoreDisplay = display === "none" ? "" : display;
                        }
                    }
                    style.display = "inline-block";
                }
            }
        }
        if (opts.overflow) {
            style.overflow = "hidden";
            anim.always(function() {
                style.overflow = opts.overflow[0];
                style.overflowX = opts.overflow[1];
                style.overflowY = opts.overflow[2];
            });
        }
        // Implement show/hide animations
        propTween = false;
        for(prop in orig){
            // General show/hide setup for this element animation
            if (!propTween) {
                if (dataShow) {
                    if ("hidden" in dataShow) hidden = dataShow.hidden;
                } else dataShow = dataPriv.access(elem, "fxshow", {
                    display: restoreDisplay
                });
                // Store hidden/visible for toggle so `.stop().toggle()` "reverses"
                if (toggle) dataShow.hidden = !hidden;
                // Show elements before animating them
                if (hidden) showHide([
                    elem
                ], true);
                /* eslint-disable no-loop-func */ anim.done(function() {
                    /* eslint-enable no-loop-func */ // The final step of a "hide" animation is actually hiding the element
                    if (!hidden) showHide([
                        elem
                    ]);
                    dataPriv.remove(elem, "fxshow");
                    for(prop in orig)jQuery.style(elem, prop, orig[prop]);
                });
            }
            // Per-property setup
            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
            if (!(prop in dataShow)) {
                dataShow[prop] = propTween.start;
                if (hidden) {
                    propTween.end = propTween.start;
                    propTween.start = 0;
                }
            }
        }
    }
    function propFilter(props, specialEasing) {
        var index, name, easing, value, hooks;
        // camelCase, specialEasing and expand cssHook pass
        for(index in props){
            name = camelCase(index);
            easing = specialEasing[name];
            value = props[index];
            if (Array.isArray(value)) {
                easing = value[1];
                value = props[index] = value[0];
            }
            if (index !== name) {
                props[name] = value;
                delete props[index];
            }
            hooks = jQuery.cssHooks[name];
            if (hooks && "expand" in hooks) {
                value = hooks.expand(value);
                delete props[name];
                // Not quite $.extend, this won't overwrite existing keys.
                // Reusing 'index' because we have the correct "name"
                for(index in value)if (!(index in props)) {
                    props[index] = value[index];
                    specialEasing[index] = easing;
                }
            } else specialEasing[name] = easing;
        }
    }
    function Animation1(elem, properties, options) {
        var result, stopped, index = 0, length = Animation1.prefilters.length, deferred = jQuery.Deferred().always(function() {
            // Don't match elem in the :animated selector
            delete tick.elem;
        }), tick = function() {
            if (stopped) return false;
            var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), // Support: Android 2.3 only
            // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
            temp = remaining / animation.duration || 0, percent = 1 - temp, index1 = 0, length1 = animation.tweens.length;
            for(; index1 < length1; index1++)animation.tweens[index1].run(percent);
            deferred.notifyWith(elem, [
                animation,
                percent,
                remaining
            ]);
            // If there's more to do, yield
            if (percent < 1 && length1) return remaining;
            // If this was an empty animation, synthesize a final progress notification
            if (!length1) deferred.notifyWith(elem, [
                animation,
                1,
                0
            ]);
            // Resolve the animation and report its conclusion
            deferred.resolveWith(elem, [
                animation
            ]);
            return false;
        }, animation = deferred.promise({
            elem: elem,
            props: jQuery.extend({
            }, properties),
            opts: jQuery.extend(true, {
                specialEasing: {
                },
                easing: jQuery.easing._default
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function(prop, end) {
                var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                animation.tweens.push(tween);
                return tween;
            },
            stop: function(gotoEnd) {
                var index1 = 0, // If we are going to the end, we want to run all the tweens
                // otherwise we skip this part
                length1 = gotoEnd ? animation.tweens.length : 0;
                if (stopped) return this;
                stopped = true;
                for(; index1 < length1; index1++)animation.tweens[index1].run(1);
                // Resolve when we played the last frame; otherwise, reject
                if (gotoEnd) {
                    deferred.notifyWith(elem, [
                        animation,
                        1,
                        0
                    ]);
                    deferred.resolveWith(elem, [
                        animation,
                        gotoEnd
                    ]);
                } else deferred.rejectWith(elem, [
                    animation,
                    gotoEnd
                ]);
                return this;
            }
        }), props = animation.props;
        propFilter(props, animation.opts.specialEasing);
        for(; index < length; index++){
            result = Animation1.prefilters[index].call(animation, elem, props, animation.opts);
            if (result) {
                if (isFunction(result.stop)) jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
                return result;
            }
        }
        jQuery.map(props, createTween, animation);
        if (isFunction(animation.opts.start)) animation.opts.start.call(elem, animation);
        // Attach callbacks from options
        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
        jQuery.fx.timer(jQuery.extend(tick, {
            elem: elem,
            anim: animation,
            queue: animation.opts.queue
        }));
        return animation;
    }
    jQuery.Animation = jQuery.extend(Animation1, {
        tweeners: {
            "*": [
                function(prop, value) {
                    var tween = this.createTween(prop, value);
                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
                    return tween;
                }
            ]
        },
        tweener: function(props, callback) {
            if (isFunction(props)) {
                callback = props;
                props = [
                    "*"
                ];
            } else props = props.match(rnothtmlwhite);
            var prop, index = 0, length = props.length;
            for(; index < length; index++){
                prop = props[index];
                Animation1.tweeners[prop] = Animation1.tweeners[prop] || [];
                Animation1.tweeners[prop].unshift(callback);
            }
        },
        prefilters: [
            defaultPrefilter
        ],
        prefilter: function(callback, prepend) {
            if (prepend) Animation1.prefilters.unshift(callback);
            else Animation1.prefilters.push(callback);
        }
    });
    jQuery.speed = function(speed, easing, fn) {
        var opt = speed && typeof speed === "object" ? jQuery.extend({
        }, speed) : {
            complete: fn || !fn && easing || isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !isFunction(easing) && easing
        };
        // Go to the end state if fx are off
        if (jQuery.fx.off) opt.duration = 0;
        else if (typeof opt.duration !== "number") {
            if (opt.duration in jQuery.fx.speeds) opt.duration = jQuery.fx.speeds[opt.duration];
            else opt.duration = jQuery.fx.speeds._default;
        }
        // Normalize opt.queue - true/undefined/null -> "fx"
        if (opt.queue == null || opt.queue === true) opt.queue = "fx";
        // Queueing
        opt.old = opt.complete;
        opt.complete = function() {
            if (isFunction(opt.old)) opt.old.call(this);
            if (opt.queue) jQuery.dequeue(this, opt.queue);
        };
        return opt;
    };
    jQuery.fn.extend({
        fadeTo: function(speed, to, easing, callback) {
            // Show any hidden elements after setting opacity to 0
            return this.filter(isHiddenWithinTree).css("opacity", 0).show()// Animate to the value specified
            .end().animate({
                opacity: to
            }, speed, easing, callback);
        },
        animate: function(prop, speed, easing, callback) {
            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function() {
                // Operate on a copy of prop so per-property easing won't be lost
                var anim = Animation1(this, jQuery.extend({
                }, prop), optall);
                // Empty animations, or finishing resolves immediately
                if (empty || dataPriv.get(this, "finish")) anim.stop(true);
            };
            doAnimation.finish = doAnimation;
            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
        },
        stop: function(type, clearQueue, gotoEnd) {
            var stopQueue = function(hooks) {
                var stop = hooks.stop;
                delete hooks.stop;
                stop(gotoEnd);
            };
            if (typeof type !== "string") {
                gotoEnd = clearQueue;
                clearQueue = type;
                type = undefined;
            }
            if (clearQueue) this.queue(type || "fx", []);
            return this.each(function() {
                var dequeue = true, index = type != null && type + "queueHooks", timers = jQuery.timers, data = dataPriv.get(this);
                if (index) {
                    if (data[index] && data[index].stop) stopQueue(data[index]);
                } else {
                    for(index in data)if (data[index] && data[index].stop && rrun.test(index)) stopQueue(data[index]);
                }
                for(index = timers.length; index--;)if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                    timers[index].anim.stop(gotoEnd);
                    dequeue = false;
                    timers.splice(index, 1);
                }
                // Start the next in the queue if the last step wasn't forced.
                // Timers currently will call their complete callbacks, which
                // will dequeue but only if they were gotoEnd.
                if (dequeue || !gotoEnd) jQuery.dequeue(this, type);
            });
        },
        finish: function(type) {
            if (type !== false) type = type || "fx";
            return this.each(function() {
                var index, data = dataPriv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery.timers, length = queue ? queue.length : 0;
                // Enable finishing flag on private data
                data.finish = true;
                // Empty the queue first
                jQuery.queue(this, type, []);
                if (hooks && hooks.stop) hooks.stop.call(this, true);
                // Look for any active animations, and finish them
                for(index = timers.length; index--;)if (timers[index].elem === this && timers[index].queue === type) {
                    timers[index].anim.stop(true);
                    timers.splice(index, 1);
                }
                // Look for any animations in the old queue and finish them
                for(index = 0; index < length; index++)if (queue[index] && queue[index].finish) queue[index].finish.call(this);
                // Turn off finishing flag
                delete data.finish;
            });
        }
    });
    jQuery.each([
        "toggle",
        "show",
        "hide"
    ], function(_i, name) {
        var cssFn = jQuery.fn[name];
        jQuery.fn[name] = function(speed, easing, callback) {
            return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
        };
    });
    // Generate shortcuts for custom animations
    jQuery.each({
        slideDown: genFx("show"),
        slideUp: genFx("hide"),
        slideToggle: genFx("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(name, props) {
        jQuery.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
        };
    });
    jQuery.timers = [];
    jQuery.fx.tick = function() {
        var timer, i2 = 0, timers = jQuery.timers;
        fxNow = Date.now();
        for(; i2 < timers.length; i2++){
            timer = timers[i2];
            // Run the timer and safely remove it when done (allowing for external removal)
            if (!timer() && timers[i2] === timer) timers.splice(i2--, 1);
        }
        if (!timers.length) jQuery.fx.stop();
        fxNow = undefined;
    };
    jQuery.fx.timer = function(timer) {
        jQuery.timers.push(timer);
        jQuery.fx.start();
    };
    jQuery.fx.interval = 13;
    jQuery.fx.start = function() {
        if (inProgress) return;
        inProgress = true;
        schedule();
    };
    jQuery.fx.stop = function() {
        inProgress = null;
    };
    jQuery.fx.speeds = {
        slow: 600,
        fast: 200,
        // Default speed
        _default: 400
    };
    // Based off of the plugin by Clint Helfers, with permission.
    // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
    jQuery.fn.delay = function(time, type) {
        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
        type = type || "fx";
        return this.queue(type, function(next, hooks) {
            var timeout = window.setTimeout(next, time);
            hooks.stop = function() {
                window.clearTimeout(timeout);
            };
        });
    };
    (function() {
        var input = document.createElement("input"), select = document.createElement("select"), opt = select.appendChild(document.createElement("option"));
        input.type = "checkbox";
        // Support: Android <=4.3 only
        // Default value for a checkbox should be "on"
        support.checkOn = input.value !== "";
        // Support: IE <=11 only
        // Must access selectedIndex to make default options select
        support.optSelected = opt.selected;
        // Support: IE <=11 only
        // An input loses its value after becoming a radio
        input = document.createElement("input");
        input.value = "t";
        input.type = "radio";
        support.radioValue = input.value === "t";
    })();
    var boolHook, attrHandle = jQuery.expr.attrHandle;
    jQuery.fn.extend({
        attr: function(name, value) {
            return access(this, jQuery.attr, name, value, arguments.length > 1);
        },
        removeAttr: function(name) {
            return this.each(function() {
                jQuery.removeAttr(this, name);
            });
        }
    });
    jQuery.extend({
        attr: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            // Don't get/set attributes on text, comment and attribute nodes
            if (nType === 3 || nType === 8 || nType === 2) return;
            // Fallback to prop when attributes are not supported
            if (typeof elem.getAttribute === "undefined") return jQuery.prop(elem, name, value);
            // Attribute hooks are determined by the lowercase version
            // Grab necessary hook if one is defined
            if (nType !== 1 || !jQuery.isXMLDoc(elem)) hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
            if (value !== undefined) {
                if (value === null) {
                    jQuery.removeAttr(elem, name);
                    return;
                }
                if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) return ret;
                elem.setAttribute(name, value + "");
                return value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) return ret;
            ret = jQuery.find.attr(elem, name);
            // Non-existent attributes return null, we normalize to undefined
            return ret == null ? undefined : ret;
        },
        attrHooks: {
            type: {
                set: function(elem, value) {
                    if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
                        var val = elem.value;
                        elem.setAttribute("type", value);
                        if (val) elem.value = val;
                        return value;
                    }
                }
            }
        },
        removeAttr: function(elem, value) {
            var name, i2 = 0, // Attribute names can contain non-HTML whitespace characters
            // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
            attrNames = value && value.match(rnothtmlwhite);
            if (attrNames && elem.nodeType === 1) while(name = attrNames[i2++])elem.removeAttribute(name);
        }
    });
    // Hooks for boolean attributes
    boolHook = {
        set: function(elem, value, name) {
            if (value === false) // Remove boolean attributes when set to false
            jQuery.removeAttr(elem, name);
            else elem.setAttribute(name, name);
            return name;
        }
    };
    jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(_i, name) {
        var getter = attrHandle[name] || jQuery.find.attr;
        attrHandle[name] = function(elem, name1, isXML) {
            var ret, handle, lowercaseName = name1.toLowerCase();
            if (!isXML) {
                // Avoid an infinite loop by temporarily removing this function from the getter
                handle = attrHandle[lowercaseName];
                attrHandle[lowercaseName] = ret;
                ret = getter(elem, name1, isXML) != null ? lowercaseName : null;
                attrHandle[lowercaseName] = handle;
            }
            return ret;
        };
    });
    var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;
    jQuery.fn.extend({
        prop: function(name, value) {
            return access(this, jQuery.prop, name, value, arguments.length > 1);
        },
        removeProp: function(name) {
            return this.each(function() {
                delete this[jQuery.propFix[name] || name];
            });
        }
    });
    jQuery.extend({
        prop: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            // Don't get/set properties on text, comment and attribute nodes
            if (nType === 3 || nType === 8 || nType === 2) return;
            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
                // Fix name and attach hooks
                name = jQuery.propFix[name] || name;
                hooks = jQuery.propHooks[name];
            }
            if (value !== undefined) {
                if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) return ret;
                return elem[name] = value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) return ret;
            return elem[name];
        },
        propHooks: {
            tabIndex: {
                get: function(elem) {
                    // Support: IE <=9 - 11 only
                    // elem.tabIndex doesn't always return the
                    // correct value when it hasn't been explicitly set
                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                    // Use proper attribute retrieval(#12072)
                    var tabindex = jQuery.find.attr(elem, "tabindex");
                    if (tabindex) return parseInt(tabindex, 10);
                    if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) return 0;
                    return -1;
                }
            }
        },
        propFix: {
            "for": "htmlFor",
            "class": "className"
        }
    });
    // Support: IE <=11 only
    // Accessing the selectedIndex property
    // forces the browser to respect setting selected
    // on the option
    // The getter ensures a default option is selected
    // when in an optgroup
    // eslint rule "no-unused-expressions" is disabled for this code
    // since it considers such accessions noop
    if (!support.optSelected) jQuery.propHooks.selected = {
        get: function(elem) {
            /* eslint no-unused-expressions: "off" */ var parent = elem.parentNode;
            if (parent && parent.parentNode) parent.parentNode.selectedIndex;
            return null;
        },
        set: function(elem) {
            /* eslint no-unused-expressions: "off" */ var parent = elem.parentNode;
            if (parent) {
                parent.selectedIndex;
                if (parent.parentNode) parent.parentNode.selectedIndex;
            }
        }
    };
    jQuery.each([
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable"
    ], function() {
        jQuery.propFix[this.toLowerCase()] = this;
    });
    // Strip and collapse whitespace according to HTML spec
    // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
    function stripAndCollapse(value) {
        var tokens = value.match(rnothtmlwhite) || [];
        return tokens.join(" ");
    }
    function getClass(elem) {
        return elem.getAttribute && elem.getAttribute("class") || "";
    }
    function classesToArray(value) {
        if (Array.isArray(value)) return value;
        if (typeof value === "string") return value.match(rnothtmlwhite) || [];
        return [];
    }
    jQuery.fn.extend({
        addClass: function(value) {
            var classes, elem, cur, curValue, clazz, j, finalValue, i2 = 0;
            if (isFunction(value)) return this.each(function(j1) {
                jQuery(this).addClass(value.call(this, j1, getClass(this)));
            });
            classes = classesToArray(value);
            if (classes.length) while(elem = this[i2++]){
                curValue = getClass(elem);
                cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                    j = 0;
                    while(clazz = classes[j++])if (cur.indexOf(" " + clazz + " ") < 0) cur += clazz + " ";
                    // Only assign if different to avoid unneeded rendering.
                    finalValue = stripAndCollapse(cur);
                    if (curValue !== finalValue) elem.setAttribute("class", finalValue);
                }
            }
            return this;
        },
        removeClass: function(value) {
            var classes, elem, cur, curValue, clazz, j, finalValue, i2 = 0;
            if (isFunction(value)) return this.each(function(j1) {
                jQuery(this).removeClass(value.call(this, j1, getClass(this)));
            });
            if (!arguments.length) return this.attr("class", "");
            classes = classesToArray(value);
            if (classes.length) while(elem = this[i2++]){
                curValue = getClass(elem);
                // This expression is here for better compressibility (see addClass)
                cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                    j = 0;
                    while(clazz = classes[j++])// Remove *all* instances
                    while(cur.indexOf(" " + clazz + " ") > -1)cur = cur.replace(" " + clazz + " ", " ");
                    // Only assign if different to avoid unneeded rendering.
                    finalValue = stripAndCollapse(cur);
                    if (curValue !== finalValue) elem.setAttribute("class", finalValue);
                }
            }
            return this;
        },
        toggleClass: function(value, stateVal) {
            var type = typeof value, isValidValue = type === "string" || Array.isArray(value);
            if (typeof stateVal === "boolean" && isValidValue) return stateVal ? this.addClass(value) : this.removeClass(value);
            if (isFunction(value)) return this.each(function(i2) {
                jQuery(this).toggleClass(value.call(this, i2, getClass(this), stateVal), stateVal);
            });
            return this.each(function() {
                var className, i2, self, classNames;
                if (isValidValue) {
                    // Toggle individual class names
                    i2 = 0;
                    self = jQuery(this);
                    classNames = classesToArray(value);
                    while(className = classNames[i2++])// Check each className given, space separated list
                    if (self.hasClass(className)) self.removeClass(className);
                    else self.addClass(className);
                // Toggle whole class name
                } else if (value === undefined || type === "boolean") {
                    className = getClass(this);
                    if (className) // Store className if set
                    dataPriv.set(this, "__className__", className);
                    // If the element has a class name or if we're passed `false`,
                    // then remove the whole classname (if there was one, the above saved it).
                    // Otherwise bring back whatever was previously saved (if anything),
                    // falling back to the empty string if nothing was stored.
                    if (this.setAttribute) this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
                }
            });
        },
        hasClass: function(selector) {
            var className, elem, i2 = 0;
            className = " " + selector + " ";
            while(elem = this[i2++]){
                if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) return true;
            }
            return false;
        }
    });
    var rreturn = /\r/g;
    jQuery.fn.extend({
        val: function(value) {
            var hooks, ret, valueIsFunction, elem = this[0];
            if (!arguments.length) {
                if (elem) {
                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
                    if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) return ret;
                    ret = elem.value;
                    // Handle most common string cases
                    if (typeof ret === "string") return ret.replace(rreturn, "");
                    // Handle cases where value is null/undef or number
                    return ret == null ? "" : ret;
                }
                return;
            }
            valueIsFunction = isFunction(value);
            return this.each(function(i2) {
                var val;
                if (this.nodeType !== 1) return;
                if (valueIsFunction) val = value.call(this, i2, jQuery(this).val());
                else val = value;
                // Treat null/undefined as ""; convert numbers to string
                if (val == null) val = "";
                else if (typeof val === "number") val += "";
                else if (Array.isArray(val)) val = jQuery.map(val, function(value1) {
                    return value1 == null ? "" : value1 + "";
                });
                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
                // If set returns undefined, fall back to normal setting
                if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) this.value = val;
            });
        }
    });
    jQuery.extend({
        valHooks: {
            option: {
                get: function(elem) {
                    var val = jQuery.find.attr(elem, "value");
                    return val != null ? val : // Support: IE <=10 - 11 only
                    // option.text throws exceptions (#14686, #14858)
                    // Strip and collapse whitespace
                    // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                    stripAndCollapse(jQuery.text(elem));
                }
            },
            select: {
                get: function(elem) {
                    var value, option, i2, options = elem.options, index = elem.selectedIndex, one = elem.type === "select-one", values = one ? null : [], max = one ? index + 1 : options.length;
                    if (index < 0) i2 = max;
                    else i2 = one ? index : 0;
                    // Loop through all the selected options
                    for(; i2 < max; i2++){
                        option = options[i2];
                        // Support: IE <=9 only
                        // IE8-9 doesn't update selected after form reset (#2551)
                        if ((option.selected || i2 === index) && // Don't return options that are disabled or in a disabled optgroup
                        !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                            // Get the specific value for the option
                            value = jQuery(option).val();
                            // We don't need an array for one selects
                            if (one) return value;
                            // Multi-Selects return an array
                            values.push(value);
                        }
                    }
                    return values;
                },
                set: function(elem, value) {
                    var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i2 = options.length;
                    while(i2--){
                        option = options[i2];
                        /* eslint-disable no-cond-assign */ if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) optionSet = true;
                    /* eslint-enable no-cond-assign */ }
                    // Force browsers to behave consistently when non-matching value is set
                    if (!optionSet) elem.selectedIndex = -1;
                    return values;
                }
            }
        }
    });
    // Radios and checkboxes getter/setter
    jQuery.each([
        "radio",
        "checkbox"
    ], function() {
        jQuery.valHooks[this] = {
            set: function(elem, value) {
                if (Array.isArray(value)) return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
            }
        };
        if (!support.checkOn) jQuery.valHooks[this].get = function(elem) {
            return elem.getAttribute("value") === null ? "on" : elem.value;
        };
    });
    // Return jQuery for attributes-only inclusion
    support.focusin = "onfocusin" in window;
    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = function(e) {
        e.stopPropagation();
    };
    jQuery.extend(jQuery.event, {
        trigger: function(event, data, elem, onlyHandlers) {
            var i2, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [
                elem || document
            ], type = hasOwn.call(event, "type") ? event.type : event, namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
            cur = lastElement = tmp = elem = elem || document;
            // Don't do events on text and comment nodes
            if (elem.nodeType === 3 || elem.nodeType === 8) return;
            // focus/blur morphs to focusin/out; ensure we're not firing them right now
            if (rfocusMorph.test(type + jQuery.event.triggered)) return;
            if (type.indexOf(".") > -1) {
                // Namespaced trigger; create a regexp to match event type in handle()
                namespaces = type.split(".");
                type = namespaces.shift();
                namespaces.sort();
            }
            ontype = type.indexOf(":") < 0 && "on" + type;
            // Caller can pass in a jQuery.Event object, Object, or just an event type string
            event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
            event.isTrigger = onlyHandlers ? 2 : 3;
            event.namespace = namespaces.join(".");
            event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            // Clean up the event in case it is being reused
            event.result = undefined;
            if (!event.target) event.target = elem;
            // Clone any incoming data and prepend the event, creating the handler arg list
            data = data == null ? [
                event
            ] : jQuery.makeArray(data, [
                event
            ]);
            // Allow special events to draw outside the lines
            special = jQuery.event.special[type] || {
            };
            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) return;
            // Determine event propagation path in advance, per W3C events spec (#9951)
            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
            if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
                bubbleType = special.delegateType || type;
                if (!rfocusMorph.test(bubbleType + type)) cur = cur.parentNode;
                for(; cur; cur = cur.parentNode){
                    eventPath.push(cur);
                    tmp = cur;
                }
                // Only add window if we got to document (e.g., not plain obj or detached DOM)
                if (tmp === (elem.ownerDocument || document)) eventPath.push(tmp.defaultView || tmp.parentWindow || window);
            }
            // Fire handlers on the event path
            i2 = 0;
            while((cur = eventPath[i2++]) && !event.isPropagationStopped()){
                lastElement = cur;
                event.type = i2 > 1 ? bubbleType : special.bindType || type;
                // jQuery handler
                handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");
                if (handle) handle.apply(cur, data);
                // Native handler
                handle = ontype && cur[ontype];
                if (handle && handle.apply && acceptData(cur)) {
                    event.result = handle.apply(cur, data);
                    if (event.result === false) event.preventDefault();
                }
            }
            event.type = type;
            // If nobody prevented the default action, do it now
            if (!onlyHandlers && !event.isDefaultPrevented()) {
                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) // Call a native DOM method on the target with the same name as the event.
                // Don't do default actions on window, that's where global variables be (#6170)
                {
                    if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
                        // Don't re-trigger an onFOO event when we call its FOO() method
                        tmp = elem[ontype];
                        if (tmp) elem[ontype] = null;
                        // Prevent re-triggering of the same event, since we already bubbled it above
                        jQuery.event.triggered = type;
                        if (event.isPropagationStopped()) lastElement.addEventListener(type, stopPropagationCallback);
                        elem[type]();
                        if (event.isPropagationStopped()) lastElement.removeEventListener(type, stopPropagationCallback);
                        jQuery.event.triggered = undefined;
                        if (tmp) elem[ontype] = tmp;
                    }
                }
            }
            return event.result;
        },
        // Piggyback on a donor event to simulate a different one
        // Used only for `focus(in | out)` events
        simulate: function(type, elem, event) {
            var e = jQuery.extend(new jQuery.Event(), event, {
                type: type,
                isSimulated: true
            });
            jQuery.event.trigger(e, null, elem);
        }
    });
    jQuery.fn.extend({
        trigger: function(type, data) {
            return this.each(function() {
                jQuery.event.trigger(type, data, this);
            });
        },
        triggerHandler: function(type, data) {
            var elem = this[0];
            if (elem) return jQuery.event.trigger(type, data, elem, true);
        }
    });
    // Support: Firefox <=44
    // Firefox doesn't have focus(in | out) events
    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
    //
    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
    // focus(in | out) events fire after focus & blur events,
    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
    if (!support.focusin) jQuery.each({
        focus: "focusin",
        blur: "focusout"
    }, function(orig, fix) {
        // Attach a single capturing handler on the document while someone wants focusin/focusout
        var handler = function(event) {
            jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
        };
        jQuery.event.special[fix] = {
            setup: function() {
                // Handle: regular nodes (via `this.ownerDocument`), window
                // (via `this.document`) & document (via `this`).
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix);
                if (!attaches) doc.addEventListener(orig, handler, true);
                dataPriv.access(doc, fix, (attaches || 0) + 1);
            },
            teardown: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix) - 1;
                if (!attaches) {
                    doc.removeEventListener(orig, handler, true);
                    dataPriv.remove(doc, fix);
                } else dataPriv.access(doc, fix, attaches);
            }
        };
    });
    var location = window.location;
    var nonce = {
        guid: Date.now()
    };
    var rquery = /\?/;
    // Cross-browser xml parsing
    jQuery.parseXML = function(data) {
        var xml, parserErrorElem;
        if (!data || typeof data !== "string") return null;
        // Support: IE 9 - 11 only
        // IE throws on parseFromString with invalid input.
        try {
            xml = new window.DOMParser().parseFromString(data, "text/xml");
        } catch (e) {
        }
        parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];
        if (!xml || parserErrorElem) jQuery.error("Invalid XML: " + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function(el) {
            return el.textContent;
        }).join("\n") : data));
        return xml;
    };
    var rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
    function buildParams(prefix, obj, traditional, add) {
        var name;
        if (Array.isArray(obj)) // Serialize array item.
        jQuery.each(obj, function(i2, v) {
            if (traditional || rbracket.test(prefix)) // Treat each array item as a scalar.
            add(prefix, v);
            else // Item is non-scalar (array or object), encode its numeric index.
            buildParams(prefix + "[" + (typeof v === "object" && v != null ? i2 : "") + "]", v, traditional, add);
        });
        else if (!traditional && toType(obj) === "object") // Serialize object item.
        for(name in obj)buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
        else // Serialize scalar item.
        add(prefix, obj);
    }
    // Serialize an array of form elements or a set of
    // key/values into a query string
    jQuery.param = function(a, traditional) {
        var prefix, s = [], add = function(key, valueOrFunction) {
            // If value is a function, invoke it and use its return value
            var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
            s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
        };
        if (a == null) return "";
        // If an array was passed in, assume that it is an array of form elements.
        if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) // Serialize the form elements
        jQuery.each(a, function() {
            add(this.name, this.value);
        });
        else // If traditional, encode the "old" way (the way 1.3.2 or older
        // did it), otherwise encode params recursively.
        for(prefix in a)buildParams(prefix, a[prefix], traditional, add);
        // Return the resulting serialization
        return s.join("&");
    };
    jQuery.fn.extend({
        serialize: function() {
            return jQuery.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                // Can add propHook for "elements" to filter or add form elements
                var elements = jQuery.prop(this, "elements");
                return elements ? jQuery.makeArray(elements) : this;
            }).filter(function() {
                var type = this.type;
                // Use .is( ":disabled" ) so that fieldset[disabled] works
                return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
            }).map(function(_i, elem) {
                var val = jQuery(this).val();
                if (val == null) return null;
                if (Array.isArray(val)) return jQuery.map(val, function(val1) {
                    return {
                        name: elem.name,
                        value: val1.replace(rCRLF, "\r\n")
                    };
                });
                return {
                    name: elem.name,
                    value: val.replace(rCRLF, "\r\n")
                };
            }).get();
        }
    });
    var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg, // #7653, #8125, #8152: local protocol detection
    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, /* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */ prefilters = {
    }, /* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */ transports = {
    }, // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
    allTypes = "*/".concat("*"), // Anchor tag for parsing the document origin
    originAnchor = document.createElement("a");
    originAnchor.href = location.href;
    // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
    function addToPrefiltersOrTransports(structure) {
        // dataTypeExpression is optional and defaults to "*"
        return function(dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
                func = dataTypeExpression;
                dataTypeExpression = "*";
            }
            var dataType, i2 = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
            if (isFunction(func)) {
                // For each dataType in the dataTypeExpression
                while(dataType = dataTypes[i2++])// Prepend if requested
                if (dataType[0] === "+") {
                    dataType = dataType.slice(1) || "*";
                    (structure[dataType] = structure[dataType] || []).unshift(func);
                // Otherwise append
                } else (structure[dataType] = structure[dataType] || []).push(func);
            }
        };
    }
    // Base inspection function for prefilters and transports
    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
        var inspected = {
        }, seekingTransport = structure === transports;
        function inspect(dataType) {
            var selected;
            inspected[dataType] = true;
            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
                    options.dataTypes.unshift(dataTypeOrTransport);
                    inspect(dataTypeOrTransport);
                    return false;
                } else if (seekingTransport) return !(selected = dataTypeOrTransport);
            });
            return selected;
        }
        return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
    }
    // A special extend for ajax options
    // that takes "flat" options (not to be deep extended)
    // Fixes #9887
    function ajaxExtend(target, src) {
        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {
        };
        for(key in src)if (src[key] !== undefined) (flatOptions[key] ? target : deep || (deep = {
        }))[key] = src[key];
        if (deep) jQuery.extend(true, target, deep);
        return target;
    }
    /* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */ function ajaxHandleResponses(s, jqXHR, responses) {
        var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;
        // Remove auto dataType and get content-type in the process
        while(dataTypes[0] === "*"){
            dataTypes.shift();
            if (ct === undefined) ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
        }
        // Check if we're dealing with a known content-type
        if (ct) {
            for(type in contents)if (contents[type] && contents[type].test(ct)) {
                dataTypes.unshift(type);
                break;
            }
        }
        // Check to see if we have a response for the expected dataType
        if (dataTypes[0] in responses) finalDataType = dataTypes[0];
        else {
            // Try convertible dataTypes
            for(type in responses){
                if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                    finalDataType = type;
                    break;
                }
                if (!firstDataType) firstDataType = type;
            }
            // Or just use first one
            finalDataType = finalDataType || firstDataType;
        }
        // If we found a dataType
        // We add the dataType to the list if needed
        // and return the corresponding response
        if (finalDataType) {
            if (finalDataType !== dataTypes[0]) dataTypes.unshift(finalDataType);
            return responses[finalDataType];
        }
    }
    /* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */ function ajaxConvert(s, response, jqXHR, isSuccess) {
        var conv2, current, conv, tmp, prev, converters = {
        }, // Work with a copy of dataTypes in case we need to modify it for conversion
        dataTypes = s.dataTypes.slice();
        // Create converters map with lowercased keys
        if (dataTypes[1]) for(conv in s.converters)converters[conv.toLowerCase()] = s.converters[conv];
        current = dataTypes.shift();
        // Convert to each sequential dataType
        while(current){
            if (s.responseFields[current]) jqXHR[s.responseFields[current]] = response;
            // Apply the dataFilter if provided
            if (!prev && isSuccess && s.dataFilter) response = s.dataFilter(response, s.dataType);
            prev = current;
            current = dataTypes.shift();
            if (current) {
                // There's only work to do if current dataType is non-auto
                if (current === "*") current = prev;
                else if (prev !== "*" && prev !== current) {
                    // Seek a direct converter
                    conv = converters[prev + " " + current] || converters["* " + current];
                    // If none found, seek a pair
                    if (!conv) for(conv2 in converters){
                        // If conv2 outputs current
                        tmp = conv2.split(" ");
                        if (tmp[1] === current) {
                            // If prev can be converted to accepted input
                            conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                            if (conv) {
                                // Condense equivalence converters
                                if (conv === true) conv = converters[conv2];
                                else if (converters[conv2] !== true) {
                                    current = tmp[0];
                                    dataTypes.unshift(tmp[1]);
                                }
                                break;
                            }
                        }
                    }
                    // Apply converter (if not an equivalence)
                    if (conv !== true) {
                        // Unless errors are allowed to bubble, catch and return them
                        if (conv && s.throws) response = conv(response);
                        else try {
                            response = conv(response);
                        } catch (e) {
                            return {
                                state: "parsererror",
                                error: conv ? e : "No conversion from " + prev + " to " + current
                            };
                        }
                    }
                }
            }
        }
        return {
            state: "success",
            data: response
        };
    }
    jQuery.extend({
        // Counter for holding the number of active queries
        active: 0,
        // Last-Modified header cache for next request
        lastModified: {
        },
        etag: {
        },
        ajaxSettings: {
            url: location.href,
            type: "GET",
            isLocal: rlocalProtocol.test(location.protocol),
            global: true,
            processData: true,
            async: true,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            /*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/ accepts: {
                "*": allTypes,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            // Data converters
            // Keys separate source (or catchall "*") and destination types with a single space
            converters: {
                // Convert anything to text
                "* text": String,
                // Text to html (true = no transformation)
                "text html": true,
                // Evaluate text as a json expression
                "text json": JSON.parse,
                // Parse text as xml
                "text xml": jQuery.parseXML
            },
            // For options that shouldn't be deep extended:
            // you can add your own custom options here if
            // and when you create one that shouldn't be
            // deep extended (see ajaxExtend)
            flatOptions: {
                url: true,
                context: true
            }
        },
        // Creates a full fledged settings object into target
        // with both ajaxSettings and settings fields.
        // If target is omitted, writes into ajaxSettings.
        ajaxSetup: function(target, settings) {
            return settings ? // Building a settings object
            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings
            ajaxExtend(jQuery.ajaxSettings, target);
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        // Main method
        ajax: function(url, options) {
            // If url is an object, simulate pre-1.5 signature
            if (typeof url === "object") {
                options = url;
                url = undefined;
            }
            // Force options to be an object
            options = options || {
            };
            var transport, // URL without anti-cache param
            cacheURL, // Response headers
            responseHeadersString, responseHeaders, // timeout handle
            timeoutTimer, // Url cleanup var
            urlAnchor, // Request state (becomes false upon send and true upon completion)
            completed1, // To know if global events are to be dispatched
            fireGlobals, // Loop variable
            i2, // uncached part of the url
            uncached, // Create the final options object
            s = jQuery.ajaxSetup({
            }, options), // Callbacks context
            callbackContext = s.context || s, // Context for global events is callbackContext if it is a DOM node or jQuery collection
            globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, // Deferreds
            deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks("once memory"), // Status-dependent callbacks
            statusCode = s.statusCode || {
            }, // Headers (they are sent all at once)
            requestHeaders = {
            }, requestHeadersNames = {
            }, // Default abort message
            strAbort = "canceled", // Fake xhr
            jqXHR = {
                readyState: 0,
                // Builds headers hashtable if needed
                getResponseHeader: function(key) {
                    var match;
                    if (completed1) {
                        if (!responseHeaders) {
                            responseHeaders = {
                            };
                            while(match = rheaders.exec(responseHeadersString))responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                        }
                        match = responseHeaders[key.toLowerCase() + " "];
                    }
                    return match == null ? null : match.join(", ");
                },
                // Raw string
                getAllResponseHeaders: function() {
                    return completed1 ? responseHeadersString : null;
                },
                // Caches the header
                setRequestHeader: function(name, value) {
                    if (completed1 == null) {
                        name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
                        requestHeaders[name] = value;
                    }
                    return this;
                },
                // Overrides response content-type header
                overrideMimeType: function(type) {
                    if (completed1 == null) s.mimeType = type;
                    return this;
                },
                // Status-dependent callbacks
                statusCode: function(map) {
                    var code;
                    if (map) {
                        if (completed1) // Execute the appropriate callbacks
                        jqXHR.always(map[jqXHR.status]);
                        else // Lazy-add the new callbacks in a way that preserves old ones
                        for(code in map)statusCode[code] = [
                            statusCode[code],
                            map[code]
                        ];
                    }
                    return this;
                },
                // Cancel the request
                abort: function(statusText) {
                    var finalText = statusText || strAbort;
                    if (transport) transport.abort(finalText);
                    done(0, finalText);
                    return this;
                }
            };
            // Attach deferreds
            deferred.promise(jqXHR);
            // Add protocol if not provided (prefilters might expect it)
            // Handle falsy url in the settings object (#10093: consistency with old signature)
            // We also use the url parameter if available
            s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//");
            // Alias method option to type as per ticket #12004
            s.type = options.method || options.type || s.method || s.type;
            // Extract dataTypes list
            s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [
                ""
            ];
            // A cross-domain request is in order when the origin doesn't match the current origin.
            if (s.crossDomain == null) {
                urlAnchor = document.createElement("a");
                // Support: IE <=8 - 11, Edge 12 - 15
                // IE throws exception on accessing the href property if url is malformed,
                // e.g. http://example.com:80x/
                try {
                    urlAnchor.href = s.url;
                    // Support: IE <=8 - 11 only
                    // Anchor's host property isn't correctly set when s.url is relative
                    urlAnchor.href = urlAnchor.href;
                    s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
                } catch (e) {
                    // If there is an error parsing the URL, assume it is crossDomain,
                    // it can be rejected by the transport if it is invalid
                    s.crossDomain = true;
                }
            }
            // Convert data if not already a string
            if (s.data && s.processData && typeof s.data !== "string") s.data = jQuery.param(s.data, s.traditional);
            // Apply prefilters
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
            // If request was aborted inside a prefilter, stop there
            if (completed1) return jqXHR;
            // We can fire global events as of now if asked to
            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
            fireGlobals = jQuery.event && s.global;
            // Watch for a new set of requests
            if (fireGlobals && (jQuery.active++) === 0) jQuery.event.trigger("ajaxStart");
            // Uppercase the type
            s.type = s.type.toUpperCase();
            // Determine if request has content
            s.hasContent = !rnoContent.test(s.type);
            // Save the URL in case we're toying with the If-Modified-Since
            // and/or If-None-Match header later on
            // Remove hash to simplify url manipulation
            cacheURL = s.url.replace(rhash, "");
            // More options handling for requests with no content
            if (!s.hasContent) {
                // Remember the hash so we can put it back
                uncached = s.url.slice(cacheURL.length);
                // If data is available and should be processed, append data to url
                if (s.data && (s.processData || typeof s.data === "string")) {
                    cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;
                    // #9682: remove data so that it's not used in an eventual retry
                    delete s.data;
                }
                // Add or update anti-cache param if needed
                if (s.cache === false) {
                    cacheURL = cacheURL.replace(rantiCache, "$1");
                    uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
                }
                // Put hash and anti-cache on the URL that will be requested (gh-1732)
                s.url = cacheURL + uncached;
            // Change '%20' to '+' if this is encoded form body content (gh-2658)
            } else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) s.data = s.data.replace(r20, "+");
            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
            if (s.ifModified) {
                if (jQuery.lastModified[cacheURL]) jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
                if (jQuery.etag[cacheURL]) jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
            }
            // Set the correct header, if data is being sent
            if (s.data && s.hasContent && s.contentType !== false || options.contentType) jqXHR.setRequestHeader("Content-Type", s.contentType);
            // Set the Accepts header for the server, depending on the dataType
            jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
            // Check for headers option
            for(i2 in s.headers)jqXHR.setRequestHeader(i2, s.headers[i2]);
            // Allow custom headers/mimetypes and early abort
            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed1)) // Abort if not done already and return
            return jqXHR.abort();
            // Aborting is no longer a cancellation
            strAbort = "abort";
            // Install callbacks on deferreds
            completeDeferred.add(s.complete);
            jqXHR.done(s.success);
            jqXHR.fail(s.error);
            // Get transport
            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
            // If no transport, we auto-abort
            if (!transport) done(-1, "No Transport");
            else {
                jqXHR.readyState = 1;
                // Send global event
                if (fireGlobals) globalEventContext.trigger("ajaxSend", [
                    jqXHR,
                    s
                ]);
                // If request was aborted inside ajaxSend, stop there
                if (completed1) return jqXHR;
                // Timeout
                if (s.async && s.timeout > 0) timeoutTimer = window.setTimeout(function() {
                    jqXHR.abort("timeout");
                }, s.timeout);
                try {
                    completed1 = false;
                    transport.send(requestHeaders, done);
                } catch (e) {
                    // Rethrow post-completion exceptions
                    if (completed1) throw e;
                    // Propagate others as results
                    done(-1, e);
                }
            }
            // Callback for when everything is done
            function done(status, nativeStatusText, responses, headers) {
                var isSuccess, success, error, response, modified, statusText = nativeStatusText;
                // Ignore repeat invocations
                if (completed1) return;
                completed1 = true;
                // Clear timeout if it exists
                if (timeoutTimer) window.clearTimeout(timeoutTimer);
                // Dereference transport for early garbage collection
                // (no matter how long the jqXHR object will be used)
                transport = undefined;
                // Cache response headers
                responseHeadersString = headers || "";
                // Set readyState
                jqXHR.readyState = status > 0 ? 4 : 0;
                // Determine if successful
                isSuccess = status >= 200 && status < 300 || status === 304;
                // Get response data
                if (responses) response = ajaxHandleResponses(s, jqXHR, responses);
                // Use a noop converter for missing script but not if jsonp
                if (!isSuccess && jQuery.inArray("script", s.dataTypes) > -1 && jQuery.inArray("json", s.dataTypes) < 0) s.converters["text script"] = function() {
                };
                // Convert no matter what (that way responseXXX fields are always set)
                response = ajaxConvert(s, response, jqXHR, isSuccess);
                // If successful, handle type chaining
                if (isSuccess) {
                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                    if (s.ifModified) {
                        modified = jqXHR.getResponseHeader("Last-Modified");
                        if (modified) jQuery.lastModified[cacheURL] = modified;
                        modified = jqXHR.getResponseHeader("etag");
                        if (modified) jQuery.etag[cacheURL] = modified;
                    }
                    // if no content
                    if (status === 204 || s.type === "HEAD") statusText = "nocontent";
                    else if (status === 304) statusText = "notmodified";
                    else {
                        statusText = response.state;
                        success = response.data;
                        error = response.error;
                        isSuccess = !error;
                    }
                } else {
                    // Extract error from statusText and normalize for non-aborts
                    error = statusText;
                    if (status || !statusText) {
                        statusText = "error";
                        if (status < 0) status = 0;
                    }
                }
                // Set data for the fake xhr object
                jqXHR.status = status;
                jqXHR.statusText = (nativeStatusText || statusText) + "";
                // Success/Error
                if (isSuccess) deferred.resolveWith(callbackContext, [
                    success,
                    statusText,
                    jqXHR
                ]);
                else deferred.rejectWith(callbackContext, [
                    jqXHR,
                    statusText,
                    error
                ]);
                // Status-dependent callbacks
                jqXHR.statusCode(statusCode);
                statusCode = undefined;
                if (fireGlobals) globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [
                    jqXHR,
                    s,
                    isSuccess ? success : error
                ]);
                // Complete
                completeDeferred.fireWith(callbackContext, [
                    jqXHR,
                    statusText
                ]);
                if (fireGlobals) {
                    globalEventContext.trigger("ajaxComplete", [
                        jqXHR,
                        s
                    ]);
                    // Handle the global AJAX counter
                    if (!--jQuery.active) jQuery.event.trigger("ajaxStop");
                }
            }
            return jqXHR;
        },
        getJSON: function(url, data, callback) {
            return jQuery.get(url, data, callback, "json");
        },
        getScript: function(url, callback) {
            return jQuery.get(url, undefined, callback, "script");
        }
    });
    jQuery.each([
        "get",
        "post"
    ], function(_i, method) {
        jQuery[method] = function(url, data, callback, type) {
            // Shift arguments if data argument was omitted
            if (isFunction(data)) {
                type = type || callback;
                callback = data;
                data = undefined;
            }
            // The url can be an options object (which then must have .url)
            return jQuery.ajax(jQuery.extend({
                url: url,
                type: method,
                dataType: type,
                data: data,
                success: callback
            }, jQuery.isPlainObject(url) && url));
        };
    });
    jQuery.ajaxPrefilter(function(s) {
        var i2;
        for(i2 in s.headers)if (i2.toLowerCase() === "content-type") s.contentType = s.headers[i2] || "";
    });
    jQuery._evalUrl = function(url, options, doc) {
        return jQuery.ajax({
            url: url,
            // Make this explicit, since user can override this through ajaxSetup (#11264)
            type: "GET",
            dataType: "script",
            cache: true,
            async: false,
            global: false,
            // Only evaluate the response if it is successful (gh-4126)
            // dataFilter is not invoked for failure responses, so using it instead
            // of the default converter is kludgy but it works.
            converters: {
                "text script": function() {
                }
            },
            dataFilter: function(response) {
                jQuery.globalEval(response, options, doc);
            }
        });
    };
    jQuery.fn.extend({
        wrapAll: function(html) {
            var wrap;
            if (this[0]) {
                if (isFunction(html)) html = html.call(this[0]);
                // The elements to wrap the target around
                wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode) wrap.insertBefore(this[0]);
                wrap.map(function() {
                    var elem = this;
                    while(elem.firstElementChild)elem = elem.firstElementChild;
                    return elem;
                }).append(this);
            }
            return this;
        },
        wrapInner: function(html) {
            if (isFunction(html)) return this.each(function(i2) {
                jQuery(this).wrapInner(html.call(this, i2));
            });
            return this.each(function() {
                var self = jQuery(this), contents = self.contents();
                if (contents.length) contents.wrapAll(html);
                else self.append(html);
            });
        },
        wrap: function(html) {
            var htmlIsFunction = isFunction(html);
            return this.each(function(i2) {
                jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i2) : html);
            });
        },
        unwrap: function(selector) {
            this.parent(selector).not("body").each(function() {
                jQuery(this).replaceWith(this.childNodes);
            });
            return this;
        }
    });
    jQuery.expr.pseudos.hidden = function(elem) {
        return !jQuery.expr.pseudos.visible(elem);
    };
    jQuery.expr.pseudos.visible = function(elem) {
        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
    };
    jQuery.ajaxSettings.xhr = function() {
        try {
            return new window.XMLHttpRequest();
        } catch (e) {
        }
    };
    var xhrSuccessStatus = {
        // File protocol always yields status code 0, assume 200
        0: 200,
        // Support: IE <=9 only
        // #1450: sometimes IE returns 1223 when it should be 204
        1223: 204
    }, xhrSupported = jQuery.ajaxSettings.xhr();
    support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
    support.ajax = xhrSupported = !!xhrSupported;
    jQuery.ajaxTransport(function(options) {
        var callback, errorCallback;
        // Cross domain only allowed if supported through XMLHttpRequest
        if (support.cors || xhrSupported && !options.crossDomain) return {
            send: function(headers, complete) {
                var i2, xhr = options.xhr();
                xhr.open(options.type, options.url, options.async, options.username, options.password);
                // Apply custom fields if provided
                if (options.xhrFields) for(i2 in options.xhrFields)xhr[i2] = options.xhrFields[i2];
                // Override mime type if needed
                if (options.mimeType && xhr.overrideMimeType) xhr.overrideMimeType(options.mimeType);
                // X-Requested-With header
                // For cross-domain requests, seeing as conditions for a preflight are
                // akin to a jigsaw puzzle, we simply never set it to be sure.
                // (it can always be set on a per-request basis or even using ajaxSetup)
                // For same-domain requests, won't change header if already provided.
                if (!options.crossDomain && !headers["X-Requested-With"]) headers["X-Requested-With"] = "XMLHttpRequest";
                // Set headers
                for(i2 in headers)xhr.setRequestHeader(i2, headers[i2]);
                // Callback
                callback = function(type) {
                    return function() {
                        if (callback) {
                            callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;
                            if (type === "abort") xhr.abort();
                            else if (type === "error") {
                                // Support: IE <=9 only
                                // On a manual native abort, IE9 throws
                                // errors on any property access that is not readyState
                                if (typeof xhr.status !== "number") complete(0, "error");
                                else complete(// File: protocol always yields status 0; see #8605, #14207
                                xhr.status, xhr.statusText);
                            } else complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only
                            // IE9 has no XHR2 but throws on binary (trac-11426)
                            // For XHR2 non-text, let the caller handle it (gh-2498)
                            (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {
                                binary: xhr.response
                            } : {
                                text: xhr.responseText
                            }, xhr.getAllResponseHeaders());
                        }
                    };
                };
                // Listen to events
                xhr.onload = callback();
                errorCallback = xhr.onerror = xhr.ontimeout = callback("error");
                // Support: IE 9 only
                // Use onreadystatechange to replace onabort
                // to handle uncaught aborts
                if (xhr.onabort !== undefined) xhr.onabort = errorCallback;
                else xhr.onreadystatechange = function() {
                    // Check readyState before timeout as it changes
                    if (xhr.readyState === 4) // Allow onerror to be called first,
                    // but that will not handle a native abort
                    // Also, save errorCallback to a variable
                    // as xhr.onerror cannot be accessed
                    window.setTimeout(function() {
                        if (callback) errorCallback();
                    });
                };
                // Create the abort callback
                callback = callback("abort");
                try {
                    // Do send the request (this may raise an exception)
                    xhr.send(options.hasContent && options.data || null);
                } catch (e) {
                    // #14683: Only rethrow if this hasn't been notified as an error yet
                    if (callback) throw e;
                }
            },
            abort: function() {
                if (callback) callback();
            }
        };
    });
    // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
    jQuery.ajaxPrefilter(function(s) {
        if (s.crossDomain) s.contents.script = false;
    });
    // Install script dataType
    jQuery.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(text) {
                jQuery.globalEval(text);
                return text;
            }
        }
    });
    // Handle cache's special case and crossDomain
    jQuery.ajaxPrefilter("script", function(s) {
        if (s.cache === undefined) s.cache = false;
        if (s.crossDomain) s.type = "GET";
    });
    // Bind script tag hack transport
    jQuery.ajaxTransport("script", function(s) {
        // This transport only deals with cross domain or forced-by-attrs requests
        if (s.crossDomain || s.scriptAttrs) {
            var script, callback;
            return {
                send: function(_, complete) {
                    script = jQuery("<script>").attr(s.scriptAttrs || {
                    }).prop({
                        charset: s.scriptCharset,
                        src: s.url
                    }).on("load error", callback = function(evt) {
                        script.remove();
                        callback = null;
                        if (evt) complete(evt.type === "error" ? 404 : 200, evt.type);
                    });
                    // Use native DOM manipulation to avoid our domManip AJAX trickery
                    document.head.appendChild(script[0]);
                },
                abort: function() {
                    if (callback) callback();
                }
            };
        }
    });
    var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
    // Default jsonp settings
    jQuery.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;
            this[callback] = true;
            return callback;
        }
    });
    // Detect, normalize options and install callbacks for jsonp requests
    jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");
        // Handle iff the expected data type is "jsonp" or we have a parameter to set
        if (jsonProp || s.dataTypes[0] === "jsonp") {
            // Get callback name, remembering preexisting value associated with it
            callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
            // Insert callback into url or form data
            if (jsonProp) s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
            else if (s.jsonp !== false) s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
            // Use data converter to retrieve json after script execution
            s.converters["script json"] = function() {
                if (!responseContainer) jQuery.error(callbackName + " was not called");
                return responseContainer[0];
            };
            // Force json dataType
            s.dataTypes[0] = "json";
            // Install callback
            overwritten = window[callbackName];
            window[callbackName] = function() {
                responseContainer = arguments;
            };
            // Clean-up function (fires after converters)
            jqXHR.always(function() {
                // If previous value didn't exist - remove it
                if (overwritten === undefined) jQuery(window).removeProp(callbackName);
                else window[callbackName] = overwritten;
                // Save back as free
                if (s[callbackName]) {
                    // Make sure that re-using the options doesn't screw things around
                    s.jsonpCallback = originalSettings.jsonpCallback;
                    // Save the callback name for future use
                    oldCallbacks.push(callbackName);
                }
                // Call if it was a function and we have a response
                if (responseContainer && isFunction(overwritten)) overwritten(responseContainer[0]);
                responseContainer = overwritten = undefined;
            });
            // Delegate to script
            return "script";
        }
    });
    // Support: Safari 8 only
    // In Safari 8 documents created via document.implementation.createHTMLDocument
    // collapse sibling forms: the second one becomes a child of the first one.
    // Because of that, this security measure has to be disabled in Safari 8.
    // https://bugs.webkit.org/show_bug.cgi?id=137337
    support.createHTMLDocument = (function() {
        var body = document.implementation.createHTMLDocument("").body;
        body.innerHTML = "<form></form><form></form>";
        return body.childNodes.length === 2;
    })();
    // Argument "data" should be string of html
    // context (optional): If specified, the fragment will be created in this context,
    // defaults to document
    // keepScripts (optional): If true, will include scripts passed in the html string
    jQuery.parseHTML = function(data, context, keepScripts) {
        if (typeof data !== "string") return [];
        if (typeof context === "boolean") {
            keepScripts = context;
            context = false;
        }
        var base, parsed, scripts;
        if (!context) {
            // Stop scripts or inline event handlers from being executed immediately
            // by using document.implementation
            if (support.createHTMLDocument) {
                context = document.implementation.createHTMLDocument("");
                // Set the base href for the created document
                // so any parsed elements with URLs
                // are based on the document's URL (gh-2965)
                base = context.createElement("base");
                base.href = document.location.href;
                context.head.appendChild(base);
            } else context = document;
        }
        parsed = rsingleTag.exec(data);
        scripts = !keepScripts && [];
        // Single tag
        if (parsed) return [
            context.createElement(parsed[1])
        ];
        parsed = buildFragment([
            data
        ], context, scripts);
        if (scripts && scripts.length) jQuery(scripts).remove();
        return jQuery.merge([], parsed.childNodes);
    };
    /**
 * Load a url into a page
 */ jQuery.fn.load = function(url, params, callback) {
        var selector, type, response, self = this, off = url.indexOf(" ");
        if (off > -1) {
            selector = stripAndCollapse(url.slice(off));
            url = url.slice(0, off);
        }
        // If it's a function
        if (isFunction(params)) {
            // We assume that it's the callback
            callback = params;
            params = undefined;
        // Otherwise, build a param string
        } else if (params && typeof params === "object") type = "POST";
        // If we have elements to modify, make the request
        if (self.length > 0) jQuery.ajax({
            url: url,
            // If "type" variable is undefined, then "GET" method will be used.
            // Make value of this field explicit since
            // user can override it through ajaxSetup method
            type: type || "GET",
            dataType: "html",
            data: params
        }).done(function(responseText) {
            // Save response for use in complete callback
            response = arguments;
            self.html(selector ? // If a selector was specified, locate the right elements in a dummy div
            // Exclude scripts to avoid IE 'Permission Denied' errors
            jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result
            responseText);
        // If the request succeeds, this function gets "data", "status", "jqXHR"
        // but they are ignored because response was set above.
        // If it fails, this function gets "jqXHR", "status", "error"
        }).always(callback && function(jqXHR, status) {
            self.each(function() {
                callback.apply(this, response || [
                    jqXHR.responseText,
                    status,
                    jqXHR
                ]);
            });
        });
        return this;
    };
    jQuery.expr.pseudos.animated = function(elem) {
        return jQuery.grep(jQuery.timers, function(fn) {
            return elem === fn.elem;
        }).length;
    };
    jQuery.offset = {
        setOffset: function(elem, options, i2) {
            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, "position"), curElem = jQuery(elem), props = {
            };
            // Set position first, in-case top/left are set even on static elem
            if (position === "static") elem.style.position = "relative";
            curOffset = curElem.offset();
            curCSSTop = jQuery.css(elem, "top");
            curCSSLeft = jQuery.css(elem, "left");
            calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
            // Need to be able to calculate position if either
            // top or left is auto and position is either absolute or fixed
            if (calculatePosition) {
                curPosition = curElem.position();
                curTop = curPosition.top;
                curLeft = curPosition.left;
            } else {
                curTop = parseFloat(curCSSTop) || 0;
                curLeft = parseFloat(curCSSLeft) || 0;
            }
            if (isFunction(options)) // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
            options = options.call(elem, i2, jQuery.extend({
            }, curOffset));
            if (options.top != null) props.top = options.top - curOffset.top + curTop;
            if (options.left != null) props.left = options.left - curOffset.left + curLeft;
            if ("using" in options) options.using.call(elem, props);
            else curElem.css(props);
        }
    };
    jQuery.fn.extend({
        // offset() relates an element's border box to the document origin
        offset: function(options) {
            // Preserve chaining for setter
            if (arguments.length) return options === undefined ? this : this.each(function(i2) {
                jQuery.offset.setOffset(this, options, i2);
            });
            var rect, win, elem = this[0];
            if (!elem) return;
            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
            // Support: IE <=11 only
            // Running getBoundingClientRect on a
            // disconnected node in IE throws an error
            if (!elem.getClientRects().length) return {
                top: 0,
                left: 0
            };
            // Get document-relative position by adding viewport scroll to viewport-relative gBCR
            rect = elem.getBoundingClientRect();
            win = elem.ownerDocument.defaultView;
            return {
                top: rect.top + win.pageYOffset,
                left: rect.left + win.pageXOffset
            };
        },
        // position() relates an element's margin box to its offset parent's padding box
        // This corresponds to the behavior of CSS absolute positioning
        position: function() {
            if (!this[0]) return;
            var offsetParent, offset, doc, elem = this[0], parentOffset = {
                top: 0,
                left: 0
            };
            // position:fixed elements are offset from the viewport, which itself always has zero offset
            if (jQuery.css(elem, "position") === "fixed") // Assume position:fixed implies availability of getBoundingClientRect
            offset = elem.getBoundingClientRect();
            else {
                offset = this.offset();
                // Account for the *real* offset parent, which can be the document or its root element
                // when a statically positioned element is identified
                doc = elem.ownerDocument;
                offsetParent = elem.offsetParent || doc.documentElement;
                while(offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static")offsetParent = offsetParent.parentNode;
                if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
                    // Incorporate borders into its offset, since they are outside its content origin
                    parentOffset = jQuery(offsetParent).offset();
                    parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
                    parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
                }
            }
            // Subtract parent offsets and element margins
            return {
                top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
                left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
            };
        },
        // This method will return documentElement in the following cases:
        // 1) For the element inside the iframe without offsetParent, this method will return
        //    documentElement of the parent window
        // 2) For the hidden or detached element
        // 3) For body or html element, i.e. in case of the html node - it will return itself
        //
        // but those exceptions were never presented as a real life use-cases
        // and might be considered as more preferable results.
        //
        // This logic, however, is not guaranteed and can change at any point in the future
        offsetParent: function() {
            return this.map(function() {
                var offsetParent = this.offsetParent;
                while(offsetParent && jQuery.css(offsetParent, "position") === "static")offsetParent = offsetParent.offsetParent;
                return offsetParent || documentElement;
            });
        }
    });
    // Create scrollLeft and scrollTop methods
    jQuery.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(method, prop) {
        var top = "pageYOffset" === prop;
        jQuery.fn[method] = function(val) {
            return access(this, function(elem, method1, val1) {
                // Coalesce documents and windows
                var win;
                if (isWindow(elem)) win = elem;
                else if (elem.nodeType === 9) win = elem.defaultView;
                if (val1 === undefined) return win ? win[prop] : elem[method1];
                if (win) win.scrollTo(!top ? val1 : win.pageXOffset, top ? val1 : win.pageYOffset);
                else elem[method1] = val1;
            }, method, val, arguments.length);
        };
    });
    // Support: Safari <=7 - 9.1, Chrome <=37 - 49
    // Add the top/left cssHooks using jQuery.fn.position
    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
    // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
    // getComputedStyle returns percent when specified for top/left/bottom/right;
    // rather than make the css module depend on the offset module, just check for it here
    jQuery.each([
        "top",
        "left"
    ], function(_i, prop) {
        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
            if (computed) {
                computed = curCSS(elem, prop);
                // If curCSS returns percentage, fallback to offset
                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
            }
        });
    });
    // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
    jQuery.each({
        Height: "height",
        Width: "width"
    }, function(name, type) {
        jQuery.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
        }, function(defaultExtra, funcName) {
            // Margin is only for outerHeight, outerWidth
            jQuery.fn[funcName] = function(margin, value) {
                var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"), extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
                return access(this, function(elem, type1, value1) {
                    var doc;
                    if (isWindow(elem)) // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
                    return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
                    // Get document width or height
                    if (elem.nodeType === 9) {
                        doc = elem.documentElement;
                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
                        // whichever is greatest
                        return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
                    }
                    return value1 === undefined ? // Get width or height on the element, requesting but not forcing parseFloat
                    jQuery.css(elem, type1, extra) : // Set width or height on the element
                    jQuery.style(elem, type1, value1, extra);
                }, type, chainable ? margin : undefined, chainable);
            };
        });
    });
    jQuery.each([
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend"
    ], function(_i, type) {
        jQuery.fn[type] = function(fn) {
            return this.on(type, fn);
        };
    });
    jQuery.fn.extend({
        bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function(types, fn) {
            return this.off(types, null, fn);
        },
        delegate: function(selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function(selector, types, fn) {
            // ( namespace ) or ( selector, types [, fn] )
            return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
        },
        hover: function(fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
        }
    });
    jQuery.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(_i, name) {
        // Handle event binding
        jQuery.fn[name] = function(data, fn) {
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
        };
    });
    // Support: Android <=4.0 only
    // Make sure we trim BOM and NBSP
    var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    // Bind a function to a context, optionally partially applying any
    // arguments.
    // jQuery.proxy is deprecated to promote standards (specifically Function#bind)
    // However, it is not slated for removal any time soon
    jQuery.proxy = function(fn, context) {
        var tmp, args, proxy;
        if (typeof context === "string") {
            tmp = fn[context];
            context = fn;
            fn = tmp;
        }
        // Quick check to determine if target is callable, in the spec
        // this throws a TypeError, but we will just return undefined.
        if (!isFunction(fn)) return undefined;
        // Simulated bind
        args = slice.call(arguments, 2);
        proxy = function() {
            return fn.apply(context || this, args.concat(slice.call(arguments)));
        };
        // Set the guid of unique handler to the same of original handler, so it can be removed
        proxy.guid = fn.guid = fn.guid || jQuery.guid++;
        return proxy;
    };
    jQuery.holdReady = function(hold) {
        if (hold) jQuery.readyWait++;
        else jQuery.ready(true);
    };
    jQuery.isArray = Array.isArray;
    jQuery.parseJSON = JSON.parse;
    jQuery.nodeName = nodeName;
    jQuery.isFunction = isFunction;
    jQuery.isWindow = isWindow;
    jQuery.camelCase = camelCase;
    jQuery.type = toType;
    jQuery.now = Date.now;
    jQuery.isNumeric = function(obj) {
        // As of jQuery 3.0, isNumeric is limited to
        // strings and numbers (primitives or objects)
        // that can be coerced to finite numbers (gh-2662)
        var type = jQuery.type(obj);
        return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")
        // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
        // subtraction forces infinities to NaN
        !isNaN(obj - parseFloat(obj));
    };
    jQuery.trim = function(text) {
        return text == null ? "" : (text + "").replace(rtrim, "");
    };
    // Register as a named AMD module, since jQuery can be concatenated with other
    // files that may use define, but not via a proper concatenation script that
    // understands anonymous AMD modules. A named AMD is safest and most robust
    // way to register. Lowercase jquery is used because AMD module names are
    // derived from file names, and jQuery is normally delivered in a lowercase
    // file name. Do this after creating the global so that if an AMD module wants
    // to call noConflict to hide this version of jQuery, it will work.
    // Note that for maximum portability, libraries that are not jQuery should
    // declare themselves as anonymous modules, and avoid setting a global if an
    // AMD loader is present. jQuery is a special case. For more information, see
    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
    if (typeof define === "function" && define.amd) define("jquery", [], function() {
        return jQuery;
    });
    var // Map over jQuery in case of overwrite
    _jQuery = window.jQuery, // Map over the $ in case of overwrite
    _$ = window.$;
    jQuery.noConflict = function(deep) {
        if (window.$ === jQuery) window.$ = _$;
        if (deep && window.jQuery === jQuery) window.jQuery = _jQuery;
        return jQuery;
    };
    // Expose jQuery and $ identifiers, even in AMD
    // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
    // and CommonJS for browser emulators (#13566)
    if (typeof noGlobal === "undefined") window.jQuery = window.$ = jQuery;
    return jQuery;
});

},{}],"hLUnm":[function(require,module,exports) {
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BookingState = exports.State = void 0;
/**
 * @module state.ts
*/ require("regenerator-runtime/runtime");
var querySender_1 = require("../CORS/querySender");
var sharedActions_1 = require("../shared/sharedActions");
var shared = __importStar(require("../shared/sharedData"));
var eachMinuteOfInterval_1 = __importDefault(require("date-fns/eachMinuteOfInterval"));
var jquery_1 = __importDefault(require("jquery"));
var date_fns_1 = require("date-fns");
var timeSelect_1 = require("../components/timeSelect");
var isWithinInterval_1 = __importDefault(require("date-fns/isWithinInterval"));
var transliteration_1 = require("transliteration");
function trimPeriodBy3HoursOnEachSide(period) {
    var begin = new Date(period.begin);
    var end = new Date(period.end);
    end = date_fns_1.addMinutes(end, end.getTimezoneOffset());
    begin = date_fns_1.addMinutes(begin, begin.getTimezoneOffset());
    //периоды менее 7 часов не обрезаются
    if (end.valueOf() - begin.valueOf() < 21600000) return period;
    end = date_fns_1.addHours(end, -3);
    begin = date_fns_1.addHours(begin, 3);
    return {
        begin: begin,
        end: end
    };
}
function trimMultiplePeriodsBy3HoursOnEachSide(periods) {
    return periods.map(function(el) {
        return trimPeriodBy3HoursOnEachSide(el);
    });
}
function reformatPeriod(period) {
    period.begin = period.begin.toString().replace(' ', 'T');
    period.end = period.end.toString().replace(' ', 'T');
    return period;
}
function reformatDateForIOS(periods) {
    return periods.map(function(el) {
        return reformatPeriod(el);
    });
}
function isWithinIntervals(periods, timestamps) {
    var timeIsFound = true;
    var timeNotFound = false;
    for(var i = 0; i < timestamps.length; ++i){
        var dt = timestamps[i];
        for(var j = 0; j < periods.length; ++j){
            if (isWithinInterval_1.default(dt, {
                start: new Date(periods[j].begin),
                end: new Date(periods[j].end)
            })) return timeIsFound;
        }
    }
    return timeNotFound;
}
function isWithinIntervalsAndFindIt(periods, timestamps) {
    var timeIsFound = true;
    var timeNotFound = undefined;
    var periodsMoreThen2Days = periods.filter(function(period) {
        return new Date(period.end).valueOf() - new Date(period.begin).valueOf() > 172800000;
    });
    //если период длится более 2 суток, то мне нужно произвести не более 2 сравнений: первого и последнего ts, если оба ts в периоде, то остальные 1438 ts можно не сравнивать 
    periodsMoreThen2Days.forEach(function(period) {
        return date_fns_1.isAfter(timestamps[0], new Date(period.begin)) && date_fns_1.isBefore(timestamps[timestamps.length - 1], new Date(period.end));
    });
    for(var i = 0; i < timestamps.length; ++i){
        var dt = timestamps[i];
        for(var j = 0; j < periods.length; ++j){
            if (isWithinInterval_1.default(dt, {
                start: new Date(periods[j].begin),
                end: new Date(periods[j].end)
            })) return periods[j];
        }
    }
    return timeNotFound;
}
var defultCarListResponse = {
    result_code: 0,
    cars: []
};
var defaultPlacesResponse = {
    result_code: 0,
    places: []
};
var State = function() {
    function State1() {
        this.selectedCarModelName = '';
        this.ageChecker = false;
        this.policyChecker = false;
        this.mainCarForBid = 0;
        //-----------------------------------------------------------------------------------------
        this.firstDateOfRange = undefined;
        //-----------------------------------------------------------------------------------------
        this.firstTimeOfRange = undefined;
        this.secondTimeOfRange = undefined;
        this.secondDateOfRange = undefined;
        /**
         * @description адреса места для выдачи и возврата арендованных авто
        */ this.placesForReceiveAndReturnCars = {
            result_code: 0,
            places: []
        };
        /**
         * @description все авто, доступные для бронирования у заказчика
        */ this.allCarsForRent = defultCarListResponse;
        /**
         * @description все авто одной модели, которая бронируется в настоящее время
        */ this.allCarsForCurrentBooking = [];
        /**
         * @description телефон арендатора
        */ this.customersPhone = '';
        /**
         * @description телефон имя арендатора
        */ this.customersName = '';
        /**
         * массив данных, который содержит данные о периодах брони в отношении allCarsForCurrentBooking
        */ this.busyPeriodsForCurrentBookingCar = [];
        /**
         * @description массив данных, который содержит исходные значения периодов для текущих машин
        */ this.freePeriodsForCurrentBookingCar = [];
        this.freePeriodsForCurrentBookingCarAfterFirstSelect = [];
        /**
         * @description массив данных, который содержит исходные значения периодов для всех машин
        */ this.freePeriodsForAllBookingCar = [];
        /**
         * Массив дней, которые полностью недоступны для брони всех allCarsForCurrentBooking
        */ this.fulldaysNotAvaivableForBooking = [];
        /**
         * Массив дней, которые частично недоступны для брони всех allCarsForCurrentBooking - ключи, значения - это массив недоступных отрезков по 15 мину
        */ this.partedDayNotAvaiableForBooking = [];
    }
    State1.prototype.getSelectedCarModelName = function() {
        return new String(this.selectedCarModelName);
    };
    State1.prototype.toggleAgeChecker = function() {
        this.ageChecker = !this.ageChecker;
        return this.ageChecker;
    };
    State1.prototype.togglePolicyChecker = function() {
        this.policyChecker = !this.policyChecker;
        return this.policyChecker;
    };
    State1.prototype.getMainCar = function() {
        return this.mainCarForBid;
    };
    State1.prototype.isFirstDateOfRangeWasSelect = function() {
        return this.firstDateOfRange ? true : false;
    };
    State1.prototype.getFirstDateOfRange = function() {
        if (this.firstDateOfRange) return new Date(this.firstDateOfRange);
        else return shared.badDateEqualNull;
    };
    State1.prototype.setFirstDateOfRange = function(timestampOfFirstSelectDate) {
        var arrayForGenerateHTML = this.getFreeTimeSlotsForReceiveAndReturnCar(timestampOfFirstSelectDate);
        this.firstDateOfRange = timestampOfFirstSelectDate;
        timeSelect_1.timeSelectorBy15Min('receive', shared.domElementId.selectReceiveTimeId, arrayForGenerateHTML);
        sharedActions_1.validateField(shared.domElementId.receiveDataId, shared.domElementId.receiveDateTextId);
    };
    State1.prototype.dropFirstDateOfRange = function() {
        jquery_1.default("#" + shared.domElementId.receiveDataId).val('');
        jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).val('00:00');
        jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).attr('disabled', 'disabled');
        this.freePeriodsForCurrentBookingCarAfterFirstSelect = this.freePeriodsForCurrentBookingCar;
        this.firstDateOfRange = undefined;
        sharedActions_1.validateField(shared.domElementId.receiveDataId, shared.domElementId.receiveDateTextId);
    };
    State1.prototype.setFirstTimeOfRange = function(ftr) {
        this.firstTimeOfRange = ftr;
    };
    State1.prototype.getFirstTimeOfRange = function() {
        var ftr = this.firstTimeOfRange;
        return ftr;
    };
    State1.prototype.setSecondTimeOfRange = function(ftr) {
        this.secondTimeOfRange = ftr;
    };
    State1.prototype.getSecondTimeOfRange = function() {
        var ftr = this.firstTimeOfRange;
        return ftr;
    };
    State1.prototype.isSecondDateOfRangeWasSelect = function() {
        return this.secondDateOfRange ? true : false;
    };
    State1.prototype.setSecondDateOfRange = function(timestampOfSecondSelectDate) {
        var _a;
        this.secondDateOfRange = timestampOfSecondSelectDate;
        var selectedTime = (_a = jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).val()) === null || _a === void 0 ? void 0 : _a.toString().split(':').map(function(it) {
            return parseInt(it, 10);
        });
        var firstDate = this.getFirstDateOfRange();
        var dt = new Date(firstDate);
        if (selectedTime && selectedTime[0]) dt === null || dt === void 0 || dt.setHours(selectedTime[0]);
        if (selectedTime && selectedTime[1]) dt === null || dt === void 0 || dt.setMinutes(selectedTime[1]);
        if (dt) this.filterCurrentCarForBookingBySelection(dt);
        jquery_1.default("#" + shared.domElementId.selectReturnTimeId).attr('disabled', 'disabled');
        timeSelect_1.correctionSecondTimeAfterFirst(this);
        this.setMainCar();
        sharedActions_1.validateField(shared.domElementId.returnDataId, shared.domElementId.returnDateTextId);
    };
    State1.prototype.dropSecondDateOfRange = function() {
        jquery_1.default("#" + shared.domElementId.returnDataId).val('');
        jquery_1.default("#" + shared.domElementId.selectReturnTimeId).val('00:00');
        jquery_1.default("#" + shared.domElementId.selectReturnTimeId).attr('disabled', 'disabled');
        this.secondDateOfRange = undefined;
        sharedActions_1.validateField(shared.domElementId.returnDataId, shared.domElementId.returnDateTextId);
    };
    State1.prototype.getSecondDateOfRange = function() {
        if (this.secondDateOfRange) return new Date(this.secondDateOfRange);
        else return shared.badDateEqualNull;
    };
    State1.prototype.setMainCar = function() {
        this.mainCarForBid = this.freePeriodsForCurrentBookingCarAfterFirstSelect[0].car_id;
    };
    State1.prototype.carIdForBidCost = function() {
        return this.allCarsForCurrentBooking[0].car_id;
    };
    State1.prototype.filterCurrentCarForBookingBySelection = function(timestamp) {
        var splitDate = eachMinuteOfInterval_1.default({
            start: timestamp,
            end: new Date(timestamp.getFullYear(), timestamp.getMonth(), timestamp.getDate() + 1)
        }, {
            step: 15
        });
        this.freePeriodsForCurrentBookingCarAfterFirstSelect = this.freePeriodsForCurrentBookingCar.filter(function(carsWithPeriods) {
            return isWithinIntervals(carsWithPeriods.car_periods, splitDate);
        });
    };
    /**
     * @description сервер принимет дату в виде "2021-11-01 10:00Z", поэтому timestamp требуется постоянно переводить в этот формат, для чего служит эта функция
    */ State1.prototype.reformatDate = function(dt) {
        return dt.toLocaleDateString().split('.').reverse().join('-') + " " + dt.toLocaleTimeString() + "Z";
    };
    State1.prototype.fetchFreePeriodsForAllCars = function() {
        return __awaiter(this, void 0, void 0, function() {
            var carsIdOfAllCars, promisesForFetctFreePeriodsDate, beginDateForAllCars, endDateForAllCars, resultOfFetchFreePeriods;
            var _this = this;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        carsIdOfAllCars = [];
                        promisesForFetctFreePeriodsDate = [];
                        this.allCarsForRent.cars.forEach(function(car) {
                            carsIdOfAllCars.push(car.car_id);
                        });
                        beginDateForAllCars = sharedActions_1.currentYearForServer();
                        endDateForAllCars = sharedActions_1.nextYearForServer();
                        carsIdOfAllCars.forEach(function(id) {
                            var requestForFreePeriods = {
                                car_id: id,
                                begin: beginDateForAllCars,
                                end: endDateForAllCars,
                                include_idles: true,
                                include_reserves: true
                            };
                            promisesForFetctFreePeriodsDate.push(querySender_1.getCarPeriodList(requestForFreePeriods));
                        });
                        return [
                            4 /*yield*/ ,
                            Promise.all(promisesForFetctFreePeriodsDate)
                        ];
                    case 1:
                        resultOfFetchFreePeriods = _a.sent();
                        resultOfFetchFreePeriods.forEach(function(res, inx) {
                            res.car_periods = reformatDateForIOS(res.car_periods);
                            _this.freePeriodsForAllBookingCar.push(__assign(__assign({
                            }, _this.allCarsForRent.cars[inx]), {
                                car_periods: trimMultiplePeriodsBy3HoursOnEachSide(res.car_periods)
                            }));
                        });
                        this.freePeriodsForCurrentBookingCar = this.freePeriodsForAllBookingCar.filter(function(carPeriodItem) {
                            return _this.allCarsForCurrentBooking.find(function(item, inx) {
                                return item.car_id === carPeriodItem.car_id ? true : false;
                            });
                        });
                        this.freePeriodsForCurrentBookingCarAfterFirstSelect = this.freePeriodsForCurrentBookingCar;
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    /**
     * @description инициализация данных через асинхронные запросы
    */ State1.prototype.init = function() {
        return __awaiter(this, void 0, void 0, function() {
            var promises, res, places;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        promises = [];
                        // --------------------------------------------------
                        promises.push(querySender_1.getPlaceList());
                        promises.push(querySender_1.getCarList());
                        return [
                            4 /*yield*/ ,
                            Promise.all(promises)
                        ];
                    case 1:
                        res = _a.sent();
                        places = res[0];
                        places.places.splice(0, 3); //смысл убрать первые 3 элемента в том, что об этот попросил заказчик
                        places.places = places.places.filter(function(place) {
                            return !place.archive;
                        });
                        this.placesForReceiveAndReturnCars = places;
                        //список машин
                        // --------------------------------------------------
                        this.allCarsForRent = res[1];
                        return [
                            2 /*return*/ ,
                            this
                        ];
                }
            });
        });
    };
    State1.prototype.getPlacesForReceiveAndReturnCars = function() {
        var places = this.placesForReceiveAndReturnCars;
        return {
            result_code: places.result_code,
            places: places.places
        };
    };
    State1.prototype.saveCustomersPhone = function(num) {
        this.customersPhone = num;
    };
    State1.prototype.getCustomersPhone = function() {
        return new String(this.customersPhone).toString();
    };
    State1.prototype.saveCustomersName = function(name) {
        this.customersName = name;
    };
    State1.prototype.getCustomersName = function() {
        return new String(this.customersName).toString();
    };
    State1.prototype.getAllCarsForRent = function() {
        var res = this.allCarsForRent;
        res.cars.map(function(car) {
            // car.model = car.model.
            // console.log(transliterate(car.model));
            car.model = transliteration_1.transliterate(car.model);
        });
        return {
            result_code: res.result_code,
            cars: res.cars
        };
    };
    State1.prototype.selectCar = function(nameOfCarFromCarSelectOrHash) {
        return __awaiter(this, void 0, void 0, function() {
            var carModelNamesForCompare;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (!nameOfCarFromCarSelectOrHash) return [
                            2 /*return*/ 
                        ];
                        carModelNamesForCompare = [];
                        //step0 преобразуем имена для сравнения
                        this.getAllCarsForRent().cars.forEach(function(car) {
                            // console.log(formatCarModelFromSelectToHash(formatCarModelFromBaseToSelect(car.model)));
                            carModelNamesForCompare.push(sharedActions_1.formatCarModelFromBaseToSelect(car.model));
                        });
                        //step1 фильтруем массив по совпадению с select
                        this.allCarsForCurrentBooking = this.allCarsForRent.cars.filter(function(_, inx) {
                            return carModelNamesForCompare[inx] === nameOfCarFromCarSelectOrHash;
                        });
                        return [
                            4 /*yield*/ ,
                            this.fetchFreePeriodsForAllCars()
                        ];
                    case 1:
                        _a.sent();
                        this.selectedCarModelName = nameOfCarFromCarSelectOrHash;
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    State1.prototype.findFirstPeriodWhichConsistTimestamt = function(periods, timestamp) {
        var findedPeriod = periods.find(function(item) {
            return isWithinInterval_1.default(timestamp, {
                start: new Date(item.begin),
                end: new Date(item.end)
            });
        });
        return findedPeriod ? true : false;
    };
    State1.prototype.isDateBusy = function(dt) {
        // console.log('busy');
        var _this = this;
        var splitDate = eachMinuteOfInterval_1.default({
            start: dt,
            end: new Date(dt.getFullYear(), dt.getMonth(), dt.getDate() + 1)
        }, {
            step: 15
        });
        var fourHoursContinuesDurationFounded = false;
        var dateIsBusy = true;
        var dateIsFree = false;
        var numberTimeSlotsInFourHours = 4; //one
        if (date_fns_1.isBefore(dt, new Date())) return dateIsBusy;
        if (this.isFirstDateOfRangeWasSelect()) {
            if (!this.firstDateOfRange) return dateIsFree;
            if (this.firstDateOfRange) this.filterCurrentCarForBookingBySelection(this.firstDateOfRange);
            if (date_fns_1.isBefore(dt, this.firstDateOfRange)) return dateIsBusy;
            var lastEndOfLatestInterval_1 = shared.badDateEqualNull;
            var findedPeriod = [];
            for(var i = 0; i < this.freePeriodsForCurrentBookingCarAfterFirstSelect.length; ++i){
                var periods = this.freePeriodsForCurrentBookingCarAfterFirstSelect[i].car_periods;
                var slicePeriods = periods.filter(function(period) {
                    return _this.firstDateOfRange && date_fns_1.isAfter(new Date(period.end), _this.firstDateOfRange);
                });
                slicePeriods = slicePeriods.filter(function(period) {
                    return _this.firstDateOfRange && date_fns_1.isBefore(new Date(period.begin), new Date(_this.firstDateOfRange).setDate(_this.firstDateOfRange.getDate() + 1));
                });
                var finded = isWithinIntervalsAndFindIt(slicePeriods, sharedActions_1.splitDateByMinutes(this.firstDateOfRange, 15));
                if (finded) findedPeriod.push(finded);
            }
            findedPeriod.forEach(function(period) {
                if (date_fns_1.isAfter(new Date(period.end), lastEndOfLatestInterval_1)) lastEndOfLatestInterval_1 = new Date(period.end);
            });
            if (date_fns_1.isAfter(dt, lastEndOfLatestInterval_1)) return dateIsBusy;
            return dateIsFree;
        }
        this.freePeriodsForCurrentBookingCarAfterFirstSelect.forEach(function(item, inx) {
            var continuesDurationOfFreePeriods = 0;
            var slicePeriods = item.car_periods.filter(function(period) {
                return date_fns_1.isAfter(new Date(period.end), splitDate[0]);
            });
            slicePeriods = slicePeriods.filter(function(period) {
                return date_fns_1.isBefore(new Date(period.begin), splitDate[splitDate.length - 1]);
            });
            for(var i = 0; i < splitDate.length; ++i){
                var date = splitDate[i];
                if (continuesDurationOfFreePeriods >= numberTimeSlotsInFourHours) break;
                if (_this.findFirstPeriodWhichConsistTimestamt(slicePeriods, date)) continuesDurationOfFreePeriods += 1;
                else continuesDurationOfFreePeriods = 0;
            }
            if (continuesDurationOfFreePeriods >= numberTimeSlotsInFourHours) fourHoursContinuesDurationFounded = true;
        });
        if (fourHoursContinuesDurationFounded) return dateIsFree;
        return dateIsBusy;
    };
    State1.prototype.getFreeTimeSlotsForReceiveAndReturnCar = function(dt) {
        var splitDate = eachMinuteOfInterval_1.default({
            start: dt,
            end: new Date(dt.getFullYear(), dt.getMonth(), dt.getDate() + 1)
        }, {
            step: 15
        });
        var fourHoursContinuesDurationFounded = false;
        var freeTimeSlotsForReceiveAndReturnCar = [];
        var numberTimeSlotsInFourHours = 4; //seven hours
        var continuesDurationOfFreePeriods = 0;
        for(var j = 0; j < this.freePeriodsForCurrentBookingCarAfterFirstSelect.length; ++j){
            var slicePeriods = this.freePeriodsForCurrentBookingCarAfterFirstSelect[j].car_periods.filter(function(period) {
                return date_fns_1.isAfter(new Date(period.end), splitDate[0]);
            });
            slicePeriods = slicePeriods.filter(function(period) {
                return date_fns_1.isBefore(new Date(period.begin), splitDate[splitDate.length - 1]);
            });
            for(var i = 0; i < splitDate.length; ++i){
                var date = splitDate[i];
                if (this.findFirstPeriodWhichConsistTimestamt(slicePeriods, date)) {
                    freeTimeSlotsForReceiveAndReturnCar.push(date);
                    continuesDurationOfFreePeriods += 1;
                } else if (continuesDurationOfFreePeriods < numberTimeSlotsInFourHours) {
                    freeTimeSlotsForReceiveAndReturnCar = [];
                    continuesDurationOfFreePeriods = 0;
                }
            }
            if (continuesDurationOfFreePeriods >= numberTimeSlotsInFourHours) fourHoursContinuesDurationFounded = true;
        }
        if (fourHoursContinuesDurationFounded) {
            var filledArrayOfFreeTimeSlots = splitDate;
            for(var i = 0; i < filledArrayOfFreeTimeSlots.length; ++i){
                var findItInFreeTimeSlotsArr = freeTimeSlotsForReceiveAndReturnCar.indexOf(filledArrayOfFreeTimeSlots[i]) >= 0 ? true : false;
                if (!findItInFreeTimeSlotsArr) filledArrayOfFreeTimeSlots[i] = shared.badDateEqualNull;
            }
            if (this.firstDateOfRange) {
                var findedPeriod = [];
                var lastEndOfLatestInterval_2 = shared.badDateEqualNull;
                for(var i = 0; i < this.freePeriodsForCurrentBookingCarAfterFirstSelect.length; ++i){
                    var periods = this.freePeriodsForCurrentBookingCarAfterFirstSelect[i].car_periods;
                    var finded = isWithinIntervalsAndFindIt(periods, sharedActions_1.splitDateByMinutes(this.firstDateOfRange, 15));
                    if (finded) findedPeriod.push(finded);
                }
                findedPeriod.forEach(function(period) {
                    if (date_fns_1.isAfter(new Date(period.end), lastEndOfLatestInterval_2)) lastEndOfLatestInterval_2 = new Date(period.end);
                });
                for(var i = 0; i < filledArrayOfFreeTimeSlots.length; ++i)if (date_fns_1.isAfter(filledArrayOfFreeTimeSlots[i], lastEndOfLatestInterval_2)) filledArrayOfFreeTimeSlots[i] = shared.badDateEqualNull;
            }
            return filledArrayOfFreeTimeSlots;
        }
        return [];
    };
    return State1;
}();
exports.State = State;
var BookingState = function() {
    return new State().init();
};
exports.BookingState = BookingState;

},{"regenerator-runtime/runtime":"cH8Iq","../CORS/querySender":"gaZqi","../shared/sharedActions":"htU3t","../shared/sharedData":"iUwdp","date-fns/eachMinuteOfInterval":"4Ootm","jquery":"igaHu","date-fns":"g3J3T","../components/timeSelect":"dSg0O","date-fns/isWithinInterval":"gyFHB","transliteration":"6nTIY"}],"cH8Iq":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var runtime = function(exports) {
    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {
    };
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define(obj, key, value) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
        return obj[key];
    }
    try {
        // IE 8 has a broken Object.defineProperty that only works on DOM objects.
        define({
        }, "");
    } catch (err) {
        define = function(obj, key, value) {
            return obj[key] = value;
        };
    }
    function wrap(innerFn, outerFn, self, tryLocsList) {
        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
        var generator = Object.create(protoGenerator.prototype);
        var context = new Context(tryLocsList || []);
        // The ._invoke method unifies the implementations of the .next,
        // .throw, and .return methods.
        generator._invoke = makeInvokeMethod(innerFn, self, context);
        return generator;
    }
    exports.wrap = wrap;
    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
        try {
            return {
                type: "normal",
                arg: fn.call(obj, arg)
            };
        } catch (err) {
            return {
                type: "throw",
                arg: err
            };
        }
    }
    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {
    };
    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {
    }
    function GeneratorFunction() {
    }
    function GeneratorFunctionPrototype() {
    }
    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {
    };
    define(IteratorPrototype, iteratorSymbol, function() {
        return this;
    });
    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = GeneratorFunctionPrototype;
    define(Gp, "constructor", GeneratorFunctionPrototype);
    define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");
    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(method) {
            define(prototype, method, function(arg) {
                return this._invoke(method, arg);
            });
        });
    }
    exports.isGeneratorFunction = function(genFun) {
        var ctor = typeof genFun === "function" && genFun.constructor;
        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };
    exports.mark = function(genFun) {
        if (Object.setPrototypeOf) Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
        else {
            genFun.__proto__ = GeneratorFunctionPrototype;
            define(genFun, toStringTagSymbol, "GeneratorFunction");
        }
        genFun.prototype = Object.create(Gp);
        return genFun;
    };
    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    exports.awrap = function(arg) {
        return {
            __await: arg
        };
    };
    function AsyncIterator(generator, PromiseImpl) {
        function invoke(method, arg, resolve, reject) {
            var record = tryCatch(generator[method], generator, arg);
            if (record.type === "throw") reject(record.arg);
            else {
                var result = record.arg;
                var value = result.value;
                if (value && typeof value === "object" && hasOwn.call(value, "__await")) return PromiseImpl.resolve(value.__await).then(function(value1) {
                    invoke("next", value1, resolve, reject);
                }, function(err) {
                    invoke("throw", err, resolve, reject);
                });
                return PromiseImpl.resolve(value).then(function(unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                }, function(error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke("throw", error, resolve, reject);
                });
            }
        }
        var previousPromise;
        function enqueue(method, arg) {
            function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function(resolve, reject) {
                    invoke(method, arg, resolve, reject);
                });
            }
            return previousPromise = // If enqueue has been called before, then we want to wait until
            // all previous Promises have been resolved before calling invoke,
            // so that results are always delivered in the correct order. If
            // enqueue has not been called before, then it is important to
            // call invoke immediately, without waiting on a callback to fire,
            // so that the async generator function has the opportunity to do
            // any necessary setup in a predictable way. This predictability
            // is why the Promise constructor synchronously invokes its
            // executor callback, and why async functions synchronously
            // execute code before the first await. Since we implement simple
            // async functions in terms of async generators, it is especially
            // important to get this right, even though it requires care.
            previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
            // invocations of the iterator.
            callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        }
        // Define the unified helper method that is used to implement .next,
        // .throw, and .return (see defineIteratorMethods).
        this._invoke = enqueue;
    }
    defineIteratorMethods(AsyncIterator.prototype);
    define(AsyncIterator.prototype, asyncIteratorSymbol, function() {
        return this;
    });
    exports.AsyncIterator = AsyncIterator;
    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
        if (PromiseImpl === void 0) PromiseImpl = Promise;
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
        return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
         : iter.next().then(function(result) {
            return result.done ? result.value : iter.next();
        });
    };
    function makeInvokeMethod(innerFn, self, context) {
        var state = GenStateSuspendedStart;
        return function invoke(method, arg) {
            if (state === GenStateExecuting) throw new Error("Generator is already running");
            if (state === GenStateCompleted) {
                if (method === "throw") throw arg;
                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
            }
            context.method = method;
            context.arg = arg;
            while(true){
                var delegate = context.delegate;
                if (delegate) {
                    var delegateResult = maybeInvokeDelegate(delegate, context);
                    if (delegateResult) {
                        if (delegateResult === ContinueSentinel) continue;
                        return delegateResult;
                    }
                }
                if (context.method === "next") // Setting context._sent for legacy support of Babel's
                // function.sent implementation.
                context.sent = context._sent = context.arg;
                else if (context.method === "throw") {
                    if (state === GenStateSuspendedStart) {
                        state = GenStateCompleted;
                        throw context.arg;
                    }
                    context.dispatchException(context.arg);
                } else if (context.method === "return") context.abrupt("return", context.arg);
                state = GenStateExecuting;
                var record = tryCatch(innerFn, self, context);
                if (record.type === "normal") {
                    // If an exception is thrown from innerFn, we leave state ===
                    // GenStateExecuting and loop back for another invocation.
                    state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                    if (record.arg === ContinueSentinel) continue;
                    return {
                        value: record.arg,
                        done: context.done
                    };
                } else if (record.type === "throw") {
                    state = GenStateCompleted;
                    // Dispatch the exception by looping back around to the
                    // context.dispatchException(context.arg) call above.
                    context.method = "throw";
                    context.arg = record.arg;
                }
            }
        };
    }
    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
        var method = delegate.iterator[context.method];
        if (method === undefined) {
            // A .throw or .return when the delegate iterator has no .throw
            // method always terminates the yield* loop.
            context.delegate = null;
            if (context.method === "throw") {
                // Note: ["return"] must be used for ES3 parsing compatibility.
                if (delegate.iterator["return"]) {
                    // If the delegate iterator has a return method, give it a
                    // chance to clean up.
                    context.method = "return";
                    context.arg = undefined;
                    maybeInvokeDelegate(delegate, context);
                    if (context.method === "throw") // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                }
                context.method = "throw";
                context.arg = new TypeError("The iterator does not provide a 'throw' method");
            }
            return ContinueSentinel;
        }
        var record = tryCatch(method, delegate.iterator, context.arg);
        if (record.type === "throw") {
            context.method = "throw";
            context.arg = record.arg;
            context.delegate = null;
            return ContinueSentinel;
        }
        var info = record.arg;
        if (!info) {
            context.method = "throw";
            context.arg = new TypeError("iterator result is not an object");
            context.delegate = null;
            return ContinueSentinel;
        }
        if (info.done) {
            // Assign the result of the finished delegate to the temporary
            // variable specified by delegate.resultName (see delegateYield).
            context[delegate.resultName] = info.value;
            // Resume execution at the desired location (see delegateYield).
            context.next = delegate.nextLoc;
            // If context.method was "throw" but the delegate handled the
            // exception, let the outer generator proceed normally. If
            // context.method was "next", forget context.arg since it has been
            // "consumed" by the delegate iterator. If context.method was
            // "return", allow the original .return call to continue in the
            // outer generator.
            if (context.method !== "return") {
                context.method = "next";
                context.arg = undefined;
            }
        } else // Re-yield the result returned by the delegate method.
        return info;
        // The delegate iterator is finished, so forget it and continue with
        // the outer generator.
        context.delegate = null;
        return ContinueSentinel;
    }
    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);
    define(Gp, toStringTagSymbol, "Generator");
    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    define(Gp, iteratorSymbol, function() {
        return this;
    });
    define(Gp, "toString", function() {
        return "[object Generator]";
    });
    function pushTryEntry(locs) {
        var entry = {
            tryLoc: locs[0]
        };
        if (1 in locs) entry.catchLoc = locs[1];
        if (2 in locs) {
            entry.finallyLoc = locs[2];
            entry.afterLoc = locs[3];
        }
        this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
        var record = entry.completion || {
        };
        record.type = "normal";
        delete record.arg;
        entry.completion = record;
    }
    function Context(tryLocsList) {
        // The root entry object (effectively a try statement without a catch
        // or a finally block) gives us a place to store values thrown from
        // locations where there is no enclosing try statement.
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ];
        tryLocsList.forEach(pushTryEntry, this);
        this.reset(true);
    }
    exports.keys = function(object) {
        var keys = [];
        for(var key in object)keys.push(key);
        keys.reverse();
        // Rather than returning an object with a next method, we keep
        // things simple and return the next function itself.
        return function next() {
            while(keys.length){
                var key1 = keys.pop();
                if (key1 in object) {
                    next.value = key1;
                    next.done = false;
                    return next;
                }
            }
            // To avoid creating an additional object, we just hang the .value
            // and .done properties off the next function object itself. This
            // also ensures that the minifier will not anonymize the function.
            next.done = true;
            return next;
        };
    };
    function values(iterable) {
        if (iterable) {
            var iteratorMethod = iterable[iteratorSymbol];
            if (iteratorMethod) return iteratorMethod.call(iterable);
            if (typeof iterable.next === "function") return iterable;
            if (!isNaN(iterable.length)) {
                var i = -1, next = function next1() {
                    while((++i) < iterable.length)if (hasOwn.call(iterable, i)) {
                        next1.value = iterable[i];
                        next1.done = false;
                        return next1;
                    }
                    next1.value = undefined;
                    next1.done = true;
                    return next1;
                };
                return next.next = next;
            }
        }
        // Return an iterator with no values.
        return {
            next: doneResult
        };
    }
    exports.values = values;
    function doneResult() {
        return {
            value: undefined,
            done: true
        };
    }
    Context.prototype = {
        constructor: Context,
        reset: function(skipTempReset) {
            this.prev = 0;
            this.next = 0;
            // Resetting context._sent for legacy support of Babel's
            // function.sent implementation.
            this.sent = this._sent = undefined;
            this.done = false;
            this.delegate = null;
            this.method = "next";
            this.arg = undefined;
            this.tryEntries.forEach(resetTryEntry);
            if (!skipTempReset) {
                for(var name in this)// Not sure about the optimal order of these conditions:
                if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) this[name] = undefined;
            }
        },
        stop: function() {
            this.done = true;
            var rootEntry = this.tryEntries[0];
            var rootRecord = rootEntry.completion;
            if (rootRecord.type === "throw") throw rootRecord.arg;
            return this.rval;
        },
        dispatchException: function(exception) {
            if (this.done) throw exception;
            var context = this;
            function handle(loc, caught) {
                record.type = "throw";
                record.arg = exception;
                context.next = loc;
                if (caught) {
                    // If the dispatched exception was caught by a catch block,
                    // then let that catch block handle the exception normally.
                    context.method = "next";
                    context.arg = undefined;
                }
                return !!caught;
            }
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                var record = entry.completion;
                if (entry.tryLoc === "root") // Exception thrown outside of any try block that could handle
                // it, so set the completion value of the entire function to
                // throw the exception.
                return handle("end");
                if (entry.tryLoc <= this.prev) {
                    var hasCatch = hasOwn.call(entry, "catchLoc");
                    var hasFinally = hasOwn.call(entry, "finallyLoc");
                    if (hasCatch && hasFinally) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                        else if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else if (hasCatch) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                    } else if (hasFinally) {
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else throw new Error("try statement without catch or finally");
                }
            }
        },
        abrupt: function(type, arg) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                    var finallyEntry = entry;
                    break;
                }
            }
            if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) // Ignore the finally entry if control is not jumping to a
            // location outside the try/catch block.
            finallyEntry = null;
            var record = finallyEntry ? finallyEntry.completion : {
            };
            record.type = type;
            record.arg = arg;
            if (finallyEntry) {
                this.method = "next";
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
            }
            return this.complete(record);
        },
        complete: function(record, afterLoc) {
            if (record.type === "throw") throw record.arg;
            if (record.type === "break" || record.type === "continue") this.next = record.arg;
            else if (record.type === "return") {
                this.rval = this.arg = record.arg;
                this.method = "return";
                this.next = "end";
            } else if (record.type === "normal" && afterLoc) this.next = afterLoc;
            return ContinueSentinel;
        },
        finish: function(finallyLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                    this.complete(entry.completion, entry.afterLoc);
                    resetTryEntry(entry);
                    return ContinueSentinel;
                }
            }
        },
        "catch": function(tryLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                    var record = entry.completion;
                    if (record.type === "throw") {
                        var thrown = record.arg;
                        resetTryEntry(entry);
                    }
                    return thrown;
                }
            }
            // The context.catch method must only be called with a location
            // argument that corresponds to a known catch block.
            throw new Error("illegal catch attempt");
        },
        delegateYield: function(iterable, resultName, nextLoc) {
            this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc
            };
            if (this.method === "next") // Deliberately forget the last sent value so that we don't
            // accidentally pass it on to the delegate.
            this.arg = undefined;
            return ContinueSentinel;
        }
    };
    // Regardless of whether this script is executing as a CommonJS module
    // or not, return the runtime object so that we can declare the variable
    // regeneratorRuntime in the outer scope, which allows this module to be
    // injected easily by `bin/regenerator --include-runtime script.js`.
    return exports;
}(// If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
typeof module === "object" ? module.exports : {
});
try {
    regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
    // This module should not be running in strict mode, so the above
    // assignment should always work unless something is misconfigured. Just
    // in case runtime.js accidentally runs in strict mode, in modern engines
    // we can explicitly access globalThis. In older engines we can escape
    // strict mode using a global Function call. This could conceivably fail
    // if a Content Security Policy forbids using Function, but in that case
    // the proper solution is to fix the accidental strict mode problem. If
    // you've misconfigured your bundler to force strict mode and applied a
    // CSP to forbid Function, and you're not willing to fix either of those
    // problems, please detail your unique predicament in a GitHub issue.
    if (typeof globalThis === "object") globalThis.regeneratorRuntime = runtime;
    else Function("r", "regeneratorRuntime = r")(runtime);
}

},{}],"gaZqi":[function(require,module,exports) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sendRequest = exports.getCarPeriodList = exports.getCost = exports.getPlaceList = exports.getCarList = exports.getRequestBuilder = void 0;
require("regenerator-runtime/runtime");
var auth_1 = require("./auth");
var query_string_1 = __importDefault(require("query-string"));
var jquery_1 = __importDefault(require("jquery"));
function getRequestBuilder(urlSuffix, query) {
    return __awaiter(this, void 0, void 0, function() {
        var url, token, res;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    url = '';
                    query ? url = auth_1.server + ":" + auth_1.port + "/" + auth_1.dataApiEndpoint + "/" + urlSuffix + "?" + query : url = auth_1.server + ":" + auth_1.port + "/" + auth_1.dataApiEndpoint + "/" + urlSuffix;
                    return [
                        4 /*yield*/ ,
                        auth_1.getAccess()
                    ];
                case 1:
                    token = _a.sent();
                    return [
                        4 /*yield*/ ,
                        fetch(url, {
                            headers: {
                                'Content-Type': 'application/json',
                                'Authorization': "Bearer " + token
                            }
                        })
                    ];
                case 2:
                    res = _a.sent();
                    return [
                        2 /*return*/ ,
                        res.json()
                    ];
            }
        });
    });
}
exports.getRequestBuilder = getRequestBuilder;
function getCarList() {
    return __awaiter(this, void 0, void 0, function() {
        var res;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    return [
                        4 /*yield*/ ,
                        getRequestBuilder('car_list', '')
                    ];
                case 1:
                    res = _a.sent();
                    if (res.result_code != 0) jquery_1.default(location).attr('href', '/');
                    return [
                        2 /*return*/ ,
                        res
                    ];
            }
        });
    });
}
exports.getCarList = getCarList;
function getPlaceList() {
    return __awaiter(this, void 0, void 0, function() {
        var res;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    return [
                        4 /*yield*/ ,
                        getRequestBuilder('place_list', '')
                    ];
                case 1:
                    res = _a.sent();
                    if (res.result_code != 0) jquery_1.default(location).attr('href', '/');
                    return [
                        2 /*return*/ ,
                        res
                    ];
            }
        });
    });
}
exports.getPlaceList = getPlaceList;
function getCost(reqObj) {
    return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    return [
                        4 /*yield*/ ,
                        getRequestBuilder('bid_cost', query_string_1.default.stringify(reqObj, {
                            arrayFormat: 'bracket'
                        }))
                    ];
                case 1:
                    return [
                        2 /*return*/ ,
                        _a.sent()
                    ];
            }
        });
    });
}
exports.getCost = getCost;
function getCarPeriodList(reqObj) {
    return __awaiter(this, void 0, void 0, function() {
        var res;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    return [
                        4 /*yield*/ ,
                        getRequestBuilder('car_period_list', query_string_1.default.stringify(reqObj))
                    ];
                case 1:
                    res = _a.sent();
                    if (res.result_code != 0) jquery_1.default(location).attr('href', '/');
                    return [
                        2 /*return*/ ,
                        res
                    ];
            }
        });
    });
}
exports.getCarPeriodList = getCarPeriodList;
/*
export async function getTarrifs(reqObj) {
    return (await getRequestBuilder('tariff_list', queryString.stringify(reqObj))).cars;
}

export async function getCityList() {
    return (await getRequestBuilder('city_list', {})).cities;
}
export async function getServiceTypeList() {
    return getRequestBuilder('service_type_list', {});
}
export async function getServiceList() {
    return getRequestBuilder('service_list', {});
}
export async function getCarFreeList(reqObj) {
    const res = (await getRequestBuilder('car_free_list', queryString.stringify(reqObj))).cars;
    return res;
}

*/ function sendRequest(body) {
    return __awaiter(this, void 0, void 0, function() {
        var urlSuffix, url, token, res;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    urlSuffix = 'bid_create';
                    url = auth_1.server + ":" + auth_1.port + "/" + auth_1.dataApiEndpoint + "/" + urlSuffix;
                    return [
                        4 /*yield*/ ,
                        auth_1.getAccess()
                    ];
                case 1:
                    token = _a.sent();
                    return [
                        4 /*yield*/ ,
                        fetch(url, {
                            method: 'PUT',
                            headers: {
                                'Authorization': "Bearer " + token
                            },
                            body: body
                        })
                    ];
                case 2:
                    res = _a.sent();
                    return [
                        2 /*return*/ ,
                        res.json()
                    ];
            }
        });
    });
}
exports.sendRequest = sendRequest;

},{"regenerator-runtime/runtime":"cH8Iq","./auth":"3gOdy","query-string":"hfkye","jquery":"igaHu"}],"3gOdy":[function(require,module,exports) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAccess = exports.dataApiEndpoint = exports.refreshEndpoint = exports.signInEndpoint = exports.port = exports.server = void 0;
// import 'regenerator-runtime/runtime'
require("whatwg-fetch");
var SessionKey_1 = require("./entities/SessionKey");
exports.server = 'http://81.177.48.80';
exports.port = '50500';
var passwordHash = 'f7f8e967f2756082ada759e8e189e772e00a1deb13583e9beee02ad9a5420fda5ce2069e942cdc22a8cae4ecb90ace005737c6c96dd655330f0f1ae6a0ffd8fc';
var login = 'USER_FOR_SITE';
exports.signInEndpoint = '/api/v1/tokens/signin';
exports.refreshEndpoint = '/api/v1/tokens/refresh';
exports.dataApiEndpoint = 'data_api';
var Auth = function() {
    // --------------------------------------------------------------------------------------------
    function Auth1(accessData) {
        var _a;
        this.token = (_a = {
        }, _a[SessionKey_1.accessTokenKey] = '', _a[SessionKey_1.refreshTokenKey] = '', _a[SessionKey_1.expiredKey] = 0, _a);
        this.accessData = accessData;
    }
    // --------------------------------------------------------------------------------------------
    Auth1.prototype.readFromSessionStorage = function(keys) {
        return __awaiter(this, void 0, void 0, function() {
            var aTK, rTK, eTK, resObj;
            var _a, _b;
            return __generator(this, function(_c) {
                if (window) {
                    aTK = sessionStorage.getItem(SessionKey_1.accessTokenKey);
                    rTK = sessionStorage.getItem(SessionKey_1.refreshTokenKey);
                    eTK = sessionStorage.getItem(SessionKey_1.expiredKey);
                    resObj = (_a = {
                    }, _a[SessionKey_1.accessTokenKey] = aTK ? aTK : '', _a[SessionKey_1.refreshTokenKey] = rTK ? rTK : '', _a[SessionKey_1.expiredKey] = eTK ? parseInt(eTK, 10) : 0, _a);
                    return [
                        2 /*return*/ ,
                        resObj
                    ];
                } else return [
                    2 /*return*/ ,
                    (_b = {
                    }, _b[SessionKey_1.accessTokenKey] = "", _b[SessionKey_1.refreshTokenKey] = "", _b[SessionKey_1.expiredKey] = 0, _b)
                ];
                return [
                    2 /*return*/ 
                ];
            });
        });
    };
    // --------------------------------------------------------------------------------------------
    Auth1.prototype.getSavedSecret = function() {
        return __awaiter(this, void 0, void 0, function() {
            var savedToken;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.readFromSessionStorage([
                                SessionKey_1.accessTokenKey,
                                SessionKey_1.refreshTokenKey,
                                SessionKey_1.expiredKey
                            ])
                        ];
                    case 1:
                        savedToken = _a.sent();
                        if (!savedToken[SessionKey_1.accessTokenKey] || !savedToken[SessionKey_1.refreshTokenKey] || !savedToken[SessionKey_1.expiredKey]) return [
                            2 /*return*/ ,
                            undefined
                        ];
                        else return [
                            2 /*return*/ ,
                            savedToken
                        ];
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    //---------------------------------------------------------------------------------------------
    Auth1.prototype.getToken = function() {
        return __awaiter(this, void 0, void 0, function() {
            var path, bdy, token;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (!window) return [
                            2 /*return*/ ,
                            this.token
                        ];
                        path = exports.server + ":" + exports.port + exports.signInEndpoint;
                        bdy = JSON.stringify(this.accessData);
                        return [
                            4 /*yield*/ ,
                            fetch(path, {
                                method: 'POST',
                                body: bdy,
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            }).then(function(res) {
                                return res.json();
                            }).then(function(res) {
                                return res;
                            })
                        ];
                    case 1:
                        token = _a.sent();
                        return [
                            2 /*return*/ ,
                            token
                        ];
                }
            });
        });
    };
    Auth1.prototype.saveInSessionStorage = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                sessionStorage.setItem(SessionKey_1.accessTokenKey, this.token[SessionKey_1.accessTokenKey]);
                sessionStorage.setItem(SessionKey_1.refreshTokenKey, this.token[SessionKey_1.refreshTokenKey]);
                sessionStorage.setItem(SessionKey_1.expiredKey, this.token[SessionKey_1.expiredKey].toString());
                return [
                    2 /*return*/ 
                ];
            });
        });
    };
    Auth1.prototype.saveSecret = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                this.saveInSessionStorage();
                return [
                    2 /*return*/ 
                ];
            });
        });
    };
    //---------------------------------------------------------------------------------------------
    Auth1.prototype.tokenExpired = function(token) {
        return token[SessionKey_1.expiredKey] < Math.floor(Date.now() / 1000);
    };
    Auth1.prototype.refreshToken = function(token) {
        return __awaiter(this, void 0, void 0, function() {
            var path, bdy, newToken;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (!token || !token[SessionKey_1.refreshTokenKey]) throw new Error('Refresh token failure');
                        path = exports.server + ":" + exports.port + exports.refreshEndpoint;
                        bdy = JSON.stringify({
                            Token: token[SessionKey_1.refreshTokenKey]
                        });
                        return [
                            4 /*yield*/ ,
                            fetch(path, {
                                method: 'POST',
                                body: bdy,
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            }).then(function(res) {
                                return res.json();
                            }).then(function(res) {
                                return res;
                            })
                        ];
                    case 1:
                        newToken = _a.sent();
                        return [
                            2 /*return*/ ,
                            newToken
                        ];
                }
            });
        });
    };
    Auth1.prototype.auth = function() {
        return __awaiter(this, void 0, void 0, function() {
            var savedToken, _a, _b;
            return __generator(this, function(_c) {
                switch(_c.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.getSavedSecret()
                        ];
                    case 1:
                        savedToken = _c.sent();
                        if (!!savedToken) return [
                            3 /*break*/ ,
                            4
                        ];
                        _a = this;
                        return [
                            4 /*yield*/ ,
                            this.getToken()
                        ];
                    case 2:
                        _a.token = _c.sent();
                        if (!this.token) throw new Error('codes.authFailure');
                        return [
                            4 /*yield*/ ,
                            this.saveSecret()
                        ];
                    case 3:
                        _c.sent();
                        return [
                            2 /*return*/ ,
                            this.token
                        ];
                    case 4:
                        if (!this.tokenExpired(savedToken)) return [
                            3 /*break*/ ,
                            7
                        ];
                        _b = this;
                        return [
                            4 /*yield*/ ,
                            this.refreshToken(savedToken)
                        ];
                    case 5:
                        _b.token = _c.sent();
                        if (!this.token) throw new Error('codes.authFailure');
                        return [
                            4 /*yield*/ ,
                            this.saveSecret()
                        ];
                    case 6:
                        _c.sent();
                        return [
                            2 /*return*/ ,
                            this.token
                        ];
                    case 7:
                        this.token = savedToken;
                        return [
                            2 /*return*/ ,
                            this.token
                        ];
                }
            });
        });
    };
    return Auth1;
}();
/**
 * @returns ключ доступа для включения в заголовок Authorization
 * */ function getAccess() {
    return __awaiter(this, void 0, void 0, function() {
        var token;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    return [
                        4 /*yield*/ ,
                        new Auth({
                            PasswordHash: passwordHash,
                            UserName: login,
                            LongToken: true
                        }).auth()
                    ];
                case 1:
                    token = _a.sent();
                    return [
                        2 /*return*/ ,
                        token[SessionKey_1.accessTokenKey]
                    ];
            }
        });
    });
}
exports.getAccess = getAccess;

},{"whatwg-fetch":"9sW1L","./entities/SessionKey":"2R1gR"}],"9sW1L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Headers", ()=>Headers1
);
parcelHelpers.export(exports, "Request", ()=>Request1
);
parcelHelpers.export(exports, "Response", ()=>Response1
);
parcelHelpers.export(exports, "DOMException", ()=>DOMException1
);
parcelHelpers.export(exports, "fetch", ()=>fetch
);
var global = typeof globalThis !== 'undefined' && globalThis || typeof self !== 'undefined' && self || typeof global !== 'undefined' && global;
var support = {
    searchParams: 'URLSearchParams' in global,
    iterable: 'Symbol' in global && 'iterator' in Symbol,
    blob: 'FileReader' in global && 'Blob' in global && function() {
        try {
            new Blob();
            return true;
        } catch (e) {
            return false;
        }
    }(),
    formData: 'FormData' in global,
    arrayBuffer: 'ArrayBuffer' in global
};
function isDataView(obj) {
    return obj && DataView.prototype.isPrototypeOf(obj);
}
if (support.arrayBuffer) {
    var viewClasses = [
        '[object Int8Array]',
        '[object Uint8Array]',
        '[object Uint8ClampedArray]',
        '[object Int16Array]',
        '[object Uint16Array]',
        '[object Int32Array]',
        '[object Uint32Array]',
        '[object Float32Array]',
        '[object Float64Array]'
    ];
    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
    };
}
function normalizeName(name) {
    if (typeof name !== 'string') name = String(name);
    if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === '') throw new TypeError('Invalid character in header field name: "' + name + '"');
    return name.toLowerCase();
}
function normalizeValue(value) {
    if (typeof value !== 'string') value = String(value);
    return value;
}
// Build a destructive iterator for the value list
function iteratorFor(items) {
    var iterator = {
        next: function() {
            var value = items.shift();
            return {
                done: value === undefined,
                value: value
            };
        }
    };
    if (support.iterable) iterator[Symbol.iterator] = function() {
        return iterator;
    };
    return iterator;
}
function Headers1(headers) {
    this.map = {
    };
    if (headers instanceof Headers1) headers.forEach(function(value, name) {
        this.append(name, value);
    }, this);
    else if (Array.isArray(headers)) headers.forEach(function(header) {
        this.append(header[0], header[1]);
    }, this);
    else if (headers) Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name]);
    }, this);
}
Headers1.prototype.append = function(name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
};
Headers1.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)];
};
Headers1.prototype.get = function(name) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null;
};
Headers1.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name));
};
Headers1.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value);
};
Headers1.prototype.forEach = function(callback, thisArg) {
    for(var name in this.map)if (this.map.hasOwnProperty(name)) callback.call(thisArg, this.map[name], name, this);
};
Headers1.prototype.keys = function() {
    var items = [];
    this.forEach(function(value, name) {
        items.push(name);
    });
    return iteratorFor(items);
};
Headers1.prototype.values = function() {
    var items = [];
    this.forEach(function(value) {
        items.push(value);
    });
    return iteratorFor(items);
};
Headers1.prototype.entries = function() {
    var items = [];
    this.forEach(function(value, name) {
        items.push([
            name,
            value
        ]);
    });
    return iteratorFor(items);
};
if (support.iterable) Headers1.prototype[Symbol.iterator] = Headers1.prototype.entries;
function consumed(body) {
    if (body.bodyUsed) return Promise.reject(new TypeError('Already read'));
    body.bodyUsed = true;
}
function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
        reader.onload = function() {
            resolve(reader.result);
        };
        reader.onerror = function() {
            reject(reader.error);
        };
    });
}
function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise;
}
function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise;
}
function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);
    for(var i = 0; i < view.length; i++)chars[i] = String.fromCharCode(view[i]);
    return chars.join('');
}
function bufferClone(buf) {
    if (buf.slice) return buf.slice(0);
    else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
    }
}
function Body() {
    this.bodyUsed = false;
    this._initBody = function(body) {
        /*
      fetch-mock wraps the Response object in an ES6 Proxy to
      provide useful test harness features such as flush. However, on
      ES5 browsers without fetch or Proxy support pollyfills must be used;
      the proxy-pollyfill is unable to proxy an attribute unless it exists
      on the object before the Proxy is created. This change ensures
      Response.bodyUsed exists on the instance, while maintaining the
      semantic of setting Request.bodyUsed in the constructor before
      _initBody is called.
    */ this.bodyUsed = this.bodyUsed;
        this._bodyInit = body;
        if (!body) this._bodyText = '';
        else if (typeof body === 'string') this._bodyText = body;
        else if (support.blob && Blob.prototype.isPrototypeOf(body)) this._bodyBlob = body;
        else if (support.formData && FormData.prototype.isPrototypeOf(body)) this._bodyFormData = body;
        else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) this._bodyText = body.toString();
        else if (support.arrayBuffer && support.blob && isDataView(body)) {
            this._bodyArrayBuffer = bufferClone(body.buffer);
            // IE 10-11 can't handle a DataView body.
            this._bodyInit = new Blob([
                this._bodyArrayBuffer
            ]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) this._bodyArrayBuffer = bufferClone(body);
        else this._bodyText = body = Object.prototype.toString.call(body);
        if (!this.headers.get('content-type')) {
            if (typeof body === 'string') this.headers.set('content-type', 'text/plain;charset=UTF-8');
            else if (this._bodyBlob && this._bodyBlob.type) this.headers.set('content-type', this._bodyBlob.type);
            else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
    };
    if (support.blob) {
        this.blob = function() {
            var rejected = consumed(this);
            if (rejected) return rejected;
            if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
            else if (this._bodyArrayBuffer) return Promise.resolve(new Blob([
                this._bodyArrayBuffer
            ]));
            else if (this._bodyFormData) throw new Error('could not read FormData body as blob');
            else return Promise.resolve(new Blob([
                this._bodyText
            ]));
        };
        this.arrayBuffer = function() {
            if (this._bodyArrayBuffer) {
                var isConsumed = consumed(this);
                if (isConsumed) return isConsumed;
                if (ArrayBuffer.isView(this._bodyArrayBuffer)) return Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength));
                else return Promise.resolve(this._bodyArrayBuffer);
            } else return this.blob().then(readBlobAsArrayBuffer);
        };
    }
    this.text = function() {
        var rejected = consumed(this);
        if (rejected) return rejected;
        if (this._bodyBlob) return readBlobAsText(this._bodyBlob);
        else if (this._bodyArrayBuffer) return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        else if (this._bodyFormData) throw new Error('could not read FormData body as text');
        else return Promise.resolve(this._bodyText);
    };
    if (support.formData) this.formData = function() {
        return this.text().then(decode);
    };
    this.json = function() {
        return this.text().then(JSON.parse);
    };
    return this;
}
// HTTP methods whose capitalization should be normalized
var methods = [
    'DELETE',
    'GET',
    'HEAD',
    'OPTIONS',
    'POST',
    'PUT'
];
function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method;
}
function Request1(input, options) {
    if (!(this instanceof Request1)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
    options = options || {
    };
    var body = options.body;
    if (input instanceof Request1) {
        if (input.bodyUsed) throw new TypeError('Already read');
        this.url = input.url;
        this.credentials = input.credentials;
        if (!options.headers) this.headers = new Headers1(input.headers);
        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;
        if (!body && input._bodyInit != null) {
            body = input._bodyInit;
            input.bodyUsed = true;
        }
    } else this.url = String(input);
    this.credentials = options.credentials || this.credentials || 'same-origin';
    if (options.headers || !this.headers) this.headers = new Headers1(options.headers);
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.signal = options.signal || this.signal;
    this.referrer = null;
    if ((this.method === 'GET' || this.method === 'HEAD') && body) throw new TypeError('Body not allowed for GET or HEAD requests');
    this._initBody(body);
    if (this.method === 'GET' || this.method === 'HEAD') {
        if (options.cache === 'no-store' || options.cache === 'no-cache') {
            // Search for a '_' parameter in the query string
            var reParamSearch = /([?&])_=[^&]*/;
            if (reParamSearch.test(this.url)) // If it already exists then set the value with the current time
            this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());
            else {
                // Otherwise add a new '_' parameter to the end with the current time
                var reQueryString = /\?/;
                this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
            }
        }
    }
}
Request1.prototype.clone = function() {
    return new Request1(this, {
        body: this._bodyInit
    });
};
function decode(body) {
    var form = new FormData();
    body.trim().split('&').forEach(function(bytes) {
        if (bytes) {
            var split = bytes.split('=');
            var name = split.shift().replace(/\+/g, ' ');
            var value = split.join('=').replace(/\+/g, ' ');
            form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
    });
    return form;
}
function parseHeaders(rawHeaders) {
    var headers = new Headers1();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
    // https://github.com/github/fetch/issues/748
    // https://github.com/zloirock/core-js/issues/751
    preProcessedHeaders.split('\r').map(function(header) {
        return header.indexOf('\n') === 0 ? header.substr(1, header.length) : header;
    }).forEach(function(line) {
        var parts = line.split(':');
        var key = parts.shift().trim();
        if (key) {
            var value = parts.join(':').trim();
            headers.append(key, value);
        }
    });
    return headers;
}
Body.call(Request1.prototype);
function Response1(bodyInit, options) {
    if (!(this instanceof Response1)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
    if (!options) options = {
    };
    this.type = 'default';
    this.status = options.status === undefined ? 200 : options.status;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;
    this.headers = new Headers1(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
}
Body.call(Response1.prototype);
Response1.prototype.clone = function() {
    return new Response1(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers1(this.headers),
        url: this.url
    });
};
Response1.error = function() {
    var response = new Response1(null, {
        status: 0,
        statusText: ''
    });
    response.type = 'error';
    return response;
};
var redirectStatuses = [
    301,
    302,
    303,
    307,
    308
];
Response1.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) throw new RangeError('Invalid status code');
    return new Response1(null, {
        status: status,
        headers: {
            location: url
        }
    });
};
var DOMException1 = global.DOMException;
try {
    new DOMException1();
} catch (err) {
    DOMException1 = function(message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
    };
    DOMException1.prototype = Object.create(Error.prototype);
    DOMException1.prototype.constructor = DOMException1;
}
function fetch(input, init) {
    return new Promise(function(resolve, reject) {
        var request = new Request1(input, init);
        if (request.signal && request.signal.aborted) return reject(new DOMException1('Aborted', 'AbortError'));
        var xhr = new XMLHttpRequest();
        function abortXhr() {
            xhr.abort();
        }
        xhr.onload = function() {
            var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || '')
            };
            options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
            var body = 'response' in xhr ? xhr.response : xhr.responseText;
            setTimeout(function() {
                resolve(new Response1(body, options));
            }, 0);
        };
        xhr.onerror = function() {
            setTimeout(function() {
                reject(new TypeError('Network request failed'));
            }, 0);
        };
        xhr.ontimeout = function() {
            setTimeout(function() {
                reject(new TypeError('Network request failed'));
            }, 0);
        };
        xhr.onabort = function() {
            setTimeout(function() {
                reject(new DOMException1('Aborted', 'AbortError'));
            }, 0);
        };
        function fixUrl(url) {
            try {
                return url === '' && global.location.href ? global.location.href : url;
            } catch (e) {
                return url;
            }
        }
        xhr.open(request.method, fixUrl(request.url), true);
        if (request.credentials === 'include') xhr.withCredentials = true;
        else if (request.credentials === 'omit') xhr.withCredentials = false;
        if ('responseType' in xhr) {
            if (support.blob) xhr.responseType = 'blob';
            else if (support.arrayBuffer && request.headers.get('Content-Type') && request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1) xhr.responseType = 'arraybuffer';
        }
        if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers1)) Object.getOwnPropertyNames(init.headers).forEach(function(name) {
            xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
        });
        else request.headers.forEach(function(value, name) {
            xhr.setRequestHeader(name, value);
        });
        if (request.signal) {
            request.signal.addEventListener('abort', abortXhr);
            xhr.onreadystatechange = function() {
                // DONE (success or failure)
                if (xhr.readyState === 4) request.signal.removeEventListener('abort', abortXhr);
            };
        }
        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    });
}
fetch.polyfill = true;
if (!global.fetch) {
    global.fetch = fetch;
    global.Headers = Headers1;
    global.Request = Request1;
    global.Response = Response1;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"JacNc":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule') return;
        // Skip duplicate re-exports when they have the same value.
        if (key in dest && dest[key] === source[key]) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"2R1gR":[function(require,module,exports) {
"use strict";
/**
 * @module SessionKey.ts
*/ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.expiredKey = exports.refreshTokenKey = exports.accessTokenKey = void 0;
exports.accessTokenKey = 'accessToken';
exports.refreshTokenKey = 'refreshToken';
exports.expiredKey = 'expires';

},{}],"hfkye":[function(require,module,exports) {
'use strict';
const strictUriEncode = require('strict-uri-encode');
const decodeComponent = require('decode-uri-component');
const splitOnFirst = require('split-on-first');
const filterObject = require('filter-obj');
const isNullOrUndefined = (value)=>value === null || value === undefined
;
const encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');
function encoderForArrayFormat(options) {
    switch(options.arrayFormat){
        case 'index':
            return (key)=>(result, value)=>{
                    const index = result.length;
                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') return result;
                    if (value === null) return [
                        ...result,
                        [
                            encode(key, options),
                            '[',
                            index,
                            ']'
                        ].join('')
                    ];
                    return [
                        ...result,
                        [
                            encode(key, options),
                            '[',
                            encode(index, options),
                            ']=',
                            encode(value, options)
                        ].join('')
                    ];
                }
            ;
        case 'bracket':
            return (key)=>(result, value)=>{
                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') return result;
                    if (value === null) return [
                        ...result,
                        [
                            encode(key, options),
                            '[]'
                        ].join('')
                    ];
                    return [
                        ...result,
                        [
                            encode(key, options),
                            '[]=',
                            encode(value, options)
                        ].join('')
                    ];
                }
            ;
        case 'comma':
        case 'separator':
        case 'bracket-separator':
            {
                const keyValueSep = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';
                return (key)=>(result, value)=>{
                        if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') return result;
                        // Translate null to an empty string so that it doesn't serialize as 'null'
                        value = value === null ? '' : value;
                        if (result.length === 0) return [
                            [
                                encode(key, options),
                                keyValueSep,
                                encode(value, options)
                            ].join('')
                        ];
                        return [
                            [
                                result,
                                encode(value, options)
                            ].join(options.arrayFormatSeparator)
                        ];
                    }
                ;
            }
        default:
            return (key)=>(result, value)=>{
                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') return result;
                    if (value === null) return [
                        ...result,
                        encode(key, options)
                    ];
                    return [
                        ...result,
                        [
                            encode(key, options),
                            '=',
                            encode(value, options)
                        ].join('')
                    ];
                }
            ;
    }
}
function parserForArrayFormat(options) {
    let result;
    switch(options.arrayFormat){
        case 'index':
            return (key, value, accumulator)=>{
                result = /\[(\d*)\]$/.exec(key);
                key = key.replace(/\[\d*\]$/, '');
                if (!result) {
                    accumulator[key] = value;
                    return;
                }
                if (accumulator[key] === undefined) accumulator[key] = {
                };
                accumulator[key][result[1]] = value;
            };
        case 'bracket':
            return (key, value, accumulator)=>{
                result = /(\[\])$/.exec(key);
                key = key.replace(/\[\]$/, '');
                if (!result) {
                    accumulator[key] = value;
                    return;
                }
                if (accumulator[key] === undefined) {
                    accumulator[key] = [
                        value
                    ];
                    return;
                }
                accumulator[key] = [].concat(accumulator[key], value);
            };
        case 'comma':
        case 'separator':
            return (key, value, accumulator)=>{
                const isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);
                const isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);
                value = isEncodedArray ? decode(value, options) : value;
                const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item)=>decode(item, options)
                ) : value === null ? value : decode(value, options);
                accumulator[key] = newValue;
            };
        case 'bracket-separator':
            return (key, value, accumulator)=>{
                const isArray = /(\[\])$/.test(key);
                key = key.replace(/\[\]$/, '');
                if (!isArray) {
                    accumulator[key] = value ? decode(value, options) : value;
                    return;
                }
                const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item)=>decode(item, options)
                );
                if (accumulator[key] === undefined) {
                    accumulator[key] = arrayValue;
                    return;
                }
                accumulator[key] = [].concat(accumulator[key], arrayValue);
            };
        default:
            return (key, value, accumulator)=>{
                if (accumulator[key] === undefined) {
                    accumulator[key] = value;
                    return;
                }
                accumulator[key] = [].concat(accumulator[key], value);
            };
    }
}
function validateArrayFormatSeparator(value) {
    if (typeof value !== 'string' || value.length !== 1) throw new TypeError('arrayFormatSeparator must be single character string');
}
function encode(value, options) {
    if (options.encode) return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
    return value;
}
function decode(value, options) {
    if (options.decode) return decodeComponent(value);
    return value;
}
function keysSorter(input) {
    if (Array.isArray(input)) return input.sort();
    if (typeof input === 'object') return keysSorter(Object.keys(input)).sort((a, b)=>Number(a) - Number(b)
    ).map((key)=>input[key]
    );
    return input;
}
function removeHash(input) {
    const hashStart = input.indexOf('#');
    if (hashStart !== -1) input = input.slice(0, hashStart);
    return input;
}
function getHash(url) {
    let hash = '';
    const hashStart = url.indexOf('#');
    if (hashStart !== -1) hash = url.slice(hashStart);
    return hash;
}
function extract(input) {
    input = removeHash(input);
    const queryStart = input.indexOf('?');
    if (queryStart === -1) return '';
    return input.slice(queryStart + 1);
}
function parseValue(value, options) {
    if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') value = Number(value);
    else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) value = value.toLowerCase() === 'true';
    return value;
}
function parse(query, options) {
    options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: 'none',
        arrayFormatSeparator: ',',
        parseNumbers: false,
        parseBooleans: false
    }, options);
    validateArrayFormatSeparator(options.arrayFormatSeparator);
    const formatter = parserForArrayFormat(options);
    // Create an object with no prototype
    const ret = Object.create(null);
    if (typeof query !== 'string') return ret;
    query = query.trim().replace(/^[?#&]/, '');
    if (!query) return ret;
    for (const param of query.split('&')){
        if (param === '') continue;
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, ' ') : param, '=');
        // Missing `=` should be `null`:
        // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
        value = value === undefined ? null : [
            'comma',
            'separator',
            'bracket-separator'
        ].includes(options.arrayFormat) ? value : decode(value, options);
        formatter(decode(key, options), value, ret);
    }
    for (const key of Object.keys(ret)){
        const value = ret[key];
        if (typeof value === 'object' && value !== null) for (const k of Object.keys(value))value[k] = parseValue(value[k], options);
        else ret[key] = parseValue(value, options);
    }
    if (options.sort === false) return ret;
    return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key1)=>{
        const value = ret[key1];
        if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) // Sort object keys, not values
        result[key1] = keysSorter(value);
        else result[key1] = value;
        return result;
    }, Object.create(null));
}
exports.extract = extract;
exports.parse = parse;
exports.stringify = (object, options)=>{
    if (!object) return '';
    options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: 'none',
        arrayFormatSeparator: ','
    }, options);
    validateArrayFormatSeparator(options.arrayFormatSeparator);
    const shouldFilter = (key)=>options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === ''
    ;
    const formatter = encoderForArrayFormat(options);
    const objectCopy = {
    };
    for (const key of Object.keys(object))if (!shouldFilter(key)) objectCopy[key] = object[key];
    const keys = Object.keys(objectCopy);
    if (options.sort !== false) keys.sort(options.sort);
    return keys.map((key1)=>{
        const value = object[key1];
        if (value === undefined) return '';
        if (value === null) return encode(key1, options);
        if (Array.isArray(value)) {
            if (value.length === 0 && options.arrayFormat === 'bracket-separator') return encode(key1, options) + '[]';
            return value.reduce(formatter(key1), []).join('&');
        }
        return encode(key1, options) + '=' + encode(value, options);
    }).filter((x)=>x.length > 0
    ).join('&');
};
exports.parseUrl = (url, options)=>{
    options = Object.assign({
        decode: true
    }, options);
    const [url_, hash] = splitOnFirst(url, '#');
    return Object.assign({
        url: url_.split('?')[0] || '',
        query: parse(extract(url), options)
    }, options && options.parseFragmentIdentifier && hash ? {
        fragmentIdentifier: decode(hash, options)
    } : {
    });
};
exports.stringifyUrl = (object, options)=>{
    options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
    }, options);
    const url = removeHash(object.url).split('?')[0] || '';
    const queryFromUrl = exports.extract(object.url);
    const parsedQueryFromUrl = exports.parse(queryFromUrl, {
        sort: false
    });
    const query = Object.assign(parsedQueryFromUrl, object.query);
    let queryString = exports.stringify(query, options);
    if (queryString) queryString = `?${queryString}`;
    let hash = getHash(object.url);
    if (object.fragmentIdentifier) hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
    return `${url}${queryString}${hash}`;
};
exports.pick = (input, filter, options)=>{
    options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
    }, options);
    const { url , query , fragmentIdentifier  } = exports.parseUrl(input, options);
    return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
    }, options);
};
exports.exclude = (input, filter, options)=>{
    const exclusionFilter = Array.isArray(filter) ? (key)=>!filter.includes(key)
     : (key, value)=>!filter(key, value)
    ;
    return exports.pick(input, exclusionFilter, options);
};

},{"strict-uri-encode":"flueg","decode-uri-component":"jK7Iy","split-on-first":"9BTK6","filter-obj":"70D4C"}],"flueg":[function(require,module,exports) {
'use strict';
module.exports = (str)=>encodeURIComponent(str).replace(/[!'()*]/g, (x)=>`%${x.charCodeAt(0).toString(16).toUpperCase()}`
    )
;

},{}],"jK7Iy":[function(require,module,exports) {
'use strict';
var token = '%[a-f0-9]{2}';
var singleMatcher = new RegExp(token, 'gi');
var multiMatcher = new RegExp('(' + token + ')+', 'gi');
function decodeComponents(components, split) {
    try {
        // Try to decode the entire string first
        return decodeURIComponent(components.join(''));
    } catch (err) {
    // Do nothing
    }
    if (components.length === 1) return components;
    split = split || 1;
    // Split the array in 2 parts
    var left = components.slice(0, split);
    var right = components.slice(split);
    return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}
function decode(input) {
    try {
        return decodeURIComponent(input);
    } catch (err) {
        var tokens = input.match(singleMatcher);
        for(var i = 1; i < tokens.length; i++){
            input = decodeComponents(tokens, i).join('');
            tokens = input.match(singleMatcher);
        }
        return input;
    }
}
function customDecodeURIComponent(input) {
    // Keep track of all the replacements and prefill the map with the `BOM`
    var replaceMap = {
        '%FE%FF': '\uFFFD\uFFFD',
        '%FF%FE': '\uFFFD\uFFFD'
    };
    var match = multiMatcher.exec(input);
    while(match){
        try {
            // Decode as big chunks as possible
            replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
            var result = decode(match[0]);
            if (result !== match[0]) replaceMap[match[0]] = result;
        }
        match = multiMatcher.exec(input);
    }
    // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else
    replaceMap['%C2'] = '\uFFFD';
    var entries = Object.keys(replaceMap);
    for(var i = 0; i < entries.length; i++){
        // Replace all decoded components
        var key = entries[i];
        input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
    }
    return input;
}
module.exports = function(encodedURI) {
    if (typeof encodedURI !== 'string') throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');
    try {
        encodedURI = encodedURI.replace(/\+/g, ' ');
        // Try the built in decoder first
        return decodeURIComponent(encodedURI);
    } catch (err) {
        // Fallback to a more advanced decoder
        return customDecodeURIComponent(encodedURI);
    }
};

},{}],"9BTK6":[function(require,module,exports) {
'use strict';
module.exports = (string, separator)=>{
    if (!(typeof string === 'string' && typeof separator === 'string')) throw new TypeError('Expected the arguments to be of type `string`');
    if (separator === '') return [
        string
    ];
    const separatorIndex = string.indexOf(separator);
    if (separatorIndex === -1) return [
        string
    ];
    return [
        string.slice(0, separatorIndex),
        string.slice(separatorIndex + separator.length)
    ];
};

},{}],"70D4C":[function(require,module,exports) {
'use strict';
module.exports = function(obj, predicate) {
    var ret = {
    };
    var keys = Object.keys(obj);
    var isArr = Array.isArray(predicate);
    for(var i = 0; i < keys.length; i++){
        var key = keys[i];
        var val = obj[key];
        if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) ret[key] = val;
    }
    return ret;
};

},{}],"htU3t":[function(require,module,exports) {
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.validateChecker = exports.validateField = exports.splitDateByMinutes = exports.nextYearForServer = exports.currentYearForServer = exports.customDateForServer = exports.dateForServer = exports.translateDate = exports.formatCarModelFromHashToSelect = exports.formatCarModelFromSelectToHash = exports.formatCarModelFromBaseToSelect = exports.clearColor = exports.option = void 0;
var eachMinuteOfInterval_1 = __importDefault(require("date-fns/eachMinuteOfInterval"));
var sharedData_1 = require("./sharedData");
var jquery_1 = __importDefault(require("jquery"));
/**
 * @module sharedActions.ts
 * @description некоторые переиспользуемые функции
*/ function option(text, id, className, isDisabled, selectedValue) {
    if (id === void 0) id = '';
    if (className === void 0) className = '';
    if (isDisabled === void 0) isDisabled = false;
    if (selectedValue === void 0) selectedValue = '';
    if (!isDisabled && selectedValue === text) return "<option id=\"" + id + "\" class=\"" + className + "\" selected=\"selected\">" + text + "</option>";
    return isDisabled ? "<option id=\"" + id + "\" class=\"" + className + "\" disabled>" + text + "</option>" : "<option id=\"" + id + "\" class=\"" + className + "\">" + text + "</option>";
}
exports.option = option;
/**
 * @param model имя машины, которое получаем от сервера в формате: Toyota Rav4(бел.)
 * @returns то же имя, но без цвета в скобках
*/ function clearColor(model) {
    return model.replace(/\([^)]+\)/, '');
}
exports.clearColor = clearColor;
//--------------------------------------------------------------------------------------------------------
// форматирование имени авто из hash, от сервера и из select
function formatCarModelFromBaseToSelect(model) {
    return clearColor(model.trim().toLocaleLowerCase()).split(' ').map(function(item) {
        return "" + item.charAt(0).toUpperCase() + item.slice(1, item.length);
    }).join(' ').trim();
}
exports.formatCarModelFromBaseToSelect = formatCarModelFromBaseToSelect;
function formatCarModelFromSelectToHash(model) {
    return model.toLocaleLowerCase().replace(/\s/g, '_');
}
exports.formatCarModelFromSelectToHash = formatCarModelFromSelectToHash;
function formatCarModelFromHashToSelect(model) {
    return model.replace(/_/g, ' ').split(' ').map(function(item) {
        return "" + item.charAt(0).toUpperCase() + item.slice(1, item.length);
    }).join(' ');
}
exports.formatCarModelFromHashToSelect = formatCarModelFromHashToSelect;
//--------------------------------------------------------------------------------------------------------
/**
 * @function
 * @param {Date} start
 * @param {Date} end
 * @returns {string} duration
 * @example ('01-01-2000 10:00', '02-01-2000 10:00') => (на 1 день с 01.01.2000 г. 10:00 по 02.02.2000 10:00)
 */ function translateDate(d1, d2, t1, t2) {
    // const numOfDays: number = Math.floor(((d2.valueOf() - d1.valueOf()) / 1000 / (24 * 3600)) + 1);
    // const numOfDaysStr: string = numOfDays.toString();
    // let dayWord: string = '';
    // let last2num: number = parseInt(numOfDaysStr, 10);
    // if (last2num >= 10 && last2num <= 19) {
    // 	dayWord = 'дней'
    // 	return `на ${numOfDaysStr} ${dayWord} с ${d1.toLocaleDateString()} ${t1} по ${d2.toLocaleDateString()} ${t2}`;
    // }
    // let lastNum: number = parseInt(numOfDaysStr.charAt(numOfDaysStr.length - 1), 10);
    // if (lastNum === 1) dayWord = 'день';
    // else if (lastNum === 0) dayWord = 'дней';
    // else if (lastNum > 1 && lastNum < 5) dayWord = 'дня';
    // else if (lastNum >= 5) dayWord = 'дней';
    return d1.toLocaleDateString() + " " + t1 + " \u043F\u043E " + d2.toLocaleDateString() + " " + t2;
}
exports.translateDate = translateDate;
/**
 * @description получаем текущий date в формате для сервера: yyyy-mm-dd hh:mm:ssZ
*/ function dateForServer(customDate) {
    if (customDate === void 0) customDate = new Date();
    return customDate.toLocaleDateString().split('.').reverse().join('-') + " " + customDate.toLocaleTimeString() + "Z";
}
exports.dateForServer = dateForServer;
function customDateForServer(customDate) {
    return customDate.toLocaleDateString().split('.').reverse().join('-') + " " + customDate.toLocaleTimeString() + "Z";
}
exports.customDateForServer = customDateForServer;
function currentYearForServer() {
    var dt = new Date();
    dt.setMonth(0);
    dt.setDate(1);
    dt.setHours(0);
    dt.setMinutes(0);
    dt.setSeconds(0);
    dt.setMilliseconds(0);
    return dateForServer(dt);
}
exports.currentYearForServer = currentYearForServer;
function nextYearForServer() {
    var dt = new Date();
    dt.setFullYear(dt.getFullYear() + 1);
    dt.setMonth(0);
    dt.setDate(1);
    dt.setHours(0);
    dt.setMinutes(0);
    dt.setSeconds(0);
    dt.setMilliseconds(0);
    return dateForServer(dt);
}
exports.nextYearForServer = nextYearForServer;
function splitDateByMinutes(dt, minutes) {
    return eachMinuteOfInterval_1.default({
        start: dt,
        end: new Date(dt.getFullYear(), dt.getMonth(), dt.getDate() + 1)
    }, {
        step: minutes
    });
}
exports.splitDateByMinutes = splitDateByMinutes;
function validateField(domId, domIdOfIndicator) {
    var domElement = jquery_1.default("#" + domIdOfIndicator);
    var target = jquery_1.default("#" + domId).val();
    if (!target) {
        domElement.addClass(sharedData_1.domElementId.incorrectFieldClass);
        domElement.removeClass(sharedData_1.domElementId.correctFieldClass);
        return false;
    }
    domElement.removeClass(sharedData_1.domElementId.incorrectFieldClass);
    domElement.addClass(sharedData_1.domElementId.correctFieldClass);
    return true;
}
exports.validateField = validateField;
function validateChecker(domId, domIdOfIndicator) {
    var domElement = jquery_1.default("#" + domIdOfIndicator);
    var val = jquery_1.default("#" + domId).is(':checked');
    if (!val) {
        domElement.addClass(sharedData_1.domElementId.incorrectFieldClass);
        domElement.removeClass(sharedData_1.domElementId.correctFieldClass);
        return false;
    }
    domElement.removeClass(sharedData_1.domElementId.incorrectFieldClass);
    domElement.addClass(sharedData_1.domElementId.correctFieldClass);
    return true;
}
exports.validateChecker = validateChecker;

},{"date-fns/eachMinuteOfInterval":"4Ootm","./sharedData":"iUwdp","jquery":"igaHu"}],"4Ootm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addMinutes/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfMinute/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function eachMinuteOfInterval(interval, options) {
    _indexJsDefault3.default(1, arguments);
    var startDate = _indexJsDefault2.default(_indexJsDefault1.default(interval.start));
    var endDate = _indexJsDefault2.default(_indexJsDefault1.default(interval.end));
    var startTime = startDate.getTime();
    var endTime = endDate.getTime();
    if (startTime >= endTime) throw new RangeError('Invalid interval');
    var dates = [];
    var currentDate = startDate;
    var step = options && 'step' in options ? Number(options.step) : 1;
    if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number equal or greater than 1');
    while(currentDate.getTime() <= endTime){
        dates.push(_indexJsDefault1.default(currentDate));
        currentDate = _indexJsDefault.default(currentDate, step);
    }
    return dates;
}
exports.default = eachMinuteOfInterval;

},{"../addMinutes/index.js":"gR7QC","../toDate/index.js":"6pFrg","../startOfMinute/index.js":"lnBQj","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gR7QC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMilliseconds/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var MILLISECONDS_IN_MINUTE = 60000;
function addMinutes(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
}
exports.default = addMinutes;

},{"../_lib/toInteger/index.js":"95G4A","../addMilliseconds/index.js":"et4cY","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"95G4A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function toInteger(dirtyNumber) {
    if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) return NaN;
    var number = Number(dirtyNumber);
    if (isNaN(number)) return number;
    return number < 0 ? Math.ceil(number) : Math.floor(number);
}
exports.default = toInteger;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"et4cY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function addMilliseconds(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var timestamp = _indexJsDefault1.default(dirtyDate).getTime();
    var amount = _indexJsDefault.default(dirtyAmount);
    return new Date(timestamp + amount);
}
exports.default = addMilliseconds;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6pFrg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function toDate(argument) {
    _indexJsDefault.default(1, arguments);
    var argStr = Object.prototype.toString.call(argument); // Clone the date
    if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
    else if (typeof argument === 'number' || argStr === '[object Number]') return new Date(argument);
    else {
        if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
            // eslint-disable-next-line no-console
            console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console
            console.warn(new Error().stack);
        }
        return new Date(NaN);
    }
}
exports.default = toDate;

},{"../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"JNGPJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function requiredArgs(required, args) {
    if (args.length < required) throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
}
exports.default = requiredArgs;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lnBQj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfMinute(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setSeconds(0, 0);
    return date;
}
exports.default = startOfMinute;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"g3J3T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.
parcelHelpers.export(exports, "add", ()=>_indexJsDefault.default
);
parcelHelpers.export(exports, "addBusinessDays", ()=>_indexJsDefault1.default
);
parcelHelpers.export(exports, "addDays", ()=>_indexJsDefault2.default
);
parcelHelpers.export(exports, "addHours", ()=>_indexJsDefault3.default
);
parcelHelpers.export(exports, "addISOWeekYears", ()=>_indexJsDefault4.default
);
parcelHelpers.export(exports, "addMilliseconds", ()=>_indexJsDefault5.default
);
parcelHelpers.export(exports, "addMinutes", ()=>_indexJsDefault6.default
);
parcelHelpers.export(exports, "addMonths", ()=>_indexJsDefault7.default
);
parcelHelpers.export(exports, "addQuarters", ()=>_indexJsDefault8.default
);
parcelHelpers.export(exports, "addSeconds", ()=>_indexJsDefault9.default
);
parcelHelpers.export(exports, "addWeeks", ()=>_indexJsDefault10.default
);
parcelHelpers.export(exports, "addYears", ()=>_indexJsDefault11.default
);
parcelHelpers.export(exports, "areIntervalsOverlapping", ()=>_indexJsDefault12.default
);
parcelHelpers.export(exports, "clamp", ()=>_indexJsDefault13.default
);
parcelHelpers.export(exports, "closestIndexTo", ()=>_indexJsDefault14.default
);
parcelHelpers.export(exports, "closestTo", ()=>_indexJsDefault15.default
);
parcelHelpers.export(exports, "compareAsc", ()=>_indexJsDefault16.default
);
parcelHelpers.export(exports, "compareDesc", ()=>_indexJsDefault17.default
);
parcelHelpers.export(exports, "daysToWeeks", ()=>_indexJsDefault18.default
);
parcelHelpers.export(exports, "differenceInBusinessDays", ()=>_indexJsDefault19.default
);
parcelHelpers.export(exports, "differenceInCalendarDays", ()=>_indexJsDefault20.default
);
parcelHelpers.export(exports, "differenceInCalendarISOWeekYears", ()=>_indexJsDefault21.default
);
parcelHelpers.export(exports, "differenceInCalendarISOWeeks", ()=>_indexJsDefault22.default
);
parcelHelpers.export(exports, "differenceInCalendarMonths", ()=>_indexJsDefault23.default
);
parcelHelpers.export(exports, "differenceInCalendarQuarters", ()=>_indexJsDefault24.default
);
parcelHelpers.export(exports, "differenceInCalendarWeeks", ()=>_indexJsDefault25.default
);
parcelHelpers.export(exports, "differenceInCalendarYears", ()=>_indexJsDefault26.default
);
parcelHelpers.export(exports, "differenceInDays", ()=>_indexJsDefault27.default
);
parcelHelpers.export(exports, "differenceInHours", ()=>_indexJsDefault28.default
);
parcelHelpers.export(exports, "differenceInISOWeekYears", ()=>_indexJsDefault29.default
);
parcelHelpers.export(exports, "differenceInMilliseconds", ()=>_indexJsDefault30.default
);
parcelHelpers.export(exports, "differenceInMinutes", ()=>_indexJsDefault31.default
);
parcelHelpers.export(exports, "differenceInMonths", ()=>_indexJsDefault32.default
);
parcelHelpers.export(exports, "differenceInQuarters", ()=>_indexJsDefault33.default
);
parcelHelpers.export(exports, "differenceInSeconds", ()=>_indexJsDefault34.default
);
parcelHelpers.export(exports, "differenceInWeeks", ()=>_indexJsDefault35.default
);
parcelHelpers.export(exports, "differenceInYears", ()=>_indexJsDefault36.default
);
parcelHelpers.export(exports, "eachDayOfInterval", ()=>_indexJsDefault37.default
);
parcelHelpers.export(exports, "eachHourOfInterval", ()=>_indexJsDefault38.default
);
parcelHelpers.export(exports, "eachMinuteOfInterval", ()=>_indexJsDefault39.default
);
parcelHelpers.export(exports, "eachMonthOfInterval", ()=>_indexJsDefault40.default
);
parcelHelpers.export(exports, "eachQuarterOfInterval", ()=>_indexJsDefault41.default
);
parcelHelpers.export(exports, "eachWeekOfInterval", ()=>_indexJsDefault42.default
);
parcelHelpers.export(exports, "eachWeekendOfInterval", ()=>_indexJsDefault43.default
);
parcelHelpers.export(exports, "eachWeekendOfMonth", ()=>_indexJsDefault44.default
);
parcelHelpers.export(exports, "eachWeekendOfYear", ()=>_indexJsDefault45.default
);
parcelHelpers.export(exports, "eachYearOfInterval", ()=>_indexJsDefault46.default
);
parcelHelpers.export(exports, "endOfDay", ()=>_indexJsDefault47.default
);
parcelHelpers.export(exports, "endOfDecade", ()=>_indexJsDefault48.default
);
parcelHelpers.export(exports, "endOfHour", ()=>_indexJsDefault49.default
);
parcelHelpers.export(exports, "endOfISOWeek", ()=>_indexJsDefault50.default
);
parcelHelpers.export(exports, "endOfISOWeekYear", ()=>_indexJsDefault51.default
);
parcelHelpers.export(exports, "endOfMinute", ()=>_indexJsDefault52.default
);
parcelHelpers.export(exports, "endOfMonth", ()=>_indexJsDefault53.default
);
parcelHelpers.export(exports, "endOfQuarter", ()=>_indexJsDefault54.default
);
parcelHelpers.export(exports, "endOfSecond", ()=>_indexJsDefault55.default
);
parcelHelpers.export(exports, "endOfToday", ()=>_indexJsDefault56.default
);
parcelHelpers.export(exports, "endOfTomorrow", ()=>_indexJsDefault57.default
);
parcelHelpers.export(exports, "endOfWeek", ()=>_indexJsDefault58.default
);
parcelHelpers.export(exports, "endOfYear", ()=>_indexJsDefault59.default
);
parcelHelpers.export(exports, "endOfYesterday", ()=>_indexJsDefault60.default
);
parcelHelpers.export(exports, "format", ()=>_indexJsDefault61.default
);
parcelHelpers.export(exports, "formatDistance", ()=>_indexJsDefault62.default
);
parcelHelpers.export(exports, "formatDistanceStrict", ()=>_indexJsDefault63.default
);
parcelHelpers.export(exports, "formatDistanceToNow", ()=>_indexJsDefault64.default
);
parcelHelpers.export(exports, "formatDistanceToNowStrict", ()=>_indexJsDefault65.default
);
parcelHelpers.export(exports, "formatDuration", ()=>_indexJsDefault66.default
);
parcelHelpers.export(exports, "formatISO", ()=>_indexJsDefault67.default
);
parcelHelpers.export(exports, "formatISO9075", ()=>_indexJsDefault68.default
);
parcelHelpers.export(exports, "formatISODuration", ()=>_indexJsDefault69.default
);
parcelHelpers.export(exports, "formatRFC3339", ()=>_indexJsDefault70.default
);
parcelHelpers.export(exports, "formatRFC7231", ()=>_indexJsDefault71.default
);
parcelHelpers.export(exports, "formatRelative", ()=>_indexJsDefault72.default
);
parcelHelpers.export(exports, "fromUnixTime", ()=>_indexJsDefault73.default
);
parcelHelpers.export(exports, "getDate", ()=>_indexJsDefault74.default
);
parcelHelpers.export(exports, "getDay", ()=>_indexJsDefault75.default
);
parcelHelpers.export(exports, "getDayOfYear", ()=>_indexJsDefault76.default
);
parcelHelpers.export(exports, "getDaysInMonth", ()=>_indexJsDefault77.default
);
parcelHelpers.export(exports, "getDaysInYear", ()=>_indexJsDefault78.default
);
parcelHelpers.export(exports, "getDecade", ()=>_indexJsDefault79.default
);
parcelHelpers.export(exports, "getHours", ()=>_indexJsDefault80.default
);
parcelHelpers.export(exports, "getISODay", ()=>_indexJsDefault81.default
);
parcelHelpers.export(exports, "getISOWeek", ()=>_indexJsDefault82.default
);
parcelHelpers.export(exports, "getISOWeekYear", ()=>_indexJsDefault83.default
);
parcelHelpers.export(exports, "getISOWeeksInYear", ()=>_indexJsDefault84.default
);
parcelHelpers.export(exports, "getMilliseconds", ()=>_indexJsDefault85.default
);
parcelHelpers.export(exports, "getMinutes", ()=>_indexJsDefault86.default
);
parcelHelpers.export(exports, "getMonth", ()=>_indexJsDefault87.default
);
parcelHelpers.export(exports, "getOverlappingDaysInIntervals", ()=>_indexJsDefault88.default
);
parcelHelpers.export(exports, "getQuarter", ()=>_indexJsDefault89.default
);
parcelHelpers.export(exports, "getSeconds", ()=>_indexJsDefault90.default
);
parcelHelpers.export(exports, "getTime", ()=>_indexJsDefault91.default
);
parcelHelpers.export(exports, "getUnixTime", ()=>_indexJsDefault92.default
);
parcelHelpers.export(exports, "getWeek", ()=>_indexJsDefault93.default
);
parcelHelpers.export(exports, "getWeekOfMonth", ()=>_indexJsDefault94.default
);
parcelHelpers.export(exports, "getWeekYear", ()=>_indexJsDefault95.default
);
parcelHelpers.export(exports, "getWeeksInMonth", ()=>_indexJsDefault96.default
);
parcelHelpers.export(exports, "getYear", ()=>_indexJsDefault97.default
);
parcelHelpers.export(exports, "hoursToMilliseconds", ()=>_indexJsDefault98.default
);
parcelHelpers.export(exports, "hoursToMinutes", ()=>_indexJsDefault99.default
);
parcelHelpers.export(exports, "hoursToSeconds", ()=>_indexJsDefault100.default
);
parcelHelpers.export(exports, "intervalToDuration", ()=>_indexJsDefault101.default
);
parcelHelpers.export(exports, "intlFormat", ()=>_indexJsDefault102.default
);
parcelHelpers.export(exports, "isAfter", ()=>_indexJsDefault103.default
);
parcelHelpers.export(exports, "isBefore", ()=>_indexJsDefault104.default
);
parcelHelpers.export(exports, "isDate", ()=>_indexJsDefault105.default
);
parcelHelpers.export(exports, "isEqual", ()=>_indexJsDefault106.default
);
parcelHelpers.export(exports, "isExists", ()=>_indexJsDefault107.default
);
parcelHelpers.export(exports, "isFirstDayOfMonth", ()=>_indexJsDefault108.default
);
parcelHelpers.export(exports, "isFriday", ()=>_indexJsDefault109.default
);
parcelHelpers.export(exports, "isFuture", ()=>_indexJsDefault110.default
);
parcelHelpers.export(exports, "isLastDayOfMonth", ()=>_indexJsDefault111.default
);
parcelHelpers.export(exports, "isLeapYear", ()=>_indexJsDefault112.default
);
parcelHelpers.export(exports, "isMatch", ()=>_indexJsDefault113.default
);
parcelHelpers.export(exports, "isMonday", ()=>_indexJsDefault114.default
);
parcelHelpers.export(exports, "isPast", ()=>_indexJsDefault115.default
);
parcelHelpers.export(exports, "isSameDay", ()=>_indexJsDefault116.default
);
parcelHelpers.export(exports, "isSameHour", ()=>_indexJsDefault117.default
);
parcelHelpers.export(exports, "isSameISOWeek", ()=>_indexJsDefault118.default
);
parcelHelpers.export(exports, "isSameISOWeekYear", ()=>_indexJsDefault119.default
);
parcelHelpers.export(exports, "isSameMinute", ()=>_indexJsDefault120.default
);
parcelHelpers.export(exports, "isSameMonth", ()=>_indexJsDefault121.default
);
parcelHelpers.export(exports, "isSameQuarter", ()=>_indexJsDefault122.default
);
parcelHelpers.export(exports, "isSameSecond", ()=>_indexJsDefault123.default
);
parcelHelpers.export(exports, "isSameWeek", ()=>_indexJsDefault124.default
);
parcelHelpers.export(exports, "isSameYear", ()=>_indexJsDefault125.default
);
parcelHelpers.export(exports, "isSaturday", ()=>_indexJsDefault126.default
);
parcelHelpers.export(exports, "isSunday", ()=>_indexJsDefault127.default
);
parcelHelpers.export(exports, "isThisHour", ()=>_indexJsDefault128.default
);
parcelHelpers.export(exports, "isThisISOWeek", ()=>_indexJsDefault129.default
);
parcelHelpers.export(exports, "isThisMinute", ()=>_indexJsDefault130.default
);
parcelHelpers.export(exports, "isThisMonth", ()=>_indexJsDefault131.default
);
parcelHelpers.export(exports, "isThisQuarter", ()=>_indexJsDefault132.default
);
parcelHelpers.export(exports, "isThisSecond", ()=>_indexJsDefault133.default
);
parcelHelpers.export(exports, "isThisWeek", ()=>_indexJsDefault134.default
);
parcelHelpers.export(exports, "isThisYear", ()=>_indexJsDefault135.default
);
parcelHelpers.export(exports, "isThursday", ()=>_indexJsDefault136.default
);
parcelHelpers.export(exports, "isToday", ()=>_indexJsDefault137.default
);
parcelHelpers.export(exports, "isTomorrow", ()=>_indexJsDefault138.default
);
parcelHelpers.export(exports, "isTuesday", ()=>_indexJsDefault139.default
);
parcelHelpers.export(exports, "isValid", ()=>_indexJsDefault140.default
);
parcelHelpers.export(exports, "isWednesday", ()=>_indexJsDefault141.default
);
parcelHelpers.export(exports, "isWeekend", ()=>_indexJsDefault142.default
);
parcelHelpers.export(exports, "isWithinInterval", ()=>_indexJsDefault143.default
);
parcelHelpers.export(exports, "isYesterday", ()=>_indexJsDefault144.default
);
parcelHelpers.export(exports, "lastDayOfDecade", ()=>_indexJsDefault145.default
);
parcelHelpers.export(exports, "lastDayOfISOWeek", ()=>_indexJsDefault146.default
);
parcelHelpers.export(exports, "lastDayOfISOWeekYear", ()=>_indexJsDefault147.default
);
parcelHelpers.export(exports, "lastDayOfMonth", ()=>_indexJsDefault148.default
);
parcelHelpers.export(exports, "lastDayOfQuarter", ()=>_indexJsDefault149.default
);
parcelHelpers.export(exports, "lastDayOfWeek", ()=>_indexJsDefault150.default
);
parcelHelpers.export(exports, "lastDayOfYear", ()=>_indexJsDefault151.default
);
parcelHelpers.export(exports, "lightFormat", ()=>_indexJsDefault152.default
);
parcelHelpers.export(exports, "max", ()=>_indexJsDefault153.default
);
parcelHelpers.export(exports, "milliseconds", ()=>_indexJsDefault154.default
);
parcelHelpers.export(exports, "millisecondsToHours", ()=>_indexJsDefault155.default
);
parcelHelpers.export(exports, "millisecondsToMinutes", ()=>_indexJsDefault156.default
);
parcelHelpers.export(exports, "millisecondsToSeconds", ()=>_indexJsDefault157.default
);
parcelHelpers.export(exports, "min", ()=>_indexJsDefault158.default
);
parcelHelpers.export(exports, "minutesToHours", ()=>_indexJsDefault159.default
);
parcelHelpers.export(exports, "minutesToMilliseconds", ()=>_indexJsDefault160.default
);
parcelHelpers.export(exports, "minutesToSeconds", ()=>_indexJsDefault161.default
);
parcelHelpers.export(exports, "monthsToQuarters", ()=>_indexJsDefault162.default
);
parcelHelpers.export(exports, "monthsToYears", ()=>_indexJsDefault163.default
);
parcelHelpers.export(exports, "nextDay", ()=>_indexJsDefault164.default
);
parcelHelpers.export(exports, "nextFriday", ()=>_indexJsDefault165.default
);
parcelHelpers.export(exports, "nextMonday", ()=>_indexJsDefault166.default
);
parcelHelpers.export(exports, "nextSaturday", ()=>_indexJsDefault167.default
);
parcelHelpers.export(exports, "nextSunday", ()=>_indexJsDefault168.default
);
parcelHelpers.export(exports, "nextThursday", ()=>_indexJsDefault169.default
);
parcelHelpers.export(exports, "nextTuesday", ()=>_indexJsDefault170.default
);
parcelHelpers.export(exports, "nextWednesday", ()=>_indexJsDefault171.default
);
parcelHelpers.export(exports, "parse", ()=>_indexJsDefault172.default
);
parcelHelpers.export(exports, "parseISO", ()=>_indexJsDefault173.default
);
parcelHelpers.export(exports, "parseJSON", ()=>_indexJsDefault174.default
);
parcelHelpers.export(exports, "quartersToMonths", ()=>_indexJsDefault175.default
);
parcelHelpers.export(exports, "quartersToYears", ()=>_indexJsDefault176.default
);
parcelHelpers.export(exports, "roundToNearestMinutes", ()=>_indexJsDefault177.default
);
parcelHelpers.export(exports, "secondsToHours", ()=>_indexJsDefault178.default
);
parcelHelpers.export(exports, "secondsToMilliseconds", ()=>_indexJsDefault179.default
);
parcelHelpers.export(exports, "secondsToMinutes", ()=>_indexJsDefault180.default
);
parcelHelpers.export(exports, "set", ()=>_indexJsDefault181.default
);
parcelHelpers.export(exports, "setDate", ()=>_indexJsDefault182.default
);
parcelHelpers.export(exports, "setDay", ()=>_indexJsDefault183.default
);
parcelHelpers.export(exports, "setDayOfYear", ()=>_indexJsDefault184.default
);
parcelHelpers.export(exports, "setHours", ()=>_indexJsDefault185.default
);
parcelHelpers.export(exports, "setISODay", ()=>_indexJsDefault186.default
);
parcelHelpers.export(exports, "setISOWeek", ()=>_indexJsDefault187.default
);
parcelHelpers.export(exports, "setISOWeekYear", ()=>_indexJsDefault188.default
);
parcelHelpers.export(exports, "setMilliseconds", ()=>_indexJsDefault189.default
);
parcelHelpers.export(exports, "setMinutes", ()=>_indexJsDefault190.default
);
parcelHelpers.export(exports, "setMonth", ()=>_indexJsDefault191.default
);
parcelHelpers.export(exports, "setQuarter", ()=>_indexJsDefault192.default
);
parcelHelpers.export(exports, "setSeconds", ()=>_indexJsDefault193.default
);
parcelHelpers.export(exports, "setWeek", ()=>_indexJsDefault194.default
);
parcelHelpers.export(exports, "setWeekYear", ()=>_indexJsDefault195.default
);
parcelHelpers.export(exports, "setYear", ()=>_indexJsDefault196.default
);
parcelHelpers.export(exports, "startOfDay", ()=>_indexJsDefault197.default
);
parcelHelpers.export(exports, "startOfDecade", ()=>_indexJsDefault198.default
);
parcelHelpers.export(exports, "startOfHour", ()=>_indexJsDefault199.default
);
parcelHelpers.export(exports, "startOfISOWeek", ()=>_indexJsDefault200.default
);
parcelHelpers.export(exports, "startOfISOWeekYear", ()=>_indexJsDefault201.default
);
parcelHelpers.export(exports, "startOfMinute", ()=>_indexJsDefault202.default
);
parcelHelpers.export(exports, "startOfMonth", ()=>_indexJsDefault203.default
);
parcelHelpers.export(exports, "startOfQuarter", ()=>_indexJsDefault204.default
);
parcelHelpers.export(exports, "startOfSecond", ()=>_indexJsDefault205.default
);
parcelHelpers.export(exports, "startOfToday", ()=>_indexJsDefault206.default
);
parcelHelpers.export(exports, "startOfTomorrow", ()=>_indexJsDefault207.default
);
parcelHelpers.export(exports, "startOfWeek", ()=>_indexJsDefault208.default
);
parcelHelpers.export(exports, "startOfWeekYear", ()=>_indexJsDefault209.default
);
parcelHelpers.export(exports, "startOfYear", ()=>_indexJsDefault210.default
);
parcelHelpers.export(exports, "startOfYesterday", ()=>_indexJsDefault211.default
);
parcelHelpers.export(exports, "sub", ()=>_indexJsDefault212.default
);
parcelHelpers.export(exports, "subBusinessDays", ()=>_indexJsDefault213.default
);
parcelHelpers.export(exports, "subDays", ()=>_indexJsDefault214.default
);
parcelHelpers.export(exports, "subHours", ()=>_indexJsDefault215.default
);
parcelHelpers.export(exports, "subISOWeekYears", ()=>_indexJsDefault216.default
);
parcelHelpers.export(exports, "subMilliseconds", ()=>_indexJsDefault217.default
);
parcelHelpers.export(exports, "subMinutes", ()=>_indexJsDefault218.default
);
parcelHelpers.export(exports, "subMonths", ()=>_indexJsDefault219.default
);
parcelHelpers.export(exports, "subQuarters", ()=>_indexJsDefault220.default
);
parcelHelpers.export(exports, "subSeconds", ()=>_indexJsDefault221.default
);
parcelHelpers.export(exports, "subWeeks", ()=>_indexJsDefault222.default
);
parcelHelpers.export(exports, "subYears", ()=>_indexJsDefault223.default
);
parcelHelpers.export(exports, "toDate", ()=>_indexJsDefault224.default
);
parcelHelpers.export(exports, "weeksToDays", ()=>_indexJsDefault225.default
);
parcelHelpers.export(exports, "yearsToMonths", ()=>_indexJsDefault226.default
);
parcelHelpers.export(exports, "yearsToQuarters", ()=>_indexJsDefault227.default
);
var _indexJs = require("./add/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("./addBusinessDays/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("./addDays/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("./addHours/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("./addISOWeekYears/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("./addMilliseconds/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("./addMinutes/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("./addMonths/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
var _indexJs8 = require("./addQuarters/index.js");
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs8);
var _indexJs9 = require("./addSeconds/index.js");
var _indexJsDefault9 = parcelHelpers.interopDefault(_indexJs9);
var _indexJs10 = require("./addWeeks/index.js");
var _indexJsDefault10 = parcelHelpers.interopDefault(_indexJs10);
var _indexJs11 = require("./addYears/index.js");
var _indexJsDefault11 = parcelHelpers.interopDefault(_indexJs11);
var _indexJs12 = require("./areIntervalsOverlapping/index.js");
var _indexJsDefault12 = parcelHelpers.interopDefault(_indexJs12);
var _indexJs13 = require("./clamp/index.js");
var _indexJsDefault13 = parcelHelpers.interopDefault(_indexJs13);
var _indexJs14 = require("./closestIndexTo/index.js");
var _indexJsDefault14 = parcelHelpers.interopDefault(_indexJs14);
var _indexJs15 = require("./closestTo/index.js");
var _indexJsDefault15 = parcelHelpers.interopDefault(_indexJs15);
var _indexJs16 = require("./compareAsc/index.js");
var _indexJsDefault16 = parcelHelpers.interopDefault(_indexJs16);
var _indexJs17 = require("./compareDesc/index.js");
var _indexJsDefault17 = parcelHelpers.interopDefault(_indexJs17);
var _indexJs18 = require("./daysToWeeks/index.js");
var _indexJsDefault18 = parcelHelpers.interopDefault(_indexJs18);
var _indexJs19 = require("./differenceInBusinessDays/index.js");
var _indexJsDefault19 = parcelHelpers.interopDefault(_indexJs19);
var _indexJs20 = require("./differenceInCalendarDays/index.js");
var _indexJsDefault20 = parcelHelpers.interopDefault(_indexJs20);
var _indexJs21 = require("./differenceInCalendarISOWeekYears/index.js");
var _indexJsDefault21 = parcelHelpers.interopDefault(_indexJs21);
var _indexJs22 = require("./differenceInCalendarISOWeeks/index.js");
var _indexJsDefault22 = parcelHelpers.interopDefault(_indexJs22);
var _indexJs23 = require("./differenceInCalendarMonths/index.js");
var _indexJsDefault23 = parcelHelpers.interopDefault(_indexJs23);
var _indexJs24 = require("./differenceInCalendarQuarters/index.js");
var _indexJsDefault24 = parcelHelpers.interopDefault(_indexJs24);
var _indexJs25 = require("./differenceInCalendarWeeks/index.js");
var _indexJsDefault25 = parcelHelpers.interopDefault(_indexJs25);
var _indexJs26 = require("./differenceInCalendarYears/index.js");
var _indexJsDefault26 = parcelHelpers.interopDefault(_indexJs26);
var _indexJs27 = require("./differenceInDays/index.js");
var _indexJsDefault27 = parcelHelpers.interopDefault(_indexJs27);
var _indexJs28 = require("./differenceInHours/index.js");
var _indexJsDefault28 = parcelHelpers.interopDefault(_indexJs28);
var _indexJs29 = require("./differenceInISOWeekYears/index.js");
var _indexJsDefault29 = parcelHelpers.interopDefault(_indexJs29);
var _indexJs30 = require("./differenceInMilliseconds/index.js");
var _indexJsDefault30 = parcelHelpers.interopDefault(_indexJs30);
var _indexJs31 = require("./differenceInMinutes/index.js");
var _indexJsDefault31 = parcelHelpers.interopDefault(_indexJs31);
var _indexJs32 = require("./differenceInMonths/index.js");
var _indexJsDefault32 = parcelHelpers.interopDefault(_indexJs32);
var _indexJs33 = require("./differenceInQuarters/index.js");
var _indexJsDefault33 = parcelHelpers.interopDefault(_indexJs33);
var _indexJs34 = require("./differenceInSeconds/index.js");
var _indexJsDefault34 = parcelHelpers.interopDefault(_indexJs34);
var _indexJs35 = require("./differenceInWeeks/index.js");
var _indexJsDefault35 = parcelHelpers.interopDefault(_indexJs35);
var _indexJs36 = require("./differenceInYears/index.js");
var _indexJsDefault36 = parcelHelpers.interopDefault(_indexJs36);
var _indexJs37 = require("./eachDayOfInterval/index.js");
var _indexJsDefault37 = parcelHelpers.interopDefault(_indexJs37);
var _indexJs38 = require("./eachHourOfInterval/index.js");
var _indexJsDefault38 = parcelHelpers.interopDefault(_indexJs38);
var _indexJs39 = require("./eachMinuteOfInterval/index.js");
var _indexJsDefault39 = parcelHelpers.interopDefault(_indexJs39);
var _indexJs40 = require("./eachMonthOfInterval/index.js");
var _indexJsDefault40 = parcelHelpers.interopDefault(_indexJs40);
var _indexJs41 = require("./eachQuarterOfInterval/index.js");
var _indexJsDefault41 = parcelHelpers.interopDefault(_indexJs41);
var _indexJs42 = require("./eachWeekOfInterval/index.js");
var _indexJsDefault42 = parcelHelpers.interopDefault(_indexJs42);
var _indexJs43 = require("./eachWeekendOfInterval/index.js");
var _indexJsDefault43 = parcelHelpers.interopDefault(_indexJs43);
var _indexJs44 = require("./eachWeekendOfMonth/index.js");
var _indexJsDefault44 = parcelHelpers.interopDefault(_indexJs44);
var _indexJs45 = require("./eachWeekendOfYear/index.js");
var _indexJsDefault45 = parcelHelpers.interopDefault(_indexJs45);
var _indexJs46 = require("./eachYearOfInterval/index.js");
var _indexJsDefault46 = parcelHelpers.interopDefault(_indexJs46);
var _indexJs47 = require("./endOfDay/index.js");
var _indexJsDefault47 = parcelHelpers.interopDefault(_indexJs47);
var _indexJs48 = require("./endOfDecade/index.js");
var _indexJsDefault48 = parcelHelpers.interopDefault(_indexJs48);
var _indexJs49 = require("./endOfHour/index.js");
var _indexJsDefault49 = parcelHelpers.interopDefault(_indexJs49);
var _indexJs50 = require("./endOfISOWeek/index.js");
var _indexJsDefault50 = parcelHelpers.interopDefault(_indexJs50);
var _indexJs51 = require("./endOfISOWeekYear/index.js");
var _indexJsDefault51 = parcelHelpers.interopDefault(_indexJs51);
var _indexJs52 = require("./endOfMinute/index.js");
var _indexJsDefault52 = parcelHelpers.interopDefault(_indexJs52);
var _indexJs53 = require("./endOfMonth/index.js");
var _indexJsDefault53 = parcelHelpers.interopDefault(_indexJs53);
var _indexJs54 = require("./endOfQuarter/index.js");
var _indexJsDefault54 = parcelHelpers.interopDefault(_indexJs54);
var _indexJs55 = require("./endOfSecond/index.js");
var _indexJsDefault55 = parcelHelpers.interopDefault(_indexJs55);
var _indexJs56 = require("./endOfToday/index.js");
var _indexJsDefault56 = parcelHelpers.interopDefault(_indexJs56);
var _indexJs57 = require("./endOfTomorrow/index.js");
var _indexJsDefault57 = parcelHelpers.interopDefault(_indexJs57);
var _indexJs58 = require("./endOfWeek/index.js");
var _indexJsDefault58 = parcelHelpers.interopDefault(_indexJs58);
var _indexJs59 = require("./endOfYear/index.js");
var _indexJsDefault59 = parcelHelpers.interopDefault(_indexJs59);
var _indexJs60 = require("./endOfYesterday/index.js");
var _indexJsDefault60 = parcelHelpers.interopDefault(_indexJs60);
var _indexJs61 = require("./format/index.js");
var _indexJsDefault61 = parcelHelpers.interopDefault(_indexJs61);
var _indexJs62 = require("./formatDistance/index.js");
var _indexJsDefault62 = parcelHelpers.interopDefault(_indexJs62);
var _indexJs63 = require("./formatDistanceStrict/index.js");
var _indexJsDefault63 = parcelHelpers.interopDefault(_indexJs63);
var _indexJs64 = require("./formatDistanceToNow/index.js");
var _indexJsDefault64 = parcelHelpers.interopDefault(_indexJs64);
var _indexJs65 = require("./formatDistanceToNowStrict/index.js");
var _indexJsDefault65 = parcelHelpers.interopDefault(_indexJs65);
var _indexJs66 = require("./formatDuration/index.js");
var _indexJsDefault66 = parcelHelpers.interopDefault(_indexJs66);
var _indexJs67 = require("./formatISO/index.js");
var _indexJsDefault67 = parcelHelpers.interopDefault(_indexJs67);
var _indexJs68 = require("./formatISO9075/index.js");
var _indexJsDefault68 = parcelHelpers.interopDefault(_indexJs68);
var _indexJs69 = require("./formatISODuration/index.js");
var _indexJsDefault69 = parcelHelpers.interopDefault(_indexJs69);
var _indexJs70 = require("./formatRFC3339/index.js");
var _indexJsDefault70 = parcelHelpers.interopDefault(_indexJs70);
var _indexJs71 = require("./formatRFC7231/index.js");
var _indexJsDefault71 = parcelHelpers.interopDefault(_indexJs71);
var _indexJs72 = require("./formatRelative/index.js");
var _indexJsDefault72 = parcelHelpers.interopDefault(_indexJs72);
var _indexJs73 = require("./fromUnixTime/index.js");
var _indexJsDefault73 = parcelHelpers.interopDefault(_indexJs73);
var _indexJs74 = require("./getDate/index.js");
var _indexJsDefault74 = parcelHelpers.interopDefault(_indexJs74);
var _indexJs75 = require("./getDay/index.js");
var _indexJsDefault75 = parcelHelpers.interopDefault(_indexJs75);
var _indexJs76 = require("./getDayOfYear/index.js");
var _indexJsDefault76 = parcelHelpers.interopDefault(_indexJs76);
var _indexJs77 = require("./getDaysInMonth/index.js");
var _indexJsDefault77 = parcelHelpers.interopDefault(_indexJs77);
var _indexJs78 = require("./getDaysInYear/index.js");
var _indexJsDefault78 = parcelHelpers.interopDefault(_indexJs78);
var _indexJs79 = require("./getDecade/index.js");
var _indexJsDefault79 = parcelHelpers.interopDefault(_indexJs79);
var _indexJs80 = require("./getHours/index.js");
var _indexJsDefault80 = parcelHelpers.interopDefault(_indexJs80);
var _indexJs81 = require("./getISODay/index.js");
var _indexJsDefault81 = parcelHelpers.interopDefault(_indexJs81);
var _indexJs82 = require("./getISOWeek/index.js");
var _indexJsDefault82 = parcelHelpers.interopDefault(_indexJs82);
var _indexJs83 = require("./getISOWeekYear/index.js");
var _indexJsDefault83 = parcelHelpers.interopDefault(_indexJs83);
var _indexJs84 = require("./getISOWeeksInYear/index.js");
var _indexJsDefault84 = parcelHelpers.interopDefault(_indexJs84);
var _indexJs85 = require("./getMilliseconds/index.js");
var _indexJsDefault85 = parcelHelpers.interopDefault(_indexJs85);
var _indexJs86 = require("./getMinutes/index.js");
var _indexJsDefault86 = parcelHelpers.interopDefault(_indexJs86);
var _indexJs87 = require("./getMonth/index.js");
var _indexJsDefault87 = parcelHelpers.interopDefault(_indexJs87);
var _indexJs88 = require("./getOverlappingDaysInIntervals/index.js");
var _indexJsDefault88 = parcelHelpers.interopDefault(_indexJs88);
var _indexJs89 = require("./getQuarter/index.js");
var _indexJsDefault89 = parcelHelpers.interopDefault(_indexJs89);
var _indexJs90 = require("./getSeconds/index.js");
var _indexJsDefault90 = parcelHelpers.interopDefault(_indexJs90);
var _indexJs91 = require("./getTime/index.js");
var _indexJsDefault91 = parcelHelpers.interopDefault(_indexJs91);
var _indexJs92 = require("./getUnixTime/index.js");
var _indexJsDefault92 = parcelHelpers.interopDefault(_indexJs92);
var _indexJs93 = require("./getWeek/index.js");
var _indexJsDefault93 = parcelHelpers.interopDefault(_indexJs93);
var _indexJs94 = require("./getWeekOfMonth/index.js");
var _indexJsDefault94 = parcelHelpers.interopDefault(_indexJs94);
var _indexJs95 = require("./getWeekYear/index.js");
var _indexJsDefault95 = parcelHelpers.interopDefault(_indexJs95);
var _indexJs96 = require("./getWeeksInMonth/index.js");
var _indexJsDefault96 = parcelHelpers.interopDefault(_indexJs96);
var _indexJs97 = require("./getYear/index.js");
var _indexJsDefault97 = parcelHelpers.interopDefault(_indexJs97);
var _indexJs98 = require("./hoursToMilliseconds/index.js");
var _indexJsDefault98 = parcelHelpers.interopDefault(_indexJs98);
var _indexJs99 = require("./hoursToMinutes/index.js");
var _indexJsDefault99 = parcelHelpers.interopDefault(_indexJs99);
var _indexJs100 = require("./hoursToSeconds/index.js");
var _indexJsDefault100 = parcelHelpers.interopDefault(_indexJs100);
var _indexJs101 = require("./intervalToDuration/index.js");
var _indexJsDefault101 = parcelHelpers.interopDefault(_indexJs101);
var _indexJs102 = require("./intlFormat/index.js");
var _indexJsDefault102 = parcelHelpers.interopDefault(_indexJs102);
var _indexJs103 = require("./isAfter/index.js");
var _indexJsDefault103 = parcelHelpers.interopDefault(_indexJs103);
var _indexJs104 = require("./isBefore/index.js");
var _indexJsDefault104 = parcelHelpers.interopDefault(_indexJs104);
var _indexJs105 = require("./isDate/index.js");
var _indexJsDefault105 = parcelHelpers.interopDefault(_indexJs105);
var _indexJs106 = require("./isEqual/index.js");
var _indexJsDefault106 = parcelHelpers.interopDefault(_indexJs106);
var _indexJs107 = require("./isExists/index.js");
var _indexJsDefault107 = parcelHelpers.interopDefault(_indexJs107);
var _indexJs108 = require("./isFirstDayOfMonth/index.js");
var _indexJsDefault108 = parcelHelpers.interopDefault(_indexJs108);
var _indexJs109 = require("./isFriday/index.js");
var _indexJsDefault109 = parcelHelpers.interopDefault(_indexJs109);
var _indexJs110 = require("./isFuture/index.js");
var _indexJsDefault110 = parcelHelpers.interopDefault(_indexJs110);
var _indexJs111 = require("./isLastDayOfMonth/index.js");
var _indexJsDefault111 = parcelHelpers.interopDefault(_indexJs111);
var _indexJs112 = require("./isLeapYear/index.js");
var _indexJsDefault112 = parcelHelpers.interopDefault(_indexJs112);
var _indexJs113 = require("./isMatch/index.js");
var _indexJsDefault113 = parcelHelpers.interopDefault(_indexJs113);
var _indexJs114 = require("./isMonday/index.js");
var _indexJsDefault114 = parcelHelpers.interopDefault(_indexJs114);
var _indexJs115 = require("./isPast/index.js");
var _indexJsDefault115 = parcelHelpers.interopDefault(_indexJs115);
var _indexJs116 = require("./isSameDay/index.js");
var _indexJsDefault116 = parcelHelpers.interopDefault(_indexJs116);
var _indexJs117 = require("./isSameHour/index.js");
var _indexJsDefault117 = parcelHelpers.interopDefault(_indexJs117);
var _indexJs118 = require("./isSameISOWeek/index.js");
var _indexJsDefault118 = parcelHelpers.interopDefault(_indexJs118);
var _indexJs119 = require("./isSameISOWeekYear/index.js");
var _indexJsDefault119 = parcelHelpers.interopDefault(_indexJs119);
var _indexJs120 = require("./isSameMinute/index.js");
var _indexJsDefault120 = parcelHelpers.interopDefault(_indexJs120);
var _indexJs121 = require("./isSameMonth/index.js");
var _indexJsDefault121 = parcelHelpers.interopDefault(_indexJs121);
var _indexJs122 = require("./isSameQuarter/index.js");
var _indexJsDefault122 = parcelHelpers.interopDefault(_indexJs122);
var _indexJs123 = require("./isSameSecond/index.js");
var _indexJsDefault123 = parcelHelpers.interopDefault(_indexJs123);
var _indexJs124 = require("./isSameWeek/index.js");
var _indexJsDefault124 = parcelHelpers.interopDefault(_indexJs124);
var _indexJs125 = require("./isSameYear/index.js");
var _indexJsDefault125 = parcelHelpers.interopDefault(_indexJs125);
var _indexJs126 = require("./isSaturday/index.js");
var _indexJsDefault126 = parcelHelpers.interopDefault(_indexJs126);
var _indexJs127 = require("./isSunday/index.js");
var _indexJsDefault127 = parcelHelpers.interopDefault(_indexJs127);
var _indexJs128 = require("./isThisHour/index.js");
var _indexJsDefault128 = parcelHelpers.interopDefault(_indexJs128);
var _indexJs129 = require("./isThisISOWeek/index.js");
var _indexJsDefault129 = parcelHelpers.interopDefault(_indexJs129);
var _indexJs130 = require("./isThisMinute/index.js");
var _indexJsDefault130 = parcelHelpers.interopDefault(_indexJs130);
var _indexJs131 = require("./isThisMonth/index.js");
var _indexJsDefault131 = parcelHelpers.interopDefault(_indexJs131);
var _indexJs132 = require("./isThisQuarter/index.js");
var _indexJsDefault132 = parcelHelpers.interopDefault(_indexJs132);
var _indexJs133 = require("./isThisSecond/index.js");
var _indexJsDefault133 = parcelHelpers.interopDefault(_indexJs133);
var _indexJs134 = require("./isThisWeek/index.js");
var _indexJsDefault134 = parcelHelpers.interopDefault(_indexJs134);
var _indexJs135 = require("./isThisYear/index.js");
var _indexJsDefault135 = parcelHelpers.interopDefault(_indexJs135);
var _indexJs136 = require("./isThursday/index.js");
var _indexJsDefault136 = parcelHelpers.interopDefault(_indexJs136);
var _indexJs137 = require("./isToday/index.js");
var _indexJsDefault137 = parcelHelpers.interopDefault(_indexJs137);
var _indexJs138 = require("./isTomorrow/index.js");
var _indexJsDefault138 = parcelHelpers.interopDefault(_indexJs138);
var _indexJs139 = require("./isTuesday/index.js");
var _indexJsDefault139 = parcelHelpers.interopDefault(_indexJs139);
var _indexJs140 = require("./isValid/index.js");
var _indexJsDefault140 = parcelHelpers.interopDefault(_indexJs140);
var _indexJs141 = require("./isWednesday/index.js");
var _indexJsDefault141 = parcelHelpers.interopDefault(_indexJs141);
var _indexJs142 = require("./isWeekend/index.js");
var _indexJsDefault142 = parcelHelpers.interopDefault(_indexJs142);
var _indexJs143 = require("./isWithinInterval/index.js");
var _indexJsDefault143 = parcelHelpers.interopDefault(_indexJs143);
var _indexJs144 = require("./isYesterday/index.js");
var _indexJsDefault144 = parcelHelpers.interopDefault(_indexJs144);
var _indexJs145 = require("./lastDayOfDecade/index.js");
var _indexJsDefault145 = parcelHelpers.interopDefault(_indexJs145);
var _indexJs146 = require("./lastDayOfISOWeek/index.js");
var _indexJsDefault146 = parcelHelpers.interopDefault(_indexJs146);
var _indexJs147 = require("./lastDayOfISOWeekYear/index.js");
var _indexJsDefault147 = parcelHelpers.interopDefault(_indexJs147);
var _indexJs148 = require("./lastDayOfMonth/index.js");
var _indexJsDefault148 = parcelHelpers.interopDefault(_indexJs148);
var _indexJs149 = require("./lastDayOfQuarter/index.js");
var _indexJsDefault149 = parcelHelpers.interopDefault(_indexJs149);
var _indexJs150 = require("./lastDayOfWeek/index.js");
var _indexJsDefault150 = parcelHelpers.interopDefault(_indexJs150);
var _indexJs151 = require("./lastDayOfYear/index.js");
var _indexJsDefault151 = parcelHelpers.interopDefault(_indexJs151);
var _indexJs152 = require("./lightFormat/index.js");
var _indexJsDefault152 = parcelHelpers.interopDefault(_indexJs152);
var _indexJs153 = require("./max/index.js");
var _indexJsDefault153 = parcelHelpers.interopDefault(_indexJs153);
var _indexJs154 = require("./milliseconds/index.js");
var _indexJsDefault154 = parcelHelpers.interopDefault(_indexJs154);
var _indexJs155 = require("./millisecondsToHours/index.js");
var _indexJsDefault155 = parcelHelpers.interopDefault(_indexJs155);
var _indexJs156 = require("./millisecondsToMinutes/index.js");
var _indexJsDefault156 = parcelHelpers.interopDefault(_indexJs156);
var _indexJs157 = require("./millisecondsToSeconds/index.js");
var _indexJsDefault157 = parcelHelpers.interopDefault(_indexJs157);
var _indexJs158 = require("./min/index.js");
var _indexJsDefault158 = parcelHelpers.interopDefault(_indexJs158);
var _indexJs159 = require("./minutesToHours/index.js");
var _indexJsDefault159 = parcelHelpers.interopDefault(_indexJs159);
var _indexJs160 = require("./minutesToMilliseconds/index.js");
var _indexJsDefault160 = parcelHelpers.interopDefault(_indexJs160);
var _indexJs161 = require("./minutesToSeconds/index.js");
var _indexJsDefault161 = parcelHelpers.interopDefault(_indexJs161);
var _indexJs162 = require("./monthsToQuarters/index.js");
var _indexJsDefault162 = parcelHelpers.interopDefault(_indexJs162);
var _indexJs163 = require("./monthsToYears/index.js");
var _indexJsDefault163 = parcelHelpers.interopDefault(_indexJs163);
var _indexJs164 = require("./nextDay/index.js");
var _indexJsDefault164 = parcelHelpers.interopDefault(_indexJs164);
var _indexJs165 = require("./nextFriday/index.js");
var _indexJsDefault165 = parcelHelpers.interopDefault(_indexJs165);
var _indexJs166 = require("./nextMonday/index.js");
var _indexJsDefault166 = parcelHelpers.interopDefault(_indexJs166);
var _indexJs167 = require("./nextSaturday/index.js");
var _indexJsDefault167 = parcelHelpers.interopDefault(_indexJs167);
var _indexJs168 = require("./nextSunday/index.js");
var _indexJsDefault168 = parcelHelpers.interopDefault(_indexJs168);
var _indexJs169 = require("./nextThursday/index.js");
var _indexJsDefault169 = parcelHelpers.interopDefault(_indexJs169);
var _indexJs170 = require("./nextTuesday/index.js");
var _indexJsDefault170 = parcelHelpers.interopDefault(_indexJs170);
var _indexJs171 = require("./nextWednesday/index.js");
var _indexJsDefault171 = parcelHelpers.interopDefault(_indexJs171);
var _indexJs172 = require("./parse/index.js");
var _indexJsDefault172 = parcelHelpers.interopDefault(_indexJs172);
var _indexJs173 = require("./parseISO/index.js");
var _indexJsDefault173 = parcelHelpers.interopDefault(_indexJs173);
var _indexJs174 = require("./parseJSON/index.js");
var _indexJsDefault174 = parcelHelpers.interopDefault(_indexJs174);
var _indexJs175 = require("./quartersToMonths/index.js");
var _indexJsDefault175 = parcelHelpers.interopDefault(_indexJs175);
var _indexJs176 = require("./quartersToYears/index.js");
var _indexJsDefault176 = parcelHelpers.interopDefault(_indexJs176);
var _indexJs177 = require("./roundToNearestMinutes/index.js");
var _indexJsDefault177 = parcelHelpers.interopDefault(_indexJs177);
var _indexJs178 = require("./secondsToHours/index.js");
var _indexJsDefault178 = parcelHelpers.interopDefault(_indexJs178);
var _indexJs179 = require("./secondsToMilliseconds/index.js");
var _indexJsDefault179 = parcelHelpers.interopDefault(_indexJs179);
var _indexJs180 = require("./secondsToMinutes/index.js");
var _indexJsDefault180 = parcelHelpers.interopDefault(_indexJs180);
var _indexJs181 = require("./set/index.js");
var _indexJsDefault181 = parcelHelpers.interopDefault(_indexJs181);
var _indexJs182 = require("./setDate/index.js");
var _indexJsDefault182 = parcelHelpers.interopDefault(_indexJs182);
var _indexJs183 = require("./setDay/index.js");
var _indexJsDefault183 = parcelHelpers.interopDefault(_indexJs183);
var _indexJs184 = require("./setDayOfYear/index.js");
var _indexJsDefault184 = parcelHelpers.interopDefault(_indexJs184);
var _indexJs185 = require("./setHours/index.js");
var _indexJsDefault185 = parcelHelpers.interopDefault(_indexJs185);
var _indexJs186 = require("./setISODay/index.js");
var _indexJsDefault186 = parcelHelpers.interopDefault(_indexJs186);
var _indexJs187 = require("./setISOWeek/index.js");
var _indexJsDefault187 = parcelHelpers.interopDefault(_indexJs187);
var _indexJs188 = require("./setISOWeekYear/index.js");
var _indexJsDefault188 = parcelHelpers.interopDefault(_indexJs188);
var _indexJs189 = require("./setMilliseconds/index.js");
var _indexJsDefault189 = parcelHelpers.interopDefault(_indexJs189);
var _indexJs190 = require("./setMinutes/index.js");
var _indexJsDefault190 = parcelHelpers.interopDefault(_indexJs190);
var _indexJs191 = require("./setMonth/index.js");
var _indexJsDefault191 = parcelHelpers.interopDefault(_indexJs191);
var _indexJs192 = require("./setQuarter/index.js");
var _indexJsDefault192 = parcelHelpers.interopDefault(_indexJs192);
var _indexJs193 = require("./setSeconds/index.js");
var _indexJsDefault193 = parcelHelpers.interopDefault(_indexJs193);
var _indexJs194 = require("./setWeek/index.js");
var _indexJsDefault194 = parcelHelpers.interopDefault(_indexJs194);
var _indexJs195 = require("./setWeekYear/index.js");
var _indexJsDefault195 = parcelHelpers.interopDefault(_indexJs195);
var _indexJs196 = require("./setYear/index.js");
var _indexJsDefault196 = parcelHelpers.interopDefault(_indexJs196);
var _indexJs197 = require("./startOfDay/index.js");
var _indexJsDefault197 = parcelHelpers.interopDefault(_indexJs197);
var _indexJs198 = require("./startOfDecade/index.js");
var _indexJsDefault198 = parcelHelpers.interopDefault(_indexJs198);
var _indexJs199 = require("./startOfHour/index.js");
var _indexJsDefault199 = parcelHelpers.interopDefault(_indexJs199);
var _indexJs200 = require("./startOfISOWeek/index.js");
var _indexJsDefault200 = parcelHelpers.interopDefault(_indexJs200);
var _indexJs201 = require("./startOfISOWeekYear/index.js");
var _indexJsDefault201 = parcelHelpers.interopDefault(_indexJs201);
var _indexJs202 = require("./startOfMinute/index.js");
var _indexJsDefault202 = parcelHelpers.interopDefault(_indexJs202);
var _indexJs203 = require("./startOfMonth/index.js");
var _indexJsDefault203 = parcelHelpers.interopDefault(_indexJs203);
var _indexJs204 = require("./startOfQuarter/index.js");
var _indexJsDefault204 = parcelHelpers.interopDefault(_indexJs204);
var _indexJs205 = require("./startOfSecond/index.js");
var _indexJsDefault205 = parcelHelpers.interopDefault(_indexJs205);
var _indexJs206 = require("./startOfToday/index.js");
var _indexJsDefault206 = parcelHelpers.interopDefault(_indexJs206);
var _indexJs207 = require("./startOfTomorrow/index.js");
var _indexJsDefault207 = parcelHelpers.interopDefault(_indexJs207);
var _indexJs208 = require("./startOfWeek/index.js");
var _indexJsDefault208 = parcelHelpers.interopDefault(_indexJs208);
var _indexJs209 = require("./startOfWeekYear/index.js");
var _indexJsDefault209 = parcelHelpers.interopDefault(_indexJs209);
var _indexJs210 = require("./startOfYear/index.js");
var _indexJsDefault210 = parcelHelpers.interopDefault(_indexJs210);
var _indexJs211 = require("./startOfYesterday/index.js");
var _indexJsDefault211 = parcelHelpers.interopDefault(_indexJs211);
var _indexJs212 = require("./sub/index.js");
var _indexJsDefault212 = parcelHelpers.interopDefault(_indexJs212);
var _indexJs213 = require("./subBusinessDays/index.js");
var _indexJsDefault213 = parcelHelpers.interopDefault(_indexJs213);
var _indexJs214 = require("./subDays/index.js");
var _indexJsDefault214 = parcelHelpers.interopDefault(_indexJs214);
var _indexJs215 = require("./subHours/index.js");
var _indexJsDefault215 = parcelHelpers.interopDefault(_indexJs215);
var _indexJs216 = require("./subISOWeekYears/index.js");
var _indexJsDefault216 = parcelHelpers.interopDefault(_indexJs216);
var _indexJs217 = require("./subMilliseconds/index.js");
var _indexJsDefault217 = parcelHelpers.interopDefault(_indexJs217);
var _indexJs218 = require("./subMinutes/index.js");
var _indexJsDefault218 = parcelHelpers.interopDefault(_indexJs218);
var _indexJs219 = require("./subMonths/index.js");
var _indexJsDefault219 = parcelHelpers.interopDefault(_indexJs219);
var _indexJs220 = require("./subQuarters/index.js");
var _indexJsDefault220 = parcelHelpers.interopDefault(_indexJs220);
var _indexJs221 = require("./subSeconds/index.js");
var _indexJsDefault221 = parcelHelpers.interopDefault(_indexJs221);
var _indexJs222 = require("./subWeeks/index.js");
var _indexJsDefault222 = parcelHelpers.interopDefault(_indexJs222);
var _indexJs223 = require("./subYears/index.js");
var _indexJsDefault223 = parcelHelpers.interopDefault(_indexJs223);
var _indexJs224 = require("./toDate/index.js");
var _indexJsDefault224 = parcelHelpers.interopDefault(_indexJs224);
var _indexJs225 = require("./weeksToDays/index.js");
var _indexJsDefault225 = parcelHelpers.interopDefault(_indexJs225);
var _indexJs226 = require("./yearsToMonths/index.js");
var _indexJsDefault226 = parcelHelpers.interopDefault(_indexJs226);
var _indexJs227 = require("./yearsToQuarters/index.js");
var _indexJsDefault227 = parcelHelpers.interopDefault(_indexJs227);
var _indexJs228 = require("./constants/index.js");
parcelHelpers.exportAll(_indexJs228, exports);

},{"./add/index.js":"lftgI","./addBusinessDays/index.js":"btY85","./addDays/index.js":"hYhFb","./addHours/index.js":"fyPHm","./addISOWeekYears/index.js":"1qPKW","./addMilliseconds/index.js":"et4cY","./addMinutes/index.js":"gR7QC","./addMonths/index.js":"8vzbZ","./addQuarters/index.js":"3cz4b","./addSeconds/index.js":"2Y27a","./addWeeks/index.js":"9mj9k","./addYears/index.js":"4ZQ1O","./areIntervalsOverlapping/index.js":"9dhO1","./clamp/index.js":"645zF","./closestIndexTo/index.js":"gYOOB","./closestTo/index.js":"8iE6n","./compareAsc/index.js":"1Vr9W","./compareDesc/index.js":"1r0Z9","./daysToWeeks/index.js":"d182x","./differenceInBusinessDays/index.js":"c6Zbg","./differenceInCalendarDays/index.js":"dQlTa","./differenceInCalendarISOWeekYears/index.js":"1sEo5","./differenceInCalendarISOWeeks/index.js":"jPUZa","./differenceInCalendarMonths/index.js":"6kub7","./differenceInCalendarQuarters/index.js":"l7kE1","./differenceInCalendarWeeks/index.js":"6fVKv","./differenceInCalendarYears/index.js":"184JB","./differenceInDays/index.js":"d7PBJ","./differenceInHours/index.js":"5A5yp","./differenceInISOWeekYears/index.js":"dpEJ3","./differenceInMilliseconds/index.js":"1gbEb","./differenceInMinutes/index.js":"busJZ","./differenceInMonths/index.js":"eWcZM","./differenceInQuarters/index.js":"8c814","./differenceInSeconds/index.js":"9J8F0","./differenceInWeeks/index.js":"eWjUx","./differenceInYears/index.js":"253nF","./eachDayOfInterval/index.js":"kUqLr","./eachHourOfInterval/index.js":"9Tfbc","./eachMinuteOfInterval/index.js":"4Ootm","./eachMonthOfInterval/index.js":"6vq2f","./eachQuarterOfInterval/index.js":"aMRpe","./eachWeekOfInterval/index.js":"5pRpT","./eachWeekendOfInterval/index.js":"fXRd8","./eachWeekendOfMonth/index.js":"a3olv","./eachWeekendOfYear/index.js":"2OWGT","./eachYearOfInterval/index.js":"6skpm","./endOfDay/index.js":"436iN","./endOfDecade/index.js":"9xRN0","./endOfHour/index.js":"1ZGU5","./endOfISOWeek/index.js":"7KiAN","./endOfISOWeekYear/index.js":"knooV","./endOfMinute/index.js":"aGls4","./endOfMonth/index.js":"gsQ47","./endOfQuarter/index.js":"fuD8P","./endOfSecond/index.js":"j9705","./endOfToday/index.js":"chEeo","./endOfTomorrow/index.js":"dXJGq","./endOfWeek/index.js":"2OHc4","./endOfYear/index.js":"dkzAp","./endOfYesterday/index.js":"3YI6j","./format/index.js":"lNaGA","./formatDistance/index.js":"aQz6i","./formatDistanceStrict/index.js":"bcEgc","./formatDistanceToNow/index.js":"7XpoF","./formatDistanceToNowStrict/index.js":"d2RLe","./formatDuration/index.js":"l4SB3","./formatISO/index.js":"8JmJJ","./formatISO9075/index.js":"eUEob","./formatISODuration/index.js":"kktco","./formatRFC3339/index.js":"lbDwh","./formatRFC7231/index.js":"3paMm","./formatRelative/index.js":"6C329","./fromUnixTime/index.js":"8Cl6X","./getDate/index.js":"mNo56","./getDay/index.js":"b3QZJ","./getDayOfYear/index.js":"f3XCc","./getDaysInMonth/index.js":"6NFs2","./getDaysInYear/index.js":"c4cww","./getDecade/index.js":"eQPz5","./getHours/index.js":"jeanF","./getISODay/index.js":"9SPFw","./getISOWeek/index.js":"gjktN","./getISOWeekYear/index.js":"cKtSf","./getISOWeeksInYear/index.js":"cht79","./getMilliseconds/index.js":"e8WIl","./getMinutes/index.js":"4qrrL","./getMonth/index.js":"crXFe","./getOverlappingDaysInIntervals/index.js":"4zx9j","./getQuarter/index.js":"gwvcK","./getSeconds/index.js":"8asYq","./getTime/index.js":"iXeWi","./getUnixTime/index.js":"baT07","./getWeek/index.js":"c8Jm6","./getWeekOfMonth/index.js":"5Nzdh","./getWeekYear/index.js":"cRMdy","./getWeeksInMonth/index.js":"g58rG","./getYear/index.js":"lS1Ek","./hoursToMilliseconds/index.js":"dd2Bt","./hoursToMinutes/index.js":"ldKDJ","./hoursToSeconds/index.js":"dpFra","./intervalToDuration/index.js":"mK3J9","./intlFormat/index.js":"4tBf3","./isAfter/index.js":"eDpLB","./isBefore/index.js":"djDIq","./isDate/index.js":"dWtzU","./isEqual/index.js":"bEmvR","./isExists/index.js":"2dFT3","./isFirstDayOfMonth/index.js":"1rfJV","./isFriday/index.js":"80XtF","./isFuture/index.js":"cRx5x","./isLastDayOfMonth/index.js":"btgwd","./isLeapYear/index.js":"jF4oq","./isMatch/index.js":"hyWo3","./isMonday/index.js":"5YKyS","./isPast/index.js":"hSmpF","./isSameDay/index.js":"kCT4K","./isSameHour/index.js":"8h96x","./isSameISOWeek/index.js":"bteBn","./isSameISOWeekYear/index.js":"e4VWe","./isSameMinute/index.js":"au3RT","./isSameMonth/index.js":"dlChX","./isSameQuarter/index.js":"2Iqrs","./isSameSecond/index.js":"jE8AH","./isSameWeek/index.js":"hbjUp","./isSameYear/index.js":"4dpOs","./isSaturday/index.js":"hIE4P","./isSunday/index.js":"6G4Hk","./isThisHour/index.js":"6TbDk","./isThisISOWeek/index.js":"iFqPW","./isThisMinute/index.js":"gW9pS","./isThisMonth/index.js":"kdT4c","./isThisQuarter/index.js":"kasnU","./isThisSecond/index.js":"eaf2e","./isThisWeek/index.js":"7GJhr","./isThisYear/index.js":"3rd3N","./isThursday/index.js":"jPEMV","./isToday/index.js":"eu4X2","./isTomorrow/index.js":"j68jX","./isTuesday/index.js":"lzD50","./isValid/index.js":"1nJMs","./isWednesday/index.js":"eVkK8","./isWeekend/index.js":"lFBRK","./isWithinInterval/index.js":"gyFHB","./isYesterday/index.js":"Mwqlc","./lastDayOfDecade/index.js":"1lVZX","./lastDayOfISOWeek/index.js":"fT8Br","./lastDayOfISOWeekYear/index.js":"aZLEu","./lastDayOfMonth/index.js":"kQSRO","./lastDayOfQuarter/index.js":"9fUc6","./lastDayOfWeek/index.js":"63OVg","./lastDayOfYear/index.js":"boaxx","./lightFormat/index.js":"aXu7E","./max/index.js":"g5ou7","./milliseconds/index.js":"hze4k","./millisecondsToHours/index.js":"dnwqF","./millisecondsToMinutes/index.js":"lEmbU","./millisecondsToSeconds/index.js":"kOWV2","./min/index.js":"75uW4","./minutesToHours/index.js":"89lIW","./minutesToMilliseconds/index.js":"c4Huw","./minutesToSeconds/index.js":"kVXTI","./monthsToQuarters/index.js":"iLRoa","./monthsToYears/index.js":"1V3bZ","./nextDay/index.js":"60uxZ","./nextFriday/index.js":"k54ZN","./nextMonday/index.js":"PJre5","./nextSaturday/index.js":"6bvc9","./nextSunday/index.js":"l7jyt","./nextThursday/index.js":"1vhfV","./nextTuesday/index.js":"gCnsN","./nextWednesday/index.js":"lDr34","./parse/index.js":"bD2Un","./parseISO/index.js":"4axSD","./parseJSON/index.js":"8Rcbd","./quartersToMonths/index.js":"j1LUl","./quartersToYears/index.js":"ax1Ba","./roundToNearestMinutes/index.js":"31JeA","./secondsToHours/index.js":"dSoNc","./secondsToMilliseconds/index.js":"iW05q","./secondsToMinutes/index.js":"cFVK2","./set/index.js":"klQdh","./setDate/index.js":"gwxNy","./setDay/index.js":"k5vtD","./setDayOfYear/index.js":"ddctF","./setHours/index.js":"49P9v","./setISODay/index.js":"4xPKF","./setISOWeek/index.js":"41OO1","./setISOWeekYear/index.js":"3Go1m","./setMilliseconds/index.js":"3R8nw","./setMinutes/index.js":"223QP","./setMonth/index.js":"cBgCL","./setQuarter/index.js":"a1p6c","./setSeconds/index.js":"b3oxB","./setWeek/index.js":"6WYhG","./setWeekYear/index.js":"htYry","./setYear/index.js":"1PzRy","./startOfDay/index.js":"kw7ww","./startOfDecade/index.js":"jFSm8","./startOfHour/index.js":"5Zqli","./startOfISOWeek/index.js":"hgsCz","./startOfISOWeekYear/index.js":"cO5R6","./startOfMinute/index.js":"lnBQj","./startOfMonth/index.js":"1qC5t","./startOfQuarter/index.js":"gh7uQ","./startOfSecond/index.js":"aR12L","./startOfToday/index.js":"fAIkv","./startOfTomorrow/index.js":"c0fTI","./startOfWeek/index.js":"22WAP","./startOfWeekYear/index.js":"hjJu6","./startOfYear/index.js":"60TSI","./startOfYesterday/index.js":"6pism","./sub/index.js":"9x136","./subBusinessDays/index.js":"97I8c","./subDays/index.js":"f8ciJ","./subHours/index.js":"aH8HC","./subISOWeekYears/index.js":"ifKnP","./subMilliseconds/index.js":"aMoYy","./subMinutes/index.js":"gy4Oe","./subMonths/index.js":"464Uh","./subQuarters/index.js":"aLnPr","./subSeconds/index.js":"jHno1","./subWeeks/index.js":"3gBj9","./subYears/index.js":"eDWKs","./toDate/index.js":"6pFrg","./weeksToDays/index.js":"ismIn","./yearsToMonths/index.js":"imxWv","./yearsToQuarters/index.js":"ee2FL","./constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lftgI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMonths/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/toInteger/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function add(dirtyDate, duration) {
    _indexJsDefault3.default(2, arguments);
    if (!duration || typeof duration !== 'object') return new Date(NaN);
    var years = duration.years ? _indexJsDefault4.default(duration.years) : 0;
    var months = duration.months ? _indexJsDefault4.default(duration.months) : 0;
    var weeks = duration.weeks ? _indexJsDefault4.default(duration.weeks) : 0;
    var days = duration.days ? _indexJsDefault4.default(duration.days) : 0;
    var hours = duration.hours ? _indexJsDefault4.default(duration.hours) : 0;
    var minutes = duration.minutes ? _indexJsDefault4.default(duration.minutes) : 0;
    var seconds = duration.seconds ? _indexJsDefault4.default(duration.seconds) : 0; // Add years and months
    var date = _indexJsDefault2.default(dirtyDate);
    var dateWithMonths = months || years ? _indexJsDefault1.default(date, months + years * 12) : date; // Add weeks and days
    var dateWithDays = days || weeks ? _indexJsDefault.default(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds
    var minutesToAdd = minutes + hours * 60;
    var secondsToAdd = seconds + minutesToAdd * 60;
    var msToAdd = secondsToAdd * 1000;
    var finalDate = new Date(dateWithDays.getTime() + msToAdd);
    return finalDate;
}
exports.default = add;

},{"../addDays/index.js":"hYhFb","../addMonths/index.js":"8vzbZ","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","../_lib/toInteger/index.js":"95G4A","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hYhFb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function addDays(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var amount = _indexJsDefault.default(dirtyAmount);
    if (isNaN(amount)) return new Date(NaN);
    if (!amount) // If 0 days, no-op to avoid changing times in the hour before end of DST
    return date;
    date.setDate(date.getDate() + amount);
    return date;
}
exports.default = addDays;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8vzbZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function addMonths(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var amount = _indexJsDefault.default(dirtyAmount);
    if (isNaN(amount)) return new Date(NaN);
    if (!amount) // If 0 months, no-op to avoid changing times in the hour before end of DST
    return date;
    var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
    // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
    // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
    // want except that dates will wrap around the end of a month, meaning that
    // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
    // we'll default to the end of the desired month by adding 1 to the desired
    // month and using a date of 0 to back up one day to the end of the desired
    // month.
    var endOfDesiredMonth = new Date(date.getTime());
    endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
    var daysInMonth = endOfDesiredMonth.getDate();
    if (dayOfMonth >= daysInMonth) // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
    else {
        // Otherwise, we now know that setting the original day-of-month value won't
        // cause an overflow, so set the desired day-of-month. Note that we can't
        // just set the date of `endOfDesiredMonth` because that object may have had
        // its time changed in the unusual case where where a DST transition was on
        // the last day of the month and its local time was in the hour skipped or
        // repeated next to a DST transition.  So we use `date` instead which is
        // guaranteed to still have the original time.
        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
        return date;
    }
}
exports.default = addMonths;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"btY85":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isWeekend/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/toInteger/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../isSunday/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../isSaturday/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
function addBusinessDays(dirtyDate, dirtyAmount) {
    _indexJsDefault3.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var startedOnWeekend = _indexJsDefault.default(date);
    var amount = _indexJsDefault2.default(dirtyAmount);
    if (isNaN(amount)) return new Date(NaN);
    var hours = date.getHours();
    var sign = amount < 0 ? -1 : 1;
    var fullWeeks = _indexJsDefault2.default(amount / 5);
    date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week
    var restDays = Math.abs(amount % 5); // Loops over remaining days
    while(restDays > 0){
        date.setDate(date.getDate() + sign);
        if (!_indexJsDefault.default(date)) restDays -= 1;
    } // If the date is a weekend day and we reduce a dividable of
    // 5 from it, we land on a weekend date.
    // To counter this, we add days accordingly to land on the next business day
    if (startedOnWeekend && _indexJsDefault.default(date) && amount !== 0) {
        // If we're reducing days, we want to add days until we land on a weekday
        // If we're adding days we want to reduce days until we land on a weekday
        if (_indexJsDefault5.default(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));
        if (_indexJsDefault4.default(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));
    } // Restore hours to avoid DST lag
    date.setHours(hours);
    return date;
}
exports.default = addBusinessDays;

},{"../isWeekend/index.js":"lFBRK","../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","../isSunday/index.js":"6G4Hk","../isSaturday/index.js":"hIE4P","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lFBRK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isWeekend(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var day = date.getDay();
    return day === 0 || day === 6;
}
exports.default = isWeekend;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6G4Hk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSunday(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getDay() === 0;
}
exports.default = isSunday;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hIE4P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSaturday(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getDay() === 6;
}
exports.default = isSaturday;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fyPHm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMilliseconds/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var MILLISECONDS_IN_HOUR = 3600000;
function addHours(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, amount * MILLISECONDS_IN_HOUR);
}
exports.default = addHours;

},{"../_lib/toInteger/index.js":"95G4A","../addMilliseconds/index.js":"et4cY","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1qPKW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../getISOWeekYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../setISOWeekYear/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function addISOWeekYears(dirtyDate, dirtyAmount) {
    _indexJsDefault3.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault2.default(dirtyDate, _indexJsDefault1.default(dirtyDate) + amount);
}
exports.default = addISOWeekYears;

},{"../_lib/toInteger/index.js":"95G4A","../getISOWeekYear/index.js":"cKtSf","../setISOWeekYear/index.js":"3Go1m","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"cKtSf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function getISOWeekYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    var fourthOfJanuaryOfNextYear = new Date(0);
    fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
    fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
    var startOfNextYear = _indexJsDefault1.default(fourthOfJanuaryOfNextYear);
    var fourthOfJanuaryOfThisYear = new Date(0);
    fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
    fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
    var startOfThisYear = _indexJsDefault1.default(fourthOfJanuaryOfThisYear);
    if (date.getTime() >= startOfNextYear.getTime()) return year + 1;
    else if (date.getTime() >= startOfThisYear.getTime()) return year;
    else return year - 1;
}
exports.default = getISOWeekYear;

},{"../toDate/index.js":"6pFrg","../startOfISOWeek/index.js":"hgsCz","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hgsCz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfISOWeek(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, {
        weekStartsOn: 1
    });
}
exports.default = startOfISOWeek;

},{"../startOfWeek/index.js":"22WAP","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"22WAP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/toInteger/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function startOfWeek(dirtyDate, dirtyOptions) {
    _indexJsDefault2.default(1, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault1.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault1.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    var date = _indexJsDefault.default(dirtyDate);
    var day = date.getDay();
    var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
    date.setDate(date.getDate() - diff);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfWeek;

},{"../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3Go1m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfISOWeekYear/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../differenceInCalendarDays/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
    _indexJsDefault4.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var isoWeekYear = _indexJsDefault.default(dirtyISOWeekYear);
    var diff = _indexJsDefault3.default(date, _indexJsDefault2.default(date));
    var fourthOfJanuary = new Date(0);
    fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);
    fourthOfJanuary.setHours(0, 0, 0, 0);
    date = _indexJsDefault2.default(fourthOfJanuary);
    date.setDate(date.getDate() + diff);
    return date;
}
exports.default = setISOWeekYear;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../startOfISOWeekYear/index.js":"cO5R6","../differenceInCalendarDays/index.js":"dQlTa","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"cO5R6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getISOWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function startOfISOWeekYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var year = _indexJsDefault.default(dirtyDate);
    var fourthOfJanuary = new Date(0);
    fourthOfJanuary.setFullYear(year, 0, 4);
    fourthOfJanuary.setHours(0, 0, 0, 0);
    var date = _indexJsDefault1.default(fourthOfJanuary);
    return date;
}
exports.default = startOfISOWeekYear;

},{"../getISOWeekYear/index.js":"cKtSf","../startOfISOWeek/index.js":"hgsCz","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dQlTa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var MILLISECONDS_IN_DAY = 86400000;
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault2.default(2, arguments);
    var startOfDayLeft = _indexJsDefault1.default(dirtyDateLeft);
    var startOfDayRight = _indexJsDefault1.default(dirtyDateRight);
    var timestampLeft = startOfDayLeft.getTime() - _indexJsDefault.default(startOfDayLeft);
    var timestampRight = startOfDayRight.getTime() - _indexJsDefault.default(startOfDayRight); // Round the number of days to the nearest integer
    // because the number of milliseconds in a day is not constant
    // (e.g. it's different in the day of the daylight saving time clock shift)
    return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}
exports.default = differenceInCalendarDays;

},{"../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../startOfDay/index.js":"kw7ww","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fb6ke":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getTimezoneOffsetInMilliseconds(date) {
    var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
    utcDate.setUTCFullYear(date.getFullYear());
    return date.getTime() - utcDate.getTime();
}
exports.default = getTimezoneOffsetInMilliseconds;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kw7ww":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfDay(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfDay;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3cz4b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMonths/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function addQuarters(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    var months = amount * 3;
    return _indexJsDefault1.default(dirtyDate, months);
}
exports.default = addQuarters;

},{"../_lib/toInteger/index.js":"95G4A","../addMonths/index.js":"8vzbZ","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2Y27a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMilliseconds/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function addSeconds(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, amount * 1000);
}
exports.default = addSeconds;

},{"../_lib/toInteger/index.js":"95G4A","../addMilliseconds/index.js":"et4cY","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9mj9k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addDays/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function addWeeks(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    var days = amount * 7;
    return _indexJsDefault1.default(dirtyDate, days);
}
exports.default = addWeeks;

},{"../_lib/toInteger/index.js":"95G4A","../addDays/index.js":"hYhFb","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4ZQ1O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMonths/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function addYears(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, amount * 12);
}
exports.default = addYears;

},{"../_lib/toInteger/index.js":"95G4A","../addMonths/index.js":"8vzbZ","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9dhO1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
        inclusive: false
    };
    _indexJsDefault1.default(2, arguments);
    var intervalLeft = dirtyIntervalLeft || {
    };
    var intervalRight = dirtyIntervalRight || {
    };
    var leftStartTime = _indexJsDefault.default(intervalLeft.start).getTime();
    var leftEndTime = _indexJsDefault.default(intervalLeft.end).getTime();
    var rightStartTime = _indexJsDefault.default(intervalRight.start).getTime();
    var rightEndTime = _indexJsDefault.default(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) throw new RangeError('Invalid interval');
    if (options.inclusive) return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;
    return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
}
exports.default = areIntervalsOverlapping;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"645zF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../max/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../min/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function clamp(date, _ref) {
    var start = _ref.start, end = _ref.end;
    _indexJsDefault2.default(2, arguments);
    return _indexJsDefault1.default([
        _indexJsDefault.default([
            date,
            start
        ]),
        end
    ]);
}
exports.default = clamp;

},{"../max/index.js":"g5ou7","../min/index.js":"75uW4","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"g5ou7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function max(dirtyDatesArray) {
    _indexJsDefault1.default(1, arguments);
    var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
    if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
    else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) datesArray = Array.prototype.slice.call(dirtyDatesArray);
    else // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
    var result;
    datesArray.forEach(function(dirtyDate) {
        var currentDate = _indexJsDefault.default(dirtyDate);
        if (result === undefined || result < currentDate || isNaN(Number(currentDate))) result = currentDate;
    });
    return result || new Date(NaN);
}
exports.default = max;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"75uW4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function min(dirtyDatesArray) {
    _indexJsDefault1.default(1, arguments);
    var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
    if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
    else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) datesArray = Array.prototype.slice.call(dirtyDatesArray);
    else // `dirtyDatesArray` is non-iterable, return Invalid Date
    return new Date(NaN);
    var result;
    datesArray.forEach(function(dirtyDate) {
        var currentDate = _indexJsDefault.default(dirtyDate);
        if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) result = currentDate;
    });
    return result || new Date(NaN);
}
exports.default = min;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gYOOB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
    _indexJsDefault1.default(2, arguments);
    var dateToCompare = _indexJsDefault.default(dirtyDateToCompare);
    if (isNaN(dateToCompare)) return NaN;
    var timeToCompare = dateToCompare.getTime();
    var datesArray; // `dirtyDatesArray` is undefined or null
    if (dirtyDatesArray == null) datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
    else if (typeof dirtyDatesArray.forEach === 'function') datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
    else datesArray = Array.prototype.slice.call(dirtyDatesArray);
    var result;
    var minDistance;
    datesArray.forEach(function(dirtyDate, index) {
        var currentDate = _indexJsDefault.default(dirtyDate);
        if (isNaN(currentDate)) {
            result = NaN;
            minDistance = NaN;
            return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        if (result == null || distance < minDistance) {
            result = index;
            minDistance = distance;
        }
    });
    return result;
}
exports.default = closestIndexTo;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8iE6n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function closestTo(dirtyDateToCompare, dirtyDatesArray) {
    _indexJsDefault1.default(2, arguments);
    var dateToCompare = _indexJsDefault.default(dirtyDateToCompare);
    if (isNaN(dateToCompare)) return new Date(NaN);
    var timeToCompare = dateToCompare.getTime();
    var datesArray; // `dirtyDatesArray` is undefined or null
    if (dirtyDatesArray == null) datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
    else if (typeof dirtyDatesArray.forEach === 'function') datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
    else datesArray = Array.prototype.slice.call(dirtyDatesArray);
    var result;
    var minDistance;
    datesArray.forEach(function(dirtyDate) {
        var currentDate = _indexJsDefault.default(dirtyDate);
        if (isNaN(currentDate)) {
            result = new Date(NaN);
            minDistance = NaN;
            return;
        }
        var distance = Math.abs(timeToCompare - currentDate.getTime());
        if (result == null || distance < minDistance) {
            result = currentDate;
            minDistance = distance;
        }
    });
    return result;
}
exports.default = closestTo;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1Vr9W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function compareAsc(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    var diff = dateLeft.getTime() - dateRight.getTime();
    if (diff < 0) return -1;
    else if (diff > 0) return 1; // Return 0 if diff is 0; return NaN if diff is NaN
    else return diff;
}
exports.default = compareAsc;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1r0Z9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function compareDesc(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    var diff = dateLeft.getTime() - dateRight.getTime();
    if (diff > 0) return -1;
    else if (diff < 0) return 1; // Return 0 if diff is 0; return NaN if diff is NaN
    else return diff;
}
exports.default = compareDesc;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"d182x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function daysToWeeks(days) {
    _indexJsDefault.default(1, arguments);
    var weeks = days / _indexJs1.daysInWeek;
    return Math.floor(weeks);
}
exports.default = daysToWeeks;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4ds6s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "daysInWeek", ()=>daysInWeek
);
parcelHelpers.export(exports, "maxTime", ()=>maxTime
);
parcelHelpers.export(exports, "millisecondsInMinute", ()=>millisecondsInMinute
);
parcelHelpers.export(exports, "millisecondsInHour", ()=>millisecondsInHour
);
parcelHelpers.export(exports, "millisecondsInSecond", ()=>millisecondsInSecond
);
parcelHelpers.export(exports, "minTime", ()=>minTime
);
parcelHelpers.export(exports, "minutesInHour", ()=>minutesInHour
);
parcelHelpers.export(exports, "monthsInQuarter", ()=>monthsInQuarter
);
parcelHelpers.export(exports, "monthsInYear", ()=>monthsInYear
);
parcelHelpers.export(exports, "quartersInYear", ()=>quartersInYear
);
parcelHelpers.export(exports, "secondsInHour", ()=>secondsInHour
);
parcelHelpers.export(exports, "secondsInMinute", ()=>secondsInMinute
);
var daysInWeek = 7;
var maxTime = Math.pow(10, 8) * 86400000;
var millisecondsInMinute = 60000;
var millisecondsInHour = 3600000;
var millisecondsInSecond = 1000;
var minTime = -maxTime;
var minutesInHour = 60;
var monthsInQuarter = 3;
var monthsInYear = 12;
var quartersInYear = 4;
var secondsInHour = 3600;
var secondsInMinute = 60;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"c6Zbg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isValid/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isWeekend/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../differenceInCalendarDays/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../addDays/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../isSameDay/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../_lib/toInteger/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault7.default(2, arguments);
    var dateLeft = _indexJsDefault2.default(dirtyDateLeft);
    var dateRight = _indexJsDefault2.default(dirtyDateRight);
    if (!_indexJsDefault.default(dateLeft) || !_indexJsDefault.default(dateRight)) return NaN;
    var calendarDifference = _indexJsDefault3.default(dateLeft, dateRight);
    var sign = calendarDifference < 0 ? -1 : 1;
    var weeks = _indexJsDefault6.default(calendarDifference / 7);
    var result = weeks * 5;
    dateRight = _indexJsDefault4.default(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week
    while(!_indexJsDefault5.default(dateLeft, dateRight)){
        // sign is used to account for both negative and positive differences
        result += _indexJsDefault1.default(dateRight) ? 0 : sign;
        dateRight = _indexJsDefault4.default(dateRight, sign);
    }
    return result === 0 ? 0 : result;
}
exports.default = differenceInBusinessDays;

},{"../isValid/index.js":"1nJMs","../isWeekend/index.js":"lFBRK","../toDate/index.js":"6pFrg","../differenceInCalendarDays/index.js":"dQlTa","../addDays/index.js":"hYhFb","../isSameDay/index.js":"kCT4K","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1nJMs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isValid(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    return !isNaN(date);
}
exports.default = isValid;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kCT4K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfDay/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameDay(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeftStartOfDay = _indexJsDefault.default(dirtyDateLeft);
    var dateRightStartOfDay = _indexJsDefault.default(dirtyDateRight);
    return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}
exports.default = isSameDay;

},{"../startOfDay/index.js":"kw7ww","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1sEo5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getISOWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    return _indexJsDefault.default(dirtyDateLeft) - _indexJsDefault.default(dirtyDateRight);
}
exports.default = differenceInCalendarISOWeekYears;

},{"../getISOWeekYear/index.js":"cKtSf","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"jPUZa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var MILLISECONDS_IN_WEEK = 604800000;
function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault2.default(2, arguments);
    var startOfISOWeekLeft = _indexJsDefault1.default(dirtyDateLeft);
    var startOfISOWeekRight = _indexJsDefault1.default(dirtyDateRight);
    var timestampLeft = startOfISOWeekLeft.getTime() - _indexJsDefault.default(startOfISOWeekLeft);
    var timestampRight = startOfISOWeekRight.getTime() - _indexJsDefault.default(startOfISOWeekRight); // Round the number of days to the nearest integer
    // because the number of milliseconds in a week is not constant
    // (e.g. it's different in the week of the daylight saving time clock shift)
    return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
}
exports.default = differenceInCalendarISOWeeks;

},{"../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../startOfISOWeek/index.js":"hgsCz","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6kub7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
    var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
    return yearDiff * 12 + monthDiff;
}
exports.default = differenceInCalendarMonths;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"l7kE1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getQuarter/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault2.default(2, arguments);
    var dateLeft = _indexJsDefault1.default(dirtyDateLeft);
    var dateRight = _indexJsDefault1.default(dirtyDateRight);
    var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
    var quarterDiff = _indexJsDefault.default(dateLeft) - _indexJsDefault.default(dateRight);
    return yearDiff * 4 + quarterDiff;
}
exports.default = differenceInCalendarQuarters;

},{"../getQuarter/index.js":"gwvcK","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gwvcK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getQuarter(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var quarter = Math.floor(date.getMonth() / 3) + 1;
    return quarter;
}
exports.default = getQuarter;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6fVKv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var MILLISECONDS_IN_WEEK = 604800000;
function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
    _indexJsDefault2.default(2, arguments);
    var startOfWeekLeft = _indexJsDefault.default(dirtyDateLeft, dirtyOptions);
    var startOfWeekRight = _indexJsDefault.default(dirtyDateRight, dirtyOptions);
    var timestampLeft = startOfWeekLeft.getTime() - _indexJsDefault1.default(startOfWeekLeft);
    var timestampRight = startOfWeekRight.getTime() - _indexJsDefault1.default(startOfWeekRight); // Round the number of days to the nearest integer
    // because the number of milliseconds in a week is not constant
    // (e.g. it's different in the week of the daylight saving time clock shift)
    return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
}
exports.default = differenceInCalendarWeeks;

},{"../startOfWeek/index.js":"22WAP","../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"184JB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    return dateLeft.getFullYear() - dateRight.getFullYear();
}
exports.default = differenceInCalendarYears;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"d7PBJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../differenceInCalendarDays/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js"); // Like `compareAsc` but uses local time not UTC, which is needed
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
// for accurate equality comparisons of UTC timestamps that end up
// having the same representation in local time, e.g. one hour before
// DST ends vs. the instant that DST ends.
function compareLocalAsc(dateLeft, dateRight) {
    var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
    if (diff < 0) return -1;
    else if (diff > 0) return 1; // Return 0 if diff is 0; return NaN if diff is NaN
    else return diff;
}
function differenceInDays(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault2.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    var sign = compareLocalAsc(dateLeft, dateRight);
    var difference = Math.abs(_indexJsDefault1.default(dateLeft, dateRight));
    dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
    // If so, result must be decreased by 1 in absolute value
    var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);
    var result = sign * (difference - isLastDayNotFull); // Prevent negative zero
    return result === 0 ? 0 : result;
}
exports.default = differenceInDays;

},{"../toDate/index.js":"6pFrg","../differenceInCalendarDays/index.js":"dQlTa","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"5A5yp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInMilliseconds/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var MILLISECONDS_IN_HOUR = 3600000;
function differenceInHours(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var diff = _indexJsDefault.default(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;
    return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
exports.default = differenceInHours;

},{"../differenceInMilliseconds/index.js":"1gbEb","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1gbEb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    return dateLeft.getTime() - dateRight.getTime();
}
exports.default = differenceInMilliseconds;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dpEJ3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../differenceInCalendarISOWeekYears/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../compareAsc/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../subISOWeekYears/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault4.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    var sign = _indexJsDefault2.default(dateLeft, dateRight);
    var difference = Math.abs(_indexJsDefault1.default(dateLeft, dateRight));
    dateLeft = _indexJsDefault3.default(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1
    // if last calendar ISO year is not full
    // If so, result must be decreased by 1 in absolute value
    var isLastISOWeekYearNotFull = Number(_indexJsDefault2.default(dateLeft, dateRight) === -sign);
    var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero
    return result === 0 ? 0 : result;
}
exports.default = differenceInISOWeekYears;

},{"../toDate/index.js":"6pFrg","../differenceInCalendarISOWeekYears/index.js":"1sEo5","../compareAsc/index.js":"1Vr9W","../subISOWeekYears/index.js":"ifKnP","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"ifKnP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addISOWeekYears/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subISOWeekYears(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subISOWeekYears;

},{"../_lib/toInteger/index.js":"95G4A","../addISOWeekYears/index.js":"1qPKW","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"busJZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInMilliseconds/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var MILLISECONDS_IN_MINUTE = 60000;
function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var diff = _indexJsDefault.default(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;
    return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
exports.default = differenceInMinutes;

},{"../differenceInMilliseconds/index.js":"1gbEb","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eWcZM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../differenceInCalendarMonths/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../compareAsc/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../isLastDayOfMonth/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault3.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    var sign = _indexJsDefault2.default(dateLeft, dateRight);
    var difference = Math.abs(_indexJsDefault1.default(dateLeft, dateRight));
    var result; // Check for the difference of less than month
    if (difference < 1) result = 0;
    else {
        if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) // This will check if the date is end of Feb and assign a higher end of month date
        // to compare it with Jan
        dateLeft.setDate(30);
        dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
        // If so, result must be decreased by 1 in absolute value
        var isLastMonthNotFull = _indexJsDefault2.default(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month
        if (_indexJsDefault4.default(_indexJsDefault.default(dirtyDateLeft)) && difference === 1 && _indexJsDefault2.default(dirtyDateLeft, dateRight) === 1) isLastMonthNotFull = false;
        result = sign * (difference - Number(isLastMonthNotFull));
    } // Prevent negative zero
    return result === 0 ? 0 : result;
}
exports.default = differenceInMonths;

},{"../toDate/index.js":"6pFrg","../differenceInCalendarMonths/index.js":"6kub7","../compareAsc/index.js":"1Vr9W","../_lib/requiredArgs/index.js":"JNGPJ","../isLastDayOfMonth/index.js":"btgwd","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"btgwd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../endOfDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../endOfMonth/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function isLastDayOfMonth(dirtyDate) {
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    return _indexJsDefault1.default(date).getTime() === _indexJsDefault2.default(date).getTime();
}
exports.default = isLastDayOfMonth;

},{"../toDate/index.js":"6pFrg","../endOfDay/index.js":"436iN","../endOfMonth/index.js":"gsQ47","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"436iN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfDay(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfDay;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gsQ47":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfMonth(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var month = date.getMonth();
    date.setFullYear(date.getFullYear(), month + 1, 0);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfMonth;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8c814":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInMonths/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var diff = _indexJsDefault.default(dirtyDateLeft, dirtyDateRight) / 3;
    return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
exports.default = differenceInQuarters;

},{"../differenceInMonths/index.js":"eWcZM","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9J8F0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInMilliseconds/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var diff = _indexJsDefault.default(dirtyDateLeft, dirtyDateRight) / 1000;
    return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
exports.default = differenceInSeconds;

},{"../differenceInMilliseconds/index.js":"1gbEb","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eWjUx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var diff = _indexJsDefault.default(dirtyDateLeft, dirtyDateRight) / 7;
    return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
exports.default = differenceInWeeks;

},{"../differenceInDays/index.js":"d7PBJ","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"253nF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../differenceInCalendarYears/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../compareAsc/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function differenceInYears(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault3.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    var sign = _indexJsDefault2.default(dateLeft, dateRight);
    var difference = Math.abs(_indexJsDefault1.default(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing
    // with leap days
    dateLeft.setFullYear(1584);
    dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full
    // If so, result must be decreased by 1 in absolute value
    var isLastYearNotFull = _indexJsDefault2.default(dateLeft, dateRight) === -sign;
    var result = sign * (difference - Number(isLastYearNotFull)); // Prevent negative zero
    return result === 0 ? 0 : result;
}
exports.default = differenceInYears;

},{"../toDate/index.js":"6pFrg","../differenceInCalendarYears/index.js":"184JB","../compareAsc/index.js":"1Vr9W","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kUqLr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function eachDayOfInterval(dirtyInterval, options) {
    _indexJsDefault1.default(1, arguments);
    var interval = dirtyInterval || {
    };
    var startDate = _indexJsDefault.default(interval.start);
    var endDate = _indexJsDefault.default(interval.end);
    var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(startDate.getTime() <= endTime)) throw new RangeError('Invalid interval');
    var dates = [];
    var currentDate = startDate;
    currentDate.setHours(0, 0, 0, 0);
    var step = options && 'step' in options ? Number(options.step) : 1;
    if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');
    while(currentDate.getTime() <= endTime){
        dates.push(_indexJsDefault.default(currentDate));
        currentDate.setDate(currentDate.getDate() + step);
        currentDate.setHours(0, 0, 0, 0);
    }
    return dates;
}
exports.default = eachDayOfInterval;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9Tfbc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addHours/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function eachHourOfInterval(dirtyInterval, options) {
    _indexJsDefault2.default(1, arguments);
    var interval = dirtyInterval || {
    };
    var startDate = _indexJsDefault1.default(interval.start);
    var endDate = _indexJsDefault1.default(interval.end);
    var startTime = startDate.getTime();
    var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(startTime <= endTime)) throw new RangeError('Invalid interval');
    var dates = [];
    var currentDate = startDate;
    currentDate.setMinutes(0, 0, 0);
    var step = options && 'step' in options ? Number(options.step) : 1;
    if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');
    while(currentDate.getTime() <= endTime){
        dates.push(_indexJsDefault1.default(currentDate));
        currentDate = _indexJsDefault.default(currentDate, step);
    }
    return dates;
}
exports.default = eachHourOfInterval;

},{"../addHours/index.js":"fyPHm","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6vq2f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function eachMonthOfInterval(dirtyInterval) {
    _indexJsDefault1.default(1, arguments);
    var interval = dirtyInterval || {
    };
    var startDate = _indexJsDefault.default(interval.start);
    var endDate = _indexJsDefault.default(interval.end);
    var endTime = endDate.getTime();
    var dates = []; // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(startDate.getTime() <= endTime)) throw new RangeError('Invalid interval');
    var currentDate = startDate;
    currentDate.setHours(0, 0, 0, 0);
    currentDate.setDate(1);
    while(currentDate.getTime() <= endTime){
        dates.push(_indexJsDefault.default(currentDate));
        currentDate.setMonth(currentDate.getMonth() + 1);
    }
    return dates;
}
exports.default = eachMonthOfInterval;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aMRpe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addQuarters/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfQuarter/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function eachQuarterOfInterval(dirtyInterval) {
    _indexJsDefault3.default(1, arguments);
    var interval = dirtyInterval || {
    };
    var startDate = _indexJsDefault2.default(interval.start);
    var endDate = _indexJsDefault2.default(interval.end);
    var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(startDate.getTime() <= endTime)) throw new RangeError('Invalid interval');
    var startDateQuarter = _indexJsDefault1.default(startDate);
    var endDateQuarter = _indexJsDefault1.default(endDate);
    endTime = endDateQuarter.getTime();
    var quarters = [];
    var currentQuarter = startDateQuarter;
    while(currentQuarter.getTime() <= endTime){
        quarters.push(_indexJsDefault2.default(currentQuarter));
        currentQuarter = _indexJsDefault.default(currentQuarter, 1);
    }
    return quarters;
}
exports.default = eachQuarterOfInterval;

},{"../addQuarters/index.js":"3cz4b","../startOfQuarter/index.js":"gh7uQ","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gh7uQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfQuarter(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var currentMonth = date.getMonth();
    var month = currentMonth - currentMonth % 3;
    date.setMonth(month, 1);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfQuarter;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"5pRpT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addWeeks/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function eachWeekOfInterval(dirtyInterval, options) {
    _indexJsDefault3.default(1, arguments);
    var interval = dirtyInterval || {
    };
    var startDate = _indexJsDefault2.default(interval.start);
    var endDate = _indexJsDefault2.default(interval.end);
    var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(startDate.getTime() <= endTime)) throw new RangeError('Invalid interval');
    var startDateWeek = _indexJsDefault1.default(startDate, options);
    var endDateWeek = _indexJsDefault1.default(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet
    startDateWeek.setHours(15);
    endDateWeek.setHours(15);
    endTime = endDateWeek.getTime();
    var weeks = [];
    var currentWeek = startDateWeek;
    while(currentWeek.getTime() <= endTime){
        currentWeek.setHours(0);
        weeks.push(_indexJsDefault2.default(currentWeek));
        currentWeek = _indexJsDefault.default(currentWeek, 1);
        currentWeek.setHours(15);
    }
    return weeks;
}
exports.default = eachWeekOfInterval;

},{"../addWeeks/index.js":"9mj9k","../startOfWeek/index.js":"22WAP","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fXRd8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../eachDayOfInterval/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isSunday/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../isWeekend/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function eachWeekendOfInterval(interval) {
    _indexJsDefault3.default(1, arguments);
    var dateInterval = _indexJsDefault.default(interval);
    var weekends = [];
    var index = 0;
    while(index < dateInterval.length){
        var date = dateInterval[index++];
        if (_indexJsDefault2.default(date)) {
            weekends.push(date);
            if (_indexJsDefault1.default(date)) index = index + 5;
        }
    }
    return weekends;
}
exports.default = eachWeekendOfInterval;

},{"../eachDayOfInterval/index.js":"kUqLr","../isSunday/index.js":"6G4Hk","../isWeekend/index.js":"lFBRK","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"a3olv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../eachWeekendOfInterval/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfMonth/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../endOfMonth/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function eachWeekendOfMonth(dirtyDate) {
    _indexJsDefault3.default(1, arguments);
    var startDate = _indexJsDefault1.default(dirtyDate);
    if (isNaN(startDate.getTime())) throw new RangeError('The passed date is invalid');
    var endDate = _indexJsDefault2.default(dirtyDate);
    return _indexJsDefault.default({
        start: startDate,
        end: endDate
    });
}
exports.default = eachWeekendOfMonth;

},{"../eachWeekendOfInterval/index.js":"fXRd8","../startOfMonth/index.js":"1qC5t","../endOfMonth/index.js":"gsQ47","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1qC5t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfMonth(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setDate(1);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfMonth;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2OWGT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../eachWeekendOfInterval/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../endOfYear/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function eachWeekendOfYear(dirtyDate) {
    _indexJsDefault3.default(1, arguments);
    var startDate = _indexJsDefault1.default(dirtyDate);
    if (isNaN(startDate)) throw new RangeError('The passed date is invalid');
    var endDate = _indexJsDefault2.default(dirtyDate);
    return _indexJsDefault.default({
        start: startDate,
        end: endDate
    });
}
exports.default = eachWeekendOfYear;

},{"../eachWeekendOfInterval/index.js":"fXRd8","../startOfYear/index.js":"60TSI","../endOfYear/index.js":"dkzAp","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"60TSI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfYear(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var cleanDate = _indexJsDefault.default(dirtyDate);
    var date = new Date(0);
    date.setFullYear(cleanDate.getFullYear(), 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfYear;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dkzAp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfYear(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    date.setFullYear(year + 1, 0, 0);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfYear;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6skpm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function eachYearOfInterval(dirtyInterval) {
    _indexJsDefault1.default(1, arguments);
    var interval = dirtyInterval || {
    };
    var startDate = _indexJsDefault.default(interval.start);
    var endDate = _indexJsDefault.default(interval.end);
    var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(startDate.getTime() <= endTime)) throw new RangeError('Invalid interval');
    var dates = [];
    var currentDate = startDate;
    currentDate.setHours(0, 0, 0, 0);
    currentDate.setMonth(0, 1);
    while(currentDate.getTime() <= endTime){
        dates.push(_indexJsDefault.default(currentDate));
        currentDate.setFullYear(currentDate.getFullYear() + 1);
    }
    return dates;
}
exports.default = eachYearOfInterval;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9xRN0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfDecade(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    var decade = 9 + Math.floor(year / 10) * 10;
    date.setFullYear(decade, 11, 31);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfDecade;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1ZGU5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfHour(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setMinutes(59, 59, 999);
    return date;
}
exports.default = endOfHour;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"7KiAN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../endOfWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfISOWeek(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, {
        weekStartsOn: 1
    });
}
exports.default = endOfISOWeek;

},{"../endOfWeek/index.js":"2OHc4","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2OHc4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/toInteger/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function endOfWeek(dirtyDate, dirtyOptions) {
    _indexJsDefault2.default(1, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault1.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault1.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    var date = _indexJsDefault.default(dirtyDate);
    var day = date.getDay();
    var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
    date.setDate(date.getDate() + diff);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfWeek;

},{"../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"knooV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getISOWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function endOfISOWeekYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var year = _indexJsDefault.default(dirtyDate);
    var fourthOfJanuaryOfNextYear = new Date(0);
    fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
    fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
    var date = _indexJsDefault1.default(fourthOfJanuaryOfNextYear);
    date.setMilliseconds(date.getMilliseconds() - 1);
    return date;
}
exports.default = endOfISOWeekYear;

},{"../getISOWeekYear/index.js":"cKtSf","../startOfISOWeek/index.js":"hgsCz","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aGls4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfMinute(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setSeconds(59, 999);
    return date;
}
exports.default = endOfMinute;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fuD8P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfQuarter(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var currentMonth = date.getMonth();
    var month = currentMonth - currentMonth % 3 + 3;
    date.setMonth(month, 0);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfQuarter;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"j9705":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function endOfSecond(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setMilliseconds(999);
    return date;
}
exports.default = endOfSecond;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"chEeo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../endOfDay/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function endOfToday() {
    return _indexJsDefault.default(Date.now());
}
exports.default = endOfToday;

},{"../endOfDay/index.js":"436iN","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dXJGq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function endOfTomorrow() {
    var now = new Date();
    var year = now.getFullYear();
    var month = now.getMonth();
    var day = now.getDate();
    var date = new Date(0);
    date.setFullYear(year, month, day + 1);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfTomorrow;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3YI6j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function endOfYesterday() {
    var now = new Date();
    var year = now.getFullYear();
    var month = now.getMonth();
    var day = now.getDate();
    var date = new Date(0);
    date.setFullYear(year, month, day - 1);
    date.setHours(23, 59, 59, 999);
    return date;
}
exports.default = endOfYesterday;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lNaGA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isValid/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../locale/en-US/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../subMilliseconds/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../toDate/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/format/formatters/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../_lib/format/longFormatters/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("../_lib/protectedTokens/index.js");
var _indexJs8 = require("../_lib/toInteger/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs8);
var _indexJs9 = require("../_lib/requiredArgs/index.js"); // This RegExp consists of three parts separated by `|`:
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs9);
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
    _indexJsDefault8.default(2, arguments);
    var formatStr = String(dirtyFormatStr);
    var options = dirtyOptions || {
    };
    var locale = options.locale || _indexJsDefault1.default;
    var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : _indexJsDefault7.default(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : _indexJsDefault7.default(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
    var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault7.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault7.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    if (!locale.localize) throw new RangeError('locale must contain localize property');
    if (!locale.formatLong) throw new RangeError('locale must contain formatLong property');
    var originalDate = _indexJsDefault3.default(dirtyDate);
    if (!_indexJsDefault.default(originalDate)) throw new RangeError('Invalid time value');
     // Convert the date in system timezone to the same date in UTC+00:00 timezone.
    // This ensures that when UTC functions will be implemented, locales will be compatible with them.
    // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
    var timezoneOffset = _indexJsDefault6.default(originalDate);
    var utcDate = _indexJsDefault2.default(originalDate, timezoneOffset);
    var formatterOptions = {
        firstWeekContainsDate: firstWeekContainsDate,
        weekStartsOn: weekStartsOn,
        locale: locale,
        _originalDate: originalDate
    };
    var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter = substring[0];
        if (firstCharacter === 'p' || firstCharacter === 'P') {
            var longFormatter = _indexJsDefault5.default[firstCharacter];
            return longFormatter(substring, locale.formatLong, formatterOptions);
        }
        return substring;
    }).join('').match(formattingTokensRegExp).map(function(substring) {
        // Replace two single quote characters with one single quote character
        if (substring === "''") return "'";
        var firstCharacter = substring[0];
        if (firstCharacter === "'") return cleanEscapedString(substring);
        var formatter = _indexJsDefault4.default[firstCharacter];
        if (formatter) {
            if (!options.useAdditionalWeekYearTokens && _indexJs7.isProtectedWeekYearToken(substring)) _indexJs7.throwProtectedError(substring, dirtyFormatStr, dirtyDate);
            if (!options.useAdditionalDayOfYearTokens && _indexJs7.isProtectedDayOfYearToken(substring)) _indexJs7.throwProtectedError(substring, dirtyFormatStr, dirtyDate);
            return formatter(utcDate, substring, locale.localize, formatterOptions);
        }
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        return substring;
    }).join('');
    return result;
}
exports.default = format;
function cleanEscapedString(input) {
    return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

},{"../isValid/index.js":"1nJMs","../locale/en-US/index.js":"3bJ6D","../subMilliseconds/index.js":"aMoYy","../toDate/index.js":"6pFrg","../_lib/format/formatters/index.js":"bFp5a","../_lib/format/longFormatters/index.js":"gRFDW","../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../_lib/protectedTokens/index.js":"4K9Zq","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3bJ6D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("./_lib/formatDistance/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("./_lib/formatLong/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("./_lib/formatRelative/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("./_lib/localize/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("./_lib/match/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */ var locale = {
    code: 'en-US',
    formatDistance: _indexJsDefault.default,
    formatLong: _indexJsDefault1.default,
    formatRelative: _indexJsDefault2.default,
    localize: _indexJsDefault3.default,
    match: _indexJsDefault4.default,
    options: {
        weekStartsOn: 0,
        firstWeekContainsDate: 1
    }
};
exports.default = locale;

},{"./_lib/formatDistance/index.js":"iLD5o","./_lib/formatLong/index.js":"gHqyi","./_lib/formatRelative/index.js":"kQjLN","./_lib/localize/index.js":"hwxgw","./_lib/match/index.js":"2HoKd","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"iLD5o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var formatDistanceLocale = {
    lessThanXSeconds: {
        one: 'less than a second',
        other: 'less than {{count}} seconds'
    },
    xSeconds: {
        one: '1 second',
        other: '{{count}} seconds'
    },
    halfAMinute: 'half a minute',
    lessThanXMinutes: {
        one: 'less than a minute',
        other: 'less than {{count}} minutes'
    },
    xMinutes: {
        one: '1 minute',
        other: '{{count}} minutes'
    },
    aboutXHours: {
        one: 'about 1 hour',
        other: 'about {{count}} hours'
    },
    xHours: {
        one: '1 hour',
        other: '{{count}} hours'
    },
    xDays: {
        one: '1 day',
        other: '{{count}} days'
    },
    aboutXWeeks: {
        one: 'about 1 week',
        other: 'about {{count}} weeks'
    },
    xWeeks: {
        one: '1 week',
        other: '{{count}} weeks'
    },
    aboutXMonths: {
        one: 'about 1 month',
        other: 'about {{count}} months'
    },
    xMonths: {
        one: '1 month',
        other: '{{count}} months'
    },
    aboutXYears: {
        one: 'about 1 year',
        other: 'about {{count}} years'
    },
    xYears: {
        one: '1 year',
        other: '{{count}} years'
    },
    overXYears: {
        one: 'over 1 year',
        other: 'over {{count}} years'
    },
    almostXYears: {
        one: 'almost 1 year',
        other: 'almost {{count}} years'
    }
};
function formatDistance(token, count, options) {
    options = options || {
    };
    var result;
    if (typeof formatDistanceLocale[token] === 'string') result = formatDistanceLocale[token];
    else if (count === 1) result = formatDistanceLocale[token].one;
    else result = formatDistanceLocale[token].other.replace('{{count}}', count);
    if (options.addSuffix) {
        if (options.comparison > 0) return 'in ' + result;
        else return result + ' ago';
    }
    return result;
}
exports.default = formatDistance;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gHqyi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../../_lib/buildFormatLongFn/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var dateFormats = {
    full: 'EEEE, MMMM do, y',
    long: 'MMMM do, y',
    medium: 'MMM d, y',
    short: 'MM/dd/yyyy'
};
var timeFormats = {
    full: 'h:mm:ss a zzzz',
    long: 'h:mm:ss a z',
    medium: 'h:mm:ss a',
    short: 'h:mm a'
};
var dateTimeFormats = {
    full: "{{date}} 'at' {{time}}",
    long: "{{date}} 'at' {{time}}",
    medium: '{{date}}, {{time}}',
    short: '{{date}}, {{time}}'
};
var formatLong = {
    date: _indexJsDefault.default({
        formats: dateFormats,
        defaultWidth: 'full'
    }),
    time: _indexJsDefault.default({
        formats: timeFormats,
        defaultWidth: 'full'
    }),
    dateTime: _indexJsDefault.default({
        formats: dateTimeFormats,
        defaultWidth: 'full'
    })
};
exports.default = formatLong;

},{"../../../_lib/buildFormatLongFn/index.js":"b7VoP","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"b7VoP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function buildFormatLongFn(args) {
    return function() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        };
        // TODO: Remove String()
        var width = options.width ? String(options.width) : args.defaultWidth;
        var format = args.formats[width] || args.formats[args.defaultWidth];
        return format;
    };
}
exports.default = buildFormatLongFn;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kQjLN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var formatRelativeLocale = {
    lastWeek: "'last' eeee 'at' p",
    yesterday: "'yesterday at' p",
    today: "'today at' p",
    tomorrow: "'tomorrow at' p",
    nextWeek: "eeee 'at' p",
    other: 'P'
};
function formatRelative(token, _date, _baseDate, _options) {
    return formatRelativeLocale[token];
}
exports.default = formatRelative;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hwxgw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../../_lib/buildLocalizeFn/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var eraValues = {
    narrow: [
        'B',
        'A'
    ],
    abbreviated: [
        'BC',
        'AD'
    ],
    wide: [
        'Before Christ',
        'Anno Domini'
    ]
};
var quarterValues = {
    narrow: [
        '1',
        '2',
        '3',
        '4'
    ],
    abbreviated: [
        'Q1',
        'Q2',
        'Q3',
        'Q4'
    ],
    wide: [
        '1st quarter',
        '2nd quarter',
        '3rd quarter',
        '4th quarter'
    ]
}; // Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
var monthValues = {
    narrow: [
        'J',
        'F',
        'M',
        'A',
        'M',
        'J',
        'J',
        'A',
        'S',
        'O',
        'N',
        'D'
    ],
    abbreviated: [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec'
    ],
    wide: [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December'
    ]
};
var dayValues = {
    narrow: [
        'S',
        'M',
        'T',
        'W',
        'T',
        'F',
        'S'
    ],
    short: [
        'Su',
        'Mo',
        'Tu',
        'We',
        'Th',
        'Fr',
        'Sa'
    ],
    abbreviated: [
        'Sun',
        'Mon',
        'Tue',
        'Wed',
        'Thu',
        'Fri',
        'Sat'
    ],
    wide: [
        'Sunday',
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday'
    ]
};
var dayPeriodValues = {
    narrow: {
        am: 'a',
        pm: 'p',
        midnight: 'mi',
        noon: 'n',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
    },
    abbreviated: {
        am: 'AM',
        pm: 'PM',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
    },
    wide: {
        am: 'a.m.',
        pm: 'p.m.',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
    }
};
var formattingDayPeriodValues = {
    narrow: {
        am: 'a',
        pm: 'p',
        midnight: 'mi',
        noon: 'n',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
    },
    abbreviated: {
        am: 'AM',
        pm: 'PM',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
    },
    wide: {
        am: 'a.m.',
        pm: 'p.m.',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
    }
};
function ordinalNumber(dirtyNumber, _dirtyOptions) {
    var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
    // if they are different for different grammatical genders,
    // use `options.unit`:
    //
    //   var options = dirtyOptions || {}
    //   var unit = String(options.unit)
    //
    // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
    // 'day', 'hour', 'minute', 'second'
    var rem100 = number % 100;
    if (rem100 > 20 || rem100 < 10) switch(rem100 % 10){
        case 1:
            return number + 'st';
        case 2:
            return number + 'nd';
        case 3:
            return number + 'rd';
    }
    return number + 'th';
}
var localize = {
    ordinalNumber: ordinalNumber,
    era: _indexJsDefault.default({
        values: eraValues,
        defaultWidth: 'wide'
    }),
    quarter: _indexJsDefault.default({
        values: quarterValues,
        defaultWidth: 'wide',
        argumentCallback: function(quarter) {
            return Number(quarter) - 1;
        }
    }),
    month: _indexJsDefault.default({
        values: monthValues,
        defaultWidth: 'wide'
    }),
    day: _indexJsDefault.default({
        values: dayValues,
        defaultWidth: 'wide'
    }),
    dayPeriod: _indexJsDefault.default({
        values: dayPeriodValues,
        defaultWidth: 'wide',
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: 'wide'
    })
};
exports.default = localize;

},{"../../../_lib/buildLocalizeFn/index.js":"1b0re","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1b0re":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function buildLocalizeFn(args) {
    return function(dirtyIndex, dirtyOptions) {
        var options = dirtyOptions || {
        };
        var context = options.context ? String(options.context) : 'standalone';
        var valuesArray;
        if (context === 'formatting' && args.formattingValues) {
            var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
            var width = options.width ? String(options.width) : defaultWidth;
            valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
            var _defaultWidth = args.defaultWidth;
            var _width = options.width ? String(options.width) : args.defaultWidth;
            valuesArray = args.values[_width] || args.values[_defaultWidth];
        }
        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!
        return valuesArray[index];
    };
}
exports.default = buildLocalizeFn;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2HoKd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../../_lib/buildMatchPatternFn/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../../_lib/buildMatchFn/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
    narrow: /^(b|a)/i,
    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
    wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
    any: [
        /^b/i,
        /^(a|c)/i
    ]
};
var matchQuarterPatterns = {
    narrow: /^[1234]/i,
    abbreviated: /^q[1234]/i,
    wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
    any: [
        /1/i,
        /2/i,
        /3/i,
        /4/i
    ]
};
var matchMonthPatterns = {
    narrow: /^[jfmasond]/i,
    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
    narrow: [
        /^j/i,
        /^f/i,
        /^m/i,
        /^a/i,
        /^m/i,
        /^j/i,
        /^j/i,
        /^a/i,
        /^s/i,
        /^o/i,
        /^n/i,
        /^d/i
    ],
    any: [
        /^ja/i,
        /^f/i,
        /^mar/i,
        /^ap/i,
        /^may/i,
        /^jun/i,
        /^jul/i,
        /^au/i,
        /^s/i,
        /^o/i,
        /^n/i,
        /^d/i
    ]
};
var matchDayPatterns = {
    narrow: /^[smtwf]/i,
    short: /^(su|mo|tu|we|th|fr|sa)/i,
    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
    narrow: [
        /^s/i,
        /^m/i,
        /^t/i,
        /^w/i,
        /^t/i,
        /^f/i,
        /^s/i
    ],
    any: [
        /^su/i,
        /^m/i,
        /^tu/i,
        /^w/i,
        /^th/i,
        /^f/i,
        /^sa/i
    ]
};
var matchDayPeriodPatterns = {
    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
    any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
    }
};
var match = {
    ordinalNumber: _indexJsDefault.default({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function(value) {
            return parseInt(value, 10);
        }
    }),
    era: _indexJsDefault1.default({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseEraPatterns,
        defaultParseWidth: 'any'
    }),
    quarter: _indexJsDefault1.default({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: 'any',
        valueCallback: function(index) {
            return index + 1;
        }
    }),
    month: _indexJsDefault1.default({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: 'any'
    }),
    day: _indexJsDefault1.default({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseDayPatterns,
        defaultParseWidth: 'any'
    }),
    dayPeriod: _indexJsDefault1.default({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: 'any',
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: 'any'
    })
};
exports.default = match;

},{"../../../_lib/buildMatchPatternFn/index.js":"7Gt7J","../../../_lib/buildMatchFn/index.js":"6QZQr","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"7Gt7J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function buildMatchPatternFn(args) {
    return function(string) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        };
        var matchResult = string.match(args.matchPattern);
        if (!matchResult) return null;
        var matchedString = matchResult[0];
        var parseResult = string.match(args.parsePattern);
        if (!parseResult) return null;
        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value = options.valueCallback ? options.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
            value: value,
            rest: rest
        };
    };
}
exports.default = buildMatchPatternFn;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6QZQr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function buildMatchFn(args) {
    return function(string) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        };
        var width = options.width;
        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
        var matchResult = string.match(matchPattern);
        if (!matchResult) return null;
        var matchedString = matchResult[0];
        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
            return pattern.test(matchedString);
        }) : findKey(parsePatterns, function(pattern) {
            return pattern.test(matchedString);
        });
        var value;
        value = args.valueCallback ? args.valueCallback(key) : key;
        value = options.valueCallback ? options.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
            value: value,
            rest: rest
        };
    };
}
exports.default = buildMatchFn;
function findKey(object, predicate) {
    for(var key in object){
        if (object.hasOwnProperty(key) && predicate(object[key])) return key;
    }
    return undefined;
}
function findIndex(array, predicate) {
    for(var key = 0; key < array.length; key++){
        if (predicate(array[key])) return key;
    }
    return undefined;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aMoYy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMilliseconds/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subMilliseconds(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subMilliseconds;

},{"../_lib/toInteger/index.js":"95G4A","../addMilliseconds/index.js":"et4cY","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"bFp5a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../lightFormatters/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../../_lib/getUTCDayOfYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../../../_lib/getUTCISOWeek/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../../../_lib/getUTCISOWeekYear/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../../../_lib/getUTCWeek/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../../../_lib/getUTCWeekYear/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../../addLeadingZeros/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var dayPeriodEnum = {
    am: 'am',
    pm: 'pm',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
};
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */ var formatters = {
    // Era
    G: function(date, token, localize) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;
        switch(token){
            // AD, BC
            case 'G':
            case 'GG':
            case 'GGG':
                return localize.era(era, {
                    width: 'abbreviated'
                });
            // A, B
            case 'GGGGG':
                return localize.era(era, {
                    width: 'narrow'
                });
            // Anno Domini, Before Christ
            case 'GGGG':
            default:
                return localize.era(era, {
                    width: 'wide'
                });
        }
    },
    // Year
    y: function(date, token, localize) {
        // Ordinal number
        if (token === 'yo') {
            var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)
            var year = signedYear > 0 ? signedYear : 1 - signedYear;
            return localize.ordinalNumber(year, {
                unit: 'year'
            });
        }
        return _indexJsDefault.default.y(date, token);
    },
    // Local week-numbering year
    Y: function(date, token, localize, options) {
        var signedWeekYear = _indexJsDefault5.default(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)
        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year
        if (token === 'YY') {
            var twoDigitYear = weekYear % 100;
            return _indexJsDefault6.default(twoDigitYear, 2);
        } // Ordinal number
        if (token === 'Yo') return localize.ordinalNumber(weekYear, {
            unit: 'year'
        });
         // Padding
        return _indexJsDefault6.default(weekYear, token.length);
    },
    // ISO week-numbering year
    R: function(date, token) {
        var isoWeekYear = _indexJsDefault3.default(date); // Padding
        return _indexJsDefault6.default(isoWeekYear, token.length);
    },
    // Extended year. This is a single number designating the year of this calendar system.
    // The main difference between `y` and `u` localizers are B.C. years:
    // | Year | `y` | `u` |
    // |------|-----|-----|
    // | AC 1 |   1 |   1 |
    // | BC 1 |   1 |   0 |
    // | BC 2 |   2 |  -1 |
    // Also `yy` always returns the last two digits of a year,
    // while `uu` pads single digit years to 2 characters and returns other years unchanged.
    u: function(date, token) {
        var year = date.getUTCFullYear();
        return _indexJsDefault6.default(year, token.length);
    },
    // Quarter
    Q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch(token){
            // 1, 2, 3, 4
            case 'Q':
                return String(quarter);
            // 01, 02, 03, 04
            case 'QQ':
                return _indexJsDefault6.default(quarter, 2);
            // 1st, 2nd, 3rd, 4th
            case 'Qo':
                return localize.ordinalNumber(quarter, {
                    unit: 'quarter'
                });
            // Q1, Q2, Q3, Q4
            case 'QQQ':
                return localize.quarter(quarter, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)
            case 'QQQQQ':
                return localize.quarter(quarter, {
                    width: 'narrow',
                    context: 'formatting'
                });
            // 1st quarter, 2nd quarter, ...
            case 'QQQQ':
            default:
                return localize.quarter(quarter, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // Stand-alone quarter
    q: function(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
        switch(token){
            // 1, 2, 3, 4
            case 'q':
                return String(quarter);
            // 01, 02, 03, 04
            case 'qq':
                return _indexJsDefault6.default(quarter, 2);
            // 1st, 2nd, 3rd, 4th
            case 'qo':
                return localize.ordinalNumber(quarter, {
                    unit: 'quarter'
                });
            // Q1, Q2, Q3, Q4
            case 'qqq':
                return localize.quarter(quarter, {
                    width: 'abbreviated',
                    context: 'standalone'
                });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)
            case 'qqqqq':
                return localize.quarter(quarter, {
                    width: 'narrow',
                    context: 'standalone'
                });
            // 1st quarter, 2nd quarter, ...
            case 'qqqq':
            default:
                return localize.quarter(quarter, {
                    width: 'wide',
                    context: 'standalone'
                });
        }
    },
    // Month
    M: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch(token){
            case 'M':
            case 'MM':
                return _indexJsDefault.default.M(date, token);
            // 1st, 2nd, ..., 12th
            case 'Mo':
                return localize.ordinalNumber(month + 1, {
                    unit: 'month'
                });
            // Jan, Feb, ..., Dec
            case 'MMM':
                return localize.month(month, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            // J, F, ..., D
            case 'MMMMM':
                return localize.month(month, {
                    width: 'narrow',
                    context: 'formatting'
                });
            // January, February, ..., December
            case 'MMMM':
            default:
                return localize.month(month, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // Stand-alone month
    L: function(date, token, localize) {
        var month = date.getUTCMonth();
        switch(token){
            // 1, 2, ..., 12
            case 'L':
                return String(month + 1);
            // 01, 02, ..., 12
            case 'LL':
                return _indexJsDefault6.default(month + 1, 2);
            // 1st, 2nd, ..., 12th
            case 'Lo':
                return localize.ordinalNumber(month + 1, {
                    unit: 'month'
                });
            // Jan, Feb, ..., Dec
            case 'LLL':
                return localize.month(month, {
                    width: 'abbreviated',
                    context: 'standalone'
                });
            // J, F, ..., D
            case 'LLLLL':
                return localize.month(month, {
                    width: 'narrow',
                    context: 'standalone'
                });
            // January, February, ..., December
            case 'LLLL':
            default:
                return localize.month(month, {
                    width: 'wide',
                    context: 'standalone'
                });
        }
    },
    // Local week of year
    w: function(date, token, localize, options) {
        var week = _indexJsDefault4.default(date, options);
        if (token === 'wo') return localize.ordinalNumber(week, {
            unit: 'week'
        });
        return _indexJsDefault6.default(week, token.length);
    },
    // ISO week of year
    I: function(date, token, localize) {
        var isoWeek = _indexJsDefault2.default(date);
        if (token === 'Io') return localize.ordinalNumber(isoWeek, {
            unit: 'week'
        });
        return _indexJsDefault6.default(isoWeek, token.length);
    },
    // Day of the month
    d: function(date, token, localize) {
        if (token === 'do') return localize.ordinalNumber(date.getUTCDate(), {
            unit: 'date'
        });
        return _indexJsDefault.default.d(date, token);
    },
    // Day of year
    D: function(date, token, localize) {
        var dayOfYear = _indexJsDefault1.default(date);
        if (token === 'Do') return localize.ordinalNumber(dayOfYear, {
            unit: 'dayOfYear'
        });
        return _indexJsDefault6.default(dayOfYear, token.length);
    },
    // Day of week
    E: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        switch(token){
            // Tue
            case 'E':
            case 'EE':
            case 'EEE':
                return localize.day(dayOfWeek, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            // T
            case 'EEEEE':
                return localize.day(dayOfWeek, {
                    width: 'narrow',
                    context: 'formatting'
                });
            // Tu
            case 'EEEEEE':
                return localize.day(dayOfWeek, {
                    width: 'short',
                    context: 'formatting'
                });
            // Tuesday
            case 'EEEE':
            default:
                return localize.day(dayOfWeek, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // Local day of week
    e: function(date, token, localize, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
        switch(token){
            // Numerical value (Nth day of week with current locale or weekStartsOn)
            case 'e':
                return String(localDayOfWeek);
            // Padded numerical value
            case 'ee':
                return _indexJsDefault6.default(localDayOfWeek, 2);
            // 1st, 2nd, ..., 7th
            case 'eo':
                return localize.ordinalNumber(localDayOfWeek, {
                    unit: 'day'
                });
            case 'eee':
                return localize.day(dayOfWeek, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            // T
            case 'eeeee':
                return localize.day(dayOfWeek, {
                    width: 'narrow',
                    context: 'formatting'
                });
            // Tu
            case 'eeeeee':
                return localize.day(dayOfWeek, {
                    width: 'short',
                    context: 'formatting'
                });
            // Tuesday
            case 'eeee':
            default:
                return localize.day(dayOfWeek, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // Stand-alone local day of week
    c: function(date, token, localize, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
        switch(token){
            // Numerical value (same as in `e`)
            case 'c':
                return String(localDayOfWeek);
            // Padded numerical value
            case 'cc':
                return _indexJsDefault6.default(localDayOfWeek, token.length);
            // 1st, 2nd, ..., 7th
            case 'co':
                return localize.ordinalNumber(localDayOfWeek, {
                    unit: 'day'
                });
            case 'ccc':
                return localize.day(dayOfWeek, {
                    width: 'abbreviated',
                    context: 'standalone'
                });
            // T
            case 'ccccc':
                return localize.day(dayOfWeek, {
                    width: 'narrow',
                    context: 'standalone'
                });
            // Tu
            case 'cccccc':
                return localize.day(dayOfWeek, {
                    width: 'short',
                    context: 'standalone'
                });
            // Tuesday
            case 'cccc':
            default:
                return localize.day(dayOfWeek, {
                    width: 'wide',
                    context: 'standalone'
                });
        }
    },
    // ISO day of week
    i: function(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
        switch(token){
            // 2
            case 'i':
                return String(isoDayOfWeek);
            // 02
            case 'ii':
                return _indexJsDefault6.default(isoDayOfWeek, token.length);
            // 2nd
            case 'io':
                return localize.ordinalNumber(isoDayOfWeek, {
                    unit: 'day'
                });
            // Tue
            case 'iii':
                return localize.day(dayOfWeek, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            // T
            case 'iiiii':
                return localize.day(dayOfWeek, {
                    width: 'narrow',
                    context: 'formatting'
                });
            // Tu
            case 'iiiiii':
                return localize.day(dayOfWeek, {
                    width: 'short',
                    context: 'formatting'
                });
            // Tuesday
            case 'iiii':
            default:
                return localize.day(dayOfWeek, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // AM or PM
    a: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
        switch(token){
            case 'a':
            case 'aa':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            case 'aaa':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'abbreviated',
                    context: 'formatting'
                }).toLowerCase();
            case 'aaaaa':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'narrow',
                    context: 'formatting'
                });
            case 'aaaa':
            default:
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // AM, PM, midnight, noon
    b: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours === 12) dayPeriodEnumValue = dayPeriodEnum.noon;
        else if (hours === 0) dayPeriodEnumValue = dayPeriodEnum.midnight;
        else dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
        switch(token){
            case 'b':
            case 'bb':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            case 'bbb':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'abbreviated',
                    context: 'formatting'
                }).toLowerCase();
            case 'bbbbb':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'narrow',
                    context: 'formatting'
                });
            case 'bbbb':
            default:
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // in the morning, in the afternoon, in the evening, at night
    B: function(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;
        if (hours >= 17) dayPeriodEnumValue = dayPeriodEnum.evening;
        else if (hours >= 12) dayPeriodEnumValue = dayPeriodEnum.afternoon;
        else if (hours >= 4) dayPeriodEnumValue = dayPeriodEnum.morning;
        else dayPeriodEnumValue = dayPeriodEnum.night;
        switch(token){
            case 'B':
            case 'BB':
            case 'BBB':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'abbreviated',
                    context: 'formatting'
                });
            case 'BBBBB':
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'narrow',
                    context: 'formatting'
                });
            case 'BBBB':
            default:
                return localize.dayPeriod(dayPeriodEnumValue, {
                    width: 'wide',
                    context: 'formatting'
                });
        }
    },
    // Hour [1-12]
    h: function(date, token, localize) {
        if (token === 'ho') {
            var hours = date.getUTCHours() % 12;
            if (hours === 0) hours = 12;
            return localize.ordinalNumber(hours, {
                unit: 'hour'
            });
        }
        return _indexJsDefault.default.h(date, token);
    },
    // Hour [0-23]
    H: function(date, token, localize) {
        if (token === 'Ho') return localize.ordinalNumber(date.getUTCHours(), {
            unit: 'hour'
        });
        return _indexJsDefault.default.H(date, token);
    },
    // Hour [0-11]
    K: function(date, token, localize) {
        var hours = date.getUTCHours() % 12;
        if (token === 'Ko') return localize.ordinalNumber(hours, {
            unit: 'hour'
        });
        return _indexJsDefault6.default(hours, token.length);
    },
    // Hour [1-24]
    k: function(date, token, localize) {
        var hours = date.getUTCHours();
        if (hours === 0) hours = 24;
        if (token === 'ko') return localize.ordinalNumber(hours, {
            unit: 'hour'
        });
        return _indexJsDefault6.default(hours, token.length);
    },
    // Minute
    m: function(date, token, localize) {
        if (token === 'mo') return localize.ordinalNumber(date.getUTCMinutes(), {
            unit: 'minute'
        });
        return _indexJsDefault.default.m(date, token);
    },
    // Second
    s: function(date, token, localize) {
        if (token === 'so') return localize.ordinalNumber(date.getUTCSeconds(), {
            unit: 'second'
        });
        return _indexJsDefault.default.s(date, token);
    },
    // Fraction of second
    S: function(date, token) {
        return _indexJsDefault.default.S(date, token);
    },
    // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
    X: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        if (timezoneOffset === 0) return 'Z';
        switch(token){
            // Hours and optional minutes
            case 'X':
                return formatTimezoneWithOptionalMinutes(timezoneOffset);
            // Hours, minutes and optional seconds without `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XX`
            case 'XXXX':
            case 'XX':
                // Hours and minutes without `:` delimiter
                return formatTimezone(timezoneOffset);
            // Hours, minutes and optional seconds with `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XXX`
            case 'XXXXX':
            case 'XXX':
            default:
                return formatTimezone(timezoneOffset, ':');
        }
    },
    // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
    x: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch(token){
            // Hours and optional minutes
            case 'x':
                return formatTimezoneWithOptionalMinutes(timezoneOffset);
            // Hours, minutes and optional seconds without `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xx`
            case 'xxxx':
            case 'xx':
                // Hours and minutes without `:` delimiter
                return formatTimezone(timezoneOffset);
            // Hours, minutes and optional seconds with `:` delimiter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xxx`
            case 'xxxxx':
            case 'xxx':
            default:
                return formatTimezone(timezoneOffset, ':');
        }
    },
    // Timezone (GMT)
    O: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch(token){
            // Short
            case 'O':
            case 'OO':
            case 'OOO':
                return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long
            case 'OOOO':
            default:
                return 'GMT' + formatTimezone(timezoneOffset, ':');
        }
    },
    // Timezone (specific non-location)
    z: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();
        switch(token){
            // Short
            case 'z':
            case 'zz':
            case 'zzz':
                return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long
            case 'zzzz':
            default:
                return 'GMT' + formatTimezone(timezoneOffset, ':');
        }
    },
    // Seconds timestamp
    t: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = Math.floor(originalDate.getTime() / 1000);
        return _indexJsDefault6.default(timestamp, token.length);
    },
    // Milliseconds timestamp
    T: function(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = originalDate.getTime();
        return _indexJsDefault6.default(timestamp, token.length);
    }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
    var sign = offset > 0 ? '-' : '+';
    var absOffset = Math.abs(offset);
    var hours = Math.floor(absOffset / 60);
    var minutes = absOffset % 60;
    if (minutes === 0) return sign + String(hours);
    var delimiter = dirtyDelimiter || '';
    return sign + String(hours) + delimiter + _indexJsDefault6.default(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
    if (offset % 60 === 0) {
        var sign = offset > 0 ? '-' : '+';
        return sign + _indexJsDefault6.default(Math.abs(offset) / 60, 2);
    }
    return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
    var delimiter = dirtyDelimiter || '';
    var sign = offset > 0 ? '-' : '+';
    var absOffset = Math.abs(offset);
    var hours = _indexJsDefault6.default(Math.floor(absOffset / 60), 2);
    var minutes = _indexJsDefault6.default(absOffset % 60, 2);
    return sign + hours + delimiter + minutes;
}
exports.default = formatters;

},{"../lightFormatters/index.js":"hgyzo","../../../_lib/getUTCDayOfYear/index.js":"iTNB7","../../../_lib/getUTCISOWeek/index.js":"fUcpE","../../../_lib/getUTCISOWeekYear/index.js":"5Ao1z","../../../_lib/getUTCWeek/index.js":"fhGkV","../../../_lib/getUTCWeekYear/index.js":"1R0wr","../../addLeadingZeros/index.js":"6f1IG","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hgyzo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../addLeadingZeros/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */ var formatters = {
    // Year
    y: function(date, token) {
        // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
        // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
        // |----------|-------|----|-------|-------|-------|
        // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
        // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
        // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
        // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
        // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
        var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)
        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return _indexJsDefault.default(token === 'yy' ? year % 100 : year, token.length);
    },
    // Month
    M: function(date, token) {
        var month = date.getUTCMonth();
        return token === 'M' ? String(month + 1) : _indexJsDefault.default(month + 1, 2);
    },
    // Day of the month
    d: function(date, token) {
        return _indexJsDefault.default(date.getUTCDate(), token.length);
    },
    // AM or PM
    a: function(date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';
        switch(token){
            case 'a':
            case 'aa':
                return dayPeriodEnumValue.toUpperCase();
            case 'aaa':
                return dayPeriodEnumValue;
            case 'aaaaa':
                return dayPeriodEnumValue[0];
            case 'aaaa':
            default:
                return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
        }
    },
    // Hour [1-12]
    h: function(date, token) {
        return _indexJsDefault.default(date.getUTCHours() % 12 || 12, token.length);
    },
    // Hour [0-23]
    H: function(date, token) {
        return _indexJsDefault.default(date.getUTCHours(), token.length);
    },
    // Minute
    m: function(date, token) {
        return _indexJsDefault.default(date.getUTCMinutes(), token.length);
    },
    // Second
    s: function(date, token) {
        return _indexJsDefault.default(date.getUTCSeconds(), token.length);
    },
    // Fraction of second
    S: function(date, token) {
        var numberOfDigits = token.length;
        var milliseconds = date.getUTCMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return _indexJsDefault.default(fractionalSeconds, token.length);
    }
};
exports.default = formatters;

},{"../../addLeadingZeros/index.js":"6f1IG","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6f1IG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function addLeadingZeros(number, targetLength) {
    var sign = number < 0 ? '-' : '';
    var output = Math.abs(number).toString();
    while(output.length < targetLength)output = '0' + output;
    return sign + output;
}
exports.default = addLeadingZeros;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"iTNB7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
function getUTCDayOfYear(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var timestamp = date.getTime();
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
    var startOfYearTimestamp = date.getTime();
    var difference = timestamp - startOfYearTimestamp;
    return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}
exports.default = getUTCDayOfYear;

},{"../../toDate/index.js":"6pFrg","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fUcpE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfUTCISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfUTCISOWeekYear/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
function getUTCISOWeek(dirtyDate) {
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var diff = _indexJsDefault1.default(date).getTime() - _indexJsDefault2.default(date).getTime(); // Round the number of days to the nearest integer
    // because the number of milliseconds in a week is not constant
    // (e.g. it's different in the week of the daylight saving time clock shift)
    return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
exports.default = getUTCISOWeek;

},{"../../toDate/index.js":"6pFrg","../startOfUTCISOWeek/index.js":"2WtN1","../startOfUTCISOWeekYear/index.js":"6Tlli","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2WtN1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfUTCISOWeek(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var weekStartsOn = 1;
    var date = _indexJsDefault.default(dirtyDate);
    var day = date.getUTCDay();
    var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
    date.setUTCDate(date.getUTCDate() - diff);
    date.setUTCHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfUTCISOWeek;

},{"../../toDate/index.js":"6pFrg","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6Tlli":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getUTCISOWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfUTCISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function startOfUTCISOWeekYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var year = _indexJsDefault.default(dirtyDate);
    var fourthOfJanuary = new Date(0);
    fourthOfJanuary.setUTCFullYear(year, 0, 4);
    fourthOfJanuary.setUTCHours(0, 0, 0, 0);
    var date = _indexJsDefault1.default(fourthOfJanuary);
    return date;
}
exports.default = startOfUTCISOWeekYear;

},{"../getUTCISOWeekYear/index.js":"5Ao1z","../startOfUTCISOWeek/index.js":"2WtN1","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"5Ao1z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfUTCISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function getUTCISOWeekYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getUTCFullYear();
    var fourthOfJanuaryOfNextYear = new Date(0);
    fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
    fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
    var startOfNextYear = _indexJsDefault1.default(fourthOfJanuaryOfNextYear);
    var fourthOfJanuaryOfThisYear = new Date(0);
    fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
    fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
    var startOfThisYear = _indexJsDefault1.default(fourthOfJanuaryOfThisYear);
    if (date.getTime() >= startOfNextYear.getTime()) return year + 1;
    else if (date.getTime() >= startOfThisYear.getTime()) return year;
    else return year - 1;
}
exports.default = getUTCISOWeekYear;

},{"../../toDate/index.js":"6pFrg","../startOfUTCISOWeek/index.js":"2WtN1","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fhGkV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfUTCWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfUTCWeekYear/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
function getUTCWeek(dirtyDate, options) {
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var diff = _indexJsDefault1.default(date, options).getTime() - _indexJsDefault2.default(date, options).getTime(); // Round the number of days to the nearest integer
    // because the number of milliseconds in a week is not constant
    // (e.g. it's different in the week of the daylight saving time clock shift)
    return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
exports.default = getUTCWeek;

},{"../../toDate/index.js":"6pFrg","../startOfUTCWeek/index.js":"7n4PT","../startOfUTCWeekYear/index.js":"i4yTQ","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"7n4PT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function startOfUTCWeek(dirtyDate, dirtyOptions) {
    _indexJsDefault2.default(1, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    var date = _indexJsDefault1.default(dirtyDate);
    var day = date.getUTCDay();
    var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
    date.setUTCDate(date.getUTCDate() - diff);
    date.setUTCHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfUTCWeek;

},{"../toInteger/index.js":"95G4A","../../toDate/index.js":"6pFrg","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"i4yTQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../getUTCWeekYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfUTCWeek/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
    _indexJsDefault3.default(1, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : _indexJsDefault.default(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : _indexJsDefault.default(options.firstWeekContainsDate);
    var year = _indexJsDefault1.default(dirtyDate, dirtyOptions);
    var firstWeek = new Date(0);
    firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
    firstWeek.setUTCHours(0, 0, 0, 0);
    var date = _indexJsDefault2.default(firstWeek, dirtyOptions);
    return date;
}
exports.default = startOfUTCWeekYear;

},{"../toInteger/index.js":"95G4A","../getUTCWeekYear/index.js":"1R0wr","../startOfUTCWeek/index.js":"7n4PT","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1R0wr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfUTCWeek/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function getUTCWeekYear(dirtyDate, dirtyOptions) {
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault1.default(dirtyDate, dirtyOptions);
    var year = date.getUTCFullYear();
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : _indexJsDefault.default(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : _indexJsDefault.default(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
    var firstWeekOfNextYear = new Date(0);
    firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
    firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
    var startOfNextYear = _indexJsDefault2.default(firstWeekOfNextYear, dirtyOptions);
    var firstWeekOfThisYear = new Date(0);
    firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
    firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
    var startOfThisYear = _indexJsDefault2.default(firstWeekOfThisYear, dirtyOptions);
    if (date.getTime() >= startOfNextYear.getTime()) return year + 1;
    else if (date.getTime() >= startOfThisYear.getTime()) return year;
    else return year - 1;
}
exports.default = getUTCWeekYear;

},{"../toInteger/index.js":"95G4A","../../toDate/index.js":"6pFrg","../startOfUTCWeek/index.js":"7n4PT","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gRFDW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function dateLongFormatter(pattern, formatLong) {
    switch(pattern){
        case 'P':
            return formatLong.date({
                width: 'short'
            });
        case 'PP':
            return formatLong.date({
                width: 'medium'
            });
        case 'PPP':
            return formatLong.date({
                width: 'long'
            });
        case 'PPPP':
        default:
            return formatLong.date({
                width: 'full'
            });
    }
}
function timeLongFormatter(pattern, formatLong) {
    switch(pattern){
        case 'p':
            return formatLong.time({
                width: 'short'
            });
        case 'pp':
            return formatLong.time({
                width: 'medium'
            });
        case 'ppp':
            return formatLong.time({
                width: 'long'
            });
        case 'pppp':
        default:
            return formatLong.time({
                width: 'full'
            });
    }
}
function dateTimeLongFormatter(pattern, formatLong) {
    var matchResult = pattern.match(/(P+)(p+)?/);
    var datePattern = matchResult[1];
    var timePattern = matchResult[2];
    if (!timePattern) return dateLongFormatter(pattern, formatLong);
    var dateTimeFormat;
    switch(datePattern){
        case 'P':
            dateTimeFormat = formatLong.dateTime({
                width: 'short'
            });
            break;
        case 'PP':
            dateTimeFormat = formatLong.dateTime({
                width: 'medium'
            });
            break;
        case 'PPP':
            dateTimeFormat = formatLong.dateTime({
                width: 'long'
            });
            break;
        case 'PPPP':
        default:
            dateTimeFormat = formatLong.dateTime({
                width: 'full'
            });
            break;
    }
    return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
}
var longFormatters = {
    p: timeLongFormatter,
    P: dateTimeLongFormatter
};
exports.default = longFormatters;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4K9Zq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isProtectedDayOfYearToken", ()=>isProtectedDayOfYearToken
);
parcelHelpers.export(exports, "isProtectedWeekYearToken", ()=>isProtectedWeekYearToken
);
parcelHelpers.export(exports, "throwProtectedError", ()=>throwProtectedError
);
var protectedDayOfYearTokens = [
    'D',
    'DD'
];
var protectedWeekYearTokens = [
    'YY',
    'YYYY'
];
function isProtectedDayOfYearToken(token) {
    return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
    return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format, input) {
    if (token === 'YYYY') throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
    else if (token === 'YY') throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
    else if (token === 'D') throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
    else if (token === 'DD') throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aQz6i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../compareAsc/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../differenceInMonths/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../differenceInSeconds/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../locale/en-US/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../toDate/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../_lib/cloneObject/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
var MINUTES_IN_DAY = 1440;
var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
var MINUTES_IN_MONTH = 43200;
var MINUTES_IN_TWO_MONTHS = 86400;
function formatDistance(dirtyDate, dirtyBaseDate) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    };
    _indexJsDefault7.default(2, arguments);
    var locale = options.locale || _indexJsDefault3.default;
    if (!locale.formatDistance) throw new RangeError('locale must contain formatDistance property');
    var comparison = _indexJsDefault.default(dirtyDate, dirtyBaseDate);
    if (isNaN(comparison)) throw new RangeError('Invalid time value');
    var localizeOptions = _indexJsDefault5.default(options);
    localizeOptions.addSuffix = Boolean(options.addSuffix);
    localizeOptions.comparison = comparison;
    var dateLeft;
    var dateRight;
    if (comparison > 0) {
        dateLeft = _indexJsDefault4.default(dirtyBaseDate);
        dateRight = _indexJsDefault4.default(dirtyDate);
    } else {
        dateLeft = _indexJsDefault4.default(dirtyDate);
        dateRight = _indexJsDefault4.default(dirtyBaseDate);
    }
    var seconds = _indexJsDefault2.default(dateRight, dateLeft);
    var offsetInSeconds = (_indexJsDefault6.default(dateRight) - _indexJsDefault6.default(dateLeft)) / 1000;
    var minutes = Math.round((seconds - offsetInSeconds) / 60);
    var months; // 0 up to 2 mins
    if (minutes < 2) {
        if (options.includeSeconds) {
            if (seconds < 5) return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);
            else if (seconds < 10) return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);
            else if (seconds < 20) return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);
            else if (seconds < 40) return locale.formatDistance('halfAMinute', null, localizeOptions);
            else if (seconds < 60) return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
            else return locale.formatDistance('xMinutes', 1, localizeOptions);
        } else {
            if (minutes === 0) return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
            else return locale.formatDistance('xMinutes', minutes, localizeOptions);
        } // 2 mins up to 0.75 hrs
    } else if (minutes < 45) return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs
    else if (minutes < 90) return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs
    else if (minutes < MINUTES_IN_DAY) {
        var hours = Math.round(minutes / 60);
        return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days
    } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days
    else if (minutes < MINUTES_IN_MONTH) {
        var days = Math.round(minutes / MINUTES_IN_DAY);
        return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months
    } else if (minutes < MINUTES_IN_TWO_MONTHS) {
        months = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance('aboutXMonths', months, localizeOptions);
    }
    months = _indexJsDefault1.default(dateRight, dateLeft); // 2 months up to 12 months
    if (months < 12) {
        var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date
    } else {
        var monthsSinceStartOfYear = months % 12;
        var years = Math.floor(months / 12); // N years up to 1 years 3 months
        if (monthsSinceStartOfYear < 3) return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months
        else if (monthsSinceStartOfYear < 9) return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months
        else return locale.formatDistance('almostXYears', years + 1, localizeOptions);
    }
}
exports.default = formatDistance;

},{"../compareAsc/index.js":"1Vr9W","../differenceInMonths/index.js":"eWcZM","../differenceInSeconds/index.js":"9J8F0","../locale/en-US/index.js":"3bJ6D","../toDate/index.js":"6pFrg","../_lib/cloneObject/index.js":"4Ycr4","../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4Ycr4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../assign/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function cloneObject(dirtyObject) {
    return _indexJsDefault.default({
    }, dirtyObject);
}
exports.default = cloneObject;

},{"../assign/index.js":"2X9DG","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2X9DG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function assign(target, dirtyObject) {
    if (target == null) throw new TypeError('assign requires that input parameter not be null or undefined');
    dirtyObject = dirtyObject || {
    };
    for(var property in dirtyObject)if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) target[property] = dirtyObject[property];
    return target;
}
exports.default = assign;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"bcEgc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../compareAsc/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/cloneObject/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../locale/en-US/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var MILLISECONDS_IN_MINUTE = 60000;
var MINUTES_IN_DAY = 1440;
var MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;
var MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;
function formatDistanceStrict(dirtyDate, dirtyBaseDate) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    };
    _indexJsDefault5.default(2, arguments);
    var locale = options.locale || _indexJsDefault4.default;
    if (!locale.formatDistance) throw new RangeError('locale must contain localize.formatDistance property');
    var comparison = _indexJsDefault1.default(dirtyDate, dirtyBaseDate);
    if (isNaN(comparison)) throw new RangeError('Invalid time value');
    var localizeOptions = _indexJsDefault3.default(options);
    localizeOptions.addSuffix = Boolean(options.addSuffix);
    localizeOptions.comparison = comparison;
    var dateLeft;
    var dateRight;
    if (comparison > 0) {
        dateLeft = _indexJsDefault2.default(dirtyBaseDate);
        dateRight = _indexJsDefault2.default(dirtyDate);
    } else {
        dateLeft = _indexJsDefault2.default(dirtyDate);
        dateRight = _indexJsDefault2.default(dirtyBaseDate);
    }
    var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);
    var roundingMethodFn;
    if (roundingMethod === 'floor') roundingMethodFn = Math.floor;
    else if (roundingMethod === 'ceil') roundingMethodFn = Math.ceil;
    else if (roundingMethod === 'round') roundingMethodFn = Math.round;
    else throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
    var milliseconds = dateRight.getTime() - dateLeft.getTime();
    var minutes = milliseconds / MILLISECONDS_IN_MINUTE;
    var timezoneOffset = _indexJsDefault.default(dateRight) - _indexJsDefault.default(dateLeft); // Use DST-normalized difference in minutes for years, months and days;
    // use regular difference in minutes for hours, minutes and seconds.
    var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;
    var unit;
    if (options.unit == null) {
        if (minutes < 1) unit = 'second';
        else if (minutes < 60) unit = 'minute';
        else if (minutes < MINUTES_IN_DAY) unit = 'hour';
        else if (dstNormalizedMinutes < MINUTES_IN_MONTH) unit = 'day';
        else if (dstNormalizedMinutes < MINUTES_IN_YEAR) unit = 'month';
        else unit = 'year';
    } else unit = String(options.unit);
     // 0 up to 60 seconds
    if (unit === 'second') {
        var seconds = roundingMethodFn(milliseconds / 1000);
        return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins
    } else if (unit === 'minute') {
        var roundedMinutes = roundingMethodFn(minutes);
        return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions); // 1 up to 24 hours
    } else if (unit === 'hour') {
        var hours = roundingMethodFn(minutes / 60);
        return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days
    } else if (unit === 'day') {
        var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);
        return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months
    } else if (unit === 'month') {
        var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);
        return months === 12 && options.unit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date
    } else if (unit === 'year') {
        var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);
        return locale.formatDistance('xYears', years, localizeOptions);
    }
    throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
}
exports.default = formatDistanceStrict;

},{"../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../compareAsc/index.js":"1Vr9W","../toDate/index.js":"6pFrg","../_lib/cloneObject/index.js":"4Ycr4","../locale/en-US/index.js":"3bJ6D","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"7XpoF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../formatDistance/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function formatDistanceToNow(dirtyDate, dirtyOptions) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, Date.now(), dirtyOptions);
}
exports.default = formatDistanceToNow;

},{"../formatDistance/index.js":"aQz6i","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"d2RLe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../formatDistanceStrict/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, Date.now(), dirtyOptions);
}
exports.default = formatDistanceToNowStrict;

},{"../formatDistanceStrict/index.js":"bcEgc","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"l4SB3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../locale/en-US/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var defaultFormat = [
    'years',
    'months',
    'weeks',
    'days',
    'hours',
    'minutes',
    'seconds'
];
function formatDuration(duration, options) {
    if (arguments.length < 1) throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
    var format = (options === null || options === void 0 ? void 0 : options.format) || defaultFormat;
    var locale = (options === null || options === void 0 ? void 0 : options.locale) || _indexJsDefault.default;
    var zero = (options === null || options === void 0 ? void 0 : options.zero) || false;
    var delimiter = (options === null || options === void 0 ? void 0 : options.delimiter) || ' ';
    var result = format.reduce(function(acc, unit) {
        var token = "x".concat(unit.replace(/(^.)/, function(m) {
            return m.toUpperCase();
        }));
        var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);
        return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;
    }, []).join(delimiter);
    return result;
}
exports.default = formatDuration;

},{"../locale/en-US/index.js":"3bJ6D","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8JmJJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isValid/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/addLeadingZeros/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function formatISO(dirtyDate, dirtyOptions) {
    if (arguments.length < 1) throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
    var originalDate = _indexJsDefault.default(dirtyDate);
    if (!_indexJsDefault1.default(originalDate)) throw new RangeError('Invalid time value');
    var options = dirtyOptions || {
    };
    var format = options.format == null ? 'extended' : String(options.format);
    var representation = options.representation == null ? 'complete' : String(options.representation);
    if (format !== 'extended' && format !== 'basic') throw new RangeError("format must be 'extended' or 'basic'");
    if (representation !== 'date' && representation !== 'time' && representation !== 'complete') throw new RangeError("representation must be 'date', 'time', or 'complete'");
    var result = '';
    var tzOffset = '';
    var dateDelimiter = format === 'extended' ? '-' : '';
    var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'
    if (representation !== 'time') {
        var day = _indexJsDefault2.default(originalDate.getDate(), 2);
        var month = _indexJsDefault2.default(originalDate.getMonth() + 1, 2);
        var year = _indexJsDefault2.default(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
    } // Representation is either 'time' or 'complete'
    if (representation !== 'date') {
        // Add the timezone.
        var offset = originalDate.getTimezoneOffset();
        if (offset !== 0) {
            var absoluteOffset = Math.abs(offset);
            var hourOffset = _indexJsDefault2.default(Math.floor(absoluteOffset / 60), 2);
            var minuteOffset = _indexJsDefault2.default(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.
            var sign = offset < 0 ? '+' : '-';
            tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
        } else tzOffset = 'Z';
        var hour = _indexJsDefault2.default(originalDate.getHours(), 2);
        var minute = _indexJsDefault2.default(originalDate.getMinutes(), 2);
        var second = _indexJsDefault2.default(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'
        var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.
        var time = [
            hour,
            minute,
            second
        ].join(timeDelimiter); // HHmmss or HH:mm:ss.
        result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
    }
    return result;
}
exports.default = formatISO;

},{"../toDate/index.js":"6pFrg","../isValid/index.js":"1nJMs","../_lib/addLeadingZeros/index.js":"6f1IG","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eUEob":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isValid/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/addLeadingZeros/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function formatISO9075(dirtyDate, dirtyOptions) {
    if (arguments.length < 1) throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
    var originalDate = _indexJsDefault.default(dirtyDate);
    if (!_indexJsDefault1.default(originalDate)) throw new RangeError('Invalid time value');
    var options = dirtyOptions || {
    };
    var format = options.format == null ? 'extended' : String(options.format);
    var representation = options.representation == null ? 'complete' : String(options.representation);
    if (format !== 'extended' && format !== 'basic') throw new RangeError("format must be 'extended' or 'basic'");
    if (representation !== 'date' && representation !== 'time' && representation !== 'complete') throw new RangeError("representation must be 'date', 'time', or 'complete'");
    var result = '';
    var dateDelimiter = format === 'extended' ? '-' : '';
    var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'
    if (representation !== 'time') {
        var day = _indexJsDefault2.default(originalDate.getDate(), 2);
        var month = _indexJsDefault2.default(originalDate.getMonth() + 1, 2);
        var year = _indexJsDefault2.default(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.
        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
    } // Representation is either 'time' or 'complete'
    if (representation !== 'date') {
        var hour = _indexJsDefault2.default(originalDate.getHours(), 2);
        var minute = _indexJsDefault2.default(originalDate.getMinutes(), 2);
        var second = _indexJsDefault2.default(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space
        var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.
        result = "".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);
    }
    return result;
}
exports.default = formatISO9075;

},{"../toDate/index.js":"6pFrg","../isValid/index.js":"1nJMs","../_lib/addLeadingZeros/index.js":"6f1IG","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kktco":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function formatISODuration(duration) {
    _indexJsDefault.default(1, arguments);
    if (typeof duration !== 'object') throw new Error('Duration must be an object');
    var _duration$years = duration.years, years = _duration$years === void 0 ? 0 : _duration$years, _duration$months = duration.months, months = _duration$months === void 0 ? 0 : _duration$months, _duration$days = duration.days, days = _duration$days === void 0 ? 0 : _duration$days, _duration$hours = duration.hours, hours = _duration$hours === void 0 ? 0 : _duration$hours, _duration$minutes = duration.minutes, minutes = _duration$minutes === void 0 ? 0 : _duration$minutes, _duration$seconds = duration.seconds, seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;
    return "P".concat(years, "Y").concat(months, "M").concat(days, "DT").concat(hours, "H").concat(minutes, "M").concat(seconds, "S");
}
exports.default = formatISODuration;

},{"../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lbDwh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isValid/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/addLeadingZeros/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/toInteger/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function formatRFC3339(dirtyDate, dirtyOptions) {
    if (arguments.length < 1) throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
    var originalDate = _indexJsDefault.default(dirtyDate);
    if (!_indexJsDefault1.default(originalDate)) throw new RangeError('Invalid time value');
    var options = dirtyOptions || {
    };
    var fractionDigits = options.fractionDigits == null ? 0 : _indexJsDefault3.default(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN
    if (!(fractionDigits >= 0 && fractionDigits <= 3)) throw new RangeError('fractionDigits must be between 0 and 3 inclusively');
    var day = _indexJsDefault2.default(originalDate.getDate(), 2);
    var month = _indexJsDefault2.default(originalDate.getMonth() + 1, 2);
    var year = originalDate.getFullYear();
    var hour = _indexJsDefault2.default(originalDate.getHours(), 2);
    var minute = _indexJsDefault2.default(originalDate.getMinutes(), 2);
    var second = _indexJsDefault2.default(originalDate.getSeconds(), 2);
    var fractionalSecond = '';
    if (fractionDigits > 0) {
        var milliseconds = originalDate.getMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));
        fractionalSecond = '.' + _indexJsDefault2.default(fractionalSeconds, fractionDigits);
    }
    var offset = '';
    var tzOffset = originalDate.getTimezoneOffset();
    if (tzOffset !== 0) {
        var absoluteOffset = Math.abs(tzOffset);
        var hourOffset = _indexJsDefault2.default(_indexJsDefault3.default(absoluteOffset / 60), 2);
        var minuteOffset = _indexJsDefault2.default(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.
        var sign = tzOffset < 0 ? '+' : '-';
        offset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
    } else offset = 'Z';
    return "".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(fractionalSecond).concat(offset);
}
exports.default = formatRFC3339;

},{"../toDate/index.js":"6pFrg","../isValid/index.js":"1nJMs","../_lib/addLeadingZeros/index.js":"6f1IG","../_lib/toInteger/index.js":"95G4A","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3paMm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isValid/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/addLeadingZeros/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var days = [
    'Sun',
    'Mon',
    'Tue',
    'Wed',
    'Thu',
    'Fri',
    'Sat'
];
var months = [
    'Jan',
    'Feb',
    'Mar',
    'Apr',
    'May',
    'Jun',
    'Jul',
    'Aug',
    'Sep',
    'Oct',
    'Nov',
    'Dec'
];
function formatRFC7231(dirtyDate) {
    if (arguments.length < 1) throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
    var originalDate = _indexJsDefault.default(dirtyDate);
    if (!_indexJsDefault1.default(originalDate)) throw new RangeError('Invalid time value');
    var dayName = days[originalDate.getUTCDay()];
    var dayOfMonth = _indexJsDefault2.default(originalDate.getUTCDate(), 2);
    var monthName = months[originalDate.getUTCMonth()];
    var year = originalDate.getUTCFullYear();
    var hour = _indexJsDefault2.default(originalDate.getUTCHours(), 2);
    var minute = _indexJsDefault2.default(originalDate.getUTCMinutes(), 2);
    var second = _indexJsDefault2.default(originalDate.getUTCSeconds(), 2); // Result variables.
    return "".concat(dayName, ", ").concat(dayOfMonth, " ").concat(monthName, " ").concat(year, " ").concat(hour, ":").concat(minute, ":").concat(second, " GMT");
}
exports.default = formatRFC7231;

},{"../toDate/index.js":"6pFrg","../isValid/index.js":"1nJMs","../_lib/addLeadingZeros/index.js":"6f1IG","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6C329":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInCalendarDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../format/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../locale/en-US/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../subMilliseconds/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../toDate/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {
    _indexJsDefault6.default(2, arguments);
    var date = _indexJsDefault4.default(dirtyDate);
    var baseDate = _indexJsDefault4.default(dirtyBaseDate);
    var _ref = dirtyOptions || {
    }, _ref$locale = _ref.locale, locale = _ref$locale === void 0 ? _indexJsDefault2.default : _ref$locale, _ref$weekStartsOn = _ref.weekStartsOn, weekStartsOn = _ref$weekStartsOn === void 0 ? 0 : _ref$weekStartsOn;
    if (!locale.localize) throw new RangeError('locale must contain localize property');
    if (!locale.formatLong) throw new RangeError('locale must contain formatLong property');
    if (!locale.formatRelative) throw new RangeError('locale must contain formatRelative property');
    var diff = _indexJsDefault.default(date, baseDate);
    if (isNaN(diff)) throw new RangeError('Invalid time value');
    var token;
    if (diff < -6) token = 'other';
    else if (diff < -1) token = 'lastWeek';
    else if (diff < 0) token = 'yesterday';
    else if (diff < 1) token = 'today';
    else if (diff < 2) token = 'tomorrow';
    else if (diff < 7) token = 'nextWeek';
    else token = 'other';
    var utcDate = _indexJsDefault3.default(date, _indexJsDefault5.default(date));
    var utcBaseDate = _indexJsDefault3.default(baseDate, _indexJsDefault5.default(baseDate));
    var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {
        locale: locale,
        weekStartsOn: weekStartsOn
    });
    return _indexJsDefault1.default(date, formatStr, {
        locale: locale,
        weekStartsOn: weekStartsOn
    });
}
exports.default = formatRelative;

},{"../differenceInCalendarDays/index.js":"dQlTa","../format/index.js":"lNaGA","../locale/en-US/index.js":"3bJ6D","../subMilliseconds/index.js":"aMoYy","../toDate/index.js":"6pFrg","../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8Cl6X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/toInteger/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function fromUnixTime(dirtyUnixTime) {
    _indexJsDefault2.default(1, arguments);
    var unixTime = _indexJsDefault1.default(dirtyUnixTime);
    return _indexJsDefault.default(unixTime * 1000);
}
exports.default = fromUnixTime;

},{"../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"mNo56":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getDate(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var dayOfMonth = date.getDate();
    return dayOfMonth;
}
exports.default = getDate;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"b3QZJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getDay(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var day = date.getDay();
    return day;
}
exports.default = getDay;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"f3XCc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../differenceInCalendarDays/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function getDayOfYear(dirtyDate) {
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var diff = _indexJsDefault2.default(date, _indexJsDefault1.default(date));
    var dayOfYear = diff + 1;
    return dayOfYear;
}
exports.default = getDayOfYear;

},{"../toDate/index.js":"6pFrg","../startOfYear/index.js":"60TSI","../differenceInCalendarDays/index.js":"dQlTa","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6NFs2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getDaysInMonth(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    var monthIndex = date.getMonth();
    var lastDayOfMonth = new Date(0);
    lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
    lastDayOfMonth.setHours(0, 0, 0, 0);
    return lastDayOfMonth.getDate();
}
exports.default = getDaysInMonth;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"c4cww":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isLeapYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function getDaysInYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    if (String(new Date(date)) === 'Invalid Date') return NaN;
    return _indexJsDefault1.default(date) ? 366 : 365;
}
exports.default = getDaysInYear;

},{"../toDate/index.js":"6pFrg","../isLeapYear/index.js":"jF4oq","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"jF4oq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isLeapYear(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
exports.default = isLeapYear;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eQPz5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getDecade(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    var decade = Math.floor(year / 10) * 10;
    return decade;
}
exports.default = getDecade;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"jeanF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getHours(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var hours = date.getHours();
    return hours;
}
exports.default = getHours;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9SPFw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getISODay(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var day = date.getDay();
    if (day === 0) day = 7;
    return day;
}
exports.default = getISODay;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gjktN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfISOWeekYear/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var MILLISECONDS_IN_WEEK = 604800000;
function getISOWeek(dirtyDate) {
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var diff = _indexJsDefault1.default(date).getTime() - _indexJsDefault2.default(date).getTime(); // Round the number of days to the nearest integer
    // because the number of milliseconds in a week is not constant
    // (e.g. it's different in the week of the daylight saving time clock shift)
    return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
exports.default = getISOWeek;

},{"../toDate/index.js":"6pFrg","../startOfISOWeek/index.js":"hgsCz","../startOfISOWeekYear/index.js":"cO5R6","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"cht79":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfISOWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addWeeks/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var MILLISECONDS_IN_WEEK = 604800000;
function getISOWeeksInYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var thisYear = _indexJsDefault.default(dirtyDate);
    var nextYear = _indexJsDefault.default(_indexJsDefault1.default(thisYear, 60));
    var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer
    // because the number of milliseconds in a week is not constant
    // (e.g. it's different in the week of the daylight saving time clock shift)
    return Math.round(diff / MILLISECONDS_IN_WEEK);
}
exports.default = getISOWeeksInYear;

},{"../startOfISOWeekYear/index.js":"cO5R6","../addWeeks/index.js":"9mj9k","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"e8WIl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getMilliseconds(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var milliseconds = date.getMilliseconds();
    return milliseconds;
}
exports.default = getMilliseconds;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4qrrL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getMinutes(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var minutes = date.getMinutes();
    return minutes;
}
exports.default = getMinutes;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"crXFe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getMonth(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var month = date.getMonth();
    return month;
}
exports.default = getMonth;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4zx9j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var MILLISECONDS_IN_DAY = 86400000;
function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {
    _indexJsDefault1.default(2, arguments);
    var intervalLeft = dirtyIntervalLeft || {
    };
    var intervalRight = dirtyIntervalRight || {
    };
    var leftStartTime = _indexJsDefault.default(intervalLeft.start).getTime();
    var leftEndTime = _indexJsDefault.default(intervalLeft.end).getTime();
    var rightStartTime = _indexJsDefault.default(intervalRight.start).getTime();
    var rightEndTime = _indexJsDefault.default(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) throw new RangeError('Invalid interval');
    var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;
    if (!isOverlapping) return 0;
    var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;
    var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;
    var differenceInMs = overlapEndDate - overlapStartDate;
    return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
}
exports.default = getOverlappingDaysInIntervals;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8asYq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getSeconds(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var seconds = date.getSeconds();
    return seconds;
}
exports.default = getSeconds;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"iXeWi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getTime(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var timestamp = date.getTime();
    return timestamp;
}
exports.default = getTime;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"baT07":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getTime/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getUnixTime(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return Math.floor(_indexJsDefault.default(dirtyDate) / 1000);
}
exports.default = getUnixTime;

},{"../getTime/index.js":"iXeWi","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"c8Jm6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfWeekYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var MILLISECONDS_IN_WEEK = 604800000;
function getWeek(dirtyDate, options) {
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault2.default(dirtyDate);
    var diff = _indexJsDefault.default(date, options).getTime() - _indexJsDefault1.default(date, options).getTime(); // Round the number of days to the nearest integer
    // because the number of milliseconds in a week is not constant
    // (e.g. it's different in the week of the daylight saving time clock shift)
    return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
exports.default = getWeek;

},{"../startOfWeek/index.js":"22WAP","../startOfWeekYear/index.js":"hjJu6","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hjJu6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/toInteger/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function startOfWeekYear(dirtyDate, dirtyOptions) {
    _indexJsDefault3.default(1, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : _indexJsDefault2.default(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : _indexJsDefault2.default(options.firstWeekContainsDate);
    var year = _indexJsDefault.default(dirtyDate, dirtyOptions);
    var firstWeek = new Date(0);
    firstWeek.setFullYear(year, 0, firstWeekContainsDate);
    firstWeek.setHours(0, 0, 0, 0);
    var date = _indexJsDefault1.default(firstWeek, dirtyOptions);
    return date;
}
exports.default = startOfWeekYear;

},{"../getWeekYear/index.js":"cRMdy","../startOfWeek/index.js":"22WAP","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"cRMdy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/toInteger/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function getWeekYear(dirtyDate, options) {
    var _options$locale, _options$locale$optio;
    _indexJsDefault3.default(1, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var year = date.getFullYear();
    var localeFirstWeekContainsDate = options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : _indexJsDefault2.default(localeFirstWeekContainsDate);
    var firstWeekContainsDate = (options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) == null ? defaultFirstWeekContainsDate : _indexJsDefault2.default(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
    var firstWeekOfNextYear = new Date(0);
    firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
    firstWeekOfNextYear.setHours(0, 0, 0, 0);
    var startOfNextYear = _indexJsDefault.default(firstWeekOfNextYear, options);
    var firstWeekOfThisYear = new Date(0);
    firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
    firstWeekOfThisYear.setHours(0, 0, 0, 0);
    var startOfThisYear = _indexJsDefault.default(firstWeekOfThisYear, options);
    if (date.getTime() >= startOfNextYear.getTime()) return year + 1;
    else if (date.getTime() >= startOfThisYear.getTime()) return year;
    else return year - 1;
}
exports.default = getWeekYear;

},{"../startOfWeek/index.js":"22WAP","../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"5Nzdh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../getDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfMonth/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/toInteger/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function getWeekOfMonth(date, dirtyOptions) {
    _indexJsDefault4.default(1, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault3.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault3.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    var currentDayOfMonth = _indexJsDefault.default(date);
    if (isNaN(currentDayOfMonth)) return currentDayOfMonth;
    var startWeekDay = _indexJsDefault1.default(_indexJsDefault2.default(date));
    var lastDayOfFirstWeek = 0;
    if (startWeekDay >= weekStartsOn) lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;
    else lastDayOfFirstWeek = weekStartsOn - startWeekDay;
    var weekNumber = 1;
    if (currentDayOfMonth > lastDayOfFirstWeek) {
        var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
        weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);
    }
    return weekNumber;
}
exports.default = getWeekOfMonth;

},{"../getDate/index.js":"mNo56","../getDay/index.js":"b3QZJ","../startOfMonth/index.js":"1qC5t","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"g58rG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInCalendarWeeks/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../lastDayOfMonth/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../startOfMonth/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function getWeeksInMonth(date, options) {
    _indexJsDefault3.default(1, arguments);
    return _indexJsDefault.default(_indexJsDefault1.default(date), _indexJsDefault2.default(date), options) + 1;
}
exports.default = getWeeksInMonth;

},{"../differenceInCalendarWeeks/index.js":"6fVKv","../lastDayOfMonth/index.js":"kQSRO","../startOfMonth/index.js":"1qC5t","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kQSRO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function lastDayOfMonth(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var month = date.getMonth();
    date.setFullYear(date.getFullYear(), month + 1, 0);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = lastDayOfMonth;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lS1Ek":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function getYear(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    return year;
}
exports.default = getYear;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dd2Bt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function hoursToMilliseconds(hours) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(hours * _indexJs1.millisecondsInHour);
}
exports.default = hoursToMilliseconds;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"ldKDJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function hoursToMinutes(hours) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(hours * _indexJs1.minutesInHour);
}
exports.default = hoursToMinutes;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dpFra":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function hoursToSeconds(hours) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(hours * _indexJs1.secondsInHour);
}
exports.default = hoursToSeconds;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"mK3J9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../compareAsc/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../differenceInYears/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../differenceInMonths/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../differenceInDays/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../differenceInHours/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../differenceInMinutes/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../differenceInSeconds/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var _indexJs7 = require("../isValid/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs7);
var _indexJs8 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs8);
var _indexJs9 = require("../toDate/index.js");
var _indexJsDefault9 = parcelHelpers.interopDefault(_indexJs9);
var _indexJs10 = require("../sub/index.js");
var _indexJsDefault10 = parcelHelpers.interopDefault(_indexJs10);
function intervalToDuration(_ref) {
    var start = _ref.start, end = _ref.end;
    _indexJsDefault8.default(1, arguments);
    var dateLeft = _indexJsDefault9.default(start);
    var dateRight = _indexJsDefault9.default(end);
    if (!_indexJsDefault7.default(dateLeft)) throw new RangeError('Start Date is invalid');
    if (!_indexJsDefault7.default(dateRight)) throw new RangeError('End Date is invalid');
    var duration = {
        years: 0,
        months: 0,
        days: 0,
        hours: 0,
        minutes: 0,
        seconds: 0
    };
    var sign = _indexJsDefault.default(dateLeft, dateRight);
    duration.years = Math.abs(_indexJsDefault1.default(dateLeft, dateRight));
    var remainingMonths = _indexJsDefault10.default(dateLeft, {
        years: sign * duration.years
    });
    duration.months = Math.abs(_indexJsDefault2.default(remainingMonths, dateRight));
    var remainingDays = _indexJsDefault10.default(remainingMonths, {
        months: sign * duration.months
    });
    duration.days = Math.abs(_indexJsDefault3.default(remainingDays, dateRight));
    var remainingHours = _indexJsDefault10.default(remainingDays, {
        days: sign * duration.days
    });
    duration.hours = Math.abs(_indexJsDefault4.default(remainingHours, dateRight));
    var remainingMinutes = _indexJsDefault10.default(remainingHours, {
        hours: sign * duration.hours
    });
    duration.minutes = Math.abs(_indexJsDefault5.default(remainingMinutes, dateRight));
    var remainingSeconds = _indexJsDefault10.default(remainingMinutes, {
        minutes: sign * duration.minutes
    });
    duration.seconds = Math.abs(_indexJsDefault6.default(remainingSeconds, dateRight));
    return duration;
}
exports.default = intervalToDuration;

},{"../compareAsc/index.js":"1Vr9W","../differenceInYears/index.js":"253nF","../differenceInMonths/index.js":"eWcZM","../differenceInDays/index.js":"d7PBJ","../differenceInHours/index.js":"5A5yp","../differenceInMinutes/index.js":"busJZ","../differenceInSeconds/index.js":"9J8F0","../isValid/index.js":"1nJMs","../_lib/requiredArgs/index.js":"JNGPJ","../toDate/index.js":"6pFrg","../sub/index.js":"9x136","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9x136":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../subDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../subMonths/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/toInteger/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function sub(dirtyDate, duration) {
    _indexJsDefault3.default(2, arguments);
    if (!duration || typeof duration !== 'object') return new Date(NaN);
    var years = duration.years ? _indexJsDefault4.default(duration.years) : 0;
    var months = duration.months ? _indexJsDefault4.default(duration.months) : 0;
    var weeks = duration.weeks ? _indexJsDefault4.default(duration.weeks) : 0;
    var days = duration.days ? _indexJsDefault4.default(duration.days) : 0;
    var hours = duration.hours ? _indexJsDefault4.default(duration.hours) : 0;
    var minutes = duration.minutes ? _indexJsDefault4.default(duration.minutes) : 0;
    var seconds = duration.seconds ? _indexJsDefault4.default(duration.seconds) : 0; // Subtract years and months
    var dateWithoutMonths = _indexJsDefault1.default(_indexJsDefault2.default(dirtyDate), months + years * 12); // Subtract weeks and days
    var dateWithoutDays = _indexJsDefault.default(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds
    var minutestoSub = minutes + hours * 60;
    var secondstoSub = seconds + minutestoSub * 60;
    var mstoSub = secondstoSub * 1000;
    var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
    return finalDate;
}
exports.default = sub;

},{"../subDays/index.js":"f8ciJ","../subMonths/index.js":"464Uh","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","../_lib/toInteger/index.js":"95G4A","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"f8ciJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addDays/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subDays(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subDays;

},{"../_lib/toInteger/index.js":"95G4A","../addDays/index.js":"hYhFb","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"464Uh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMonths/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subMonths(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subMonths;

},{"../_lib/toInteger/index.js":"95G4A","../addMonths/index.js":"8vzbZ","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4tBf3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function intlFormat(date, formatOrLocale, localeOptions) {
    var _localeOptions;
    _indexJsDefault.default(1, arguments);
    var formatOptions;
    if (isFormatOptions(formatOrLocale)) formatOptions = formatOrLocale;
    else localeOptions = formatOrLocale;
    return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);
}
exports.default = intlFormat;
function isFormatOptions(opts) {
    return opts !== undefined && !('locale' in opts);
}

},{"../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eDpLB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isAfter(dirtyDate, dirtyDateToCompare) {
    _indexJsDefault1.default(2, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var dateToCompare = _indexJsDefault.default(dirtyDateToCompare);
    return date.getTime() > dateToCompare.getTime();
}
exports.default = isAfter;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"djDIq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isBefore(dirtyDate, dirtyDateToCompare) {
    _indexJsDefault1.default(2, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var dateToCompare = _indexJsDefault.default(dirtyDateToCompare);
    return date.getTime() < dateToCompare.getTime();
}
exports.default = isBefore;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dWtzU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function isDate(value) {
    _indexJsDefault.default(1, arguments);
    return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';
}
exports.default = isDate;

},{"../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"bEmvR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isEqual(dirtyLeftDate, dirtyRightDate) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyLeftDate);
    var dateRight = _indexJsDefault.default(dirtyRightDate);
    return dateLeft.getTime() === dateRight.getTime();
}
exports.default = isEqual;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2dFT3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function isExists(year, month, day) {
    if (arguments.length < 3) throw new TypeError('3 argument required, but only ' + arguments.length + ' present');
    var date = new Date(year, month, day);
    return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;
}
exports.default = isExists;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1rfJV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isFirstDayOfMonth(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getDate() === 1;
}
exports.default = isFirstDayOfMonth;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"80XtF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isFriday(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getDay() === 5;
}
exports.default = isFriday;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"cRx5x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isFuture(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getTime() > Date.now();
}
exports.default = isFuture;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hyWo3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../parse/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isValid/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function isMatch(dateString, formatString, options) {
    _indexJsDefault2.default(2, arguments);
    return _indexJsDefault1.default(_indexJsDefault.default(dateString, formatString, new Date(), options));
}
exports.default = isMatch;

},{"../parse/index.js":"bD2Un","../isValid/index.js":"1nJMs","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"bD2Un":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../locale/en-US/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../subMilliseconds/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/assign/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/format/longFormatters/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../_lib/protectedTokens/index.js");
var _indexJs7 = require("../_lib/toInteger/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs7);
var _indexJs8 = require("./_lib/parsers/index.js");
var _indexJsDefault7 = parcelHelpers.interopDefault(_indexJs8);
var _indexJs9 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault8 = parcelHelpers.interopDefault(_indexJs9);
var TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var notWhitespaceRegExp = /\S/;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {
    _indexJsDefault8.default(3, arguments);
    var dateString = String(dirtyDateString);
    var formatString = String(dirtyFormatString);
    var options = dirtyOptions || {
    };
    var locale = options.locale || _indexJsDefault.default;
    if (!locale.match) throw new RangeError('locale must contain match property');
    var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : _indexJsDefault6.default(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : _indexJsDefault6.default(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
    var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault6.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault6.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    if (formatString === '') {
        if (dateString === '') return _indexJsDefault2.default(dirtyReferenceDate);
        else return new Date(NaN);
    }
    var subFnOptions = {
        firstWeekContainsDate: firstWeekContainsDate,
        weekStartsOn: weekStartsOn,
        locale: locale
    }; // If timezone isn't specified, it will be set to the system timezone
    var setters = [
        {
            priority: TIMEZONE_UNIT_PRIORITY,
            subPriority: -1,
            set: dateToSystemTimezone,
            index: 0
        }
    ];
    var i;
    var tokens = formatString.match(longFormattingTokensRegExp).map(function(substring) {
        var firstCharacter = substring[0];
        if (firstCharacter === 'p' || firstCharacter === 'P') {
            var longFormatter = _indexJsDefault4.default[firstCharacter];
            return longFormatter(substring, locale.formatLong, subFnOptions);
        }
        return substring;
    }).join('').match(formattingTokensRegExp);
    var usedTokens = [];
    for(i = 0; i < tokens.length; i++){
        var token = tokens[i];
        if (!options.useAdditionalWeekYearTokens && _indexJs6.isProtectedWeekYearToken(token)) _indexJs6.throwProtectedError(token, formatString, dirtyDateString);
        if (!options.useAdditionalDayOfYearTokens && _indexJs6.isProtectedDayOfYearToken(token)) _indexJs6.throwProtectedError(token, formatString, dirtyDateString);
        var firstCharacter = token[0];
        var parser = _indexJsDefault7.default[firstCharacter];
        if (parser) {
            var incompatibleTokens = parser.incompatibleTokens;
            if (Array.isArray(incompatibleTokens)) {
                var incompatibleToken = void 0;
                for(var _i = 0; _i < usedTokens.length; _i++){
                    var usedToken = usedTokens[_i].token;
                    if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {
                        incompatibleToken = usedTokens[_i];
                        break;
                    }
                }
                if (incompatibleToken) throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
            } else if (parser.incompatibleTokens === '*' && usedTokens.length) throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
            usedTokens.push({
                token: firstCharacter,
                fullToken: token
            });
            var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);
            if (!parseResult) return new Date(NaN);
            setters.push({
                priority: parser.priority,
                subPriority: parser.subPriority || 0,
                set: parser.set,
                validate: parser.validate,
                value: parseResult.value,
                index: setters.length
            });
            dateString = parseResult.rest;
        } else {
            if (firstCharacter.match(unescapedLatinCharacterRegExp)) throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
             // Replace two single quote characters with one single quote character
            if (token === "''") token = "'";
            else if (firstCharacter === "'") token = cleanEscapedString(token);
             // Cut token from string, or, if string doesn't match the token, return Invalid Date
            if (dateString.indexOf(token) === 0) dateString = dateString.slice(token.length);
            else return new Date(NaN);
        }
    } // Check if the remaining input contains something other than whitespace
    if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) return new Date(NaN);
    var uniquePrioritySetters = setters.map(function(setter) {
        return setter.priority;
    }).sort(function(a, b) {
        return b - a;
    }).filter(function(priority, index, array) {
        return array.indexOf(priority) === index;
    }).map(function(priority) {
        return setters.filter(function(setter) {
            return setter.priority === priority;
        }).sort(function(a, b) {
            return b.subPriority - a.subPriority;
        });
    }).map(function(setterArray) {
        return setterArray[0];
    });
    var date = _indexJsDefault2.default(dirtyReferenceDate);
    if (isNaN(date)) return new Date(NaN);
     // Convert the date in system timezone to the same date in UTC+00:00 timezone.
    // This ensures that when UTC functions will be implemented, locales will be compatible with them.
    // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37
    var utcDate = _indexJsDefault1.default(date, _indexJsDefault5.default(date));
    var flags = {
    };
    for(i = 0; i < uniquePrioritySetters.length; i++){
        var setter = uniquePrioritySetters[i];
        if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) return new Date(NaN);
        var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)
        if (result[0]) {
            utcDate = result[0];
            _indexJsDefault3.default(flags, result[1]); // Result is date
        } else utcDate = result;
    }
    return utcDate;
}
exports.default = parse;
function dateToSystemTimezone(date, flags) {
    if (flags.timestampIsSet) return date;
    var convertedDate = new Date(0);
    convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
    convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
    return convertedDate;
}
function cleanEscapedString(input) {
    return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

},{"../locale/en-US/index.js":"3bJ6D","../subMilliseconds/index.js":"aMoYy","../toDate/index.js":"6pFrg","../_lib/assign/index.js":"2X9DG","../_lib/format/longFormatters/index.js":"gRFDW","../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../_lib/protectedTokens/index.js":"4K9Zq","../_lib/toInteger/index.js":"95G4A","./_lib/parsers/index.js":"9ZbDP","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9ZbDP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../../../_lib/getUTCWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../../_lib/setUTCDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../../../_lib/setUTCISODay/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../../../_lib/setUTCISOWeek/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../../../_lib/setUTCWeek/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../../../_lib/startOfUTCISOWeek/index.js");
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
var _indexJs6 = require("../../../_lib/startOfUTCWeek/index.js");
var _indexJsDefault6 = parcelHelpers.interopDefault(_indexJs6);
var MILLISECONDS_IN_HOUR = 3600000;
var MILLISECONDS_IN_MINUTE = 60000;
var MILLISECONDS_IN_SECOND = 1000;
var numericPatterns = {
    month: /^(1[0-2]|0?\d)/,
    // 0 to 12
    date: /^(3[0-1]|[0-2]?\d)/,
    // 0 to 31
    dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
    // 0 to 366
    week: /^(5[0-3]|[0-4]?\d)/,
    // 0 to 53
    hour23h: /^(2[0-3]|[0-1]?\d)/,
    // 0 to 23
    hour24h: /^(2[0-4]|[0-1]?\d)/,
    // 0 to 24
    hour11h: /^(1[0-1]|0?\d)/,
    // 0 to 11
    hour12h: /^(1[0-2]|0?\d)/,
    // 0 to 12
    minute: /^[0-5]?\d/,
    // 0 to 59
    second: /^[0-5]?\d/,
    // 0 to 59
    singleDigit: /^\d/,
    // 0 to 9
    twoDigits: /^\d{1,2}/,
    // 0 to 99
    threeDigits: /^\d{1,3}/,
    // 0 to 999
    fourDigits: /^\d{1,4}/,
    // 0 to 9999
    anyDigitsSigned: /^-?\d+/,
    singleDigitSigned: /^-?\d/,
    // 0 to 9, -0 to -9
    twoDigitsSigned: /^-?\d{1,2}/,
    // 0 to 99, -0 to -99
    threeDigitsSigned: /^-?\d{1,3}/,
    // 0 to 999, -0 to -999
    fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999
};
var timezonePatterns = {
    basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
    basic: /^([+-])(\d{2})(\d{2})|Z/,
    basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
    extended: /^([+-])(\d{2}):(\d{2})|Z/,
    extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};
function parseNumericPattern(pattern, string, valueCallback) {
    var matchResult = string.match(pattern);
    if (!matchResult) return null;
    var value = parseInt(matchResult[0], 10);
    return {
        value: valueCallback ? valueCallback(value) : value,
        rest: string.slice(matchResult[0].length)
    };
}
function parseTimezonePattern(pattern, string) {
    var matchResult = string.match(pattern);
    if (!matchResult) return null;
     // Input is 'Z'
    if (matchResult[0] === 'Z') return {
        value: 0,
        rest: string.slice(1)
    };
    var sign = matchResult[1] === '+' ? 1 : -1;
    var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
    var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
    var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
    return {
        value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),
        rest: string.slice(matchResult[0].length)
    };
}
function parseAnyDigitsSigned(string, valueCallback) {
    return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
}
function parseNDigits(n, string, valueCallback) {
    switch(n){
        case 1:
            return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);
        case 2:
            return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);
        case 3:
            return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);
        case 4:
            return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);
        default:
            return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), string, valueCallback);
    }
}
function parseNDigitsSigned(n, string, valueCallback) {
    switch(n){
        case 1:
            return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);
        case 2:
            return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);
        case 3:
            return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);
        case 4:
            return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);
        default:
            return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), string, valueCallback);
    }
}
function dayPeriodEnumToHours(enumValue) {
    switch(enumValue){
        case 'morning':
            return 4;
        case 'evening':
            return 17;
        case 'pm':
        case 'noon':
        case 'afternoon':
            return 12;
        case 'am':
        case 'midnight':
        case 'night':
        default:
            return 0;
    }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
    var isCommonEra = currentYear > 0; // Absolute number of the current year:
    // 1 -> 1 AC
    // 0 -> 1 BC
    // -1 -> 2 BC
    var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
    var result;
    if (absCurrentYear <= 50) result = twoDigitYear || 100;
    else {
        var rangeEnd = absCurrentYear + 50;
        var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
        var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
        result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
    }
    return isCommonEra ? result : 1 - result;
}
var DAYS_IN_MONTH = [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
];
var DAYS_IN_MONTH_LEAP_YEAR = [
    31,
    29,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
]; // User for validation
function isLeapYearIndex(year) {
    return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */ var parsers = {
    // Era
    G: {
        priority: 140,
        parse: function(string, token, match, _options) {
            switch(token){
                // AD, BC
                case 'G':
                case 'GG':
                case 'GGG':
                    return match.era(string, {
                        width: 'abbreviated'
                    }) || match.era(string, {
                        width: 'narrow'
                    });
                // A, B
                case 'GGGGG':
                    return match.era(string, {
                        width: 'narrow'
                    });
                // Anno Domini, Before Christ
                case 'GGGG':
                default:
                    return match.era(string, {
                        width: 'wide'
                    }) || match.era(string, {
                        width: 'abbreviated'
                    }) || match.era(string, {
                        width: 'narrow'
                    });
            }
        },
        set: function(date, flags, value, _options) {
            flags.era = value;
            date.setUTCFullYear(value, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'R',
            'u',
            't',
            'T'
        ]
    },
    // Year
    y: {
        // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
        // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
        // |----------|-------|----|-------|-------|-------|
        // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
        // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
        // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
        // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
        // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
        priority: 130,
        parse: function(string, token, match, _options) {
            var valueCallback = function(year) {
                return {
                    year: year,
                    isTwoDigitYear: token === 'yy'
                };
            };
            switch(token){
                case 'y':
                    return parseNDigits(4, string, valueCallback);
                case 'yo':
                    return match.ordinalNumber(string, {
                        unit: 'year',
                        valueCallback: valueCallback
                    });
                default:
                    return parseNDigits(token.length, string, valueCallback);
            }
        },
        validate: function(_date, value, _options) {
            return value.isTwoDigitYear || value.year > 0;
        },
        set: function(date, flags, value, _options) {
            var currentYear = date.getUTCFullYear();
            if (value.isTwoDigitYear) {
                var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
                date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
                date.setUTCHours(0, 0, 0, 0);
                return date;
            }
            var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'Y',
            'R',
            'u',
            'w',
            'I',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Local week-numbering year
    Y: {
        priority: 130,
        parse: function(string, token, match, _options) {
            var valueCallback = function(year) {
                return {
                    year: year,
                    isTwoDigitYear: token === 'YY'
                };
            };
            switch(token){
                case 'Y':
                    return parseNDigits(4, string, valueCallback);
                case 'Yo':
                    return match.ordinalNumber(string, {
                        unit: 'year',
                        valueCallback: valueCallback
                    });
                default:
                    return parseNDigits(token.length, string, valueCallback);
            }
        },
        validate: function(_date, value, _options) {
            return value.isTwoDigitYear || value.year > 0;
        },
        set: function(date, flags, value, options) {
            var currentYear = _indexJsDefault.default(date, options);
            if (value.isTwoDigitYear) {
                var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
                date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
                date.setUTCHours(0, 0, 0, 0);
                return _indexJsDefault6.default(date, options);
            }
            var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
            date.setUTCHours(0, 0, 0, 0);
            return _indexJsDefault6.default(date, options);
        },
        incompatibleTokens: [
            'y',
            'R',
            'u',
            'Q',
            'q',
            'M',
            'L',
            'I',
            'd',
            'D',
            'i',
            't',
            'T'
        ]
    },
    // ISO week-numbering year
    R: {
        priority: 130,
        parse: function(string, token, _match, _options) {
            if (token === 'R') return parseNDigitsSigned(4, string);
            return parseNDigitsSigned(token.length, string);
        },
        set: function(_date, _flags, value, _options) {
            var firstWeekOfYear = new Date(0);
            firstWeekOfYear.setUTCFullYear(value, 0, 4);
            firstWeekOfYear.setUTCHours(0, 0, 0, 0);
            return _indexJsDefault5.default(firstWeekOfYear);
        },
        incompatibleTokens: [
            'G',
            'y',
            'Y',
            'u',
            'Q',
            'q',
            'M',
            'L',
            'w',
            'd',
            'D',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Extended year
    u: {
        priority: 130,
        parse: function(string, token, _match, _options) {
            if (token === 'u') return parseNDigitsSigned(4, string);
            return parseNDigitsSigned(token.length, string);
        },
        set: function(date, _flags, value, _options) {
            date.setUTCFullYear(value, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'G',
            'y',
            'Y',
            'R',
            'w',
            'I',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Quarter
    Q: {
        priority: 120,
        parse: function(string, token, match, _options) {
            switch(token){
                // 1, 2, 3, 4
                case 'Q':
                case 'QQ':
                    // 01, 02, 03, 04
                    return parseNDigits(token.length, string);
                // 1st, 2nd, 3rd, 4th
                case 'Qo':
                    return match.ordinalNumber(string, {
                        unit: 'quarter'
                    });
                // Q1, Q2, Q3, Q4
                case 'QQQ':
                    return match.quarter(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.quarter(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // 1, 2, 3, 4 (narrow quarter; could be not numerical)
                case 'QQQQQ':
                    return match.quarter(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // 1st quarter, 2nd quarter, ...
                case 'QQQQ':
                default:
                    return match.quarter(string, {
                        width: 'wide',
                        context: 'formatting'
                    }) || match.quarter(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.quarter(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 1 && value <= 4;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'Y',
            'R',
            'q',
            'M',
            'L',
            'w',
            'I',
            'd',
            'D',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Stand-alone quarter
    q: {
        priority: 120,
        parse: function(string, token, match, _options) {
            switch(token){
                // 1, 2, 3, 4
                case 'q':
                case 'qq':
                    // 01, 02, 03, 04
                    return parseNDigits(token.length, string);
                // 1st, 2nd, 3rd, 4th
                case 'qo':
                    return match.ordinalNumber(string, {
                        unit: 'quarter'
                    });
                // Q1, Q2, Q3, Q4
                case 'qqq':
                    return match.quarter(string, {
                        width: 'abbreviated',
                        context: 'standalone'
                    }) || match.quarter(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
                // 1, 2, 3, 4 (narrow quarter; could be not numerical)
                case 'qqqqq':
                    return match.quarter(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
                // 1st quarter, 2nd quarter, ...
                case 'qqqq':
                default:
                    return match.quarter(string, {
                        width: 'wide',
                        context: 'standalone'
                    }) || match.quarter(string, {
                        width: 'abbreviated',
                        context: 'standalone'
                    }) || match.quarter(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 1 && value <= 4;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'Y',
            'R',
            'Q',
            'M',
            'L',
            'w',
            'I',
            'd',
            'D',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Month
    M: {
        priority: 110,
        parse: function(string, token, match, _options) {
            var valueCallback = function(value) {
                return value - 1;
            };
            switch(token){
                // 1, 2, ..., 12
                case 'M':
                    return parseNumericPattern(numericPatterns.month, string, valueCallback);
                // 01, 02, ..., 12
                case 'MM':
                    return parseNDigits(2, string, valueCallback);
                // 1st, 2nd, ..., 12th
                case 'Mo':
                    return match.ordinalNumber(string, {
                        unit: 'month',
                        valueCallback: valueCallback
                    });
                // Jan, Feb, ..., Dec
                case 'MMM':
                    return match.month(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.month(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // J, F, ..., D
                case 'MMMMM':
                    return match.month(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // January, February, ..., December
                case 'MMMM':
                default:
                    return match.month(string, {
                        width: 'wide',
                        context: 'formatting'
                    }) || match.month(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.month(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'Y',
            'R',
            'q',
            'Q',
            'L',
            'w',
            'I',
            'D',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Stand-alone month
    L: {
        priority: 110,
        parse: function(string, token, match, _options) {
            var valueCallback = function(value) {
                return value - 1;
            };
            switch(token){
                // 1, 2, ..., 12
                case 'L':
                    return parseNumericPattern(numericPatterns.month, string, valueCallback);
                // 01, 02, ..., 12
                case 'LL':
                    return parseNDigits(2, string, valueCallback);
                // 1st, 2nd, ..., 12th
                case 'Lo':
                    return match.ordinalNumber(string, {
                        unit: 'month',
                        valueCallback: valueCallback
                    });
                // Jan, Feb, ..., Dec
                case 'LLL':
                    return match.month(string, {
                        width: 'abbreviated',
                        context: 'standalone'
                    }) || match.month(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
                // J, F, ..., D
                case 'LLLLL':
                    return match.month(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
                // January, February, ..., December
                case 'LLLL':
                default:
                    return match.month(string, {
                        width: 'wide',
                        context: 'standalone'
                    }) || match.month(string, {
                        width: 'abbreviated',
                        context: 'standalone'
                    }) || match.month(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'Y',
            'R',
            'q',
            'Q',
            'M',
            'w',
            'I',
            'D',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Local week of year
    w: {
        priority: 100,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'w':
                    return parseNumericPattern(numericPatterns.week, string);
                case 'wo':
                    return match.ordinalNumber(string, {
                        unit: 'week'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 1 && value <= 53;
        },
        set: function(date, _flags, value, options) {
            return _indexJsDefault6.default(_indexJsDefault4.default(date, value, options), options);
        },
        incompatibleTokens: [
            'y',
            'R',
            'u',
            'q',
            'Q',
            'M',
            'L',
            'I',
            'd',
            'D',
            'i',
            't',
            'T'
        ]
    },
    // ISO week of year
    I: {
        priority: 100,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'I':
                    return parseNumericPattern(numericPatterns.week, string);
                case 'Io':
                    return match.ordinalNumber(string, {
                        unit: 'week'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 1 && value <= 53;
        },
        set: function(date, _flags, value, options) {
            return _indexJsDefault5.default(_indexJsDefault3.default(date, value, options), options);
        },
        incompatibleTokens: [
            'y',
            'Y',
            'u',
            'q',
            'Q',
            'M',
            'L',
            'w',
            'd',
            'D',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Day of the month
    d: {
        priority: 90,
        subPriority: 1,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'd':
                    return parseNumericPattern(numericPatterns.date, string);
                case 'do':
                    return match.ordinalNumber(string, {
                        unit: 'date'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(date, value, _options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);
            var month = date.getUTCMonth();
            if (isLeapYear) return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
            else return value >= 1 && value <= DAYS_IN_MONTH[month];
        },
        set: function(date, _flags, value, _options) {
            date.setUTCDate(value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'Y',
            'R',
            'q',
            'Q',
            'w',
            'I',
            'D',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Day of year
    D: {
        priority: 90,
        subPriority: 1,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'D':
                case 'DD':
                    return parseNumericPattern(numericPatterns.dayOfYear, string);
                case 'Do':
                    return match.ordinalNumber(string, {
                        unit: 'date'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(date, value, _options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);
            if (isLeapYear) return value >= 1 && value <= 366;
            else return value >= 1 && value <= 365;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCMonth(0, value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'Y',
            'R',
            'q',
            'Q',
            'M',
            'L',
            'w',
            'I',
            'd',
            'E',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Day of week
    E: {
        priority: 90,
        parse: function(string, token, match, _options) {
            switch(token){
                // Tue
                case 'E':
                case 'EE':
                case 'EEE':
                    return match.day(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'short',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // T
                case 'EEEEE':
                    return match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // Tu
                case 'EEEEEE':
                    return match.day(string, {
                        width: 'short',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // Tuesday
                case 'EEEE':
                default:
                    return match.day(string, {
                        width: 'wide',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'short',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options) {
            date = _indexJsDefault1.default(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'D',
            'i',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // Local day of week
    e: {
        priority: 90,
        parse: function(string, token, match, options) {
            var valueCallback = function(value) {
                var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
                return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
            };
            switch(token){
                // 3
                case 'e':
                case 'ee':
                    // 03
                    return parseNDigits(token.length, string, valueCallback);
                // 3rd
                case 'eo':
                    return match.ordinalNumber(string, {
                        unit: 'day',
                        valueCallback: valueCallback
                    });
                // Tue
                case 'eee':
                    return match.day(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'short',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // T
                case 'eeeee':
                    return match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // Tu
                case 'eeeeee':
                    return match.day(string, {
                        width: 'short',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                // Tuesday
                case 'eeee':
                default:
                    return match.day(string, {
                        width: 'wide',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'short',
                        context: 'formatting'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options) {
            date = _indexJsDefault1.default(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'y',
            'R',
            'u',
            'q',
            'Q',
            'M',
            'L',
            'I',
            'd',
            'D',
            'E',
            'i',
            'c',
            't',
            'T'
        ]
    },
    // Stand-alone local day of week
    c: {
        priority: 90,
        parse: function(string, token, match, options) {
            var valueCallback = function(value) {
                var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
                return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
            };
            switch(token){
                // 3
                case 'c':
                case 'cc':
                    // 03
                    return parseNDigits(token.length, string, valueCallback);
                // 3rd
                case 'co':
                    return match.ordinalNumber(string, {
                        unit: 'day',
                        valueCallback: valueCallback
                    });
                // Tue
                case 'ccc':
                    return match.day(string, {
                        width: 'abbreviated',
                        context: 'standalone'
                    }) || match.day(string, {
                        width: 'short',
                        context: 'standalone'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
                // T
                case 'ccccc':
                    return match.day(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
                // Tu
                case 'cccccc':
                    return match.day(string, {
                        width: 'short',
                        context: 'standalone'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
                // Tuesday
                case 'cccc':
                default:
                    return match.day(string, {
                        width: 'wide',
                        context: 'standalone'
                    }) || match.day(string, {
                        width: 'abbreviated',
                        context: 'standalone'
                    }) || match.day(string, {
                        width: 'short',
                        context: 'standalone'
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'standalone'
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 6;
        },
        set: function(date, _flags, value, options) {
            date = _indexJsDefault1.default(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'y',
            'R',
            'u',
            'q',
            'Q',
            'M',
            'L',
            'I',
            'd',
            'D',
            'E',
            'i',
            'e',
            't',
            'T'
        ]
    },
    // ISO day of week
    i: {
        priority: 90,
        parse: function(string, token, match, _options) {
            var valueCallback = function(value) {
                if (value === 0) return 7;
                return value;
            };
            switch(token){
                // 2
                case 'i':
                case 'ii':
                    // 02
                    return parseNDigits(token.length, string);
                // 2nd
                case 'io':
                    return match.ordinalNumber(string, {
                        unit: 'day'
                    });
                // Tue
                case 'iii':
                    return match.day(string, {
                        width: 'abbreviated',
                        context: 'formatting',
                        valueCallback: valueCallback
                    }) || match.day(string, {
                        width: 'short',
                        context: 'formatting',
                        valueCallback: valueCallback
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting',
                        valueCallback: valueCallback
                    });
                // T
                case 'iiiii':
                    return match.day(string, {
                        width: 'narrow',
                        context: 'formatting',
                        valueCallback: valueCallback
                    });
                // Tu
                case 'iiiiii':
                    return match.day(string, {
                        width: 'short',
                        context: 'formatting',
                        valueCallback: valueCallback
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting',
                        valueCallback: valueCallback
                    });
                // Tuesday
                case 'iiii':
                default:
                    return match.day(string, {
                        width: 'wide',
                        context: 'formatting',
                        valueCallback: valueCallback
                    }) || match.day(string, {
                        width: 'abbreviated',
                        context: 'formatting',
                        valueCallback: valueCallback
                    }) || match.day(string, {
                        width: 'short',
                        context: 'formatting',
                        valueCallback: valueCallback
                    }) || match.day(string, {
                        width: 'narrow',
                        context: 'formatting',
                        valueCallback: valueCallback
                    });
            }
        },
        validate: function(_date, value, _options) {
            return value >= 1 && value <= 7;
        },
        set: function(date, _flags, value, options) {
            date = _indexJsDefault2.default(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'y',
            'Y',
            'u',
            'q',
            'Q',
            'M',
            'L',
            'w',
            'd',
            'D',
            'E',
            'e',
            'c',
            't',
            'T'
        ]
    },
    // AM or PM
    a: {
        priority: 80,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'a':
                case 'aa':
                case 'aaa':
                    return match.dayPeriod(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                case 'aaaaa':
                    return match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                case 'aaaa':
                default:
                    return match.dayPeriod(string, {
                        width: 'wide',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
            }
        },
        set: function(date, _flags, value, _options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'b',
            'B',
            'H',
            'K',
            'k',
            't',
            'T'
        ]
    },
    // AM, PM, midnight
    b: {
        priority: 80,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'b':
                case 'bb':
                case 'bbb':
                    return match.dayPeriod(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                case 'bbbbb':
                    return match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                case 'bbbb':
                default:
                    return match.dayPeriod(string, {
                        width: 'wide',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
            }
        },
        set: function(date, _flags, value, _options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'a',
            'B',
            'H',
            'K',
            'k',
            't',
            'T'
        ]
    },
    // in the morning, in the afternoon, in the evening, at night
    B: {
        priority: 80,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'B':
                case 'BB':
                case 'BBB':
                    return match.dayPeriod(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                case 'BBBBB':
                    return match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
                case 'BBBB':
                default:
                    return match.dayPeriod(string, {
                        width: 'wide',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'abbreviated',
                        context: 'formatting'
                    }) || match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                    });
            }
        },
        set: function(date, _flags, value, _options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'a',
            'b',
            't',
            'T'
        ]
    },
    // Hour [1-12]
    h: {
        priority: 70,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'h':
                    return parseNumericPattern(numericPatterns.hour12h, string);
                case 'ho':
                    return match.ordinalNumber(string, {
                        unit: 'hour'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 1 && value <= 12;
        },
        set: function(date, _flags, value, _options) {
            var isPM = date.getUTCHours() >= 12;
            if (isPM && value < 12) date.setUTCHours(value + 12, 0, 0, 0);
            else if (!isPM && value === 12) date.setUTCHours(0, 0, 0, 0);
            else date.setUTCHours(value, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'H',
            'K',
            'k',
            't',
            'T'
        ]
    },
    // Hour [0-23]
    H: {
        priority: 70,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'H':
                    return parseNumericPattern(numericPatterns.hour23h, string);
                case 'Ho':
                    return match.ordinalNumber(string, {
                        unit: 'hour'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 23;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCHours(value, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'a',
            'b',
            'h',
            'K',
            'k',
            't',
            'T'
        ]
    },
    // Hour [0-11]
    K: {
        priority: 70,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'K':
                    return parseNumericPattern(numericPatterns.hour11h, string);
                case 'Ko':
                    return match.ordinalNumber(string, {
                        unit: 'hour'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 11;
        },
        set: function(date, _flags, value, _options) {
            var isPM = date.getUTCHours() >= 12;
            if (isPM && value < 12) date.setUTCHours(value + 12, 0, 0, 0);
            else date.setUTCHours(value, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'a',
            'b',
            'h',
            'H',
            'k',
            't',
            'T'
        ]
    },
    // Hour [1-24]
    k: {
        priority: 70,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'k':
                    return parseNumericPattern(numericPatterns.hour24h, string);
                case 'ko':
                    return match.ordinalNumber(string, {
                        unit: 'hour'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 1 && value <= 24;
        },
        set: function(date, _flags, value, _options) {
            var hours = value <= 24 ? value % 24 : value;
            date.setUTCHours(hours, 0, 0, 0);
            return date;
        },
        incompatibleTokens: [
            'a',
            'b',
            'h',
            'H',
            'K',
            't',
            'T'
        ]
    },
    // Minute
    m: {
        priority: 60,
        parse: function(string, token, match, _options) {
            switch(token){
                case 'm':
                    return parseNumericPattern(numericPatterns.minute, string);
                case 'mo':
                    return match.ordinalNumber(string, {
                        unit: 'minute'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 59;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCMinutes(value, 0, 0);
            return date;
        },
        incompatibleTokens: [
            't',
            'T'
        ]
    },
    // Second
    s: {
        priority: 50,
        parse: function(string, token, match, _options) {
            switch(token){
                case 's':
                    return parseNumericPattern(numericPatterns.second, string);
                case 'so':
                    return match.ordinalNumber(string, {
                        unit: 'second'
                    });
                default:
                    return parseNDigits(token.length, string);
            }
        },
        validate: function(_date, value, _options) {
            return value >= 0 && value <= 59;
        },
        set: function(date, _flags, value, _options) {
            date.setUTCSeconds(value, 0);
            return date;
        },
        incompatibleTokens: [
            't',
            'T'
        ]
    },
    // Fraction of second
    S: {
        priority: 30,
        parse: function(string, token, _match, _options) {
            var valueCallback = function(value) {
                return Math.floor(value * Math.pow(10, -token.length + 3));
            };
            return parseNDigits(token.length, string, valueCallback);
        },
        set: function(date, _flags, value, _options) {
            date.setUTCMilliseconds(value);
            return date;
        },
        incompatibleTokens: [
            't',
            'T'
        ]
    },
    // Timezone (ISO-8601. +00:00 is `'Z'`)
    X: {
        priority: 10,
        parse: function(string, token, _match, _options) {
            switch(token){
                case 'X':
                    return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
                case 'XX':
                    return parseTimezonePattern(timezonePatterns.basic, string);
                case 'XXXX':
                    return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
                case 'XXXXX':
                    return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
                case 'XXX':
                default:
                    return parseTimezonePattern(timezonePatterns.extended, string);
            }
        },
        set: function(date, flags, value, _options) {
            if (flags.timestampIsSet) return date;
            return new Date(date.getTime() - value);
        },
        incompatibleTokens: [
            't',
            'T',
            'x'
        ]
    },
    // Timezone (ISO-8601)
    x: {
        priority: 10,
        parse: function(string, token, _match, _options) {
            switch(token){
                case 'x':
                    return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
                case 'xx':
                    return parseTimezonePattern(timezonePatterns.basic, string);
                case 'xxxx':
                    return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
                case 'xxxxx':
                    return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
                case 'xxx':
                default:
                    return parseTimezonePattern(timezonePatterns.extended, string);
            }
        },
        set: function(date, flags, value, _options) {
            if (flags.timestampIsSet) return date;
            return new Date(date.getTime() - value);
        },
        incompatibleTokens: [
            't',
            'T',
            'X'
        ]
    },
    // Seconds timestamp
    t: {
        priority: 40,
        parse: function(string, _token, _match, _options) {
            return parseAnyDigitsSigned(string);
        },
        set: function(_date, _flags, value, _options) {
            return [
                new Date(value * 1000),
                {
                    timestampIsSet: true
                }
            ];
        },
        incompatibleTokens: '*'
    },
    // Milliseconds timestamp
    T: {
        priority: 20,
        parse: function(string, _token, _match, _options) {
            return parseAnyDigitsSigned(string);
        },
        set: function(_date, _flags, value, _options) {
            return [
                new Date(value),
                {
                    timestampIsSet: true
                }
            ];
        },
        incompatibleTokens: '*'
    }
};
exports.default = parsers;

},{"../../../_lib/getUTCWeekYear/index.js":"1R0wr","../../../_lib/setUTCDay/index.js":"dG9lR","../../../_lib/setUTCISODay/index.js":"dTLBz","../../../_lib/setUTCISOWeek/index.js":"8V4r8","../../../_lib/setUTCWeek/index.js":"iQM5b","../../../_lib/startOfUTCISOWeek/index.js":"2WtN1","../../../_lib/startOfUTCWeek/index.js":"7n4PT","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dG9lR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
    _indexJsDefault2.default(2, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    var date = _indexJsDefault1.default(dirtyDate);
    var day = _indexJsDefault.default(dirtyDay);
    var currentDay = date.getUTCDay();
    var remainder = day % 7;
    var dayIndex = (remainder + 7) % 7;
    var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
    date.setUTCDate(date.getUTCDate() + diff);
    return date;
}
exports.default = setUTCDay;

},{"../toInteger/index.js":"95G4A","../../toDate/index.js":"6pFrg","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dTLBz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setUTCISODay(dirtyDate, dirtyDay) {
    _indexJsDefault2.default(2, arguments);
    var day = _indexJsDefault.default(dirtyDay);
    if (day % 7 === 0) day = day - 7;
    var weekStartsOn = 1;
    var date = _indexJsDefault1.default(dirtyDate);
    var currentDay = date.getUTCDay();
    var remainder = day % 7;
    var dayIndex = (remainder + 7) % 7;
    var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
    date.setUTCDate(date.getUTCDate() + diff);
    return date;
}
exports.default = setUTCISODay;

},{"../toInteger/index.js":"95G4A","../../toDate/index.js":"6pFrg","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8V4r8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../getUTCISOWeek/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
    _indexJsDefault3.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var isoWeek = _indexJsDefault.default(dirtyISOWeek);
    var diff = _indexJsDefault2.default(date) - isoWeek;
    date.setUTCDate(date.getUTCDate() - diff * 7);
    return date;
}
exports.default = setUTCISOWeek;

},{"../toInteger/index.js":"95G4A","../../toDate/index.js":"6pFrg","../getUTCISOWeek/index.js":"fUcpE","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"iQM5b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../getUTCWeek/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function setUTCWeek(dirtyDate, dirtyWeek, options) {
    _indexJsDefault3.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var week = _indexJsDefault.default(dirtyWeek);
    var diff = _indexJsDefault2.default(date, options) - week;
    date.setUTCDate(date.getUTCDate() - diff * 7);
    return date;
}
exports.default = setUTCWeek;

},{"../toInteger/index.js":"95G4A","../../toDate/index.js":"6pFrg","../getUTCWeek/index.js":"fhGkV","../requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"5YKyS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isMonday(date) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(date).getDay() === 1;
}
exports.default = isMonday;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hSmpF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isPast(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getTime() < Date.now();
}
exports.default = isPast;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8h96x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfHour/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameHour(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeftStartOfHour = _indexJsDefault.default(dirtyDateLeft);
    var dateRightStartOfHour = _indexJsDefault.default(dirtyDateRight);
    return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();
}
exports.default = isSameHour;

},{"../startOfHour/index.js":"5Zqli","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"5Zqli":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfHour(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setMinutes(0, 0, 0);
    return date;
}
exports.default = startOfHour;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"bteBn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    return _indexJsDefault.default(dirtyDateLeft, dirtyDateRight, {
        weekStartsOn: 1
    });
}
exports.default = isSameISOWeek;

},{"../isSameWeek/index.js":"hbjUp","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hbjUp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
    _indexJsDefault1.default(2, arguments);
    var dateLeftStartOfWeek = _indexJsDefault.default(dirtyDateLeft, dirtyOptions);
    var dateRightStartOfWeek = _indexJsDefault.default(dirtyDateRight, dirtyOptions);
    return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
}
exports.default = isSameWeek;

},{"../startOfWeek/index.js":"22WAP","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"e4VWe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfISOWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeftStartOfYear = _indexJsDefault.default(dirtyDateLeft);
    var dateRightStartOfYear = _indexJsDefault.default(dirtyDateRight);
    return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();
}
exports.default = isSameISOWeekYear;

},{"../startOfISOWeekYear/index.js":"cO5R6","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"au3RT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfMinute/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameMinute(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeftStartOfMinute = _indexJsDefault.default(dirtyDateLeft);
    var dateRightStartOfMinute = _indexJsDefault.default(dirtyDateRight);
    return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();
}
exports.default = isSameMinute;

},{"../startOfMinute/index.js":"lnBQj","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dlChX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}
exports.default = isSameMonth;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"2Iqrs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfQuarter/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeftStartOfQuarter = _indexJsDefault.default(dirtyDateLeft);
    var dateRightStartOfQuarter = _indexJsDefault.default(dirtyDateRight);
    return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
}
exports.default = isSameQuarter;

},{"../startOfQuarter/index.js":"gh7uQ","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"jE8AH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfSecond/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameSecond(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeftStartOfSecond = _indexJsDefault.default(dirtyDateLeft);
    var dateRightStartOfSecond = _indexJsDefault.default(dirtyDateRight);
    return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
}
exports.default = isSameSecond;

},{"../startOfSecond/index.js":"aR12L","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aR12L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfSecond(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    date.setMilliseconds(0);
    return date;
}
exports.default = startOfSecond;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4dpOs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isSameYear(dirtyDateLeft, dirtyDateRight) {
    _indexJsDefault1.default(2, arguments);
    var dateLeft = _indexJsDefault.default(dirtyDateLeft);
    var dateRight = _indexJsDefault.default(dirtyDateRight);
    return dateLeft.getFullYear() === dateRight.getFullYear();
}
exports.default = isSameYear;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6TbDk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameHour/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisHour(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(Date.now(), dirtyDate);
}
exports.default = isThisHour;

},{"../isSameHour/index.js":"8h96x","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"iFqPW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameISOWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisISOWeek(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, Date.now());
}
exports.default = isThisISOWeek;

},{"../isSameISOWeek/index.js":"bteBn","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gW9pS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameMinute/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisMinute(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(Date.now(), dirtyDate);
}
exports.default = isThisMinute;

},{"../isSameMinute/index.js":"au3RT","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kdT4c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameMonth/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisMonth(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(Date.now(), dirtyDate);
}
exports.default = isThisMonth;

},{"../isSameMonth/index.js":"dlChX","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kasnU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameQuarter/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisQuarter(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(Date.now(), dirtyDate);
}
exports.default = isThisQuarter;

},{"../isSameQuarter/index.js":"2Iqrs","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eaf2e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameSecond/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisSecond(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(Date.now(), dirtyDate);
}
exports.default = isThisSecond;

},{"../isSameSecond/index.js":"jE8AH","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"7GJhr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisWeek(dirtyDate, options) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, Date.now(), options);
}
exports.default = isThisWeek;

},{"../isSameWeek/index.js":"hbjUp","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3rd3N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThisYear(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, Date.now());
}
exports.default = isThisYear;

},{"../isSameYear/index.js":"4dpOs","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"jPEMV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isThursday(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getDay() === 4;
}
exports.default = isThursday;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eu4X2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameDay/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isToday(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, Date.now());
}
exports.default = isToday;

},{"../isSameDay/index.js":"kCT4K","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"j68jX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../isSameDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function isTomorrow(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    return _indexJsDefault1.default(dirtyDate, _indexJsDefault.default(Date.now(), 1));
}
exports.default = isTomorrow;

},{"../addDays/index.js":"hYhFb","../isSameDay/index.js":"kCT4K","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lzD50":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isTuesday(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getDay() === 2;
}
exports.default = isTuesday;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eVkK8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isWednesday(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate).getDay() === 3;
}
exports.default = isWednesday;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gyFHB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function isWithinInterval(dirtyDate, interval) {
    _indexJsDefault1.default(2, arguments);
    var time = _indexJsDefault.default(dirtyDate).getTime();
    var startTime = _indexJsDefault.default(interval.start).getTime();
    var endTime = _indexJsDefault.default(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`
    if (!(startTime <= endTime)) throw new RangeError('Invalid interval');
    return time >= startTime && time <= endTime;
}
exports.default = isWithinInterval;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"Mwqlc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../isSameDay/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../subDays/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function isYesterday(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, _indexJsDefault1.default(Date.now(), 1));
}
exports.default = isYesterday;

},{"../isSameDay/index.js":"kCT4K","../subDays/index.js":"f8ciJ","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1lVZX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function lastDayOfDecade(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    var decade = 9 + Math.floor(year / 10) * 10;
    date.setFullYear(decade + 1, 0, 0);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = lastDayOfDecade;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fT8Br":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../lastDayOfWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function lastDayOfISOWeek(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    return _indexJsDefault.default(dirtyDate, {
        weekStartsOn: 1
    });
}
exports.default = lastDayOfISOWeek;

},{"../lastDayOfWeek/index.js":"63OVg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"63OVg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/toInteger/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function lastDayOfWeek(dirtyDate, dirtyOptions) {
    _indexJsDefault2.default(1, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault1.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault1.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6');
    var date = _indexJsDefault.default(dirtyDate);
    var day = date.getDay();
    var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
    date.setHours(0, 0, 0, 0);
    date.setDate(date.getDate() + diff);
    return date;
}
exports.default = lastDayOfWeek;

},{"../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aZLEu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getISOWeekYear/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfISOWeek/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function lastDayOfISOWeekYear(dirtyDate) {
    _indexJsDefault2.default(1, arguments);
    var year = _indexJsDefault.default(dirtyDate);
    var fourthOfJanuary = new Date(0);
    fourthOfJanuary.setFullYear(year + 1, 0, 4);
    fourthOfJanuary.setHours(0, 0, 0, 0);
    var date = _indexJsDefault1.default(fourthOfJanuary);
    date.setDate(date.getDate() - 1);
    return date;
}
exports.default = lastDayOfISOWeekYear;

},{"../getISOWeekYear/index.js":"cKtSf","../startOfISOWeek/index.js":"hgsCz","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"9fUc6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function lastDayOfQuarter(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var currentMonth = date.getMonth();
    var month = currentMonth - currentMonth % 3 + 3;
    date.setMonth(month, 0);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = lastDayOfQuarter;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"boaxx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function lastDayOfYear(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    date.setFullYear(year + 1, 0, 0);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = lastDayOfYear;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aXu7E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/format/lightFormatters/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/getTimezoneOffsetInMilliseconds/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../isValid/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../subMilliseconds/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
var _indexJs5 = require("../_lib/requiredArgs/index.js"); // This RegExp consists of three parts separated by `|`:
var _indexJsDefault5 = parcelHelpers.interopDefault(_indexJs5);
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function lightFormat(dirtyDate, formatStr) {
    _indexJsDefault5.default(2, arguments);
    var originalDate = _indexJsDefault.default(dirtyDate);
    if (!_indexJsDefault3.default(originalDate)) throw new RangeError('Invalid time value');
     // Convert the date in system timezone to the same date in UTC+00:00 timezone.
    // This ensures that when UTC functions will be implemented, locales will be compatible with them.
    // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
    var timezoneOffset = _indexJsDefault2.default(originalDate);
    var utcDate = _indexJsDefault4.default(originalDate, timezoneOffset);
    var tokens = formatStr.match(formattingTokensRegExp); // The only case when formattingTokensRegExp doesn't match the string is when it's empty
    if (!tokens) return '';
    var result = tokens.map(function(substring) {
        // Replace two single quote characters with one single quote character
        if (substring === "''") return "'";
        var firstCharacter = substring[0];
        if (firstCharacter === "'") return cleanEscapedString(substring);
        var formatter = _indexJsDefault1.default[firstCharacter];
        if (formatter) return formatter(utcDate, substring);
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        return substring;
    }).join('');
    return result;
}
exports.default = lightFormat;
function cleanEscapedString(input) {
    var matches = input.match(escapedStringRegExp);
    if (!matches) return input;
    return matches[1].replace(doubleQuoteRegExp, "'");
}

},{"../toDate/index.js":"6pFrg","../_lib/format/lightFormatters/index.js":"hgyzo","../_lib/getTimezoneOffsetInMilliseconds/index.js":"fb6ke","../isValid/index.js":"1nJMs","../subMilliseconds/index.js":"aMoYy","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"hze4k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
// Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
// 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
var daysInYear = 365.2425;
function milliseconds(_ref) {
    var years = _ref.years, months = _ref.months, weeks = _ref.weeks, days = _ref.days, hours = _ref.hours, minutes = _ref.minutes, seconds = _ref.seconds;
    _indexJsDefault.default(1, arguments);
    var totalDays = 0;
    if (years) totalDays += years * daysInYear;
    if (months) totalDays += months * (daysInYear / 12);
    if (weeks) totalDays += weeks * 7;
    if (days) totalDays += days;
    var totalSeconds = totalDays * 86400;
    if (hours) totalSeconds += hours * 3600;
    if (minutes) totalSeconds += minutes * 60;
    if (seconds) totalSeconds += seconds;
    return Math.round(totalSeconds * 1000);
}
exports.default = milliseconds;

},{"../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dnwqF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function millisecondsToHours(milliseconds) {
    _indexJsDefault.default(1, arguments);
    var hours = milliseconds / _indexJs1.millisecondsInHour;
    return Math.floor(hours);
}
exports.default = millisecondsToHours;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lEmbU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function millisecondsToMinutes(milliseconds) {
    _indexJsDefault.default(1, arguments);
    var minutes = milliseconds / _indexJs1.millisecondsInMinute;
    return Math.floor(minutes);
}
exports.default = millisecondsToMinutes;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kOWV2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function millisecondsToSeconds(milliseconds) {
    _indexJsDefault.default(1, arguments);
    var seconds = milliseconds / _indexJs1.millisecondsInSecond;
    return Math.floor(seconds);
}
exports.default = millisecondsToSeconds;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"89lIW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function minutesToHours(minutes) {
    _indexJsDefault.default(1, arguments);
    var hours = minutes / _indexJs1.minutesInHour;
    return Math.floor(hours);
}
exports.default = minutesToHours;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"c4Huw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function minutesToMilliseconds(minutes) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(minutes * _indexJs1.millisecondsInMinute);
}
exports.default = minutesToMilliseconds;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"kVXTI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function minutesToSeconds(minutes) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(minutes * _indexJs1.secondsInMinute);
}
exports.default = minutesToSeconds;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"iLRoa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function monthsToQuarters(months) {
    _indexJsDefault.default(1, arguments);
    var quarters = months / _indexJs1.monthsInQuarter;
    return Math.floor(quarters);
}
exports.default = monthsToQuarters;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1V3bZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function monthsToYears(months) {
    _indexJsDefault.default(1, arguments);
    var years = months / _indexJs1.monthsInYear;
    return Math.floor(years);
}
exports.default = monthsToYears;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"60uxZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../getDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextDay(date, day) {
    _indexJsDefault2.default(2, arguments);
    var delta = day - _indexJsDefault1.default(date);
    if (delta <= 0) delta += 7;
    return _indexJsDefault.default(date, delta);
}
exports.default = nextDay;

},{"../addDays/index.js":"hYhFb","../getDay/index.js":"b3QZJ","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"k54ZN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../nextDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextFriday(date) {
    _indexJsDefault.default(1, arguments);
    return _indexJsDefault1.default(_indexJsDefault2.default(date), 5);
}
exports.default = nextFriday;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../nextDay/index.js":"60uxZ","../toDate/index.js":"6pFrg","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"PJre5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../nextDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextMonday(date) {
    _indexJsDefault.default(1, arguments);
    return _indexJsDefault1.default(_indexJsDefault2.default(date), 1);
}
exports.default = nextMonday;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../nextDay/index.js":"60uxZ","../toDate/index.js":"6pFrg","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6bvc9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../nextDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextSaturday(date) {
    _indexJsDefault.default(1, arguments);
    return _indexJsDefault1.default(_indexJsDefault2.default(date), 6);
}
exports.default = nextSaturday;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../nextDay/index.js":"60uxZ","../toDate/index.js":"6pFrg","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"l7jyt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../nextDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextSunday(date) {
    _indexJsDefault.default(1, arguments);
    return _indexJsDefault1.default(_indexJsDefault2.default(date), 0);
}
exports.default = nextSunday;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../nextDay/index.js":"60uxZ","../toDate/index.js":"6pFrg","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1vhfV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../nextDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextThursday(date) {
    _indexJsDefault.default(1, arguments);
    return _indexJsDefault1.default(_indexJsDefault2.default(date), 4);
}
exports.default = nextThursday;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../nextDay/index.js":"60uxZ","../toDate/index.js":"6pFrg","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gCnsN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../nextDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextTuesday(date) {
    _indexJsDefault.default(1, arguments);
    return _indexJsDefault1.default(_indexJsDefault2.default(date), 2);
}
exports.default = nextTuesday;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../nextDay/index.js":"60uxZ","../toDate/index.js":"6pFrg","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"lDr34":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../nextDay/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function nextWednesday(date) {
    _indexJsDefault.default(1, arguments);
    return _indexJsDefault1.default(_indexJsDefault2.default(date), 3);
}
exports.default = nextWednesday;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../nextDay/index.js":"60uxZ","../toDate/index.js":"6pFrg","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4axSD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var MILLISECONDS_IN_HOUR = 3600000;
var MILLISECONDS_IN_MINUTE = 60000;
var DEFAULT_ADDITIONAL_DIGITS = 2;
var patterns = {
    dateTimeDelimiter: /[T ]/,
    timeZoneDelimiter: /[Z ]/i,
    timezone: /([Z+-].*)$/
};
var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function parseISO(argument, dirtyOptions) {
    _indexJsDefault1.default(1, arguments);
    var options = dirtyOptions || {
    };
    var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : _indexJsDefault.default(options.additionalDigits);
    if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) throw new RangeError('additionalDigits must be 0, 1 or 2');
    if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) return new Date(NaN);
    var dateStrings = splitDateString(argument);
    var date;
    if (dateStrings.date) {
        var parseYearResult = parseYear(dateStrings.date, additionalDigits);
        date = parseDate(parseYearResult.restDateString, parseYearResult.year);
    }
    if (isNaN(date) || !date) return new Date(NaN);
    var timestamp = date.getTime();
    var time = 0;
    var offset;
    if (dateStrings.time) {
        time = parseTime(dateStrings.time);
        if (isNaN(time) || time === null) return new Date(NaN);
    }
    if (dateStrings.timezone) {
        offset = parseTimezone(dateStrings.timezone);
        if (isNaN(offset)) return new Date(NaN);
    } else {
        var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone
        // but we need it to be parsed in our timezone
        // so we use utc values to build date in our timezone.
        // Year values from 0 to 99 map to the years 1900 to 1999
        // so set year explicitly with setFullYear.
        var result = new Date(0);
        result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
        result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
        return result;
    }
    return new Date(timestamp + time + offset);
}
exports.default = parseISO;
function splitDateString(dateString) {
    var dateStrings = {
    };
    var array = dateString.split(patterns.dateTimeDelimiter);
    var timeString; // The regex match should only return at maximum two array elements.
    // [date], [time], or [date, time].
    if (array.length > 2) return dateStrings;
    if (/:/.test(array[0])) {
        dateStrings.date = null;
        timeString = array[0];
    } else {
        dateStrings.date = array[0];
        timeString = array[1];
        if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
            dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
            timeString = dateString.substr(dateStrings.date.length, dateString.length);
        }
    }
    if (timeString) {
        var token = patterns.timezone.exec(timeString);
        if (token) {
            dateStrings.time = timeString.replace(token[1], '');
            dateStrings.timezone = token[1];
        } else dateStrings.time = timeString;
    }
    return dateStrings;
}
function parseYear(dateString, additionalDigits) {
    var regex = new RegExp('^(?:(\\d{4}|[+-]\\d{' + (4 + additionalDigits) + '})|(\\d{2}|[+-]\\d{' + (2 + additionalDigits) + '})$)');
    var captures = dateString.match(regex); // Invalid ISO-formatted year
    if (!captures) return {
        year: null
    };
    var year = captures[1] && parseInt(captures[1]);
    var century = captures[2] && parseInt(captures[2]);
    return {
        year: century == null ? year : century * 100,
        restDateString: dateString.slice((captures[1] || captures[2]).length)
    };
}
function parseDate(dateString, year) {
    // Invalid ISO-formatted year
    if (year === null) return null;
    var captures = dateString.match(dateRegex); // Invalid ISO-formatted string
    if (!captures) return null;
    var isWeekDate = !!captures[4];
    var dayOfYear = parseDateUnit(captures[1]);
    var month = parseDateUnit(captures[2]) - 1;
    var day = parseDateUnit(captures[3]);
    var week = parseDateUnit(captures[4]);
    var dayOfWeek = parseDateUnit(captures[5]) - 1;
    if (isWeekDate) {
        if (!validateWeekDate(year, week, dayOfWeek)) return new Date(NaN);
        return dayOfISOWeekYear(year, week, dayOfWeek);
    } else {
        var date = new Date(0);
        if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) return new Date(NaN);
        date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
        return date;
    }
}
function parseDateUnit(value) {
    return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
    var captures = timeString.match(timeRegex);
    if (!captures) return null; // Invalid ISO-formatted time
    var hours = parseTimeUnit(captures[1]);
    var minutes = parseTimeUnit(captures[2]);
    var seconds = parseTimeUnit(captures[3]);
    if (!validateTime(hours, minutes, seconds)) return NaN;
    return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;
}
function parseTimeUnit(value) {
    return value && parseFloat(value.replace(',', '.')) || 0;
}
function parseTimezone(timezoneString) {
    if (timezoneString === 'Z') return 0;
    var captures = timezoneString.match(timezoneRegex);
    if (!captures) return 0;
    var sign = captures[1] === '+' ? -1 : 1;
    var hours = parseInt(captures[2]);
    var minutes = captures[3] && parseInt(captures[3]) || 0;
    if (!validateTimezone(hours, minutes)) return NaN;
    return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
    var date = new Date(0);
    date.setUTCFullYear(isoWeekYear, 0, 4);
    var fourthOfJanuaryDay = date.getUTCDay() || 7;
    var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
    date.setUTCDate(date.getUTCDate() + diff);
    return date;
} // Validation functions
// February is null to handle the leap year (using ||)
var daysInMonths = [
    31,
    null,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
];
function isLeapYearIndex(year) {
    return year % 400 === 0 || year % 4 === 0 && year % 100;
}
function validateDate(year, month, date) {
    return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
    return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
    return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
    if (hours === 24) return minutes === 0 && seconds === 0;
    return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
    return minutes >= 0 && minutes <= 59;
}

},{"../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"8Rcbd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function parseJSON(argument) {
    _indexJsDefault1.default(1, arguments);
    if (typeof argument === 'string') {
        var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/);
        if (parts) // Group 8 matches the sign
        return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4] - (+parts[9] || 0) * (parts[8] == '-' ? -1 : 1), +parts[5] - (+parts[10] || 0) * (parts[8] == '-' ? -1 : 1), +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));
        return new Date(NaN);
    }
    return _indexJsDefault.default(argument);
}
exports.default = parseJSON;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"j1LUl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function quartersToMonths(quarters) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(quarters * _indexJs1.monthsInQuarter);
}
exports.default = quartersToMonths;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"ax1Ba":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function quartersToYears(quarters) {
    _indexJsDefault.default(1, arguments);
    var years = quarters / _indexJs1.quartersInYear;
    return Math.floor(years);
}
exports.default = quartersToYears;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"31JeA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/toInteger/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function roundToNearestMinutes(dirtyDate, options) {
    if (arguments.length < 1) throw new TypeError('1 argument required, but only none provided present');
    var nearestTo = options && 'nearestTo' in options ? _indexJsDefault1.default(options.nearestTo) : 1;
    if (nearestTo < 1 || nearestTo > 30) throw new RangeError('`options.nearestTo` must be between 1 and 30');
    var date = _indexJsDefault.default(dirtyDate);
    var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case
    var minutes = date.getMinutes() + seconds / 60;
    var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;
    var remainderMinutes = minutes % nearestTo;
    var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;
    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);
}
exports.default = roundToNearestMinutes;

},{"../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dSoNc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function secondsToHours(seconds) {
    _indexJsDefault.default(1, arguments);
    var hours = seconds / _indexJs1.secondsInHour;
    return Math.floor(hours);
}
exports.default = secondsToHours;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"iW05q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function secondsToMilliseconds(seconds) {
    _indexJsDefault.default(1, arguments);
    return seconds * _indexJs1.millisecondsInSecond;
}
exports.default = secondsToMilliseconds;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"cFVK2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function secondsToMinutes(seconds) {
    _indexJsDefault.default(1, arguments);
    var minutes = seconds / _indexJs1.secondsInMinute;
    return Math.floor(minutes);
}
exports.default = secondsToMinutes;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"klQdh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../setMonth/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/toInteger/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function set(dirtyDate, values) {
    _indexJsDefault3.default(2, arguments);
    if (typeof values !== 'object' || values === null) throw new RangeError('values parameter must be an object');
    var date = _indexJsDefault.default(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
    if (isNaN(date.getTime())) return new Date(NaN);
    if (values.year != null) date.setFullYear(values.year);
    if (values.month != null) date = _indexJsDefault1.default(date, values.month);
    if (values.date != null) date.setDate(_indexJsDefault2.default(values.date));
    if (values.hours != null) date.setHours(_indexJsDefault2.default(values.hours));
    if (values.minutes != null) date.setMinutes(_indexJsDefault2.default(values.minutes));
    if (values.seconds != null) date.setSeconds(_indexJsDefault2.default(values.seconds));
    if (values.milliseconds != null) date.setMilliseconds(_indexJsDefault2.default(values.milliseconds));
    return date;
}
exports.default = set;

},{"../toDate/index.js":"6pFrg","../setMonth/index.js":"cBgCL","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"cBgCL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../getDaysInMonth/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function setMonth(dirtyDate, dirtyMonth) {
    _indexJsDefault3.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var month = _indexJsDefault.default(dirtyMonth);
    var year = date.getFullYear();
    var day = date.getDate();
    var dateWithDesiredMonth = new Date(0);
    dateWithDesiredMonth.setFullYear(year, month, 15);
    dateWithDesiredMonth.setHours(0, 0, 0, 0);
    var daysInMonth = _indexJsDefault2.default(dateWithDesiredMonth); // Set the last day of the new month
    // if the original date was the last day of the longer month
    date.setMonth(month, Math.min(day, daysInMonth));
    return date;
}
exports.default = setMonth;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../getDaysInMonth/index.js":"6NFs2","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gwxNy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setDate(dirtyDate, dirtyDayOfMonth) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var dayOfMonth = _indexJsDefault.default(dirtyDayOfMonth);
    date.setDate(dayOfMonth);
    return date;
}
exports.default = setDate;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"k5vtD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../addDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/toInteger/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function setDay(dirtyDate, dirtyDay, dirtyOptions) {
    _indexJsDefault3.default(2, arguments);
    var options = dirtyOptions || {
    };
    var locale = options.locale;
    var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _indexJsDefault2.default(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _indexJsDefault2.default(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
    var date = _indexJsDefault1.default(dirtyDate);
    var day = _indexJsDefault2.default(dirtyDay);
    var currentDay = date.getDay();
    var remainder = day % 7;
    var dayIndex = (remainder + 7) % 7;
    var delta = 7 - weekStartsOn;
    var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
    return _indexJsDefault.default(date, diff);
}
exports.default = setDay;

},{"../addDays/index.js":"hYhFb","../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"ddctF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setDayOfYear(dirtyDate, dirtyDayOfYear) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var dayOfYear = _indexJsDefault.default(dirtyDayOfYear);
    date.setMonth(0);
    date.setDate(dayOfYear);
    return date;
}
exports.default = setDayOfYear;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"49P9v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setHours(dirtyDate, dirtyHours) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var hours = _indexJsDefault.default(dirtyHours);
    date.setHours(hours);
    return date;
}
exports.default = setHours;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"4xPKF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../addDays/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../getISODay/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function setISODay(dirtyDate, dirtyDay) {
    _indexJsDefault4.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var day = _indexJsDefault.default(dirtyDay);
    var currentDay = _indexJsDefault3.default(date);
    var diff = day - currentDay;
    return _indexJsDefault2.default(date, diff);
}
exports.default = setISODay;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../addDays/index.js":"hYhFb","../getISODay/index.js":"9SPFw","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"41OO1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../getISOWeek/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function setISOWeek(dirtyDate, dirtyISOWeek) {
    _indexJsDefault3.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var isoWeek = _indexJsDefault.default(dirtyISOWeek);
    var diff = _indexJsDefault2.default(date) - isoWeek;
    date.setDate(date.getDate() - diff * 7);
    return date;
}
exports.default = setISOWeek;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../getISOWeek/index.js":"gjktN","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3R8nw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setMilliseconds(dirtyDate, dirtyMilliseconds) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var milliseconds = _indexJsDefault.default(dirtyMilliseconds);
    date.setMilliseconds(milliseconds);
    return date;
}
exports.default = setMilliseconds;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"223QP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setMinutes(dirtyDate, dirtyMinutes) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var minutes = _indexJsDefault.default(dirtyMinutes);
    date.setMinutes(minutes);
    return date;
}
exports.default = setMinutes;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"a1p6c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../setMonth/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function setQuarter(dirtyDate, dirtyQuarter) {
    _indexJsDefault3.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var quarter = _indexJsDefault.default(dirtyQuarter);
    var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
    var diff = quarter - oldQuarter;
    return _indexJsDefault2.default(date, date.getMonth() + diff * 3);
}
exports.default = setQuarter;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../setMonth/index.js":"cBgCL","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"b3oxB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setSeconds(dirtyDate, dirtySeconds) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var seconds = _indexJsDefault.default(dirtySeconds);
    date.setSeconds(seconds);
    return date;
}
exports.default = setSeconds;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6WYhG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../getWeek/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/toInteger/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
function setWeek(dirtyDate, dirtyWeek, options) {
    _indexJsDefault3.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var week = _indexJsDefault2.default(dirtyWeek);
    var diff = _indexJsDefault.default(date, options) - week;
    date.setDate(date.getDate() - diff * 7);
    return date;
}
exports.default = setWeek;

},{"../getWeek/index.js":"c8Jm6","../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"htYry":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../differenceInCalendarDays/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../startOfWeekYear/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../toDate/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
var _indexJs3 = require("../_lib/toInteger/index.js");
var _indexJsDefault3 = parcelHelpers.interopDefault(_indexJs3);
var _indexJs4 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault4 = parcelHelpers.interopDefault(_indexJs4);
function setWeekYear(dirtyDate, dirtyWeekYear) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    };
    _indexJsDefault4.default(2, arguments);
    var locale = options.locale;
    var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : _indexJsDefault3.default(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : _indexJsDefault3.default(options.firstWeekContainsDate);
    var date = _indexJsDefault2.default(dirtyDate);
    var weekYear = _indexJsDefault3.default(dirtyWeekYear);
    var diff = _indexJsDefault.default(date, _indexJsDefault1.default(date, options));
    var firstWeek = new Date(0);
    firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
    firstWeek.setHours(0, 0, 0, 0);
    date = _indexJsDefault1.default(firstWeek, options);
    date.setDate(date.getDate() + diff);
    return date;
}
exports.default = setWeekYear;

},{"../differenceInCalendarDays/index.js":"dQlTa","../startOfWeekYear/index.js":"hjJu6","../toDate/index.js":"6pFrg","../_lib/toInteger/index.js":"95G4A","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"1PzRy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../toDate/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function setYear(dirtyDate, dirtyYear) {
    _indexJsDefault2.default(2, arguments);
    var date = _indexJsDefault1.default(dirtyDate);
    var year = _indexJsDefault.default(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
    if (isNaN(date.getTime())) return new Date(NaN);
    date.setFullYear(year);
    return date;
}
exports.default = setYear;

},{"../_lib/toInteger/index.js":"95G4A","../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"jFSm8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../toDate/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
function startOfDecade(dirtyDate) {
    _indexJsDefault1.default(1, arguments);
    var date = _indexJsDefault.default(dirtyDate);
    var year = date.getFullYear();
    var decade = Math.floor(year / 10) * 10;
    date.setFullYear(decade, 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfDecade;

},{"../toDate/index.js":"6pFrg","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"fAIkv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../startOfDay/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
function startOfToday() {
    return _indexJsDefault.default(Date.now());
}
exports.default = startOfToday;

},{"../startOfDay/index.js":"kw7ww","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"c0fTI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function startOfTomorrow() {
    var now = new Date();
    var year = now.getFullYear();
    var month = now.getMonth();
    var day = now.getDate();
    var date = new Date(0);
    date.setFullYear(year, month, day + 1);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfTomorrow;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"6pism":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function startOfYesterday() {
    var now = new Date();
    var year = now.getFullYear();
    var month = now.getMonth();
    var day = now.getDate();
    var date = new Date(0);
    date.setFullYear(year, month, day - 1);
    date.setHours(0, 0, 0, 0);
    return date;
}
exports.default = startOfYesterday;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"97I8c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addBusinessDays/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subBusinessDays(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subBusinessDays;

},{"../_lib/toInteger/index.js":"95G4A","../addBusinessDays/index.js":"btY85","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aH8HC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addHours/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subHours(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subHours;

},{"../_lib/toInteger/index.js":"95G4A","../addHours/index.js":"fyPHm","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"gy4Oe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addMinutes/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subMinutes(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subMinutes;

},{"../_lib/toInteger/index.js":"95G4A","../addMinutes/index.js":"gR7QC","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"aLnPr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addQuarters/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subQuarters(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subQuarters;

},{"../_lib/toInteger/index.js":"95G4A","../addQuarters/index.js":"3cz4b","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"jHno1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addSeconds/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subSeconds(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subSeconds;

},{"../_lib/toInteger/index.js":"95G4A","../addSeconds/index.js":"2Y27a","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"3gBj9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addWeeks/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subWeeks(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subWeeks;

},{"../_lib/toInteger/index.js":"95G4A","../addWeeks/index.js":"9mj9k","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"eDWKs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/toInteger/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../addYears/index.js");
var _indexJsDefault1 = parcelHelpers.interopDefault(_indexJs1);
var _indexJs2 = require("../_lib/requiredArgs/index.js");
var _indexJsDefault2 = parcelHelpers.interopDefault(_indexJs2);
function subYears(dirtyDate, dirtyAmount) {
    _indexJsDefault2.default(2, arguments);
    var amount = _indexJsDefault.default(dirtyAmount);
    return _indexJsDefault1.default(dirtyDate, -amount);
}
exports.default = subYears;

},{"../_lib/toInteger/index.js":"95G4A","../addYears/index.js":"4ZQ1O","../_lib/requiredArgs/index.js":"JNGPJ","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"ismIn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function weeksToDays(weeks) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(weeks * _indexJs1.daysInWeek);
}
exports.default = weeksToDays;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"imxWv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function yearsToMonths(years) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(years * _indexJs1.monthsInYear);
}
exports.default = yearsToMonths;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"ee2FL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexJs = require("../_lib/requiredArgs/index.js");
var _indexJsDefault = parcelHelpers.interopDefault(_indexJs);
var _indexJs1 = require("../constants/index.js");
function yearsToQuarters(years) {
    _indexJsDefault.default(1, arguments);
    return Math.floor(years * _indexJs1.quartersInYear);
}
exports.default = yearsToQuarters;

},{"../_lib/requiredArgs/index.js":"JNGPJ","../constants/index.js":"4ds6s","@parcel/transformer-js/src/esmodule-helpers.js":"JacNc"}],"dSg0O":[function(require,module,exports) {
"use strict";
/**
 * @module timeSelect.ts
 * @description генерирует разметку для селекторов времени
*/ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.timeSelectorBy15Min = exports.correctionSecondTimeAfterFirst = void 0;
var eachMinuteOfInterval_1 = __importDefault(require("date-fns/eachMinuteOfInterval"));
var sharedActions_1 = require("../shared/sharedActions");
var jquery_1 = __importDefault(require("jquery"));
var sharedData_1 = require("../shared/sharedData");
var date_fns_1 = require("date-fns");
var shared = __importStar(require("../shared/sharedData"));
function correctionSecondTimeAfterFirst(state) {
    var _a;
    var selectedTime = (_a = jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).val()) === null || _a === void 0 ? void 0 : _a.toString().split(':').map(function(it) {
        return parseInt(it, 10);
    });
    var firstDate = state.getFirstDateOfRange();
    if (!firstDate) return;
    var dt = new Date(firstDate);
    if (selectedTime && selectedTime[0]) dt === null || dt === void 0 || dt.setHours(selectedTime[0]);
    if (selectedTime && selectedTime[1]) dt === null || dt === void 0 || dt.setMinutes(selectedTime[1]);
    if (dt) state.filterCurrentCarForBookingBySelection(dt);
    var secondDate = state.getSecondDateOfRange();
    if (secondDate) {
        var arrayForGenerateHTML = state.getFreeTimeSlotsForReceiveAndReturnCar(secondDate);
        if (date_fns_1.isEqual(firstDate, secondDate)) for(var i = 0; i < arrayForGenerateHTML.length; ++i){
            var date = arrayForGenerateHTML[i];
            var hour = date.getHours();
            var min = date.getMinutes();
            if (hour > (dt === null || dt === void 0 ? void 0 : dt.getHours())) continue;
            else if (hour < dt.getHours()) {
                arrayForGenerateHTML[i] = sharedData_1.badDateEqualNull;
                continue;
            } else if (hour === dt.getHours()) {
                if (min <= dt.getMinutes()) {
                    arrayForGenerateHTML[i] = sharedData_1.badDateEqualNull;
                    continue;
                }
            }
        }
        timeSelectorBy15Min('return', shared.domElementId.selectReturnTimeId, arrayForGenerateHTML);
        jquery_1.default("#" + shared.domElementId.selectReturnTimeId).attr('disabled', null);
    }
}
exports.correctionSecondTimeAfterFirst = correctionSecondTimeAfterFirst;
function timeSelectorBy15Min(idModificator, domId, arrayForGenerateHTML) {
    var dateA = new Date(2021, 1, 1, 0, 0, 0);
    var dateB = new Date(2021, 1, 2, 0, 0, 0);
    var dateArr = eachMinuteOfInterval_1.default({
        start: dateA,
        end: dateB
    }, {
        step: 15
    });
    var shortTime = [];
    dateArr.forEach(function(dt) {
        shortTime.push(dt.toTimeString().slice(0, 5));
    });
    shortTime.splice(shortTime.length - 1); //убираем 00:00 в конце дня, так как это уже следующий день
    var resStr = '';
    var isDisabled = true;
    shortTime.forEach(function(str, inx) {
        date_fns_1.isEqual(arrayForGenerateHTML[inx], sharedData_1.badDateEqualNull) ? resStr += sharedActions_1.option(str, str.replace(':', '-') + "-" + idModificator, '', isDisabled) : resStr += sharedActions_1.option(str, str.replace(':', '-') + "-" + idModificator, '', false, '10:00');
    });
    jquery_1.default("#" + domId).html(resStr);
    return resStr;
}
exports.timeSelectorBy15Min = timeSelectorBy15Min;

},{"date-fns/eachMinuteOfInterval":"4Ootm","../shared/sharedActions":"htU3t","jquery":"igaHu","../shared/sharedData":"iUwdp","date-fns":"g3J3T"}],"6nTIY":[function(require,module,exports) {
var global = arguments[3];
!function(n, a) {
    "object" == typeof exports && "undefined" != typeof module ? a(exports) : "function" == typeof define && define.amd ? define([
        "exports"
    ], a) : a((n = "undefined" != typeof globalThis ? globalThis : n || self).window = n.window || {
    });
}(this, function(n) {
    "use strict";
    var a = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {
    };
    function i(n1, a1) {
        return n1(a1 = {
            exports: {
            }
        }, a1.exports), a1.exports;
    }
    var e = function(n1) {
        return n1 && n1.Math == Math && n1;
    }, u = e("object" == typeof globalThis && globalThis) || e("object" == typeof window && window) || e("object" == typeof self && self) || e("object" == typeof a && a) || Function("return this")(), o = function(n1) {
        try {
            return !!n1();
        } catch (n2) {
            return !0;
        }
    }, g = !o(function() {
        return 7 != Object.defineProperty({
        }, 1, {
            get: function() {
                return 7;
            }
        })[1];
    }), h = {
    }.propertyIsEnumerable, s = Object.getOwnPropertyDescriptor, y = {
        f: s && !h.call({
            1: 2
        }, 1) ? function(n1) {
            var a1 = s(this, n1);
            return !!a1 && a1.enumerable;
        } : h
    }, l = function(n1, a1) {
        return {
            enumerable: !(1 & n1),
            configurable: !(2 & n1),
            writable: !(4 & n1),
            value: a1
        };
    }, b = {
    }.toString, t = function(n1) {
        return b.call(n1).slice(8, -1);
    }, w = "".split, d = o(function() {
        return !Object("z").propertyIsEnumerable(0);
    }) ? function(n1) {
        return "String" == t(n1) ? w.call(n1, "") : Object(n1);
    } : Object, j = function(n1) {
        if (null == n1) throw TypeError("Can't call method on " + n1);
        return n1;
    }, p = function(n1) {
        return d(j(n1));
    }, r = function(n1) {
        return "object" == typeof n1 ? null !== n1 : "function" == typeof n1;
    }, Y = function(n1, a1) {
        if (!r(n1)) return n1;
        var i1, e1;
        if (a1 && "function" == typeof (i1 = n1.toString) && !r(e1 = i1.call(n1))) return e1;
        if ("function" == typeof (i1 = n1.valueOf) && !r(e1 = i1.call(n1))) return e1;
        if (!a1 && "function" == typeof (i1 = n1.toString) && !r(e1 = i1.call(n1))) return e1;
        throw TypeError("Can't convert object to primitive value");
    }, m = {
    }.hasOwnProperty, c = function(n1, a1) {
        return m.call(n1, a1);
    }, Z = u.document, L = r(Z) && r(Z.createElement), J = function(n1) {
        return L ? Z.createElement(n1) : {
        };
    }, S = !g && !o(function() {
        return 7 != Object.defineProperty(J("div"), "a", {
            get: function() {
                return 7;
            }
        }).a;
    }), C = Object.getOwnPropertyDescriptor, k = {
        f: g ? C : function(n1, a1) {
            if (n1 = p(n1), a1 = Y(a1, !0), S) try {
                return C(n1, a1);
            } catch (n2) {
            }
            if (c(n1, a1)) return l(!y.f.call(n1, a1), n1[a1]);
        }
    }, X = function(n1) {
        if (!r(n1)) throw TypeError(String(n1) + " is not an object");
        return n1;
    }, D = Object.defineProperty, H = {
        f: g ? D : function(n1, a1, i1) {
            if (X(n1), a1 = Y(a1, !0), X(i1), S) try {
                return D(n1, a1, i1);
            } catch (n2) {
            }
            if ("get" in i1 || "set" in i1) throw TypeError("Accessors not supported");
            return "value" in i1 && (n1[a1] = i1.value), n1;
        }
    }, T = g ? function(n1, a1, i1) {
        return H.f(n1, a1, l(1, i1));
    } : function(n1, a1, i1) {
        return n1[a1] = i1, n1;
    }, Q = function(n1, a1) {
        try {
            T(u, n1, a1);
        } catch (i1) {
            u[n1] = a1;
        }
        return a1;
    }, B = u["__core-js_shared__"] || Q("__core-js_shared__", {
    }), M = Function.toString;
    "function" != typeof B.inspectSource && (B.inspectSource = function(n1) {
        return M.call(n1);
    });
    var G, F, P, N = B.inspectSource, W = u.WeakMap, K = "function" == typeof W && /native code/.test(N(W)), f = i(function(n1) {
        (n1.exports = function(n2, a1) {
            return B[n2] || (B[n2] = (void 0) !== a1 ? a1 : {
            });
        })("versions", []).push({
            version: "3.6.5",
            mode: "global",
            copyright: "© 2020 Denis Pushkarev (zloirock.ru)"
        });
    }), x = 0, R = Math.random(), E = function(n1) {
        return "Symbol(" + String((void 0) === n1 ? "" : n1) + ")_" + ((++x) + R).toString(36);
    }, A = f("keys"), v = function(n1) {
        return A[n1] || (A[n1] = E(n1));
    }, z = {
    }, O = u.WeakMap;
    if (K) {
        var I = new O, U = I.get, q = I.has, _ = I.set;
        G = function(n1, a1) {
            return _.call(I, n1, a1), a1;
        }, F = function(n1) {
            return U.call(I, n1) || {
            };
        }, P = function(n1) {
            return q.call(I, n1);
        };
    } else {
        var V = v("state");
        z[V] = !0, G = function(n1, a1) {
            return T(n1, V, a1), a1;
        }, F = function(n1) {
            return c(n1, V) ? n1[V] : {
            };
        }, P = function(n1) {
            return c(n1, V);
        };
    }
    var $ = {
        set: G,
        get: F,
        has: P,
        enforce: function(n1) {
            return P(n1) ? F(n1) : G(n1, {
            });
        },
        getterFor: function(n1) {
            return function(a1) {
                var i1;
                if (!r(a1) || (i1 = F(a1)).type !== n1) throw TypeError("Incompatible receiver, " + n1 + " required");
                return i1;
            };
        }
    }, nn = i(function(n1) {
        var a1 = $.get, i1 = $.enforce, e1 = String(String).split("String");
        (n1.exports = function(n2, a2, o1, g1) {
            var h1 = !!g1 && !!g1.unsafe, s1 = !!g1 && !!g1.enumerable, y1 = !!g1 && !!g1.noTargetGet;
            "function" == typeof o1 && ("string" != typeof a2 || c(o1, "name") || T(o1, "name", a2), i1(o1).source = e1.join("string" == typeof a2 ? a2 : "")), n2 !== u ? (h1 ? !y1 && n2[a2] && (s1 = !0) : delete n2[a2], s1 ? n2[a2] = o1 : T(n2, a2, o1)) : s1 ? n2[a2] = o1 : Q(a2, o1);
        })(Function.prototype, "toString", function() {
            return "function" == typeof this && a1(this).source || N(this);
        });
    }), an = u, en = function(n1) {
        return "function" == typeof n1 ? n1 : void 0;
    }, un = function(n1, a1) {
        return arguments.length < 2 ? en(an[n1]) || en(u[n1]) : an[n1] && an[n1][a1] || u[n1] && u[n1][a1];
    }, on = Math.ceil, gn = Math.floor, hn = function(n1) {
        return isNaN(n1 = +n1) ? 0 : (n1 > 0 ? gn : on)(n1);
    }, sn = Math.min, yn = function(n1) {
        return n1 > 0 ? sn(hn(n1), 9007199254740991) : 0;
    }, ln = Math.max, bn = Math.min, tn = function(n1, a1) {
        var i1 = hn(n1);
        return i1 < 0 ? ln(i1 + a1, 0) : bn(i1, a1);
    }, wn = function(n1) {
        return function(a1, i1, e1) {
            var u1, o1 = p(a1), g1 = yn(o1.length), h1 = tn(e1, g1);
            if (n1 && i1 != i1) {
                for(; g1 > h1;)if ((u1 = o1[h1++]) != u1) return !0;
            } else for(; g1 > h1; h1++)if ((n1 || h1 in o1) && o1[h1] === i1) return n1 || h1 || 0;
            return !n1 && -1;
        };
    }, dn = {
        includes: wn(!0),
        indexOf: wn(!1)
    }, jn = dn.indexOf, pn = function(n1, a1) {
        var i1, e1 = p(n1), u1 = 0, o1 = [];
        for(i1 in e1)!c(z, i1) && c(e1, i1) && o1.push(i1);
        for(; a1.length > u1;)c(e1, i1 = a1[u1++]) && (~jn(o1, i1) || o1.push(i1));
        return o1;
    }, rn = [
        "constructor",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "toLocaleString",
        "toString",
        "valueOf"
    ], Yn = rn.concat("length", "prototype"), mn = {
        f: Object.getOwnPropertyNames || function(n1) {
            return pn(n1, Yn);
        }
    }, cn = {
        f: Object.getOwnPropertySymbols
    }, Zn = un("Reflect", "ownKeys") || function(n1) {
        var a1 = mn.f(X(n1)), i1 = cn.f;
        return i1 ? a1.concat(i1(n1)) : a1;
    }, Ln = function(n1, a1) {
        for(var i1 = Zn(a1), e1 = H.f, u1 = k.f, o1 = 0; o1 < i1.length; o1++){
            var g1 = i1[o1];
            c(n1, g1) || e1(n1, g1, u1(a1, g1));
        }
    }, Jn = /#|\.prototype\./, Sn = function(n1, a1) {
        var i1 = kn[Cn(n1)];
        return i1 == Dn || i1 != Xn && ("function" == typeof a1 ? o(a1) : !!a1);
    }, Cn = Sn.normalize = function(n1) {
        return String(n1).replace(Jn, ".").toLowerCase();
    }, kn = Sn.data = {
    }, Xn = Sn.NATIVE = "N", Dn = Sn.POLYFILL = "P", Hn = Sn, Tn = k.f, Qn = function(n1, a1) {
        var i1, e1, o1, g2, h1, s1 = n1.target, y1 = n1.global, l1 = n1.stat;
        if (i1 = y1 ? u : l1 ? u[s1] || Q(s1, {
        }) : (u[s1] || {
        }).prototype) for(e1 in a1){
            if (g2 = a1[e1], o1 = n1.noTargetGet ? (h1 = Tn(i1, e1)) && h1.value : i1[e1], !Hn(y1 ? e1 : s1 + (l1 ? "." : "#") + e1, n1.forced) && (void 0) !== o1) {
                if (typeof g2 == typeof o1) continue;
                Ln(g2, o1);
            }
            (n1.sham || o1 && o1.sham) && T(g2, "sham", !0), nn(i1, e1, g2, n1);
        }
    }, Bn = Object.keys || function(n1) {
        return pn(n1, rn);
    }, Mn = function(n1) {
        return Object(j(n1));
    }, Gn = Object.assign, Fn = Object.defineProperty, Pn = !Gn || o(function() {
        if (g && 1 !== Gn({
            b: 1
        }, Gn(Fn({
        }, "a", {
            enumerable: !0,
            get: function() {
                Fn(this, "b", {
                    value: 3,
                    enumerable: !1
                });
            }
        }), {
            b: 2
        })).b) return !0;
        var n1 = {
        }, a1 = {
        }, i1 = Symbol();
        return n1[i1] = 7, "abcdefghijklmnopqrst".split("").forEach(function(n2) {
            a1[n2] = n2;
        }), 7 != Gn({
        }, n1)[i1] || "abcdefghijklmnopqrst" != Bn(Gn({
        }, a1)).join("");
    }) ? function(n1, a1) {
        for(var i1 = Mn(n1), e1 = arguments.length, u1 = 1, o1 = cn.f, h1 = y.f; e1 > u1;)for(var s1, l1 = d(arguments[u1++]), b1 = o1 ? Bn(l1).concat(o1(l1)) : Bn(l1), t1 = b1.length, w1 = 0; t1 > w1;)s1 = b1[w1++], g && !h1.call(l1, s1) || (i1[s1] = l1[s1]);
        return i1;
    } : Gn;
    Qn({
        target: "Object",
        stat: !0,
        forced: Object.assign !== Pn
    }, {
        assign: Pn
    });
    var Nn = Object.setPrototypeOf || ("__proto__" in {
    } ? function() {
        var n1, a1 = !1, i1 = {
        };
        try {
            (n1 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(i1, []), a1 = i1 instanceof Array;
        } catch (n2) {
        }
        return function(i2, e1) {
            return X(i2), (function(n2) {
                if (!r(n2) && null !== n2) throw TypeError("Can't set " + String(n2) + " as a prototype");
            })(e1), a1 ? n1.call(i2, e1) : i2.__proto__ = e1, i2;
        };
    }() : void 0), Wn = !!Object.getOwnPropertySymbols && !o(function() {
        return !String(Symbol());
    }), Kn = Wn && !Symbol.sham && "symbol" == typeof Symbol.iterator, fn = f("wks"), xn = u.Symbol, Rn = Kn ? xn : xn && xn.withoutSetter || E, En = function(n1) {
        return c(fn, n1) || (Wn && c(xn, n1) ? fn[n1] = xn[n1] : fn[n1] = Rn("Symbol." + n1)), fn[n1];
    }, An = En("match"), vn = function() {
        var n1 = X(this), a1 = "";
        return n1.global && (a1 += "g"), n1.ignoreCase && (a1 += "i"), n1.multiline && (a1 += "m"), n1.dotAll && (a1 += "s"), n1.unicode && (a1 += "u"), n1.sticky && (a1 += "y"), a1;
    };
    function zn(n1, a1) {
        return RegExp(n1, a1);
    }
    var On = {
        UNSUPPORTED_Y: o(function() {
            var n1 = zn("a", "y");
            return n1.lastIndex = 2, null != n1.exec("abcd");
        }),
        BROKEN_CARET: o(function() {
            var n1 = zn("^r", "gy");
            return n1.lastIndex = 2, null != n1.exec("str");
        })
    }, In = En("species"), Un = H.f, qn = mn.f, _n = $.set, Vn = En("match"), $n = u.RegExp, na = $n.prototype, aa = /a/g, ia = /a/g, ea = new $n(aa) !== aa, ua = On.UNSUPPORTED_Y;
    if (g && Hn("RegExp", !ea || ua || o(function() {
        return ia[Vn] = !1, $n(aa) != aa || $n(ia) == ia || "/a/i" != $n(aa, "i");
    }))) {
        for(var oa = function(n1, a1) {
            var i1, e1, u1, o1 = this instanceof oa, g2 = r(i1 = n1) && ((void 0) !== (e1 = i1[An]) ? !!e1 : "RegExp" == t(i1)), h1 = (void 0) === a1;
            if (!o1 && g2 && n1.constructor === oa && h1) return n1;
            ea ? g2 && !h1 && (n1 = n1.source) : n1 instanceof oa && (h1 && (a1 = vn.call(n1)), n1 = n1.source), ua && (u1 = !!a1 && a1.indexOf("y") > -1) && (a1 = a1.replace(/y/g, ""));
            var s1, y1, l1, b1, w1, d1 = (s1 = ea ? new $n(n1, a1) : $n(n1, a1), y1 = o1 ? this : na, l1 = oa, Nn && "function" == typeof (b1 = y1.constructor) && b1 !== l1 && r(w1 = b1.prototype) && w1 !== l1.prototype && Nn(s1, w1), s1);
            return ua && u1 && _n(d1, {
                sticky: u1
            }), d1;
        }, ga = function(n1) {
            n1 in oa || Un(oa, n1, {
                configurable: !0,
                get: function() {
                    return $n[n1];
                },
                set: function(a1) {
                    $n[n1] = a1;
                }
            });
        }, ha = qn($n), sa = 0; ha.length > sa;)ga(ha[sa++]);
        na.constructor = oa, oa.prototype = na, nn(u, "RegExp", oa);
    }
    !function(n1) {
        var a1 = un(n1), i1 = H.f;
        g && a1 && !a1[In] && i1(a1, In, {
            configurable: !0,
            get: function() {
                return this;
            }
        });
    }("RegExp");
    var ya = RegExp.prototype.exec, la = String.prototype.replace, ba = ya, ta = function() {
        var n1 = /a/, a1 = /b*/g;
        return ya.call(n1, "a"), ya.call(a1, "a"), 0 !== n1.lastIndex || 0 !== a1.lastIndex;
    }(), wa = On.UNSUPPORTED_Y || On.BROKEN_CARET, da = (void 0) !== /()??/.exec("")[1];
    (ta || da || wa) && (ba = function(n1) {
        var a1, i1, e1, u1, o1 = this, g2 = wa && o1.sticky, h1 = vn.call(o1), s1 = o1.source, y1 = 0, l1 = n1;
        return g2 && (-1 === (h1 = h1.replace("y", "")).indexOf("g") && (h1 += "g"), l1 = String(n1).slice(o1.lastIndex), o1.lastIndex > 0 && (!o1.multiline || o1.multiline && "\n" !== n1[o1.lastIndex - 1]) && (s1 = "(?: " + s1 + ")", l1 = " " + l1, y1++), i1 = new RegExp("^(?:" + s1 + ")", h1)), da && (i1 = new RegExp("^" + s1 + "$(?!\\s)", h1)), ta && (a1 = o1.lastIndex), e1 = ya.call(g2 ? i1 : o1, l1), g2 ? e1 ? (e1.input = e1.input.slice(y1), e1[0] = e1[0].slice(y1), e1.index = o1.lastIndex, o1.lastIndex += e1[0].length) : o1.lastIndex = 0 : ta && e1 && (o1.lastIndex = o1.global ? e1.index + e1[0].length : a1), da && e1 && e1.length > 1 && la.call(e1[0], i1, function() {
            for(u1 = 1; u1 < arguments.length - 2; u1++)(void 0) === arguments[u1] && (e1[u1] = void 0);
        }), e1;
    });
    var ja = ba;
    Qn({
        target: "RegExp",
        proto: !0,
        forced: /./.exec !== ja
    }, {
        exec: ja
    });
    var pa = RegExp.prototype, ra = pa.toString, Ya = o(function() {
        return "/a/b" != ra.call({
            source: "a",
            flags: "b"
        });
    }), ma = "toString" != ra.name;
    (Ya || ma) && nn(RegExp.prototype, "toString", function() {
        var n1 = X(this), a1 = String(n1.source), i1 = n1.flags;
        return "/" + a1 + "/" + String((void 0) === i1 && n1 instanceof RegExp && !("flags" in pa) ? vn.call(n1) : i1);
    }, {
        unsafe: !0
    }), Qn({
        target: "RegExp",
        proto: !0,
        forced: /./.exec !== ja
    }, {
        exec: ja
    });
    var ca = En("species"), Za = !o(function() {
        var n1 = /./;
        return n1.exec = function() {
            var n2 = [];
            return n2.groups = {
                a: "7"
            }, n2;
        }, "7" !== "".replace(n1, "$<a>");
    }), La = "$0" === "a".replace(/./, "$0"), Ja = En("replace"), Sa = !!/./[Ja] && "" === /./[Ja]("a", "$0"), Ca = !o(function() {
        var n1 = /(?:)/, a1 = n1.exec;
        n1.exec = function() {
            return a1.apply(this, arguments);
        };
        var i1 = "ab".split(n1);
        return 2 !== i1.length || "a" !== i1[0] || "b" !== i1[1];
    }), ka = function(n1) {
        return function(a1, i1) {
            var e1, u1, o1 = String(j(a1)), g2 = hn(i1), h1 = o1.length;
            return g2 < 0 || g2 >= h1 ? n1 ? "" : void 0 : (e1 = o1.charCodeAt(g2)) < 55296 || e1 > 56319 || g2 + 1 === h1 || (u1 = o1.charCodeAt(g2 + 1)) < 56320 || u1 > 57343 ? n1 ? o1.charAt(g2) : e1 : n1 ? o1.slice(g2, g2 + 2) : u1 - 56320 + (e1 - 55296 << 10) + 65536;
        };
    }, Xa = {
        codeAt: ka(!1),
        charAt: ka(!0)
    }.charAt, Da = function(n1, a1, i1) {
        return a1 + (i1 ? Xa(n1, a1).length : 1);
    }, Ha = function(n1, a1) {
        var i1 = n1.exec;
        if ("function" == typeof i1) {
            var e1 = i1.call(n1, a1);
            if ("object" != typeof e1) throw TypeError("RegExp exec method returned something other than an Object or null");
            return e1;
        }
        if ("RegExp" !== t(n1)) throw TypeError("RegExp#exec called on incompatible receiver");
        return ja.call(n1, a1);
    }, Ta = Math.max, Qa = Math.min, Ba = Math.floor, Ma = /\$([$&'`]|\d\d?|<[^>]*>)/g, Ga = /\$([$&'`]|\d\d?)/g;
    function Fa(n1, a1) {
        for(var i1 = 0; i1 < a1.length; i1++){
            var e2 = a1[i1];
            e2.enumerable = e2.enumerable || !1, e2.configurable = !0, "value" in e2 && (e2.writable = !0), Object.defineProperty(n1, e2.key, e2);
        }
    }
    function Pa(n1, a1, i1) {
        return a1 && Fa(n1.prototype, a1), i1 && Fa(n1, i1), n1;
    }
    function Na(n1, a1) {
        if (n1 !== a1) throw new TypeError("Cannot instantiate an arrow function");
    }
    !function(n1, a1, i1, e3) {
        var u1 = En(n1), g2 = !o(function() {
            var a2 = {
            };
            return a2[u1] = function() {
                return 7;
            }, 7 != ""[n1](a2);
        }), h1 = g2 && !o(function() {
            var a2 = !1, i2 = /a/;
            return "split" === n1 && ((i2 = {
            }).constructor = {
            }, i2.constructor[ca] = function() {
                return i2;
            }, i2.flags = "", i2[u1] = /./[u1]), i2.exec = function() {
                return a2 = !0, null;
            }, i2[u1](""), !a2;
        });
        if (!g2 || !h1 || "replace" === n1 && (!Za || !La || Sa) || "split" === n1 && !Ca) {
            var s1 = /./[u1], y1 = i1(u1, ""[n1], function(n2, a2, i2, e4, u2) {
                return a2.exec === ja ? g2 && !u2 ? {
                    done: !0,
                    value: s1.call(a2, i2, e4)
                } : {
                    done: !0,
                    value: n2.call(i2, a2, e4)
                } : {
                    done: !1
                };
            }, {
                REPLACE_KEEPS_$0: La,
                REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: Sa
            }), l1 = y1[0], b1 = y1[1];
            nn(String.prototype, n1, l1), nn(RegExp.prototype, u1, 2 == a1 ? function(n2, a2) {
                return b1.call(n2, this, a2);
            } : function(n2) {
                return b1.call(n2, this);
            });
        }
        e3 && T(RegExp.prototype[u1], "sham", !0);
    }("replace", 2, function(n1, a1, i1, e3) {
        var u1 = e3.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE, o1 = e3.REPLACE_KEEPS_$0, g2 = u1 ? "$" : "$0";
        function h1(n2, i2, e4, u2, o2, g3) {
            var h2 = e4 + n2.length, s2 = u2.length, y2 = Ga;
            return (void 0) !== o2 && (o2 = Mn(o2), y2 = Ma), a1.call(g3, y2, function(a2, g4) {
                var y3;
                switch(g4.charAt(0)){
                    case "$":
                        return "$";
                    case "&":
                        return n2;
                    case "`":
                        return i2.slice(0, e4);
                    case "'":
                        return i2.slice(h2);
                    case "<":
                        y3 = o2[g4.slice(1, -1)];
                        break;
                    default:
                        var l2 = +g4;
                        if (0 === l2) return a2;
                        if (l2 > s2) {
                            var b2 = Ba(l2 / 10);
                            return 0 === b2 ? a2 : b2 <= s2 ? (void 0) === u2[b2 - 1] ? g4.charAt(1) : u2[b2 - 1] + g4.charAt(1) : a2;
                        }
                        y3 = u2[l2 - 1];
                }
                return (void 0) === y3 ? "" : y3;
            });
        }
        return [
            function(i2, e4) {
                var u2 = j(this), o2 = null == i2 ? void 0 : i2[n1];
                return (void 0) !== o2 ? o2.call(i2, u2, e4) : a1.call(String(u2), i2, e4);
            },
            function(n2, e4) {
                if (!u1 && o1 || "string" == typeof e4 && -1 === e4.indexOf(g2)) {
                    var s2 = i1(a1, n2, this, e4);
                    if (s2.done) return s2.value;
                }
                var y2 = X(n2), l2 = String(this), b3 = "function" == typeof e4;
                b3 || (e4 = String(e4));
                var t1 = y2.global;
                if (t1) {
                    var w1 = y2.unicode;
                    y2.lastIndex = 0;
                }
                for(var d1 = [];;){
                    var j1 = Ha(y2, l2);
                    if (null === j1) break;
                    if (d1.push(j1), !t1) break;
                    "" === String(j1[0]) && (y2.lastIndex = Da(l2, yn(y2.lastIndex), w1));
                }
                for(var p1, r1 = "", Y1 = 0, m1 = 0; m1 < d1.length; m1++){
                    j1 = d1[m1];
                    for(var c1 = String(j1[0]), Z1 = Ta(Qa(hn(j1.index), l2.length), 0), L1 = [], J1 = 1; J1 < j1.length; J1++)L1.push((void 0) === (p1 = j1[J1]) ? p1 : String(p1));
                    var S1 = j1.groups;
                    if (b3) {
                        var C1 = [
                            c1
                        ].concat(L1, Z1, l2);
                        (void 0) !== S1 && C1.push(S1);
                        var k1 = String(e4.apply(void 0, C1));
                    } else k1 = h1(c1, l2, Z1, L1, S1, e4);
                    Z1 >= Y1 && (r1 += l2.slice(Y1, Z1) + k1, Y1 = Z1 + c1.length);
                }
                return r1 + l2.slice(Y1);
            }
        ];
    });
    var Wa, Ka = function(n1) {
        if ("function" != typeof n1) throw TypeError(String(n1) + " is not a function");
        return n1;
    }, fa = Array.isArray || function(n1) {
        return "Array" == t(n1);
    }, xa = En("species"), Ra = function(n1, a1) {
        var i1;
        return fa(n1) && ("function" != typeof (i1 = n1.constructor) || i1 !== Array && !fa(i1.prototype) ? r(i1) && null === (i1 = i1[xa]) && (i1 = void 0) : i1 = void 0), new ((void 0) === i1 ? Array : i1)(0 === a1 ? 0 : a1);
    }, Ea = [].push, Aa = function(n1) {
        var a1 = 1 == n1, i1 = 2 == n1, e3 = 3 == n1, u1 = 4 == n1, o1 = 6 == n1, g2 = 5 == n1 || o1;
        return function(h1, s3, y2, l2) {
            for(var b3, t1, w2 = Mn(h1), j2 = d(w2), p1 = function(n2, a2, i2) {
                if (Ka(n2), (void 0) === a2) return n2;
                switch(i2){
                    case 0:
                        return function() {
                            return n2.call(a2);
                        };
                    case 1:
                        return function(i3) {
                            return n2.call(a2, i3);
                        };
                    case 2:
                        return function(i3, e4) {
                            return n2.call(a2, i3, e4);
                        };
                    case 3:
                        return function(i3, e4, u2) {
                            return n2.call(a2, i3, e4, u2);
                        };
                }
                return function() {
                    return n2.apply(a2, arguments);
                };
            }(s3, y2, 3), r1 = yn(j2.length), Y1 = 0, m1 = l2 || Ra, c2 = a1 ? m1(h1, r1) : i1 ? m1(h1, 0) : void 0; r1 > Y1; Y1++)if ((g2 || Y1 in j2) && (t1 = p1(b3 = j2[Y1], Y1, w2), n1)) {
                if (a1) c2[Y1] = t1;
                else if (t1) switch(n1){
                    case 3:
                        return !0;
                    case 5:
                        return b3;
                    case 6:
                        return Y1;
                    case 2:
                        Ea.call(c2, b3);
                }
                else if (u1) return !1;
            }
            return o1 ? -1 : e3 || u1 ? u1 : c2;
        };
    }, va = {
        forEach: Aa(0),
        map: Aa(1),
        filter: Aa(2),
        some: Aa(3),
        every: Aa(4),
        find: Aa(5),
        findIndex: Aa(6)
    }, za = g ? Object.defineProperties : function(n1, a1) {
        X(n1);
        for(var i1, e3 = Bn(a1), u1 = e3.length, o1 = 0; u1 > o1;)H.f(n1, i1 = e3[o1++], a1[i1]);
        return n1;
    }, Oa = un("document", "documentElement"), Ia = v("IE_PROTO"), Ua = function() {
    }, qa = function(n1) {
        return "<script>" + n1 + "<\/script>";
    }, _a = function() {
        try {
            Wa = document.domain && new ActiveXObject("htmlfile");
        } catch (n1) {
        }
        var n1, a1;
        _a = Wa ? (function(n2) {
            n2.write(qa("")), n2.close();
            var a2 = n2.parentWindow.Object;
            return n2 = null, a2;
        })(Wa) : ((a1 = J("iframe")).style.display = "none", Oa.appendChild(a1), a1.src = String("javascript:"), (n1 = a1.contentWindow.document).open(), n1.write(qa("document.F=Object")), n1.close(), n1.F);
        for(var i1 = rn.length; i1--;)delete _a.prototype[rn[i1]];
        return _a();
    };
    z[Ia] = !0;
    var Va = Object.create || function(n1, a1) {
        var i1;
        return null !== n1 ? (Ua.prototype = X(n1), i1 = new Ua, Ua.prototype = null, i1[Ia] = n1) : i1 = _a(), (void 0) === a1 ? i1 : za(i1, a1);
    }, $a = En("unscopables"), ni = Array.prototype;
    null == ni[$a] && H.f(ni, $a, {
        configurable: !0,
        value: Va(null)
    });
    var ai, ii = Object.defineProperty, ei = {
    }, ui = function(n1) {
        throw n1;
    }, oi = function(n1, a1) {
        if (c(ei, n1)) return ei[n1];
        a1 || (a1 = {
        });
        var i1 = [][n1], e3 = !!c(a1, "ACCESSORS") && a1.ACCESSORS, u1 = c(a1, 0) ? a1[0] : ui, h1 = c(a1, 1) ? a1[1] : void 0;
        return ei[n1] = !!i1 && !o(function() {
            if (e3 && !g) return !0;
            var n2 = {
                length: -1
            };
            e3 ? ii(n2, 1, {
                enumerable: !0,
                get: ui
            }) : n2[1] = 1, i1.call(n2, u1, h1);
        });
    }, gi = va.find, hi = !0, si = oi("find");
    "find" in [] && Array(1).find(function() {
        hi = !1;
    }), Qn({
        target: "Array",
        proto: !0,
        forced: hi || !si
    }, {
        find: function(n1) {
            return gi(this, n1, arguments.length > 1 ? arguments[1] : void 0);
        }
    }), ai = "find", ni[$a][ai] = !0;
    var yi, li, bi = un("navigator", "userAgent") || "", ti = u.process, wi = ti && ti.versions, di = wi && wi.v8;
    di ? li = (yi = di.split("."))[0] + yi[1] : bi && (!(yi = bi.match(/Edge\/(\d+)/)) || yi[1] >= 74) && (yi = bi.match(/Chrome\/(\d+)/)) && (li = yi[1]);
    var ji = li && +li, pi = En("species"), ri = function(n1) {
        return ji >= 51 || !o(function() {
            var a1 = [];
            return (a1.constructor = {
            })[pi] = function() {
                return {
                    foo: 1
                };
            }, 1 !== a1[n1](Boolean).foo;
        });
    }, Yi = va.map, mi = ri("map"), ci = oi("map");
    Qn({
        target: "Array",
        proto: !0,
        forced: !mi || !ci
    }, {
        map: function(n1) {
            return Yi(this, n1, arguments.length > 1 ? arguments[1] : void 0);
        }
    }), Qn({
        target: "Object",
        stat: !0,
        forced: o(function() {
            Bn(1);
        })
    }, {
        keys: function(n1) {
            return Bn(Mn(n1));
        }
    }), g && ("g" != /./g.flags || On.UNSUPPORTED_Y) && H.f(RegExp.prototype, "flags", {
        configurable: !0,
        get: vn
    });
    var Zi, Li = "\t\n\v\f\r                　\u2028\u2029\ufeff", Ji = "[" + Li + "]", Si = RegExp("^" + Ji + Ji + "*"), Ci = RegExp(Ji + Ji + "*$"), ki = function(n1) {
        return function(a1) {
            var i1 = String(j(a1));
            return 1 & n1 && (i1 = i1.replace(Si, "")), 2 & n1 && (i1 = i1.replace(Ci, "")), i1;
        };
    }, Xi = {
        start: ki(1),
        end: ki(2),
        trim: ki(3)
    }, Di = Xi.trim;
    Qn({
        target: "String",
        proto: !0,
        forced: (Zi = "trim", o(function() {
            return !!Li[Zi]() || "​᠎" != "​᠎"[Zi]() || Li[Zi].name !== Zi;
        }))
    }, {
        trim: function() {
            return Di(this);
        }
    });
    for(var Hi = [
        [
            "\0",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\b",
            "\t",
            "\n",
            "\v",
            "\f",
            "\r",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            " ",
            "!",
            '"',
            "#",
            "$",
            "%",
            "&",
            "'",
            "(",
            ")",
            "*",
            "+",
            ",",
            "-",
            ".",
            "/",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ":",
            ";",
            "<",
            "=",
            ">",
            "?",
            "@",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "[",
            "\\",
            "]",
            "^",
            "_",
            "`",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "{",
            "|",
            "}",
            "~",
            "",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            " ",
            "!",
            "C/",
            "PS",
            "$?",
            "Y=",
            "|",
            "SS",
            '"',
            "(c)",
            "a",
            "<<",
            "!",
            ,
            "(r)",
            "-",
            "deg",
            "+-",
            "2",
            "3",
            "'",
            "u",
            "P",
            "*",
            ",",
            "1",
            "o",
            ">>",
            "1/4",
            "1/2",
            "3/4",
            "?",
            "A",
            "A",
            "A",
            "A",
            "A",
            "A",
            "AE",
            "C",
            "E",
            "E",
            "E",
            "E",
            "I",
            "I",
            "I",
            "I",
            "D",
            "N",
            "O",
            "O",
            "O",
            "O",
            "O",
            "x",
            "O",
            "U",
            "U",
            "U",
            "U",
            "U",
            "Th",
            "ss",
            "a",
            "a",
            "a",
            "a",
            "a",
            "a",
            "ae",
            "c",
            "e",
            "e",
            "e",
            "e",
            "i",
            "i",
            "i",
            "i",
            "d",
            "n",
            "o",
            "o",
            "o",
            "o",
            "o",
            "/",
            "o",
            "u",
            "u",
            "u",
            "u",
            "y",
            "th",
            "y"
        ],
        [
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "C",
            "c",
            "C",
            "c",
            "C",
            "c",
            "C",
            "c",
            "D",
            "d",
            "D",
            "d",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "G",
            "g",
            "G",
            "g",
            "G",
            "g",
            "G",
            "g",
            "H",
            "h",
            "H",
            "h",
            "I",
            "i",
            "I",
            "i",
            "I",
            "i",
            "I",
            "i",
            "I",
            "i",
            "IJ",
            "ij",
            "J",
            "j",
            "K",
            "k",
            "k",
            "L",
            "l",
            "L",
            "l",
            "L",
            "l",
            "L",
            "l",
            "L",
            "l",
            "N",
            "n",
            "N",
            "n",
            "N",
            "n",
            "'n",
            "NG",
            "ng",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "OE",
            "oe",
            "R",
            "r",
            "R",
            "r",
            "R",
            "r",
            "S",
            "s",
            "S",
            "s",
            "S",
            "s",
            "S",
            "s",
            "T",
            "t",
            "T",
            "t",
            "T",
            "t",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "W",
            "w",
            "Y",
            "y",
            "Y",
            "Z",
            "z",
            "Z",
            "z",
            "Z",
            "z",
            "s",
            "b",
            "B",
            "B",
            "b",
            "6",
            "6",
            "O",
            "C",
            "c",
            "D",
            "D",
            "D",
            "d",
            "d",
            "3",
            "@",
            "E",
            "F",
            "f",
            "G",
            "G",
            "hv",
            "I",
            "I",
            "K",
            "k",
            "l",
            "l",
            "W",
            "N",
            "n",
            "O",
            "O",
            "o",
            "OI",
            "oi",
            "P",
            "p",
            "YR",
            "2",
            "2",
            "SH",
            "sh",
            "t",
            "T",
            "t",
            "T",
            "U",
            "u",
            "Y",
            "V",
            "Y",
            "y",
            "Z",
            "z",
            "ZH",
            "ZH",
            "zh",
            "zh",
            "2",
            "5",
            "5",
            "ts",
            "w",
            "|",
            "||",
            "|=",
            "!",
            "DZ",
            "Dz",
            "dz",
            "LJ",
            "Lj",
            "lj",
            "NJ",
            "Nj",
            "nj",
            "A",
            "a",
            "I",
            "i",
            "O",
            "o",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "@",
            "A",
            "a",
            "A",
            "a",
            "AE",
            "ae",
            "G",
            "g",
            "G",
            "g",
            "K",
            "k",
            "O",
            "o",
            "O",
            "o",
            "ZH",
            "zh",
            "j",
            "DZ",
            "D",
            "dz",
            "G",
            "g",
            "HV",
            "W",
            "N",
            "n",
            "A",
            "a",
            "AE",
            "ae",
            "O",
            "o"
        ],
        [
            "A",
            "a",
            "A",
            "a",
            "E",
            "e",
            "E",
            "e",
            "I",
            "i",
            "I",
            "i",
            "O",
            "o",
            "O",
            "o",
            "R",
            "r",
            "R",
            "r",
            "U",
            "u",
            "U",
            "u",
            "S",
            "s",
            "T",
            "t",
            "Y",
            "y",
            "H",
            "h",
            "N",
            "d",
            "OU",
            "ou",
            "Z",
            "z",
            "A",
            "a",
            "E",
            "e",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "Y",
            "y",
            "l",
            "n",
            "t",
            "j",
            "db",
            "qp",
            "A",
            "C",
            "c",
            "L",
            "T",
            "s",
            "z",
            "?",
            "?",
            "B",
            "U",
            "V",
            "E",
            "e",
            "J",
            "j",
            "Q",
            "q",
            "R",
            "r",
            "Y",
            "y",
            "a",
            "a",
            "a",
            "b",
            "o",
            "c",
            "d",
            "d",
            "e",
            "@",
            "@",
            "e",
            "e",
            "e",
            "e",
            "j",
            "g",
            "g",
            "g",
            "g",
            "u",
            "Y",
            "h",
            "h",
            "i",
            "i",
            "I",
            "l",
            "l",
            "l",
            "lZ",
            "W",
            "W",
            "m",
            "n",
            "n",
            "n",
            "o",
            "OE",
            "O",
            "F",
            "R",
            "R",
            "R",
            "R",
            "r",
            "r",
            "R",
            "R",
            "R",
            "s",
            "S",
            "j",
            "S",
            "S",
            "t",
            "t",
            "U",
            "U",
            "v",
            "^",
            "W",
            "Y",
            "Y",
            "z",
            "z",
            "Z",
            "Z",
            "?",
            "?",
            "?",
            "C",
            "@",
            "B",
            "E",
            "G",
            "H",
            "j",
            "k",
            "L",
            "q",
            "?",
            "?",
            "dz",
            "dZ",
            "dz",
            "ts",
            "tS",
            "tC",
            "fN",
            "ls",
            "lz",
            "WW",
            "]]",
            "h",
            "h",
            "k",
            "h",
            "j",
            "r",
            "r",
            "r",
            "r",
            "w",
            "y",
            "'",
            '"',
            "`",
            "'",
            "`",
            "`",
            "'",
            "?",
            "?",
            "<",
            ">",
            "^",
            "V",
            "^",
            "V",
            "'",
            "-",
            "/",
            "\\",
            ",",
            "_",
            "\\",
            "/",
            ":",
            ".",
            "`",
            "'",
            "^",
            "V",
            "+",
            "-",
            "V",
            ".",
            "@",
            ",",
            "~",
            '"',
            "R",
            "X",
            "G",
            "l",
            "s",
            "x",
            "?",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "V",
            "=",
            '"'
        ],
        [
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "'",
            ",",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "?",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "A",
            ";",
            "E",
            "I",
            "I",
            ,
            "O",
            ,
            "U",
            "O",
            "I",
            "A",
            "V",
            "G",
            "D",
            "E",
            "Z",
            "I",
            "Th",
            "I",
            "K",
            "L",
            "M",
            "N",
            "X",
            "O",
            "P",
            "R",
            ,
            "S",
            "T",
            "Y",
            "F",
            "H",
            "Ps",
            "O",
            "I",
            "Y",
            "a",
            "e",
            "i",
            "i",
            "y",
            "a",
            "v",
            "g",
            "d",
            "e",
            "z",
            "i",
            "th",
            "i",
            "k",
            "l",
            "m",
            "n",
            "x",
            "o",
            "p",
            "r",
            "s",
            "s",
            "t",
            "y",
            "f",
            "h",
            "ps",
            "o",
            "i",
            "y",
            "o",
            "y",
            "o",
            ,
            "b",
            "th",
            "U",
            "U",
            "U",
            "ph",
            "p",
            "&",
            ,
            ,
            "St",
            "st",
            "W",
            "w",
            "Q",
            "q",
            "Sp",
            "sp",
            "Sh",
            "sh",
            "F",
            "f",
            "Kh",
            "kh",
            "H",
            "h",
            "G",
            "g",
            "CH",
            "ch",
            "Ti",
            "ti",
            "k",
            "r",
            "c",
            "j"
        ],
        [
            "Jo",
            "Yo",
            "Dj",
            "Gj",
            "Ie",
            "Dz",
            "I",
            "Yi",
            "J",
            "Lj",
            "Nj",
            "Tsh",
            "Kj",
            "I",
            "U",
            "Dzh",
            "A",
            "B",
            "V",
            "G",
            "D",
            "E",
            "Zh",
            "Z",
            "I",
            "Y",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "R",
            "S",
            "T",
            "U",
            "F",
            "H",
            "C",
            "Ch",
            "Sh",
            "Shch",
            ,
            "Y",
            ,
            "E",
            "Yu",
            "Ya",
            "a",
            "b",
            "v",
            "g",
            "d",
            "e",
            "zh",
            "z",
            "i",
            "y",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "r",
            "s",
            "t",
            "u",
            "f",
            "h",
            "c",
            "ch",
            "sh",
            "shch",
            ,
            "y",
            ,
            "e",
            "yu",
            "ya",
            "je",
            "yo",
            "dj",
            "gj",
            "ie",
            "dz",
            "i",
            "yi",
            "j",
            "lj",
            "nj",
            "tsh",
            "kj",
            "i",
            "u",
            "dzh",
            "O",
            "o",
            "E",
            "e",
            "Ie",
            "ie",
            "E",
            "e",
            "Ie",
            "ie",
            "O",
            "o",
            "Io",
            "io",
            "Ks",
            "ks",
            "Ps",
            "ps",
            "F",
            "f",
            "Y",
            "y",
            "Y",
            "y",
            "u",
            "u",
            "O",
            "o",
            "O",
            "o",
            "Ot",
            "ot",
            "Q",
            "q",
            "*1000*",
            ,
            ,
            ,
            ,
            ,
            "*100.000*",
            "*1.000.000*",
            ,
            ,
            '"',
            '"',
            "R'",
            "r'",
            "G'",
            "g'",
            "G'",
            "g'",
            "G'",
            "g'",
            "Zh'",
            "zh'",
            "Z'",
            "z'",
            "K'",
            "k'",
            "K'",
            "k'",
            "K'",
            "k'",
            "K'",
            "k'",
            "N'",
            "n'",
            "Ng",
            "ng",
            "P'",
            "p'",
            "Kh",
            "kh",
            "S'",
            "s'",
            "T'",
            "t'",
            "U",
            "u",
            "U'",
            "u'",
            "Kh'",
            "kh'",
            "Tts",
            "tts",
            "Ch'",
            "ch'",
            "Ch'",
            "ch'",
            "H",
            "h",
            "Ch",
            "ch",
            "Ch'",
            "ch'",
            "`",
            "Zh",
            "zh",
            "K'",
            "k'",
            ,
            ,
            "N'",
            "n'",
            ,
            ,
            "Ch",
            "ch",
            ,
            ,
            ,
            "a",
            "a",
            "A",
            "a",
            "Ae",
            "ae",
            "Ie",
            "ie",
            "@",
            "@",
            "@",
            "@",
            "Zh",
            "zh",
            "Z",
            "z",
            "Dz",
            "dz",
            "I",
            "i",
            "I",
            "i",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "E",
            "e",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "Ch",
            "ch",
            ,
            ,
            "Y",
            "y"
        ],
        [
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "A",
            "B",
            "G",
            "D",
            "E",
            "Z",
            "E",
            "E",
            "T`",
            "Zh",
            "I",
            "L",
            "Kh",
            "Ts",
            "K",
            "H",
            "Dz",
            "Gh",
            "Ch",
            "M",
            "Y",
            "N",
            "Sh",
            "O",
            "Ch`",
            "P",
            "J",
            "Rh",
            "S",
            "V",
            "T",
            "R",
            "Ts`",
            "W",
            "P`",
            "K`",
            "O",
            "F",
            ,
            ,
            "<",
            "'",
            "/",
            "!",
            ",",
            "?",
            ".",
            ,
            "a",
            "b",
            "g",
            "d",
            "e",
            "z",
            "e",
            "e",
            "t`",
            "zh",
            "i",
            "l",
            "kh",
            "ts",
            "k",
            "h",
            "dz",
            "gh",
            "ch",
            "m",
            "y",
            "n",
            "sh",
            "o",
            "ch`",
            "p",
            "j",
            "rh",
            "s",
            "v",
            "t",
            "r",
            "ts`",
            "w",
            "p`",
            "k`",
            "o",
            "f",
            "ew",
            ,
            ".",
            "-",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "@",
            "e",
            "a",
            "o",
            "i",
            "e",
            "e",
            "a",
            "a",
            "o",
            ,
            "u",
            "'",
            ,
            ,
            ,
            ,
            ,
            ,
            ":",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "b",
            "g",
            "d",
            "h",
            "v",
            "z",
            "kh",
            "t",
            "y",
            "k",
            "k",
            "l",
            "m",
            "m",
            "n",
            "n",
            "s",
            "`",
            "p",
            "p",
            "ts",
            "ts",
            "q",
            "r",
            "sh",
            "t",
            ,
            ,
            ,
            ,
            ,
            "V",
            "oy",
            "i",
            "'",
            '"'
        ],
        [
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ",",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ";",
            ,
            ,
            ,
            "?",
            ,
            ,
            "a",
            "'",
            "w'",
            ,
            "y'",
            ,
            "b",
            "@",
            "t",
            "th",
            "j",
            "H",
            "kh",
            "d",
            "dh",
            "r",
            "z",
            "s",
            "sh",
            "S",
            "D",
            "T",
            "Z",
            "aa",
            "G",
            ,
            ,
            ,
            ,
            ,
            ,
            "f",
            "q",
            "k",
            "l",
            "m",
            "n",
            "h",
            "w",
            "~",
            "y",
            "an",
            "un",
            "in",
            "a",
            "u",
            "i",
            "W",
            ,
            ,
            "'",
            "'",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "%",
            ".",
            ",",
            "*",
            ,
            ,
            ,
            "'",
            "'",
            "'",
            ,
            "'",
            "'w",
            "'u",
            "'y",
            "tt",
            "tth",
            "b",
            "t",
            "T",
            "p",
            "th",
            "bh",
            "'h",
            "H",
            "ny",
            "dy",
            "H",
            "ch",
            "cch",
            "dd",
            "D",
            "D",
            "Dt",
            "dh",
            "ddh",
            "d",
            "D",
            "D",
            "rr",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "j",
            "R",
            "S",
            "S",
            "S",
            "S",
            "S",
            "T",
            "GH",
            "F",
            "F",
            "F",
            "v",
            "f",
            "ph",
            "Q",
            "Q",
            "kh",
            "k",
            "K",
            "K",
            "ng",
            "K",
            "g",
            "G",
            "N",
            "G",
            "G",
            "G",
            "L",
            "L",
            "L",
            "L",
            "N",
            "N",
            "N",
            "N",
            "N",
            "h",
            "Ch",
            "hy",
            "h",
            "H",
            "@",
            "W",
            "oe",
            "oe",
            "u",
            "yu",
            "yu",
            "W",
            "v",
            "y",
            "Y",
            "Y",
            "W",
            ,
            ,
            "y",
            "y'",
            ".",
            "ae",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "@",
            "#",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "^",
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "Sh",
            "D",
            "Gh",
            "&",
            "+m"
        ],
        [
            "//",
            "/",
            ",",
            "!",
            "!",
            "-",
            ",",
            ",",
            ";",
            "?",
            "~",
            "{",
            "}",
            "*",
            ,
            ,
            "'",
            ,
            "b",
            "g",
            "g",
            "d",
            "d",
            "h",
            "w",
            "z",
            "H",
            "t",
            "t",
            "y",
            "yh",
            "k",
            "l",
            "m",
            "n",
            "s",
            "s",
            "`",
            "p",
            "p",
            "S",
            "q",
            "r",
            "sh",
            "t",
            ,
            ,
            ,
            "a",
            "a",
            "a",
            "A",
            "A",
            "A",
            "e",
            "e",
            "e",
            "E",
            "i",
            "i",
            "u",
            "u",
            "u",
            "o",
            ,
            "`",
            "'",
            ,
            ,
            "X",
            "Q",
            "@",
            "@",
            "|",
            "+",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "h",
            "sh",
            "n",
            "r",
            "b",
            "L",
            "k",
            "'",
            "v",
            "m",
            "f",
            "dh",
            "th",
            "l",
            "g",
            "ny",
            "s",
            "d",
            "z",
            "t",
            "y",
            "p",
            "j",
            "ch",
            "tt",
            "hh",
            "kh",
            "th",
            "z",
            "sh",
            "s",
            "d",
            "t",
            "z",
            "`",
            "gh",
            "q",
            "w",
            "a",
            "aa",
            "i",
            "ee",
            "u",
            "oo",
            "e",
            "ey",
            "o",
            "oa"
        ],
        [],
        [
            ,
            "N",
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "L",
            "eN",
            "e",
            "e",
            "ai",
            "oN",
            "o",
            "o",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            "nnn",
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            "rr",
            "l",
            "l",
            "lll",
            "v",
            "sh",
            "ss",
            "s",
            "h",
            ,
            ,
            "'",
            "'",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            "eN",
            "e",
            "e",
            "ai",
            "oN",
            "o",
            "o",
            "au",
            ,
            ,
            ,
            "AUM",
            "'",
            "'",
            "`",
            "'",
            ,
            ,
            ,
            "q",
            "khh",
            "ghh",
            "z",
            "dddh",
            "rh",
            "f",
            "yy",
            "RR",
            "LL",
            "L",
            "LL",
            " / ",
            " // ",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ".",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "N",
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            ,
            ,
            "e",
            "ai",
            ,
            ,
            "o",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            ,
            "l",
            ,
            ,
            ,
            "sh",
            "ss",
            "s",
            "h",
            ,
            ,
            "'",
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            ,
            ,
            "e",
            "ai",
            ,
            ,
            "o",
            "au",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "+",
            ,
            ,
            ,
            ,
            "rr",
            "rh",
            ,
            "yy",
            "RR",
            "LL",
            "L",
            "LL",
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "r'",
            "r`",
            "Rs",
            "Rs",
            "1/",
            "2/",
            "3/",
            "4/",
            " 1 - 1/",
            "/16"
        ],
        [
            ,
            ,
            "N",
            ,
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            ,
            ,
            ,
            ,
            "ee",
            "ai",
            ,
            ,
            "oo",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "p",
            "ph",
            "b",
            "bb",
            "m",
            "y",
            "r",
            ,
            "l",
            "ll",
            ,
            "v",
            "sh",
            ,
            "s",
            "h",
            ,
            ,
            "'",
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            ,
            ,
            ,
            ,
            "ee",
            "ai",
            ,
            ,
            "oo",
            "au",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "khh",
            "ghh",
            "z",
            "rr",
            ,
            "f",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "N",
            "H",
            ,
            ,
            "G.E.O.",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "N",
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            ,
            "eN",
            ,
            "e",
            "ai",
            "oN",
            ,
            "o",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "ya",
            "r",
            ,
            "l",
            "ll",
            ,
            "v",
            "sh",
            "ss",
            "s",
            "h",
            ,
            ,
            "'",
            "'",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            "eN",
            ,
            "e",
            "ai",
            "oN",
            ,
            "o",
            "au",
            ,
            ,
            ,
            "AUM",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "RR",
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        [
            ,
            "N",
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "L",
            ,
            ,
            "e",
            "ai",
            ,
            ,
            "o",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            ,
            "l",
            "ll",
            ,
            ,
            "sh",
            "ss",
            "s",
            "h",
            ,
            ,
            "'",
            "'",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            ,
            ,
            ,
            "e",
            "ai",
            ,
            ,
            "o",
            "au",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "+",
            "+",
            ,
            ,
            ,
            ,
            "rr",
            "rh",
            ,
            "yy",
            "RR",
            "LL",
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            ,
            ,
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            "k",
            ,
            ,
            ,
            "ng",
            "c",
            ,
            "j",
            ,
            "ny",
            "tt",
            ,
            ,
            ,
            "nn",
            "t",
            ,
            ,
            ,
            "n",
            "nnn",
            "p",
            ,
            ,
            ,
            "m",
            "y",
            "r",
            "rr",
            "l",
            "ll",
            "lll",
            "v",
            ,
            "ss",
            "s",
            "h",
            ,
            ,
            ,
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            ,
            ,
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "+",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "+10+",
            "+100+",
            "+1000+"
        ],
        [
            ,
            "N",
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "L",
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            "rr",
            "l",
            "ll",
            ,
            "v",
            "sh",
            "ss",
            "s",
            "h",
            ,
            ,
            ,
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "+",
            "+",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "RR",
            "LL",
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "L",
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            "rr",
            "l",
            "ll",
            ,
            "v",
            "sh",
            "ss",
            "s",
            "h",
            ,
            ,
            ,
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "+",
            "+",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "lll",
            ,
            "RR",
            "LL",
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        [
            ,
            ,
            "N",
            "H",
            ,
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "L",
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            "rr",
            "l",
            "ll",
            "lll",
            "v",
            "sh",
            "ss",
            "s",
            "h",
            ,
            ,
            ,
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            ,
            ,
            "e",
            "ee",
            "ai",
            ,
            "o",
            "oo",
            "au",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "+",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "RR",
            "LL",
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "N",
            "H",
            ,
            "a",
            "aa",
            "ae",
            "aae",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            "L",
            "LL",
            "e",
            "ee",
            "ai",
            "o",
            "oo",
            "au",
            ,
            ,
            ,
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "nng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "jny",
            "nyj",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "nndd",
            "t",
            "th",
            "d",
            "dh",
            "n",
            ,
            "nd",
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "mb",
            "y",
            "r",
            ,
            "l",
            ,
            ,
            "v",
            "sh",
            "ss",
            "s",
            "h",
            "ll",
            "f",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "aa",
            "ae",
            "aae",
            "i",
            "ii",
            "u",
            ,
            "uu",
            ,
            "R",
            "e",
            "ee",
            "ai",
            "o",
            "oo",
            "au",
            "L",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "RR",
            "LL",
            " . "
        ],
        [
            ,
            "k",
            "kh",
            "kh",
            "kh",
            "kh",
            "kh",
            "ng",
            "cch",
            "ch",
            "ch",
            "ch",
            "ch",
            "y",
            "d",
            "t",
            "th",
            "th",
            "th",
            "n",
            "d",
            "t",
            "th",
            "th",
            "th",
            "n",
            "b",
            "p",
            "ph",
            "f",
            "ph",
            "f",
            "ph",
            "m",
            "y",
            "r",
            "R",
            "l",
            "L",
            "w",
            "s",
            "s",
            "s",
            "h",
            "l",
            "`",
            "h",
            "~",
            "a",
            "a",
            "aa",
            "am",
            "i",
            "ii",
            "ue",
            "uue",
            "u",
            "uu",
            "'",
            ,
            ,
            ,
            ,
            "Bh.",
            "e",
            "ae",
            "o",
            "ai",
            "ai",
            "ao",
            "+",
            ,
            ,
            ,
            ,
            ,
            ,
            "M",
            ,
            " * ",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            " // ",
            " /// ",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "k",
            "kh",
            ,
            "kh",
            ,
            ,
            "ng",
            "ch",
            ,
            "s",
            ,
            ,
            "ny",
            ,
            ,
            ,
            ,
            ,
            ,
            "d",
            "h",
            "th",
            "th",
            ,
            "n",
            "b",
            "p",
            "ph",
            "f",
            "ph",
            "f",
            ,
            "m",
            "y",
            "r",
            ,
            "l",
            ,
            "w",
            ,
            ,
            "s",
            "h",
            ,
            "`",
            ,
            "~",
            "a",
            ,
            "aa",
            "am",
            "i",
            "ii",
            "y",
            "yy",
            "u",
            "uu",
            ,
            "o",
            "l",
            "ny",
            ,
            ,
            "e",
            "ei",
            "o",
            "ay",
            "ai",
            ,
            "+",
            ,
            ,
            ,
            ,
            ,
            ,
            "M",
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ,
            ,
            "hn",
            "hm"
        ],
        [
            "AUM",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            " // ",
            " * ",
            ,
            "-",
            " / ",
            " / ",
            " // ",
            " -/ ",
            " +/ ",
            " X/ ",
            " /XX/ ",
            " /X/ ",
            ",",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ".5",
            "1.5",
            "2.5",
            "3.5",
            "4.5",
            "5.5",
            "6.5",
            "7.5",
            "8.5",
            "-.5",
            "+",
            "*",
            "^",
            "_",
            ,
            "~",
            ,
            "]",
            "[[",
            "]]",
            ,
            ,
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            ,
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "ts",
            "tsh",
            "dz",
            "dzh",
            "w",
            "zh",
            "z",
            "'",
            "y",
            "r",
            "l",
            "sh",
            "ssh",
            "s",
            "h",
            "a",
            "kss",
            "r",
            ,
            ,
            ,
            ,
            ,
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "R",
            "RR",
            "L",
            "LL",
            "e",
            "ee",
            "o",
            "oo",
            "M",
            "H",
            "i",
            "ii",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            ,
            "ny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "ts",
            "tsh",
            "dz",
            "dzh",
            "w",
            "zh",
            "z",
            "'",
            "y",
            "r",
            "l",
            "sh",
            "ss",
            "s",
            "h",
            "a",
            "kss",
            "w",
            "y",
            "r",
            ,
            "X",
            " :X: ",
            " /O/ ",
            " /o/ ",
            " \\o\\ ",
            " (O) "
        ],
        [
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "nny",
            "tt",
            "tth",
            "dd",
            "ddh",
            "nn",
            "tt",
            "th",
            "d",
            "dh",
            "n",
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            "l",
            "w",
            "s",
            "h",
            "ll",
            "a",
            ,
            "i",
            "ii",
            "u",
            "uu",
            "e",
            ,
            "o",
            "au",
            ,
            "aa",
            "i",
            "ii",
            "u",
            "uu",
            "e",
            "ai",
            ,
            ,
            ,
            "N",
            "'",
            ":",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            " / ",
            " // ",
            "n*",
            "r*",
            "l*",
            "e*",
            "sh",
            "ss",
            "R",
            "RR",
            "L",
            "LL",
            "R",
            "RR",
            "L",
            "LL",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "A",
            "B",
            "G",
            "D",
            "E",
            "V",
            "Z",
            "T`",
            "I",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Zh",
            "R",
            "S",
            "T",
            "U",
            "P`",
            "K`",
            "G'",
            "Q",
            "Sh",
            "Ch`",
            "C`",
            "Z'",
            "C",
            "Ch",
            "X",
            "J",
            "H",
            "E",
            "Y",
            "W",
            "Xh",
            "OE",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "a",
            "b",
            "g",
            "d",
            "e",
            "v",
            "z",
            "t`",
            "i",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "zh",
            "r",
            "s",
            "t",
            "u",
            "p`",
            "k`",
            "g'",
            "q",
            "sh",
            "ch`",
            "c`",
            "z'",
            "c",
            "ch",
            "x",
            "j",
            "h",
            "e",
            "y",
            "w",
            "xh",
            "oe",
            "f",
            ,
            ,
            ,
            ,
            " // "
        ],
        [
            "g",
            "gg",
            "n",
            "d",
            "dd",
            "r",
            "m",
            "b",
            "bb",
            "s",
            "ss",
            ,
            "j",
            "jj",
            "c",
            "k",
            "t",
            "p",
            "h",
            "ng",
            "nn",
            "nd",
            "nb",
            "dg",
            "rn",
            "rr",
            "rh",
            "rN",
            "mb",
            "mN",
            "bg",
            "bn",
            ,
            "bs",
            "bsg",
            "bst",
            "bsb",
            "bss",
            "bsj",
            "bj",
            "bc",
            "bt",
            "bp",
            "bN",
            "bbN",
            "sg",
            "sn",
            "sd",
            "sr",
            "sm",
            "sb",
            "sbg",
            "sss",
            "s",
            "sj",
            "sc",
            "sk",
            "st",
            "sp",
            "sh",
            ,
            ,
            ,
            ,
            "Z",
            "g",
            "d",
            "m",
            "b",
            "s",
            "Z",
            ,
            "j",
            "c",
            "t",
            "p",
            "N",
            "j",
            ,
            ,
            ,
            ,
            "ck",
            "ch",
            ,
            ,
            "pb",
            "pN",
            "hh",
            "Q",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "a",
            "ae",
            "ya",
            "yae",
            "eo",
            "e",
            "yeo",
            "ye",
            "o",
            "wa",
            "wae",
            "oe",
            "yo",
            "u",
            "weo",
            "we",
            "wi",
            "yu",
            "eu",
            "yi",
            "i",
            "a-o",
            "a-u",
            "ya-o",
            "ya-yo",
            "eo-o",
            "eo-u",
            "eo-eu",
            "yeo-o",
            "yeo-u",
            "o-eo",
            "o-e",
            "o-ye",
            "o-o",
            "o-u",
            "yo-ya",
            "yo-yae",
            "yo-yeo",
            "yo-o",
            "yo-i",
            "u-a",
            "u-ae",
            "u-eo-eu",
            "u-ye",
            "u-u",
            "yu-a",
            "yu-eo",
            "yu-e",
            "yu-yeo",
            "yu-ye",
            "yu-u",
            "yu-i",
            "eu-u",
            "eu-eu",
            "yi-u",
            "i-a",
            "i-ya",
            "i-o",
            "i-u",
            "i-eu",
            "i-U",
            "U",
            "U-eo",
            "U-u",
            "U-i",
            "UU",
            ,
            ,
            ,
            ,
            ,
            "g",
            "gg",
            "gs",
            "n",
            "nj",
            "nh",
            "d",
            "l",
            "lg",
            "lm",
            "lb",
            "ls",
            "lt",
            "lp",
            "lh",
            "m",
            "b",
            "bs",
            "s",
            "ss",
            "ng",
            "j",
            "c",
            "k",
            "t",
            "p",
            "h",
            "gl",
            "gsg",
            "ng",
            "nd",
            "ns",
            "nZ",
            "nt",
            "dg",
            "tl",
            "lgs",
            "ln",
            "ld",
            "lth",
            "ll",
            "lmg",
            "lms",
            "lbs",
            "lbh",
            "rNp",
            "lss",
            "lZ",
            "lk",
            "lQ",
            "mg",
            "ml",
            "mb",
            "ms",
            "mss",
            "mZ",
            "mc",
            "mh",
            "mN",
            "bl",
            "bp",
            "ph",
            "pN",
            "sg",
            "sd",
            "sl",
            "sb",
            "Z",
            "g",
            "ss",
            ,
            "kh",
            "N",
            "Ns",
            "NZ",
            "pb",
            "pN",
            "hn",
            "hl",
            "hm",
            "hb",
            "Q"
        ],
        [
            "ha",
            "hu",
            "hi",
            "haa",
            "hee",
            "he",
            "ho",
            ,
            "la",
            "lu",
            "li",
            "laa",
            "lee",
            "le",
            "lo",
            "lwa",
            "hha",
            "hhu",
            "hhi",
            "hhaa",
            "hhee",
            "hhe",
            "hho",
            "hhwa",
            "ma",
            "mu",
            "mi",
            "maa",
            "mee",
            "me",
            "mo",
            "mwa",
            "sza",
            "szu",
            "szi",
            "szaa",
            "szee",
            "sze",
            "szo",
            "szwa",
            "ra",
            "ru",
            "ri",
            "raa",
            "ree",
            "re",
            "ro",
            "rwa",
            "sa",
            "su",
            "si",
            "saa",
            "see",
            "se",
            "so",
            "swa",
            "sha",
            "shu",
            "shi",
            "shaa",
            "shee",
            "she",
            "sho",
            "shwa",
            "qa",
            "qu",
            "qi",
            "qaa",
            "qee",
            "qe",
            "qo",
            ,
            "qwa",
            ,
            "qwi",
            "qwaa",
            "qwee",
            "qwe",
            ,
            ,
            "qha",
            "qhu",
            "qhi",
            "qhaa",
            "qhee",
            "qhe",
            "qho",
            ,
            "qhwa",
            ,
            "qhwi",
            "qhwaa",
            "qhwee",
            "qhwe",
            ,
            ,
            "ba",
            "bu",
            "bi",
            "baa",
            "bee",
            "be",
            "bo",
            "bwa",
            "va",
            "vu",
            "vi",
            "vaa",
            "vee",
            "ve",
            "vo",
            "vwa",
            "ta",
            "tu",
            "ti",
            "taa",
            "tee",
            "te",
            "to",
            "twa",
            "ca",
            "cu",
            "ci",
            "caa",
            "cee",
            "ce",
            "co",
            "cwa",
            "xa",
            "xu",
            "xi",
            "xaa",
            "xee",
            "xe",
            "xo",
            ,
            "xwa",
            ,
            "xwi",
            "xwaa",
            "xwee",
            "xwe",
            ,
            ,
            "na",
            "nu",
            "ni",
            "naa",
            "nee",
            "ne",
            "no",
            "nwa",
            "nya",
            "nyu",
            "nyi",
            "nyaa",
            "nyee",
            "nye",
            "nyo",
            "nywa",
            "'a",
            "'u",
            ,
            "'aa",
            "'ee",
            "'e",
            "'o",
            "'wa",
            "ka",
            "ku",
            "ki",
            "kaa",
            "kee",
            "ke",
            "ko",
            ,
            "kwa",
            ,
            "kwi",
            "kwaa",
            "kwee",
            "kwe",
            ,
            ,
            "kxa",
            "kxu",
            "kxi",
            "kxaa",
            "kxee",
            "kxe",
            "kxo",
            ,
            "kxwa",
            ,
            "kxwi",
            "kxwaa",
            "kxwee",
            "kxwe",
            ,
            ,
            "wa",
            "wu",
            "wi",
            "waa",
            "wee",
            "we",
            "wo",
            ,
            "`a",
            "`u",
            "`i",
            "`aa",
            "`ee",
            "`e",
            "`o",
            ,
            "za",
            "zu",
            "zi",
            "zaa",
            "zee",
            "ze",
            "zo",
            "zwa",
            "zha",
            "zhu",
            "zhi",
            "zhaa",
            "zhee",
            "zhe",
            "zho",
            "zhwa",
            "ya",
            "yu",
            "yi",
            "yaa",
            "yee",
            "ye",
            "yo",
            ,
            "da",
            "du",
            "di",
            "daa",
            "dee",
            "de",
            "do",
            "dwa",
            "dda",
            "ddu",
            "ddi",
            "ddaa",
            "ddee",
            "dde",
            "ddo",
            "ddwa"
        ],
        [
            "ja",
            "ju",
            "ji",
            "jaa",
            "jee",
            "je",
            "jo",
            "jwa",
            "ga",
            "gu",
            "gi",
            "gaa",
            "gee",
            "ge",
            "go",
            ,
            "gwa",
            ,
            "gwi",
            "gwaa",
            "gwee",
            "gwe",
            ,
            ,
            "gga",
            "ggu",
            "ggi",
            "ggaa",
            "ggee",
            "gge",
            "ggo",
            ,
            "tha",
            "thu",
            "thi",
            "thaa",
            "thee",
            "the",
            "tho",
            "thwa",
            "cha",
            "chu",
            "chi",
            "chaa",
            "chee",
            "che",
            "cho",
            "chwa",
            "pha",
            "phu",
            "phi",
            "phaa",
            "phee",
            "phe",
            "pho",
            "phwa",
            "tsa",
            "tsu",
            "tsi",
            "tsaa",
            "tsee",
            "tse",
            "tso",
            "tswa",
            "tza",
            "tzu",
            "tzi",
            "tzaa",
            "tzee",
            "tze",
            "tzo",
            ,
            "fa",
            "fu",
            "fi",
            "faa",
            "fee",
            "fe",
            "fo",
            "fwa",
            "pa",
            "pu",
            "pi",
            "paa",
            "pee",
            "pe",
            "po",
            "pwa",
            "rya",
            "mya",
            "fya",
            ,
            ,
            ,
            ,
            ,
            ,
            " ",
            ".",
            ",",
            ";",
            ":",
            ":: ",
            "?",
            "//",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10+",
            "20+",
            "30+",
            "40+",
            "50+",
            "60+",
            "70+",
            "80+",
            "90+",
            "100+",
            "10,000+",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "a",
            "e",
            "i",
            "o",
            "u",
            "v",
            "ga",
            "ka",
            "ge",
            "gi",
            "go",
            "gu",
            "gv",
            "ha",
            "he",
            "hi",
            "ho",
            "hu",
            "hv",
            "la",
            "le",
            "li",
            "lo",
            "lu",
            "lv",
            "ma",
            "me",
            "mi",
            "mo",
            "mu",
            "na",
            "hna",
            "nah",
            "ne",
            "ni",
            "no",
            "nu",
            "nv",
            "qua",
            "que",
            "qui",
            "quo",
            "quu",
            "quv",
            "sa",
            "s",
            "se",
            "si",
            "so",
            "su",
            "sv",
            "da",
            "ta",
            "de",
            "te",
            "di",
            "ti",
            "do",
            "du",
            "dv",
            "dla",
            "tla",
            "tle",
            "tli",
            "tlo",
            "tlu",
            "tlv",
            "tsa",
            "tse",
            "tsi",
            "tso",
            "tsu",
            "tsv",
            "wa",
            "we",
            "wi",
            "wo",
            "wu",
            "wv",
            "ya",
            "ye",
            "yi",
            "yo",
            "yu",
            "yv"
        ],
        [
            ,
            "ai",
            "aai",
            "i",
            "ii",
            "u",
            "uu",
            "oo",
            "ee",
            "i",
            "a",
            "aa",
            "we",
            "we",
            "wi",
            "wi",
            "wii",
            "wii",
            "wo",
            "wo",
            "woo",
            "woo",
            "woo",
            "wa",
            "wa",
            "waa",
            "waa",
            "waa",
            "ai",
            "w",
            "'",
            "t",
            "k",
            "sh",
            "s",
            "n",
            "w",
            "n",
            ,
            "w",
            "c",
            "?",
            "l",
            "en",
            "in",
            "on",
            "an",
            "pai",
            "paai",
            "pi",
            "pii",
            "pu",
            "puu",
            "poo",
            "hee",
            "hi",
            "pa",
            "paa",
            "pwe",
            "pwe",
            "pwi",
            "pwi",
            "pwii",
            "pwii",
            "pwo",
            "pwo",
            "pwoo",
            "pwoo",
            "pwa",
            "pwa",
            "pwaa",
            "pwaa",
            "pwaa",
            "p",
            "p",
            "h",
            "tai",
            "taai",
            "ti",
            "tii",
            "tu",
            "tuu",
            "too",
            "dee",
            "di",
            "ta",
            "taa",
            "twe",
            "twe",
            "twi",
            "twi",
            "twii",
            "twii",
            "two",
            "two",
            "twoo",
            "twoo",
            "twa",
            "twa",
            "twaa",
            "twaa",
            "twaa",
            "t",
            "tte",
            "tti",
            "tto",
            "tta",
            "kai",
            "kaai",
            "ki",
            "kii",
            "ku",
            "kuu",
            "koo",
            "ka",
            "kaa",
            "kwe",
            "kwe",
            "kwi",
            "kwi",
            "kwii",
            "kwii",
            "kwo",
            "kwo",
            "kwoo",
            "kwoo",
            "kwa",
            "kwa",
            "kwaa",
            "kwaa",
            "kwaa",
            "k",
            "kw",
            "keh",
            "kih",
            "koh",
            "kah",
            "gai",
            "caai",
            "gi",
            "gii",
            "gu",
            "guu",
            "coo",
            "ga",
            "gaa",
            "cwe",
            "cwe",
            "cwi",
            "cwi",
            "cwii",
            "cwii",
            "cwo",
            "cwo",
            "cwoo",
            "cwoo",
            "cwa",
            "cwa",
            "cwaa",
            "cwaa",
            "cwaa",
            "g",
            "th",
            "mai",
            "maai",
            "mi",
            "mii",
            "mu",
            "muu",
            "moo",
            "ma",
            "maa",
            "mwe",
            "mwe",
            "mwi",
            "mwi",
            "mwii",
            "mwii",
            "mwo",
            "mwo",
            "mwoo",
            "mwoo",
            "mwa",
            "mwa",
            "mwaa",
            "mwaa",
            "mwaa",
            "m",
            "m",
            "mh",
            "m",
            "m",
            "nai",
            "naai",
            "ni",
            "nii",
            "nu",
            "nuu",
            "noo",
            "na",
            "naa",
            "nwe",
            "nwe",
            "nwa",
            "nwa",
            "nwaa",
            "nwaa",
            "nwaa",
            "n",
            "ng",
            "nh",
            "lai",
            "laai",
            "li",
            "lii",
            "lu",
            "luu",
            "loo",
            "la",
            "laa",
            "lwe",
            "lwe",
            "lwi",
            "lwi",
            "lwii",
            "lwii",
            "lwo",
            "lwo",
            "lwoo",
            "lwoo",
            "lwa",
            "lwa",
            "lwaa",
            "lwaa",
            "l",
            "l",
            "l",
            "sai",
            "saai",
            "si",
            "sii",
            "su",
            "suu",
            "soo",
            "sa",
            "saa",
            "swe",
            "swe",
            "swi",
            "swi",
            "swii",
            "swii",
            "swo",
            "swo",
            "swoo",
            "swoo"
        ],
        [
            "swa",
            "swa",
            "swaa",
            "swaa",
            "swaa",
            "s",
            "s",
            "sw",
            "s",
            "sk",
            "skw",
            "sW",
            "spwa",
            "stwa",
            "skwa",
            "scwa",
            "she",
            "shi",
            "shii",
            "sho",
            "shoo",
            "sha",
            "shaa",
            "shwe",
            "shwe",
            "shwi",
            "shwi",
            "shwii",
            "shwii",
            "shwo",
            "shwo",
            "shwoo",
            "shwoo",
            "shwa",
            "shwa",
            "shwaa",
            "shwaa",
            "sh",
            "jai",
            "yaai",
            "ji",
            "jii",
            "ju",
            "juu",
            "yoo",
            "ja",
            "jaa",
            "ywe",
            "ywe",
            "ywi",
            "ywi",
            "ywii",
            "ywii",
            "ywo",
            "ywo",
            "ywoo",
            "ywoo",
            "ywa",
            "ywa",
            "ywaa",
            "ywaa",
            "ywaa",
            "j",
            "y",
            "y",
            "yi",
            "re",
            "rai",
            "le",
            "raai",
            "ri",
            "rii",
            "ru",
            "ruu",
            "lo",
            "ra",
            "raa",
            "la",
            "rwaa",
            "rwaa",
            "r",
            "r",
            "r",
            "vai",
            "faai",
            "vi",
            "vii",
            "vu",
            "vuu",
            "va",
            "vaa",
            "fwaa",
            "fwaa",
            "v",
            "the",
            "the",
            "thi",
            "thi",
            "thii",
            "thii",
            "tho",
            "thoo",
            "tha",
            "thaa",
            "thwaa",
            "thwaa",
            "th",
            "tthe",
            "tthi",
            "ttho",
            "ttha",
            "tth",
            "tye",
            "tyi",
            "tyo",
            "tya",
            "he",
            "hi",
            "hii",
            "ho",
            "hoo",
            "ha",
            "haa",
            "h",
            "h",
            "hk",
            "qaai",
            "qi",
            "qii",
            "qu",
            "quu",
            "qa",
            "qaa",
            "q",
            "tlhe",
            "tlhi",
            "tlho",
            "tlha",
            "re",
            "ri",
            "ro",
            "ra",
            "ngaai",
            "ngi",
            "ngii",
            "ngu",
            "nguu",
            "nga",
            "ngaa",
            "ng",
            "nng",
            "she",
            "shi",
            "sho",
            "sha",
            "the",
            "thi",
            "tho",
            "tha",
            "th",
            "lhi",
            "lhii",
            "lho",
            "lhoo",
            "lha",
            "lhaa",
            "lh",
            "the",
            "thi",
            "thii",
            "tho",
            "thoo",
            "tha",
            "thaa",
            "th",
            "b",
            "e",
            "i",
            "o",
            "a",
            "we",
            "wi",
            "wo",
            "wa",
            "ne",
            "ni",
            "no",
            "na",
            "ke",
            "ki",
            "ko",
            "ka",
            "he",
            "hi",
            "ho",
            "ha",
            "ghu",
            "gho",
            "ghe",
            "ghee",
            "ghi",
            "gha",
            "ru",
            "ro",
            "re",
            "ree",
            "ri",
            "ra",
            "wu",
            "wo",
            "we",
            "wee",
            "wi",
            "wa",
            "hwu",
            "hwo",
            "hwe",
            "hwee",
            "hwi",
            "hwa",
            "thu",
            "tho",
            "the",
            "thee",
            "thi",
            "tha",
            "ttu",
            "tto",
            "tte",
            "ttee",
            "tti",
            "tta",
            "pu",
            "po",
            "pe",
            "pee",
            "pi",
            "pa",
            "p",
            "gu",
            "go",
            "ge",
            "gee",
            "gi",
            "ga",
            "khu",
            "kho",
            "khe",
            "khee",
            "khi",
            "kha",
            "kku",
            "kko",
            "kke",
            "kkee",
            "kki"
        ],
        [
            "kka",
            "kk",
            "nu",
            "no",
            "ne",
            "nee",
            "ni",
            "na",
            "mu",
            "mo",
            "me",
            "mee",
            "mi",
            "ma",
            "yu",
            "yo",
            "ye",
            "yee",
            "yi",
            "ya",
            "ju",
            "ju",
            "jo",
            "je",
            "jee",
            "ji",
            "ji",
            "ja",
            "jju",
            "jjo",
            "jje",
            "jjee",
            "jji",
            "jja",
            "lu",
            "lo",
            "le",
            "lee",
            "li",
            "la",
            "dlu",
            "dlo",
            "dle",
            "dlee",
            "dli",
            "dla",
            "lhu",
            "lho",
            "lhe",
            "lhee",
            "lhi",
            "lha",
            "tlhu",
            "tlho",
            "tlhe",
            "tlhee",
            "tlhi",
            "tlha",
            "tlu",
            "tlo",
            "tle",
            "tlee",
            "tli",
            "tla",
            "zu",
            "zo",
            "ze",
            "zee",
            "zi",
            "za",
            "z",
            "z",
            "dzu",
            "dzo",
            "dze",
            "dzee",
            "dzi",
            "dza",
            "su",
            "so",
            "se",
            "see",
            "si",
            "sa",
            "shu",
            "sho",
            "she",
            "shee",
            "shi",
            "sha",
            "sh",
            "tsu",
            "tso",
            "tse",
            "tsee",
            "tsi",
            "tsa",
            "chu",
            "cho",
            "che",
            "chee",
            "chi",
            "cha",
            "ttsu",
            "ttso",
            "ttse",
            "ttsee",
            "ttsi",
            "ttsa",
            "X",
            ".",
            "qai",
            "ngai",
            "nngi",
            "nngii",
            "nngo",
            "nngoo",
            "nnga",
            "nngaa",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            " ",
            "b",
            "l",
            "f",
            "s",
            "n",
            "h",
            "d",
            "t",
            "c",
            "q",
            "m",
            "g",
            "ng",
            "z",
            "r",
            "a",
            "o",
            "u",
            "e",
            "i",
            "ch",
            "th",
            "ph",
            "p",
            "x",
            "p",
            "<",
            ">",
            ,
            ,
            ,
            "f",
            "v",
            "u",
            "yr",
            "y",
            "w",
            "th",
            "th",
            "a",
            "o",
            "ac",
            "ae",
            "o",
            "o",
            "o",
            "oe",
            "on",
            "r",
            "k",
            "c",
            "k",
            "g",
            "ng",
            "g",
            "g",
            "w",
            "h",
            "h",
            "h",
            "h",
            "n",
            "n",
            "n",
            "i",
            "e",
            "j",
            "g",
            "ae",
            "a",
            "eo",
            "p",
            "z",
            "s",
            "s",
            "s",
            "c",
            "z",
            "t",
            "t",
            "d",
            "b",
            "b",
            "p",
            "p",
            "e",
            "m",
            "m",
            "m",
            "l",
            "l",
            "ng",
            "ng",
            "d",
            "o",
            "ear",
            "ior",
            "qu",
            "qu",
            "qu",
            "s",
            "yr",
            "yr",
            "yr",
            "q",
            "x",
            ".",
            ":",
            "+",
            "17",
            "18",
            "19"
        ],
        [
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "k",
            "kh",
            "g",
            "gh",
            "ng",
            "c",
            "ch",
            "j",
            "jh",
            "ny",
            "t",
            "tth",
            "d",
            "ddh",
            "nn",
            "t",
            "th",
            "d",
            "dh",
            "n",
            "p",
            "ph",
            "b",
            "bh",
            "m",
            "y",
            "r",
            "l",
            "v",
            "sh",
            "ss",
            "s",
            "h",
            "l",
            "q",
            "a",
            "aa",
            "i",
            "ii",
            "u",
            "uk",
            "uu",
            "uuv",
            "ry",
            "ryy",
            "ly",
            "lyy",
            "e",
            "ai",
            "oo",
            "oo",
            "au",
            "a",
            "aa",
            "aa",
            "i",
            "ii",
            "y",
            "yy",
            "u",
            "uu",
            "ua",
            "oe",
            "ya",
            "ie",
            "e",
            "ae",
            "ai",
            "oo",
            "au",
            "M",
            "H",
            "a`",
            ,
            ,
            ,
            "r",
            ,
            "!",
            ,
            ,
            ,
            ,
            ,
            ".",
            " // ",
            ":",
            "+",
            "++",
            " * ",
            " /// ",
            "KR",
            "'",
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        [
            " @ ",
            " ... ",
            ",",
            ". ",
            ": ",
            " // ",
            ,
            "-",
            ",",
            ". ",
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ,
            ,
            ,
            ,
            ,
            ,
            "a",
            "e",
            "i",
            "o",
            "u",
            "O",
            "U",
            "ee",
            "n",
            "ng",
            "b",
            "p",
            "q",
            "g",
            "m",
            "l",
            "s",
            "sh",
            "t",
            "d",
            "ch",
            "j",
            "y",
            "r",
            "w",
            "f",
            "k",
            "kha",
            "ts",
            "z",
            "h",
            "zr",
            "lh",
            "zh",
            "ch",
            "-",
            "e",
            "i",
            "o",
            "u",
            "O",
            "U",
            "ng",
            "b",
            "p",
            "q",
            "g",
            "m",
            "t",
            "d",
            "ch",
            "j",
            "ts",
            "y",
            "w",
            "k",
            "g",
            "h",
            "jy",
            "ny",
            "dz",
            "e",
            "i",
            "iy",
            "U",
            "u",
            "ng",
            "k",
            "g",
            "h",
            "p",
            "sh",
            "t",
            "d",
            "j",
            "f",
            "g",
            "h",
            "ts",
            "z",
            "r",
            "ch",
            "zh",
            "i",
            "k",
            "r",
            "f",
            "zh",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "H",
            "X",
            "W",
            "M",
            " 3 ",
            " 333 ",
            "a",
            "i",
            "k",
            "ng",
            "c",
            "tt",
            "tth",
            "dd",
            "nn",
            "t",
            "d",
            "p",
            "ph",
            "ss",
            "zh",
            "z",
            "a",
            "t",
            "zh",
            "gh",
            "ng",
            "c",
            "jh",
            "tta",
            "ddh",
            "t",
            "dh",
            "ss",
            "cy",
            "zh",
            "z",
            "u",
            "y",
            "bh",
            "'"
        ],
        [],
        [],
        [],
        [],
        [],
        [
            "A",
            "a",
            "B",
            "b",
            "B",
            "b",
            "B",
            "b",
            "C",
            "c",
            "D",
            "d",
            "D",
            "d",
            "D",
            "d",
            "D",
            "d",
            "D",
            "d",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "F",
            "f",
            "G",
            "g",
            "H",
            "h",
            "H",
            "h",
            "H",
            "h",
            "H",
            "h",
            "H",
            "h",
            "I",
            "i",
            "I",
            "i",
            "K",
            "k",
            "K",
            "k",
            "K",
            "k",
            "L",
            "l",
            "L",
            "l",
            "L",
            "l",
            "L",
            "l",
            "M",
            "m",
            "M",
            "m",
            "M",
            "m",
            "N",
            "n",
            "N",
            "n",
            "N",
            "n",
            "N",
            "n",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "P",
            "p",
            "P",
            "p",
            "R",
            "r",
            "R",
            "r",
            "R",
            "r",
            "R",
            "r",
            "S",
            "s",
            "S",
            "s",
            "S",
            "s",
            "S",
            "s",
            "S",
            "s",
            "T",
            "t",
            "T",
            "t",
            "T",
            "t",
            "T",
            "t",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "V",
            "v",
            "V",
            "v",
            "W",
            "w",
            "W",
            "w",
            "W",
            "w",
            "W",
            "w",
            "W",
            "w",
            "X",
            "x",
            "X",
            "x",
            "Y",
            "y",
            "Z",
            "z",
            "Z",
            "z",
            "Z",
            "z",
            "h",
            "t",
            "w",
            "y",
            "a",
            "S",
            ,
            ,
            ,
            ,
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "A",
            "a",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "E",
            "e",
            "I",
            "i",
            "I",
            "i",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "O",
            "o",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "U",
            "u",
            "Y",
            "y",
            "Y",
            "y",
            "Y",
            "y",
            "Y",
            "y"
        ],
        [
            "a",
            "a",
            "a",
            "a",
            "a",
            "a",
            "a",
            "a",
            "A",
            "A",
            "A",
            "A",
            "A",
            "A",
            "A",
            "A",
            "e",
            "e",
            "e",
            "e",
            "e",
            "e",
            ,
            ,
            "E",
            "E",
            "E",
            "E",
            "E",
            "E",
            ,
            ,
            "e",
            "e",
            "e",
            "e",
            "e",
            "e",
            "e",
            "e",
            "E",
            "E",
            "E",
            "E",
            "E",
            "E",
            "E",
            "E",
            "i",
            "i",
            "i",
            "i",
            "i",
            "i",
            "i",
            "i",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "o",
            "o",
            "o",
            "o",
            "o",
            "o",
            ,
            ,
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            ,
            ,
            "u",
            "u",
            "u",
            "u",
            "u",
            "u",
            "u",
            "u",
            ,
            "U",
            ,
            "U",
            ,
            "U",
            ,
            "U",
            "o",
            "o",
            "o",
            "o",
            "o",
            "o",
            "o",
            "o",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "a",
            "a",
            "e",
            "e",
            "e",
            "e",
            "i",
            "i",
            "o",
            "o",
            "u",
            "u",
            "o",
            "o",
            ,
            ,
            "a",
            "a",
            "a",
            "a",
            "a",
            "a",
            "a",
            "a",
            "A",
            "A",
            "A",
            "A",
            "A",
            "A",
            "A",
            "A",
            "e",
            "e",
            "e",
            "e",
            "e",
            "e",
            "e",
            "e",
            "E",
            "E",
            "E",
            "E",
            "E",
            "E",
            "E",
            "E",
            "o",
            "o",
            "o",
            "o",
            "o",
            "o",
            "o",
            "o",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "a",
            "a",
            "a",
            "a",
            "a",
            ,
            "a",
            "a",
            "A",
            "A",
            "A",
            "A",
            "A",
            "'",
            "i",
            "'",
            "~",
            '"~',
            "e",
            "e",
            "e",
            ,
            "e",
            "e",
            "E",
            "E",
            "E",
            "E",
            "E",
            "'`",
            "''",
            "'~",
            "i",
            "i",
            "i",
            "i",
            ,
            ,
            "i",
            "i",
            "I",
            "I",
            "I",
            "I",
            ,
            "`'",
            "`'",
            "`~",
            "u",
            "u",
            "u",
            "u",
            "R",
            "R",
            "u",
            "u",
            "U",
            "U",
            "U",
            "U",
            "R",
            '"`',
            "\"'",
            "`",
            ,
            ,
            "o",
            "o",
            "o",
            ,
            "o",
            "o",
            "O",
            "O",
            "O",
            "O",
            "O",
            "'",
            "`"
        ],
        [
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
            " ",
            ,
            ,
            ,
            ,
            "-",
            "-",
            "-",
            "-",
            "--",
            "--",
            "||",
            "_",
            "'",
            "'",
            ",",
            "'",
            '"',
            '"',
            ",,",
            '"',
            "+",
            "++",
            "*",
            "*>",
            ".",
            "..",
            "...",
            ".",
            "\n",
            "\n\n",
            ,
            ,
            ,
            ,
            ,
            " ",
            "%0",
            "%00",
            "'",
            "''",
            "'''",
            "`",
            "``",
            "```",
            "^",
            "<",
            ">",
            "*",
            "!!",
            "!?",
            "-",
            "_",
            "-",
            "^",
            "***",
            "--",
            "/",
            "-[",
            "]-",
            ,
            "?!",
            "!?",
            "7",
            "PP",
            "(]",
            "[)",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "0",
            ,
            ,
            ,
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "+",
            "-",
            "=",
            "(",
            ")",
            "n",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "+",
            "-",
            "=",
            "(",
            ")",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "ECU",
            "CL",
            "Cr",
            "FF",
            "L",
            "mil",
            "N",
            "Pts",
            "Rs",
            "W",
            "NS",
            "D",
            "EU",
            "K",
            "T",
            "Dr"
        ],
        [
            ,
            ,
            "C",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "g",
            "H",
            "H",
            "H",
            "h",
            ,
            "I",
            "I",
            "L",
            "l",
            "lb",
            "N",
            "no",
            "(p)",
            "P",
            "P",
            "Q",
            "R",
            "R",
            "R",
            ,
            ,
            "(sm)",
            "(tel)",
            "(tm)",
            ,
            "Z",
            ,
            ,
            "mho",
            "Z",
            ,
            ,
            ,
            "B",
            "C",
            "e",
            "e",
            ,
            "F",
            ,
            "M",
            "o",
            ,
            ,
            ,
            ,
            "i",
            "Q",
            "(fax)",
            "pi",
            ,
            ,
            "Pi",
            ,
            "G",
            "L",
            "L",
            "Y",
            "D",
            "d",
            "e",
            "i",
            "j",
            ,
            ,
            "per",
            ,
            ,
            ,
            ,
            ,
            ,
            " 1/3 ",
            " 2/3 ",
            " 1/5 ",
            " 2/5 ",
            " 3/5 ",
            " 4/5 ",
            " 1/6 ",
            " 5/6 ",
            " 1/8 ",
            " 3/8 ",
            " 5/8 ",
            " 7/8 ",
            " 1/",
            "I",
            "II",
            "III",
            "IV",
            "V",
            "VI",
            "VII",
            "VIII",
            "IX",
            "X",
            "XI",
            "XII",
            "L",
            "C",
            "D",
            "M",
            "i",
            "ii",
            "iii",
            "iv",
            "v",
            "vi",
            "vii",
            "viii",
            "ix",
            "x",
            "xi",
            "xii",
            "l",
            "c",
            "d",
            "m",
            "(D",
            "D)",
            "((|))",
            ")",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "-",
            "|",
            "-",
            "|",
            "-",
            "|",
            "\\",
            "/",
            "\\",
            "/",
            "-",
            "-",
            "~",
            "~",
            "-",
            "|",
            "-",
            "|",
            "-",
            "-",
            "-",
            "|",
            "-",
            "|",
            "|",
            "-",
            "-",
            "-",
            "-",
            "-",
            "-",
            "|",
            "|",
            "|",
            "|",
            "|",
            "|",
            "|",
            "^",
            "V",
            "\\",
            "=",
            "V",
            "^",
            "-",
            "-",
            "|",
            "|",
            "-",
            "-",
            "|",
            "|",
            "=",
            "|",
            "=",
            "=",
            "|",
            "=",
            "|",
            "=",
            "=",
            "=",
            "=",
            "=",
            "=",
            "|",
            "=",
            "|",
            "=",
            "|",
            "\\",
            "/",
            "\\",
            "/",
            "=",
            "=",
            "~",
            "~",
            "|",
            "|",
            "-",
            "|",
            "-",
            "|",
            "-",
            "-",
            "-",
            "|",
            "-",
            "|",
            "|",
            "|",
            "|",
            "|",
            "|",
            "|",
            "-",
            "\\",
            "\\",
            "|"
        ],
        [],
        [],
        [],
        [
            "-",
            "-",
            "|",
            "|",
            "-",
            "-",
            "|",
            "|",
            "-",
            "-",
            "|",
            "|",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "-",
            "-",
            "|",
            "|",
            "-",
            "|",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "+",
            "/",
            "\\",
            "X",
            "-",
            "|",
            "-",
            "|",
            "-",
            "|",
            "-",
            "|",
            "-",
            "|",
            "-",
            "|",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "-",
            "|",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "^",
            "^",
            "^",
            "^",
            ">",
            ">",
            ">",
            ">",
            ">",
            ">",
            "V",
            "V",
            "V",
            "V",
            "<",
            "<",
            "<",
            "<",
            "<",
            "<",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "#",
            "#",
            "#",
            "#",
            "#",
            "^",
            "^",
            "^",
            "O",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#",
            "#"
        ],
        [],
        [],
        [
            " ",
            "a",
            "1",
            "b",
            "'",
            "k",
            "2",
            "l",
            "@",
            "c",
            "i",
            "f",
            "/",
            "m",
            "s",
            "p",
            '"',
            "e",
            "3",
            "h",
            "9",
            "o",
            "6",
            "r",
            "^",
            "d",
            "j",
            "g",
            ">",
            "n",
            "t",
            "q",
            ",",
            "*",
            "5",
            "<",
            "-",
            "u",
            "8",
            "v",
            ".",
            "%",
            "[",
            "$",
            "+",
            "x",
            "!",
            "&",
            ";",
            ":",
            "4",
            "\\",
            "0",
            "z",
            "7",
            "(",
            "_",
            "?",
            "w",
            "]",
            "#",
            "y",
            ")",
            "=",
            "[d7]",
            "[d17]",
            "[d27]",
            "[d127]",
            "[d37]",
            "[d137]",
            "[d237]",
            "[d1237]",
            "[d47]",
            "[d147]",
            "[d247]",
            "[d1247]",
            "[d347]",
            "[d1347]",
            "[d2347]",
            "[d12347]",
            "[d57]",
            "[d157]",
            "[d257]",
            "[d1257]",
            "[d357]",
            "[d1357]",
            "[d2357]",
            "[d12357]",
            "[d457]",
            "[d1457]",
            "[d2457]",
            "[d12457]",
            "[d3457]",
            "[d13457]",
            "[d23457]",
            "[d123457]",
            "[d67]",
            "[d167]",
            "[d267]",
            "[d1267]",
            "[d367]",
            "[d1367]",
            "[d2367]",
            "[d12367]",
            "[d467]",
            "[d1467]",
            "[d2467]",
            "[d12467]",
            "[d3467]",
            "[d13467]",
            "[d23467]",
            "[d123467]",
            "[d567]",
            "[d1567]",
            "[d2567]",
            "[d12567]",
            "[d3567]",
            "[d13567]",
            "[d23567]",
            "[d123567]",
            "[d4567]",
            "[d14567]",
            "[d24567]",
            "[d124567]",
            "[d34567]",
            "[d134567]",
            "[d234567]",
            "[d1234567]",
            "[d8]",
            "[d18]",
            "[d28]",
            "[d128]",
            "[d38]",
            "[d138]",
            "[d238]",
            "[d1238]",
            "[d48]",
            "[d148]",
            "[d248]",
            "[d1248]",
            "[d348]",
            "[d1348]",
            "[d2348]",
            "[d12348]",
            "[d58]",
            "[d158]",
            "[d258]",
            "[d1258]",
            "[d358]",
            "[d1358]",
            "[d2358]",
            "[d12358]",
            "[d458]",
            "[d1458]",
            "[d2458]",
            "[d12458]",
            "[d3458]",
            "[d13458]",
            "[d23458]",
            "[d123458]",
            "[d68]",
            "[d168]",
            "[d268]",
            "[d1268]",
            "[d368]",
            "[d1368]",
            "[d2368]",
            "[d12368]",
            "[d468]",
            "[d1468]",
            "[d2468]",
            "[d12468]",
            "[d3468]",
            "[d13468]",
            "[d23468]",
            "[d123468]",
            "[d568]",
            "[d1568]",
            "[d2568]",
            "[d12568]",
            "[d3568]",
            "[d13568]",
            "[d23568]",
            "[d123568]",
            "[d4568]",
            "[d14568]",
            "[d24568]",
            "[d124568]",
            "[d34568]",
            "[d134568]",
            "[d234568]",
            "[d1234568]",
            "[d78]",
            "[d178]",
            "[d278]",
            "[d1278]",
            "[d378]",
            "[d1378]",
            "[d2378]",
            "[d12378]",
            "[d478]",
            "[d1478]",
            "[d2478]",
            "[d12478]",
            "[d3478]",
            "[d13478]",
            "[d23478]",
            "[d123478]",
            "[d578]",
            "[d1578]",
            "[d2578]",
            "[d12578]",
            "[d3578]",
            "[d13578]",
            "[d23578]",
            "[d123578]",
            "[d4578]",
            "[d14578]",
            "[d24578]",
            "[d124578]",
            "[d34578]",
            "[d134578]",
            "[d234578]",
            "[d1234578]",
            "[d678]",
            "[d1678]",
            "[d2678]",
            "[d12678]",
            "[d3678]",
            "[d13678]",
            "[d23678]",
            "[d123678]",
            "[d4678]",
            "[d14678]",
            "[d24678]",
            "[d124678]",
            "[d34678]",
            "[d134678]",
            "[d234678]",
            "[d1234678]",
            "[d5678]",
            "[d15678]",
            "[d25678]",
            "[d125678]",
            "[d35678]",
            "[d135678]",
            "[d235678]",
            "[d1235678]",
            "[d45678]",
            "[d145678]",
            "[d245678]",
            "[d1245678]",
            "[d345678]",
            "[d1345678]",
            "[d2345678]",
            "[d12345678]"
        ],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [
            " ",
            ",",
            ". ",
            '"',
            "[JIS]",
            '"',
            "/",
            "0",
            "<",
            "> ",
            "<<",
            ">> ",
            "[",
            "] ",
            "{",
            "} ",
            "[(",
            ")] ",
            "@",
            "X ",
            "[",
            "] ",
            "[[",
            "]] ",
            "((",
            ")) ",
            "[[",
            "]] ",
            "~ ",
            "``",
            "''",
            ",,",
            "@",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ,
            ,
            ,
            ,
            ,
            ,
            "~",
            "+",
            "+",
            "+",
            "+",
            ,
            "@",
            " // ",
            "+10+",
            "+20+",
            "+30+",
            ,
            ,
            ,
            ,
            ,
            ,
            "a",
            "a",
            "i",
            "i",
            "u",
            "u",
            "e",
            "e",
            "o",
            "o",
            "ka",
            "ga",
            "ki",
            "gi",
            "ku",
            "gu",
            "ke",
            "ge",
            "ko",
            "go",
            "sa",
            "za",
            "si",
            "zi",
            "su",
            "zu",
            "se",
            "ze",
            "so",
            "zo",
            "ta",
            "da",
            "ti",
            "di",
            "tu",
            "tu",
            "du",
            "te",
            "de",
            "to",
            "do",
            "na",
            "ni",
            "nu",
            "ne",
            "no",
            "ha",
            "ba",
            "pa",
            "hi",
            "bi",
            "pi",
            "hu",
            "bu",
            "pu",
            "he",
            "be",
            "pe",
            "ho",
            "bo",
            "po",
            "ma",
            "mi",
            "mu",
            "me",
            "mo",
            "ya",
            "ya",
            "yu",
            "yu",
            "yo",
            "yo",
            "ra",
            "ri",
            "ru",
            "re",
            "ro",
            "wa",
            "wa",
            "wi",
            "we",
            "wo",
            "n",
            "vu",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            '"',
            '"',
            ,
            ,
            "a",
            "a",
            "i",
            "i",
            "u",
            "u",
            "e",
            "e",
            "o",
            "o",
            "ka",
            "ga",
            "ki",
            "gi",
            "ku",
            "gu",
            "ke",
            "ge",
            "ko",
            "go",
            "sa",
            "za",
            "si",
            "zi",
            "su",
            "zu",
            "se",
            "ze",
            "so",
            "zo",
            "ta",
            "da",
            "ti",
            "di",
            "tu",
            "tu",
            "du",
            "te",
            "de",
            "to",
            "do",
            "na",
            "ni",
            "nu",
            "ne",
            "no",
            "ha",
            "ba",
            "pa",
            "hi",
            "bi",
            "pi",
            "hu",
            "bu",
            "pu",
            "he",
            "be",
            "pe",
            "ho",
            "bo",
            "po",
            "ma",
            "mi",
            "mu",
            "me",
            "mo",
            "ya",
            "ya",
            "yu",
            "yu",
            "yo",
            "yo",
            "ra",
            "ri",
            "ru",
            "re",
            "ro",
            "wa",
            "wa",
            "wi",
            "we",
            "wo",
            "n",
            "vu",
            "ka",
            "ke",
            "va",
            "vi",
            "ve",
            "vo",
            ,
            ,
            '"',
            '"'
        ],
        [
            ,
            ,
            ,
            ,
            ,
            "B",
            "P",
            "M",
            "F",
            "D",
            "T",
            "N",
            "L",
            "G",
            "K",
            "H",
            "J",
            "Q",
            "X",
            "ZH",
            "CH",
            "SH",
            "R",
            "Z",
            "C",
            "S",
            "A",
            "O",
            "E",
            "EH",
            "AI",
            "EI",
            "AU",
            "OU",
            "AN",
            "EN",
            "ANG",
            "ENG",
            "ER",
            "I",
            "U",
            "IU",
            "V",
            "NG",
            "GN",
            ,
            ,
            ,
            ,
            "g",
            "gg",
            "gs",
            "n",
            "nj",
            "nh",
            "d",
            "dd",
            "r",
            "lg",
            "lm",
            "lb",
            "ls",
            "lt",
            "lp",
            "rh",
            "m",
            "b",
            "bb",
            "bs",
            "s",
            "ss",
            ,
            "j",
            "jj",
            "c",
            "k",
            "t",
            "p",
            "h",
            "a",
            "ae",
            "ya",
            "yae",
            "eo",
            "e",
            "yeo",
            "ye",
            "o",
            "wa",
            "wae",
            "oe",
            "yo",
            "u",
            "weo",
            "we",
            "wi",
            "yu",
            "eu",
            "yi",
            "i",
            ,
            "nn",
            "nd",
            "ns",
            "nZ",
            "lgs",
            "ld",
            "lbs",
            "lZ",
            "lQ",
            "mb",
            "ms",
            "mZ",
            "mN",
            "bg",
            ,
            "bsg",
            "bst",
            "bj",
            "bt",
            "bN",
            "bbN",
            "sg",
            "sn",
            "sd",
            "sb",
            "sj",
            "Z",
            ,
            "N",
            "Ns",
            "NZ",
            "pN",
            "hh",
            "Q",
            "yo-ya",
            "yo-yae",
            "yo-i",
            "yu-yeo",
            "yu-ye",
            "yu-i",
            "U",
            "U-i",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "BU",
            "ZI",
            "JI",
            "GU",
            "EE",
            "ENN",
            "OO",
            "ONN",
            "IR",
            "ANN",
            "INN",
            "UNN",
            "IM",
            "NGG",
            "AINN",
            "AUNN",
            "AM",
            "OM",
            "ONG",
            "INNN",
            "P",
            "T",
            "K",
            "H"
        ],
        [
            "(g)",
            "(n)",
            "(d)",
            "(r)",
            "(m)",
            "(b)",
            "(s)",
            "()",
            "(j)",
            "(c)",
            "(k)",
            "(t)",
            "(p)",
            "(h)",
            "(ga)",
            "(na)",
            "(da)",
            "(ra)",
            "(ma)",
            "(ba)",
            "(sa)",
            "(a)",
            "(ja)",
            "(ca)",
            "(ka)",
            "(ta)",
            "(pa)",
            "(ha)",
            "(ju)",
            ,
            ,
            ,
            "(1) ",
            "(2) ",
            "(3) ",
            "(4) ",
            "(5) ",
            "(6) ",
            "(7) ",
            "(8) ",
            "(9) ",
            "(10) ",
            "(Yue) ",
            "(Huo) ",
            "(Shui) ",
            "(Mu) ",
            "(Jin) ",
            "(Tu) ",
            "(Ri) ",
            "(Zhu) ",
            "(You) ",
            "(She) ",
            "(Ming) ",
            "(Te) ",
            "(Cai) ",
            "(Zhu) ",
            "(Lao) ",
            "(Dai) ",
            "(Hu) ",
            "(Xue) ",
            "(Jian) ",
            "(Qi) ",
            "(Zi) ",
            "(Xie) ",
            "(Ji) ",
            "(Xiu) ",
            "<<",
            ">>",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "(g)",
            "(n)",
            "(d)",
            "(r)",
            "(m)",
            "(b)",
            "(s)",
            "()",
            "(j)",
            "(c)",
            "(k)",
            "(t)",
            "(p)",
            "(h)",
            "(ga)",
            "(na)",
            "(da)",
            "(ra)",
            "(ma)",
            "(ba)",
            "(sa)",
            "(a)",
            "(ja)",
            "(ca)",
            "(ka)",
            "(ta)",
            "(pa)",
            "(ha)",
            ,
            ,
            ,
            "KIS ",
            "(1) ",
            "(2) ",
            "(3) ",
            "(4) ",
            "(5) ",
            "(6) ",
            "(7) ",
            "(8) ",
            "(9) ",
            "(10) ",
            "(Yue) ",
            "(Huo) ",
            "(Shui) ",
            "(Mu) ",
            "(Jin) ",
            "(Tu) ",
            "(Ri) ",
            "(Zhu) ",
            "(You) ",
            "(She) ",
            "(Ming) ",
            "(Te) ",
            "(Cai) ",
            "(Zhu) ",
            "(Lao) ",
            "(Mi) ",
            "(Nan) ",
            "(Nu) ",
            "(Shi) ",
            "(You) ",
            "(Yin) ",
            "(Zhu) ",
            "(Xiang) ",
            "(Xiu) ",
            "(Xie) ",
            "(Zheng) ",
            "(Shang) ",
            "(Zhong) ",
            "(Xia) ",
            "(Zuo) ",
            "(You) ",
            "(Yi) ",
            "(Zong) ",
            "(Xue) ",
            "(Jian) ",
            "(Qi) ",
            "(Zi) ",
            "(Xie) ",
            "(Ye) ",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "1M",
            "2M",
            "3M",
            "4M",
            "5M",
            "6M",
            "7M",
            "8M",
            "9M",
            "10M",
            "11M",
            "12M",
            ,
            ,
            ,
            ,
            "a",
            "i",
            "u",
            "u",
            "o",
            "ka",
            "ki",
            "ku",
            "ke",
            "ko",
            "sa",
            "si",
            "su",
            "se",
            "so",
            "ta",
            "ti",
            "tu",
            "te",
            "to",
            "na",
            "ni",
            "nu",
            "ne",
            "no",
            "ha",
            "hi",
            "hu",
            "he",
            "ho",
            "ma",
            "mi",
            "mu",
            "me",
            "mo",
            "ya",
            "yu",
            "yo",
            "ra",
            "ri",
            "ru",
            "re",
            "ro",
            "wa",
            "wi",
            "we",
            "wo"
        ],
        [
            "apartment",
            "alpha",
            "ampere",
            "are",
            "inning",
            "inch",
            "won",
            "escudo",
            "acre",
            "ounce",
            "ohm",
            "kai-ri",
            "carat",
            "calorie",
            "gallon",
            "gamma",
            "giga",
            "guinea",
            "curie",
            "guilder",
            "kilo",
            "kilogram",
            "kilometer",
            "kilowatt",
            "gram",
            "gram ton",
            "cruzeiro",
            "krone",
            "case",
            "koruna",
            "co-op",
            "cycle",
            "centime",
            "shilling",
            "centi",
            "cent",
            "dozen",
            "desi",
            "dollar",
            "ton",
            "nano",
            "knot",
            "heights",
            "percent",
            "parts",
            "barrel",
            "piaster",
            "picul",
            "pico",
            "building",
            "farad",
            "feet",
            "bushel",
            "franc",
            "hectare",
            "peso",
            "pfennig",
            "hertz",
            "pence",
            "page",
            "beta",
            "point",
            "volt",
            "hon",
            "pound",
            "hall",
            "horn",
            "micro",
            "mile",
            "mach",
            "mark",
            "mansion",
            "micron",
            "milli",
            "millibar",
            "mega",
            "megaton",
            "meter",
            "yard",
            "yard",
            "yuan",
            "liter",
            "lira",
            "rupee",
            "ruble",
            "rem",
            "roentgen",
            "watt",
            "0h",
            "1h",
            "2h",
            "3h",
            "4h",
            "5h",
            "6h",
            "7h",
            "8h",
            "9h",
            "10h",
            "11h",
            "12h",
            "13h",
            "14h",
            "15h",
            "16h",
            "17h",
            "18h",
            "19h",
            "20h",
            "21h",
            "22h",
            "23h",
            "24h",
            "HPA",
            "da",
            "AU",
            "bar",
            "oV",
            "pc",
            ,
            ,
            ,
            ,
            "Heisei",
            "Syouwa",
            "Taisyou",
            "Meiji",
            "Inc.",
            "pA",
            "nA",
            "microamp",
            "mA",
            "kA",
            "kB",
            "MB",
            "GB",
            "cal",
            "kcal",
            "pF",
            "nF",
            "microFarad",
            "microgram",
            "mg",
            "kg",
            "Hz",
            "kHz",
            "MHz",
            "GHz",
            "THz",
            "microliter",
            "ml",
            "dl",
            "kl",
            "fm",
            "nm",
            "micrometer",
            "mm",
            "cm",
            "km",
            "mm^2",
            "cm^2",
            "m^2",
            "km^2",
            "mm^4",
            "cm^3",
            "m^3",
            "km^3",
            "m/s",
            "m/s^2",
            "Pa",
            "kPa",
            "MPa",
            "GPa",
            "rad",
            "rad/s",
            "rad/s^2",
            "ps",
            "ns",
            "microsecond",
            "ms",
            "pV",
            "nV",
            "microvolt",
            "mV",
            "kV",
            "MV",
            "pW",
            "nW",
            "microwatt",
            "mW",
            "kW",
            "MW",
            "kOhm",
            "MOhm",
            "a.m.",
            "Bq",
            "cc",
            "cd",
            "C/kg",
            "Co.",
            "dB",
            "Gy",
            "ha",
            "HP",
            "in",
            "K.K.",
            "KM",
            "kt",
            "lm",
            "ln",
            "log",
            "lx",
            "mb",
            "mil",
            "mol",
            "pH",
            "p.m.",
            "PPM",
            "PR",
            "sr",
            "Sv",
            "Wb",
            ,
            ,
            "1d",
            "2d",
            "3d",
            "4d",
            "5d",
            "6d",
            "7d",
            "8d",
            "9d",
            "10d",
            "11d",
            "12d",
            "13d",
            "14d",
            "15d",
            "16d",
            "17d",
            "18d",
            "19d",
            "20d",
            "21d",
            "22d",
            "23d",
            "24d",
            "25d",
            "26d",
            "27d",
            "28d",
            "29d",
            "30d",
            "31d"
        ],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [
            "Yi",
            "Ding",
            "Kao",
            "Qi",
            "Shang",
            "Xia",
            ,
            "Wan",
            "Zhang",
            "San",
            "Shang",
            "Xia",
            "Ji",
            "Bu",
            "Yu",
            "Mian",
            "Gai",
            "Chou",
            "Chou",
            "Zhuan",
            "Qie",
            "Pi",
            "Shi",
            "Shi",
            "Qiu",
            "Bing",
            "Ye",
            "Cong",
            "Dong",
            "Si",
            "Cheng",
            "Diu",
            "Qiu",
            "Liang",
            "Diu",
            "You",
            "Liang",
            "Yan",
            "Bing",
            "Sang",
            "Gun",
            "Jiu",
            "Ge",
            "Ya",
            "Qiang",
            "Zhong",
            "Ji",
            "Jie",
            "Feng",
            "Guan",
            "Chuan",
            "Chan",
            "Lin",
            "Zhuo",
            "Zhu",
            "Ha",
            "Wan",
            "Dan",
            "Wei",
            "Zhu",
            "Jing",
            "Li",
            "Ju",
            "Pie",
            "Fu",
            "Yi",
            "Yi",
            "Nai",
            "Shime",
            "Jiu",
            "Jiu",
            "Zhe",
            "Me",
            "Yi",
            ,
            "Zhi",
            "Wu",
            "Zha",
            "Hu",
            "Fa",
            "Le",
            "Zhong",
            "Ping",
            "Pang",
            "Qiao",
            "Hu",
            "Guai",
            "Cheng",
            "Cheng",
            "Yi",
            "Yin",
            ,
            "Mie",
            "Jiu",
            "Qi",
            "Ye",
            "Xi",
            "Xiang",
            "Gai",
            "Diu",
            "Hal",
            ,
            "Shu",
            "Twul",
            "Shi",
            "Ji",
            "Nang",
            "Jia",
            "Kel",
            "Shi",
            ,
            "Ol",
            "Mai",
            "Luan",
            "Cal",
            "Ru",
            "Xue",
            "Yan",
            "Fu",
            "Sha",
            "Na",
            "Gan",
            "Sol",
            "El",
            "Cwul",
            ,
            "Gan",
            "Chi",
            "Gui",
            "Gan",
            "Luan",
            "Lin",
            "Yi",
            "Jue",
            "Liao",
            "Ma",
            "Yu",
            "Zheng",
            "Shi",
            "Shi",
            "Er",
            "Chu",
            "Yu",
            "Yu",
            "Yu",
            "Yun",
            "Hu",
            "Qi",
            "Wu",
            "Jing",
            "Si",
            "Sui",
            "Gen",
            "Gen",
            "Ya",
            "Xie",
            "Ya",
            "Qi",
            "Ya",
            "Ji",
            "Tou",
            "Wang",
            "Kang",
            "Ta",
            "Jiao",
            "Hai",
            "Yi",
            "Chan",
            "Heng",
            "Mu",
            ,
            "Xiang",
            "Jing",
            "Ting",
            "Liang",
            "Xiang",
            "Jing",
            "Ye",
            "Qin",
            "Bo",
            "You",
            "Xie",
            "Dan",
            "Lian",
            "Duo",
            "Wei",
            "Ren",
            "Ren",
            "Ji",
            "La",
            "Wang",
            "Yi",
            "Shi",
            "Ren",
            "Le",
            "Ding",
            "Ze",
            "Jin",
            "Pu",
            "Chou",
            "Ba",
            "Zhang",
            "Jin",
            "Jie",
            "Bing",
            "Reng",
            "Cong",
            "Fo",
            "San",
            "Lun",
            "Sya",
            "Cang",
            "Zi",
            "Shi",
            "Ta",
            "Zhang",
            "Fu",
            "Xian",
            "Xian",
            "Tuo",
            "Hong",
            "Tong",
            "Ren",
            "Qian",
            "Gan",
            "Yi",
            "Di",
            "Dai",
            "Ling",
            "Yi",
            "Chao",
            "Chang",
            "Sa",
            ,
            "Yi",
            "Mu",
            "Men",
            "Ren",
            "Jia",
            "Chao",
            "Yang",
            "Qian",
            "Zhong",
            "Pi",
            "Wan",
            "Wu",
            "Jian",
            "Jie",
            "Yao",
            "Feng",
            "Cang",
            "Ren",
            "Wang",
            "Fen",
            "Di",
            "Fang"
        ],
        [
            "Zhong",
            "Qi",
            "Pei",
            "Yu",
            "Diao",
            "Dun",
            "Wen",
            "Yi",
            "Xin",
            "Kang",
            "Yi",
            "Ji",
            "Ai",
            "Wu",
            "Ji",
            "Fu",
            "Fa",
            "Xiu",
            "Jin",
            "Bei",
            "Dan",
            "Fu",
            "Tang",
            "Zhong",
            "You",
            "Huo",
            "Hui",
            "Yu",
            "Cui",
            "Chuan",
            "San",
            "Wei",
            "Chuan",
            "Che",
            "Ya",
            "Xian",
            "Shang",
            "Chang",
            "Lun",
            "Cang",
            "Xun",
            "Xin",
            "Wei",
            "Zhu",
            ,
            "Xuan",
            "Nu",
            "Bo",
            "Gu",
            "Ni",
            "Ni",
            "Xie",
            "Ban",
            "Xu",
            "Ling",
            "Zhou",
            "Shen",
            "Qu",
            "Si",
            "Beng",
            "Si",
            "Jia",
            "Pi",
            "Yi",
            "Si",
            "Ai",
            "Zheng",
            "Dian",
            "Han",
            "Mai",
            "Dan",
            "Zhu",
            "Bu",
            "Qu",
            "Bi",
            "Shao",
            "Ci",
            "Wei",
            "Di",
            "Zhu",
            "Zuo",
            "You",
            "Yang",
            "Ti",
            "Zhan",
            "He",
            "Bi",
            "Tuo",
            "She",
            "Yu",
            "Yi",
            "Fo",
            "Zuo",
            "Kou",
            "Ning",
            "Tong",
            "Ni",
            "Xuan",
            "Qu",
            "Yong",
            "Wa",
            "Qian",
            ,
            "Ka",
            ,
            "Pei",
            "Huai",
            "He",
            "Lao",
            "Xiang",
            "Ge",
            "Yang",
            "Bai",
            "Fa",
            "Ming",
            "Jia",
            "Er",
            "Bing",
            "Ji",
            "Hen",
            "Huo",
            "Gui",
            "Quan",
            "Tiao",
            "Jiao",
            "Ci",
            "Yi",
            "Shi",
            "Xing",
            "Shen",
            "Tuo",
            "Kan",
            "Zhi",
            "Gai",
            "Lai",
            "Yi",
            "Chi",
            "Kua",
            "Guang",
            "Li",
            "Yin",
            "Shi",
            "Mi",
            "Zhu",
            "Xu",
            "You",
            "An",
            "Lu",
            "Mou",
            "Er",
            "Lun",
            "Tong",
            "Cha",
            "Chi",
            "Xun",
            "Gong",
            "Zhou",
            "Yi",
            "Ru",
            "Jian",
            "Xia",
            "Jia",
            "Zai",
            "Lu",
            "Ko",
            "Jiao",
            "Zhen",
            "Ce",
            "Qiao",
            "Kuai",
            "Chai",
            "Ning",
            "Nong",
            "Jin",
            "Wu",
            "Hou",
            "Jiong",
            "Cheng",
            "Zhen",
            "Zuo",
            "Chou",
            "Qin",
            "Lu",
            "Ju",
            "Shu",
            "Ting",
            "Shen",
            "Tuo",
            "Bo",
            "Nan",
            "Hao",
            "Bian",
            "Tui",
            "Yu",
            "Xi",
            "Cu",
            "E",
            "Qiu",
            "Xu",
            "Kuang",
            "Ku",
            "Wu",
            "Jun",
            "Yi",
            "Fu",
            "Lang",
            "Zu",
            "Qiao",
            "Li",
            "Yong",
            "Hun",
            "Jing",
            "Xian",
            "San",
            "Pai",
            "Su",
            "Fu",
            "Xi",
            "Li",
            "Fu",
            "Ping",
            "Bao",
            "Yu",
            "Si",
            "Xia",
            "Xin",
            "Xiu",
            "Yu",
            "Ti",
            "Che",
            "Chou",
            ,
            "Yan",
            "Lia",
            "Li",
            "Lai",
            ,
            "Jian",
            "Xiu",
            "Fu",
            "He",
            "Ju",
            "Xiao",
            "Pai",
            "Jian",
            "Biao",
            "Chu",
            "Fei",
            "Feng",
            "Ya",
            "An",
            "Bei",
            "Yu",
            "Xin",
            "Bi",
            "Jian"
        ],
        [
            "Chang",
            "Chi",
            "Bing",
            "Zan",
            "Yao",
            "Cui",
            "Lia",
            "Wan",
            "Lai",
            "Cang",
            "Zong",
            "Ge",
            "Guan",
            "Bei",
            "Tian",
            "Shu",
            "Shu",
            "Men",
            "Dao",
            "Tan",
            "Jue",
            "Chui",
            "Xing",
            "Peng",
            "Tang",
            "Hou",
            "Yi",
            "Qi",
            "Ti",
            "Gan",
            "Jing",
            "Jie",
            "Sui",
            "Chang",
            "Jie",
            "Fang",
            "Zhi",
            "Kong",
            "Juan",
            "Zong",
            "Ju",
            "Qian",
            "Ni",
            "Lun",
            "Zhuo",
            "Wei",
            "Luo",
            "Song",
            "Leng",
            "Hun",
            "Dong",
            "Zi",
            "Ben",
            "Wu",
            "Ju",
            "Nai",
            "Cai",
            "Jian",
            "Zhai",
            "Ye",
            "Zhi",
            "Sha",
            "Qing",
            ,
            "Ying",
            "Cheng",
            "Jian",
            "Yan",
            "Nuan",
            "Zhong",
            "Chun",
            "Jia",
            "Jie",
            "Wei",
            "Yu",
            "Bing",
            "Ruo",
            "Ti",
            "Wei",
            "Pian",
            "Yan",
            "Feng",
            "Tang",
            "Wo",
            "E",
            "Xie",
            "Che",
            "Sheng",
            "Kan",
            "Di",
            "Zuo",
            "Cha",
            "Ting",
            "Bei",
            "Ye",
            "Huang",
            "Yao",
            "Zhan",
            "Chou",
            "Yan",
            "You",
            "Jian",
            "Xu",
            "Zha",
            "Ci",
            "Fu",
            "Bi",
            "Zhi",
            "Zong",
            "Mian",
            "Ji",
            "Yi",
            "Xie",
            "Xun",
            "Si",
            "Duan",
            "Ce",
            "Zhen",
            "Ou",
            "Tou",
            "Tou",
            "Bei",
            "Za",
            "Lu",
            "Jie",
            "Wei",
            "Fen",
            "Chang",
            "Gui",
            "Sou",
            "Zhi",
            "Su",
            "Xia",
            "Fu",
            "Yuan",
            "Rong",
            "Li",
            "Ru",
            "Yun",
            "Gou",
            "Ma",
            "Bang",
            "Dian",
            "Tang",
            "Hao",
            "Jie",
            "Xi",
            "Shan",
            "Qian",
            "Jue",
            "Cang",
            "Chu",
            "San",
            "Bei",
            "Xiao",
            "Yong",
            "Yao",
            "Tan",
            "Suo",
            "Yang",
            "Fa",
            "Bing",
            "Jia",
            "Dai",
            "Zai",
            "Tang",
            ,
            "Bin",
            "Chu",
            "Nuo",
            "Can",
            "Lei",
            "Cui",
            "Yong",
            "Zao",
            "Zong",
            "Peng",
            "Song",
            "Ao",
            "Chuan",
            "Yu",
            "Zhai",
            "Cou",
            "Shang",
            "Qiang",
            "Jing",
            "Chi",
            "Sha",
            "Han",
            "Zhang",
            "Qing",
            "Yan",
            "Di",
            "Xi",
            "Lu",
            "Bei",
            "Piao",
            "Jin",
            "Lian",
            "Lu",
            "Man",
            "Qian",
            "Xian",
            "Tan",
            "Ying",
            "Dong",
            "Zhuan",
            "Xiang",
            "Shan",
            "Qiao",
            "Jiong",
            "Tui",
            "Zun",
            "Pu",
            "Xi",
            "Lao",
            "Chang",
            "Guang",
            "Liao",
            "Qi",
            "Deng",
            "Chan",
            "Wei",
            "Ji",
            "Fan",
            "Hui",
            "Chuan",
            "Jian",
            "Dan",
            "Jiao",
            "Jiu",
            "Seng",
            "Fen",
            "Xian",
            "Jue",
            "E",
            "Jiao",
            "Jian",
            "Tong",
            "Lin",
            "Bo",
            "Gu",
            ,
            "Su",
            "Xian",
            "Jiang",
            "Min",
            "Ye",
            "Jin",
            "Jia",
            "Qiao",
            "Pi",
            "Feng",
            "Zhou",
            "Ai",
            "Sai"
        ],
        [
            "Yi",
            "Jun",
            "Nong",
            "Chan",
            "Yi",
            "Dang",
            "Jing",
            "Xuan",
            "Kuai",
            "Jian",
            "Chu",
            "Dan",
            "Jiao",
            "Sha",
            "Zai",
            ,
            "Bin",
            "An",
            "Ru",
            "Tai",
            "Chou",
            "Chai",
            "Lan",
            "Ni",
            "Jin",
            "Qian",
            "Meng",
            "Wu",
            "Ning",
            "Qiong",
            "Ni",
            "Chang",
            "Lie",
            "Lei",
            "Lu",
            "Kuang",
            "Bao",
            "Du",
            "Biao",
            "Zan",
            "Zhi",
            "Si",
            "You",
            "Hao",
            "Chen",
            "Chen",
            "Li",
            "Teng",
            "Wei",
            "Long",
            "Chu",
            "Chan",
            "Rang",
            "Shu",
            "Hui",
            "Li",
            "Luo",
            "Zan",
            "Nuo",
            "Tang",
            "Yan",
            "Lei",
            "Nang",
            "Er",
            "Wu",
            "Yun",
            "Zan",
            "Yuan",
            "Xiong",
            "Chong",
            "Zhao",
            "Xiong",
            "Xian",
            "Guang",
            "Dui",
            "Ke",
            "Dui",
            "Mian",
            "Tu",
            "Chang",
            "Er",
            "Dui",
            "Er",
            "Xin",
            "Tu",
            "Si",
            "Yan",
            "Yan",
            "Shi",
            "Shi",
            "Dang",
            "Qian",
            "Dou",
            "Fen",
            "Mao",
            "Shen",
            "Dou",
            "Bai",
            "Jing",
            "Li",
            "Huang",
            "Ru",
            "Wang",
            "Nei",
            "Quan",
            "Liang",
            "Yu",
            "Ba",
            "Gong",
            "Liu",
            "Xi",
            ,
            "Lan",
            "Gong",
            "Tian",
            "Guan",
            "Xing",
            "Bing",
            "Qi",
            "Ju",
            "Dian",
            "Zi",
            "Ppwun",
            "Yang",
            "Jian",
            "Shou",
            "Ji",
            "Yi",
            "Ji",
            "Chan",
            "Jiong",
            "Mao",
            "Ran",
            "Nei",
            "Yuan",
            "Mao",
            "Gang",
            "Ran",
            "Ce",
            "Jiong",
            "Ce",
            "Zai",
            "Gua",
            "Jiong",
            "Mao",
            "Zhou",
            "Mou",
            "Gou",
            "Xu",
            "Mian",
            "Mi",
            "Rong",
            "Yin",
            "Xie",
            "Kan",
            "Jun",
            "Nong",
            "Yi",
            "Mi",
            "Shi",
            "Guan",
            "Meng",
            "Zhong",
            "Ju",
            "Yuan",
            "Ming",
            "Kou",
            "Lam",
            "Fu",
            "Xie",
            "Mi",
            "Bing",
            "Dong",
            "Tai",
            "Gang",
            "Feng",
            "Bing",
            "Hu",
            "Chong",
            "Jue",
            "Hu",
            "Kuang",
            "Ye",
            "Leng",
            "Pan",
            "Fu",
            "Min",
            "Dong",
            "Xian",
            "Lie",
            "Xia",
            "Jian",
            "Jing",
            "Shu",
            "Mei",
            "Tu",
            "Qi",
            "Gu",
            "Zhun",
            "Song",
            "Jing",
            "Liang",
            "Qing",
            "Diao",
            "Ling",
            "Dong",
            "Gan",
            "Jian",
            "Yin",
            "Cou",
            "Yi",
            "Li",
            "Cang",
            "Ming",
            "Zhuen",
            "Cui",
            "Si",
            "Duo",
            "Jin",
            "Lin",
            "Lin",
            "Ning",
            "Xi",
            "Du",
            "Ji",
            "Fan",
            "Fan",
            "Fan",
            "Feng",
            "Ju",
            "Chu",
            "Tako",
            "Feng",
            "Mok",
            "Ci",
            "Fu",
            "Feng",
            "Ping",
            "Feng",
            "Kai",
            "Huang",
            "Kai",
            "Gan",
            "Deng",
            "Ping",
            "Qu",
            "Xiong",
            "Kuai",
            "Tu",
            "Ao",
            "Chu",
            "Ji",
            "Dang",
            "Han",
            "Han",
            "Zao"
        ],
        [
            "Dao",
            "Diao",
            "Dao",
            "Ren",
            "Ren",
            "Chuang",
            "Fen",
            "Qie",
            "Yi",
            "Ji",
            "Kan",
            "Qian",
            "Cun",
            "Chu",
            "Wen",
            "Ji",
            "Dan",
            "Xing",
            "Hua",
            "Wan",
            "Jue",
            "Li",
            "Yue",
            "Lie",
            "Liu",
            "Ze",
            "Gang",
            "Chuang",
            "Fu",
            "Chu",
            "Qu",
            "Ju",
            "Shan",
            "Min",
            "Ling",
            "Zhong",
            "Pan",
            "Bie",
            "Jie",
            "Jie",
            "Bao",
            "Li",
            "Shan",
            "Bie",
            "Chan",
            "Jing",
            "Gua",
            "Gen",
            "Dao",
            "Chuang",
            "Kui",
            "Ku",
            "Duo",
            "Er",
            "Zhi",
            "Shua",
            "Quan",
            "Cha",
            "Ci",
            "Ke",
            "Jie",
            "Gui",
            "Ci",
            "Gui",
            "Kai",
            "Duo",
            "Ji",
            "Ti",
            "Jing",
            "Lou",
            "Gen",
            "Ze",
            "Yuan",
            "Cuo",
            "Xue",
            "Ke",
            "La",
            "Qian",
            "Cha",
            "Chuang",
            "Gua",
            "Jian",
            "Cuo",
            "Li",
            "Ti",
            "Fei",
            "Pou",
            "Chan",
            "Qi",
            "Chuang",
            "Zi",
            "Gang",
            "Wan",
            "Bo",
            "Ji",
            "Duo",
            "Qing",
            "Yan",
            "Zhuo",
            "Jian",
            "Ji",
            "Bo",
            "Yan",
            "Ju",
            "Huo",
            "Sheng",
            "Jian",
            "Duo",
            "Duan",
            "Wu",
            "Gua",
            "Fu",
            "Sheng",
            "Jian",
            "Ge",
            "Zha",
            "Kai",
            "Chuang",
            "Juan",
            "Chan",
            "Tuan",
            "Lu",
            "Li",
            "Fou",
            "Shan",
            "Piao",
            "Kou",
            "Jiao",
            "Gua",
            "Qiao",
            "Jue",
            "Hua",
            "Zha",
            "Zhuo",
            "Lian",
            "Ju",
            "Pi",
            "Liu",
            "Gui",
            "Jiao",
            "Gui",
            "Jian",
            "Jian",
            "Tang",
            "Huo",
            "Ji",
            "Jian",
            "Yi",
            "Jian",
            "Zhi",
            "Chan",
            "Cuan",
            "Mo",
            "Li",
            "Zhu",
            "Li",
            "Ya",
            "Quan",
            "Ban",
            "Gong",
            "Jia",
            "Wu",
            "Mai",
            "Lie",
            "Jin",
            "Keng",
            "Xie",
            "Zhi",
            "Dong",
            "Zhu",
            "Nu",
            "Jie",
            "Qu",
            "Shao",
            "Yi",
            "Zhu",
            "Miao",
            "Li",
            "Jing",
            "Lao",
            "Lao",
            "Juan",
            "Kou",
            "Yang",
            "Wa",
            "Xiao",
            "Mou",
            "Kuang",
            "Jie",
            "Lie",
            "He",
            "Shi",
            "Ke",
            "Jing",
            "Hao",
            "Bo",
            "Min",
            "Chi",
            "Lang",
            "Yong",
            "Yong",
            "Mian",
            "Ke",
            "Xun",
            "Juan",
            "Qing",
            "Lu",
            "Pou",
            "Meng",
            "Lai",
            "Le",
            "Kai",
            "Mian",
            "Dong",
            "Xu",
            "Xu",
            "Kan",
            "Wu",
            "Yi",
            "Xun",
            "Weng",
            "Sheng",
            "Lao",
            "Mu",
            "Lu",
            "Piao",
            "Shi",
            "Ji",
            "Qin",
            "Qiang",
            "Jiao",
            "Quan",
            "Yang",
            "Yi",
            "Jue",
            "Fan",
            "Juan",
            "Tong",
            "Ju",
            "Dan",
            "Xie",
            "Mai",
            "Xun",
            "Xun",
            "Lu",
            "Li",
            "Che",
            "Rang",
            "Quan",
            "Bao",
            "Shao",
            "Yun",
            "Jiu",
            "Bao",
            "Gou",
            "Wu"
        ],
        [
            "Yun",
            "Mwun",
            "Nay",
            "Gai",
            "Gai",
            "Bao",
            "Cong",
            ,
            "Xiong",
            "Peng",
            "Ju",
            "Tao",
            "Ge",
            "Pu",
            "An",
            "Pao",
            "Fu",
            "Gong",
            "Da",
            "Jiu",
            "Qiong",
            "Bi",
            "Hua",
            "Bei",
            "Nao",
            "Chi",
            "Fang",
            "Jiu",
            "Yi",
            "Za",
            "Jiang",
            "Kang",
            "Jiang",
            "Kuang",
            "Hu",
            "Xia",
            "Qu",
            "Bian",
            "Gui",
            "Qie",
            "Zang",
            "Kuang",
            "Fei",
            "Hu",
            "Tou",
            "Gui",
            "Gui",
            "Hui",
            "Dan",
            "Gui",
            "Lian",
            "Lian",
            "Suan",
            "Du",
            "Jiu",
            "Qu",
            "Xi",
            "Pi",
            "Qu",
            "Yi",
            "Qia",
            "Yan",
            "Bian",
            "Ni",
            "Qu",
            "Shi",
            "Xin",
            "Qian",
            "Nian",
            "Sa",
            "Zu",
            "Sheng",
            "Wu",
            "Hui",
            "Ban",
            "Shi",
            "Xi",
            "Wan",
            "Hua",
            "Xie",
            "Wan",
            "Bei",
            "Zu",
            "Zhuo",
            "Xie",
            "Dan",
            "Mai",
            "Nan",
            "Dan",
            "Ji",
            "Bo",
            "Shuai",
            "Bu",
            "Kuang",
            "Bian",
            "Bu",
            "Zhan",
            "Qia",
            "Lu",
            "You",
            "Lu",
            "Xi",
            "Gua",
            "Wo",
            "Xie",
            "Jie",
            "Jie",
            "Wei",
            "Ang",
            "Qiong",
            "Zhi",
            "Mao",
            "Yin",
            "Wei",
            "Shao",
            "Ji",
            "Que",
            "Luan",
            "Shi",
            "Juan",
            "Xie",
            "Xu",
            "Jin",
            "Que",
            "Wu",
            "Ji",
            "E",
            "Qing",
            "Xi",
            ,
            "Han",
            "Zhan",
            "E",
            "Ting",
            "Li",
            "Zhe",
            "Han",
            "Li",
            "Ya",
            "Ya",
            "Yan",
            "She",
            "Zhi",
            "Zha",
            "Pang",
            ,
            "He",
            "Ya",
            "Zhi",
            "Ce",
            "Pang",
            "Ti",
            "Li",
            "She",
            "Hou",
            "Ting",
            "Zui",
            "Cuo",
            "Fei",
            "Yuan",
            "Ce",
            "Yuan",
            "Xiang",
            "Yan",
            "Li",
            "Jue",
            "Sha",
            "Dian",
            "Chu",
            "Jiu",
            "Qin",
            "Ao",
            "Gui",
            "Yan",
            "Si",
            "Li",
            "Chang",
            "Lan",
            "Li",
            "Yan",
            "Yan",
            "Yuan",
            "Si",
            "Gong",
            "Lin",
            "Qiu",
            "Qu",
            "Qu",
            "Uk",
            "Lei",
            "Du",
            "Xian",
            "Zhuan",
            "San",
            "Can",
            "Can",
            "Can",
            "Can",
            "Ai",
            "Dai",
            "You",
            "Cha",
            "Ji",
            "You",
            "Shuang",
            "Fan",
            "Shou",
            "Guai",
            "Ba",
            "Fa",
            "Ruo",
            "Shi",
            "Shu",
            "Zhuo",
            "Qu",
            "Shou",
            "Bian",
            "Xu",
            "Jia",
            "Pan",
            "Sou",
            "Gao",
            "Wei",
            "Sou",
            "Die",
            "Rui",
            "Cong",
            "Kou",
            "Gu",
            "Ju",
            "Ling",
            "Gua",
            "Tao",
            "Kou",
            "Zhi",
            "Jiao",
            "Zhao",
            "Ba",
            "Ding",
            "Ke",
            "Tai",
            "Chi",
            "Shi",
            "You",
            "Qiu",
            "Po",
            "Ye",
            "Hao",
            "Si",
            "Tan",
            "Chi",
            "Le",
            "Diao",
            "Ji",
            ,
            "Hong"
        ],
        [
            "Mie",
            "Xu",
            "Mang",
            "Chi",
            "Ge",
            "Xuan",
            "Yao",
            "Zi",
            "He",
            "Ji",
            "Diao",
            "Cun",
            "Tong",
            "Ming",
            "Hou",
            "Li",
            "Tu",
            "Xiang",
            "Zha",
            "Xia",
            "Ye",
            "Lu",
            "A",
            "Ma",
            "Ou",
            "Xue",
            "Yi",
            "Jun",
            "Chou",
            "Lin",
            "Tun",
            "Yin",
            "Fei",
            "Bi",
            "Qin",
            "Qin",
            "Jie",
            "Bu",
            "Fou",
            "Ba",
            "Dun",
            "Fen",
            "E",
            "Han",
            "Ting",
            "Hang",
            "Shun",
            "Qi",
            "Hong",
            "Zhi",
            "Shen",
            "Wu",
            "Wu",
            "Chao",
            "Ne",
            "Xue",
            "Xi",
            "Chui",
            "Dou",
            "Wen",
            "Hou",
            "Ou",
            "Wu",
            "Gao",
            "Ya",
            "Jun",
            "Lu",
            "E",
            "Ge",
            "Mei",
            "Ai",
            "Qi",
            "Cheng",
            "Wu",
            "Gao",
            "Fu",
            "Jiao",
            "Hong",
            "Chi",
            "Sheng",
            "Ne",
            "Tun",
            "Fu",
            "Yi",
            "Dai",
            "Ou",
            "Li",
            "Bai",
            "Yuan",
            "Kuai",
            ,
            "Qiang",
            "Wu",
            "E",
            "Shi",
            "Quan",
            "Pen",
            "Wen",
            "Ni",
            "M",
            "Ling",
            "Ran",
            "You",
            "Di",
            "Zhou",
            "Shi",
            "Zhou",
            "Tie",
            "Xi",
            "Yi",
            "Qi",
            "Ping",
            "Zi",
            "Gu",
            "Zi",
            "Wei",
            "Xu",
            "He",
            "Nao",
            "Xia",
            "Pei",
            "Yi",
            "Xiao",
            "Shen",
            "Hu",
            "Ming",
            "Da",
            "Qu",
            "Ju",
            "Gem",
            "Za",
            "Tuo",
            "Duo",
            "Pou",
            "Pao",
            "Bi",
            "Fu",
            "Yang",
            "He",
            "Zha",
            "He",
            "Hai",
            "Jiu",
            "Yong",
            "Fu",
            "Que",
            "Zhou",
            "Wa",
            "Ka",
            "Gu",
            "Ka",
            "Zuo",
            "Bu",
            "Long",
            "Dong",
            "Ning",
            "Tha",
            "Si",
            "Xian",
            "Huo",
            "Qi",
            "Er",
            "E",
            "Guang",
            "Zha",
            "Xi",
            "Yi",
            "Lie",
            "Zi",
            "Mie",
            "Mi",
            "Zhi",
            "Yao",
            "Ji",
            "Zhou",
            "Ge",
            "Shuai",
            "Zan",
            "Xiao",
            "Ke",
            "Hui",
            "Kua",
            "Huai",
            "Tao",
            "Xian",
            "E",
            "Xuan",
            "Xiu",
            "Wai",
            "Yan",
            "Lao",
            "Yi",
            "Ai",
            "Pin",
            "Shen",
            "Tong",
            "Hong",
            "Xiong",
            "Chi",
            "Wa",
            "Ha",
            "Zai",
            "Yu",
            "Di",
            "Pai",
            "Xiang",
            "Ai",
            "Hen",
            "Kuang",
            "Ya",
            "Da",
            "Xiao",
            "Bi",
            "Yue",
            ,
            "Hua",
            "Sasou",
            "Kuai",
            "Duo",
            ,
            "Ji",
            "Nong",
            "Mou",
            "Yo",
            "Hao",
            "Yuan",
            "Long",
            "Pou",
            "Mang",
            "Ge",
            "E",
            "Chi",
            "Shao",
            "Li",
            "Na",
            "Zu",
            "He",
            "Ku",
            "Xiao",
            "Xian",
            "Lao",
            "Bo",
            "Zhe",
            "Zha",
            "Liang",
            "Ba",
            "Mie",
            "Le",
            "Sui",
            "Fou",
            "Bu",
            "Han",
            "Heng",
            "Geng",
            "Shuo",
            "Ge"
        ],
        [
            "You",
            "Yan",
            "Gu",
            "Gu",
            "Bai",
            "Han",
            "Suo",
            "Chun",
            "Yi",
            "Ai",
            "Jia",
            "Tu",
            "Xian",
            "Huan",
            "Li",
            "Xi",
            "Tang",
            "Zuo",
            "Qiu",
            "Che",
            "Wu",
            "Zao",
            "Ya",
            "Dou",
            "Qi",
            "Di",
            "Qin",
            "Ma",
            "Mal",
            "Hong",
            "Dou",
            "Kes",
            "Lao",
            "Liang",
            "Suo",
            "Zao",
            "Huan",
            "Lang",
            "Sha",
            "Ji",
            "Zuo",
            "Wo",
            "Feng",
            "Yin",
            "Hu",
            "Qi",
            "Shou",
            "Wei",
            "Shua",
            "Chang",
            "Er",
            "Li",
            "Qiang",
            "An",
            "Jie",
            "Yo",
            "Nian",
            "Yu",
            "Tian",
            "Lai",
            "Sha",
            "Xi",
            "Tuo",
            "Hu",
            "Ai",
            "Zhou",
            "Nou",
            "Ken",
            "Zhuo",
            "Zhuo",
            "Shang",
            "Di",
            "Heng",
            "Lan",
            "A",
            "Xiao",
            "Xiang",
            "Tun",
            "Wu",
            "Wen",
            "Cui",
            "Sha",
            "Hu",
            "Qi",
            "Qi",
            "Tao",
            "Dan",
            "Dan",
            "Ye",
            "Zi",
            "Bi",
            "Cui",
            "Chuo",
            "He",
            "Ya",
            "Qi",
            "Zhe",
            "Pei",
            "Liang",
            "Xian",
            "Pi",
            "Sha",
            "La",
            "Ze",
            "Qing",
            "Gua",
            "Pa",
            "Zhe",
            "Se",
            "Zhuan",
            "Nie",
            "Guo",
            "Luo",
            "Yan",
            "Di",
            "Quan",
            "Tan",
            "Bo",
            "Ding",
            "Lang",
            "Xiao",
            ,
            "Tang",
            "Chi",
            "Ti",
            "An",
            "Jiu",
            "Dan",
            "Ke",
            "Yong",
            "Wei",
            "Nan",
            "Shan",
            "Yu",
            "Zhe",
            "La",
            "Jie",
            "Hou",
            "Han",
            "Die",
            "Zhou",
            "Chai",
            "Wai",
            "Re",
            "Yu",
            "Yin",
            "Zan",
            "Yao",
            "Wo",
            "Mian",
            "Hu",
            "Yun",
            "Chuan",
            "Hui",
            "Huan",
            "Huan",
            "Xi",
            "He",
            "Ji",
            "Kui",
            "Zhong",
            "Wei",
            "Sha",
            "Xu",
            "Huang",
            "Du",
            "Nie",
            "Xuan",
            "Liang",
            "Yu",
            "Sang",
            "Chi",
            "Qiao",
            "Yan",
            "Dan",
            "Pen",
            "Can",
            "Li",
            "Yo",
            "Zha",
            "Wei",
            "Miao",
            "Ying",
            "Pen",
            "Phos",
            "Kui",
            "Xi",
            "Yu",
            "Jie",
            "Lou",
            "Ku",
            "Sao",
            "Huo",
            "Ti",
            "Yao",
            "He",
            "A",
            "Xiu",
            "Qiang",
            "Se",
            "Yong",
            "Su",
            "Hong",
            "Xie",
            "Yi",
            "Suo",
            "Ma",
            "Cha",
            "Hai",
            "Ke",
            "Ta",
            "Sang",
            "Tian",
            "Ru",
            "Sou",
            "Wa",
            "Ji",
            "Pang",
            "Wu",
            "Xian",
            "Shi",
            "Ge",
            "Zi",
            "Jie",
            "Luo",
            "Weng",
            "Wa",
            "Si",
            "Chi",
            "Hao",
            "Suo",
            "Jia",
            "Hai",
            "Suo",
            "Qin",
            "Nie",
            "He",
            "Cis",
            "Sai",
            "Ng",
            "Ge",
            "Na",
            "Dia",
            "Ai",
            ,
            "Tong",
            "Bi",
            "Ao",
            "Ao",
            "Lian",
            "Cui",
            "Zhe",
            "Mo",
            "Sou",
            "Sou",
            "Tan"
        ],
        [
            "Di",
            "Qi",
            "Jiao",
            "Chong",
            "Jiao",
            "Kai",
            "Tan",
            "San",
            "Cao",
            "Jia",
            "Ai",
            "Xiao",
            "Piao",
            "Lou",
            "Ga",
            "Gu",
            "Xiao",
            "Hu",
            "Hui",
            "Guo",
            "Ou",
            "Xian",
            "Ze",
            "Chang",
            "Xu",
            "Po",
            "De",
            "Ma",
            "Ma",
            "Hu",
            "Lei",
            "Du",
            "Ga",
            "Tang",
            "Ye",
            "Beng",
            "Ying",
            "Saai",
            "Jiao",
            "Mi",
            "Xiao",
            "Hua",
            "Mai",
            "Ran",
            "Zuo",
            "Peng",
            "Lao",
            "Xiao",
            "Ji",
            "Zhu",
            "Chao",
            "Kui",
            "Zui",
            "Xiao",
            "Si",
            "Hao",
            "Fu",
            "Liao",
            "Qiao",
            "Xi",
            "Xiu",
            "Tan",
            "Tan",
            "Mo",
            "Xun",
            "E",
            "Zun",
            "Fan",
            "Chi",
            "Hui",
            "Zan",
            "Chuang",
            "Cu",
            "Dan",
            "Yu",
            "Tun",
            "Cheng",
            "Jiao",
            "Ye",
            "Xi",
            "Qi",
            "Hao",
            "Lian",
            "Xu",
            "Deng",
            "Hui",
            "Yin",
            "Pu",
            "Jue",
            "Qin",
            "Xun",
            "Nie",
            "Lu",
            "Si",
            "Yan",
            "Ying",
            "Da",
            "Dan",
            "Yu",
            "Zhou",
            "Jin",
            "Nong",
            "Yue",
            "Hui",
            "Qi",
            "E",
            "Zao",
            "Yi",
            "Shi",
            "Jiao",
            "Yuan",
            "Ai",
            "Yong",
            "Jue",
            "Kuai",
            "Yu",
            "Pen",
            "Dao",
            "Ge",
            "Xin",
            "Dun",
            "Dang",
            "Sin",
            "Sai",
            "Pi",
            "Pi",
            "Yin",
            "Zui",
            "Ning",
            "Di",
            "Lan",
            "Ta",
            "Huo",
            "Ru",
            "Hao",
            "Xia",
            "Ya",
            "Duo",
            "Xi",
            "Chou",
            "Ji",
            "Jin",
            "Hao",
            "Ti",
            "Chang",
            ,
            ,
            "Ca",
            "Ti",
            "Lu",
            "Hui",
            "Bo",
            "You",
            "Nie",
            "Yin",
            "Hu",
            "Mo",
            "Huang",
            "Zhe",
            "Li",
            "Liu",
            "Haai",
            "Nang",
            "Xiao",
            "Mo",
            "Yan",
            "Li",
            "Lu",
            "Long",
            "Fu",
            "Dan",
            "Chen",
            "Pin",
            "Pi",
            "Xiang",
            "Huo",
            "Mo",
            "Xi",
            "Duo",
            "Ku",
            "Yan",
            "Chan",
            "Ying",
            "Rang",
            "Dian",
            "La",
            "Ta",
            "Xiao",
            "Jiao",
            "Chuo",
            "Huan",
            "Huo",
            "Zhuan",
            "Nie",
            "Xiao",
            "Ca",
            "Li",
            "Chan",
            "Chai",
            "Li",
            "Yi",
            "Luo",
            "Nang",
            "Zan",
            "Su",
            "Xi",
            "So",
            "Jian",
            "Za",
            "Zhu",
            "Lan",
            "Nie",
            "Nang",
            ,
            ,
            "Wei",
            "Hui",
            "Yin",
            "Qiu",
            "Si",
            "Nin",
            "Jian",
            "Hui",
            "Xin",
            "Yin",
            "Nan",
            "Tuan",
            "Tuan",
            "Dun",
            "Kang",
            "Yuan",
            "Jiong",
            "Pian",
            "Yun",
            "Cong",
            "Hu",
            "Hui",
            "Yuan",
            "You",
            "Guo",
            "Kun",
            "Cong",
            "Wei",
            "Tu",
            "Wei",
            "Lun",
            "Guo",
            "Qun",
            "Ri",
            "Ling",
            "Gu",
            "Guo",
            "Tai",
            "Guo",
            "Tu",
            "You"
        ],
        [
            "Guo",
            "Yin",
            "Hun",
            "Pu",
            "Yu",
            "Han",
            "Yuan",
            "Lun",
            "Quan",
            "Yu",
            "Qing",
            "Guo",
            "Chuan",
            "Wei",
            "Yuan",
            "Quan",
            "Ku",
            "Fu",
            "Yuan",
            "Yuan",
            "E",
            "Tu",
            "Tu",
            "Tu",
            "Tuan",
            "Lue",
            "Hui",
            "Yi",
            "Yuan",
            "Luan",
            "Luan",
            "Tu",
            "Ya",
            "Tu",
            "Ting",
            "Sheng",
            "Pu",
            "Lu",
            "Iri",
            "Ya",
            "Zai",
            "Wei",
            "Ge",
            "Yu",
            "Wu",
            "Gui",
            "Pi",
            "Yi",
            "Di",
            "Qian",
            "Qian",
            "Zhen",
            "Zhuo",
            "Dang",
            "Qia",
            "Akutsu",
            "Yama",
            "Kuang",
            "Chang",
            "Qi",
            "Nie",
            "Mo",
            "Ji",
            "Jia",
            "Zhi",
            "Zhi",
            "Ban",
            "Xun",
            "Tou",
            "Qin",
            "Fen",
            "Jun",
            "Keng",
            "Tun",
            "Fang",
            "Fen",
            "Ben",
            "Tan",
            "Kan",
            "Pi",
            "Zuo",
            "Keng",
            "Bi",
            "Xing",
            "Di",
            "Jing",
            "Ji",
            "Kuai",
            "Di",
            "Jing",
            "Jian",
            "Tan",
            "Li",
            "Ba",
            "Wu",
            "Fen",
            "Zhui",
            "Po",
            "Pan",
            "Tang",
            "Kun",
            "Qu",
            "Tan",
            "Zhi",
            "Tuo",
            "Gan",
            "Ping",
            "Dian",
            "Gua",
            "Ni",
            "Tai",
            "Pi",
            "Jiong",
            "Yang",
            "Fo",
            "Ao",
            "Liu",
            "Qiu",
            "Mu",
            "Ke",
            "Gou",
            "Xue",
            "Ba",
            "Chi",
            "Che",
            "Ling",
            "Zhu",
            "Fu",
            "Hu",
            "Zhi",
            "Chui",
            "La",
            "Long",
            "Long",
            "Lu",
            "Ao",
            "Tay",
            "Pao",
            ,
            "Xing",
            "Dong",
            "Ji",
            "Ke",
            "Lu",
            "Ci",
            "Chi",
            "Lei",
            "Gai",
            "Yin",
            "Hou",
            "Dui",
            "Zhao",
            "Fu",
            "Guang",
            "Yao",
            "Duo",
            "Duo",
            "Gui",
            "Cha",
            "Yang",
            "Yin",
            "Fa",
            "Gou",
            "Yuan",
            "Die",
            "Xie",
            "Ken",
            "Jiong",
            "Shou",
            "E",
            "Ha",
            "Dian",
            "Hong",
            "Wu",
            "Kua",
            ,
            "Tao",
            "Dang",
            "Kai",
            "Gake",
            "Nao",
            "An",
            "Xing",
            "Xian",
            "Huan",
            "Bang",
            "Pei",
            "Ba",
            "Yi",
            "Yin",
            "Han",
            "Xu",
            "Chui",
            "Cen",
            "Geng",
            "Ai",
            "Peng",
            "Fang",
            "Que",
            "Yong",
            "Xun",
            "Jia",
            "Di",
            "Mai",
            "Lang",
            "Xuan",
            "Cheng",
            "Yan",
            "Jin",
            "Zhe",
            "Lei",
            "Lie",
            "Bu",
            "Cheng",
            "Gomi",
            "Bu",
            "Shi",
            "Xun",
            "Guo",
            "Jiong",
            "Ye",
            "Nian",
            "Di",
            "Yu",
            "Bu",
            "Ya",
            "Juan",
            "Sui",
            "Pi",
            "Cheng",
            "Wan",
            "Ju",
            "Lun",
            "Zheng",
            "Kong",
            "Chong",
            "Dong",
            "Dai",
            "Tan",
            "An",
            "Cai",
            "Shu",
            "Beng",
            "Kan",
            "Zhi",
            "Duo",
            "Yi",
            "Zhi",
            "Yi",
            "Pei",
            "Ji",
            "Zhun",
            "Qi",
            "Sao",
            "Ju",
            "Ni"
        ],
        [
            "Ku",
            "Ke",
            "Tang",
            "Kun",
            "Ni",
            "Jian",
            "Dui",
            "Jin",
            "Gang",
            "Yu",
            "E",
            "Peng",
            "Gu",
            "Tu",
            "Leng",
            ,
            "Ya",
            "Qian",
            ,
            "An",
            ,
            "Duo",
            "Nao",
            "Tu",
            "Cheng",
            "Yin",
            "Hun",
            "Bi",
            "Lian",
            "Guo",
            "Die",
            "Zhuan",
            "Hou",
            "Bao",
            "Bao",
            "Yu",
            "Di",
            "Mao",
            "Jie",
            "Ruan",
            "E",
            "Geng",
            "Kan",
            "Zong",
            "Yu",
            "Huang",
            "E",
            "Yao",
            "Yan",
            "Bao",
            "Ji",
            "Mei",
            "Chang",
            "Du",
            "Tuo",
            "Yin",
            "Feng",
            "Zhong",
            "Jie",
            "Zhen",
            "Feng",
            "Gang",
            "Chuan",
            "Jian",
            "Pyeng",
            "Toride",
            "Xiang",
            "Huang",
            "Leng",
            "Duan",
            ,
            "Xuan",
            "Ji",
            "Ji",
            "Kuai",
            "Ying",
            "Ta",
            "Cheng",
            "Yong",
            "Kai",
            "Su",
            "Su",
            "Shi",
            "Mi",
            "Ta",
            "Weng",
            "Cheng",
            "Tu",
            "Tang",
            "Que",
            "Zhong",
            "Li",
            "Peng",
            "Bang",
            "Sai",
            "Zang",
            "Dui",
            "Tian",
            "Wu",
            "Cheng",
            "Xun",
            "Ge",
            "Zhen",
            "Ai",
            "Gong",
            "Yan",
            "Kan",
            "Tian",
            "Yuan",
            "Wen",
            "Xie",
            "Liu",
            "Ama",
            "Lang",
            "Chang",
            "Peng",
            "Beng",
            "Chen",
            "Cu",
            "Lu",
            "Ou",
            "Qian",
            "Mei",
            "Mo",
            "Zhuan",
            "Shuang",
            "Shu",
            "Lou",
            "Chi",
            "Man",
            "Biao",
            "Jing",
            "Qi",
            "Shu",
            "Di",
            "Zhang",
            "Kan",
            "Yong",
            "Dian",
            "Chen",
            "Zhi",
            "Xi",
            "Guo",
            "Qiang",
            "Jin",
            "Di",
            "Shang",
            "Mu",
            "Cui",
            "Yan",
            "Ta",
            "Zeng",
            "Qi",
            "Qiang",
            "Liang",
            ,
            "Zhui",
            "Qiao",
            "Zeng",
            "Xu",
            "Shan",
            "Shan",
            "Ba",
            "Pu",
            "Kuai",
            "Dong",
            "Fan",
            "Que",
            "Mo",
            "Dun",
            "Dun",
            "Dun",
            "Di",
            "Sheng",
            "Duo",
            "Duo",
            "Tan",
            "Deng",
            "Wu",
            "Fen",
            "Huang",
            "Tan",
            "Da",
            "Ye",
            "Sho",
            "Mama",
            "Yu",
            "Qiang",
            "Ji",
            "Qiao",
            "Ken",
            "Yi",
            "Pi",
            "Bi",
            "Dian",
            "Jiang",
            "Ye",
            "Yong",
            "Bo",
            "Tan",
            "Lan",
            "Ju",
            "Huai",
            "Dang",
            "Rang",
            "Qian",
            "Xun",
            "Lan",
            "Xi",
            "He",
            "Ai",
            "Ya",
            "Dao",
            "Hao",
            "Ruan",
            "Mama",
            "Lei",
            "Kuang",
            "Lu",
            "Yan",
            "Tan",
            "Wei",
            "Huai",
            "Long",
            "Long",
            "Rui",
            "Li",
            "Lin",
            "Rang",
            "Ten",
            "Xun",
            "Yan",
            "Lei",
            "Ba",
            ,
            "Shi",
            "Ren",
            ,
            "Zhuang",
            "Zhuang",
            "Sheng",
            "Yi",
            "Mai",
            "Ke",
            "Zhu",
            "Zhuang",
            "Hu",
            "Hu",
            "Kun",
            "Yi",
            "Hu",
            "Xu",
            "Kun",
            "Shou",
            "Mang",
            "Zun"
        ],
        [
            "Shou",
            "Yi",
            "Zhi",
            "Gu",
            "Chu",
            "Jiang",
            "Feng",
            "Bei",
            "Cay",
            "Bian",
            "Sui",
            "Qun",
            "Ling",
            "Fu",
            "Zuo",
            "Xia",
            "Xiong",
            ,
            "Nao",
            "Xia",
            "Kui",
            "Xi",
            "Wai",
            "Yuan",
            "Mao",
            "Su",
            "Duo",
            "Duo",
            "Ye",
            "Qing",
            "Uys",
            "Gou",
            "Gou",
            "Qi",
            "Meng",
            "Meng",
            "Yin",
            "Huo",
            "Chen",
            "Da",
            "Ze",
            "Tian",
            "Tai",
            "Fu",
            "Guai",
            "Yao",
            "Yang",
            "Hang",
            "Gao",
            "Shi",
            "Ben",
            "Tai",
            "Tou",
            "Yan",
            "Bi",
            "Yi",
            "Kua",
            "Jia",
            "Duo",
            "Kwu",
            "Kuang",
            "Yun",
            "Jia",
            "Pa",
            "En",
            "Lian",
            "Huan",
            "Di",
            "Yan",
            "Pao",
            "Quan",
            "Qi",
            "Nai",
            "Feng",
            "Xie",
            "Fen",
            "Dian",
            ,
            "Kui",
            "Zou",
            "Huan",
            "Qi",
            "Kai",
            "Zha",
            "Ben",
            "Yi",
            "Jiang",
            "Tao",
            "Zang",
            "Ben",
            "Xi",
            "Xiang",
            "Fei",
            "Diao",
            "Xun",
            "Keng",
            "Dian",
            "Ao",
            "She",
            "Weng",
            "Pan",
            "Ao",
            "Wu",
            "Ao",
            "Jiang",
            "Lian",
            "Duo",
            "Yun",
            "Jiang",
            "Shi",
            "Fen",
            "Huo",
            "Bi",
            "Lian",
            "Duo",
            "Nu",
            "Nu",
            "Ding",
            "Nai",
            "Qian",
            "Jian",
            "Ta",
            "Jiu",
            "Nan",
            "Cha",
            "Hao",
            "Xian",
            "Fan",
            "Ji",
            "Shuo",
            "Ru",
            "Fei",
            "Wang",
            "Hong",
            "Zhuang",
            "Fu",
            "Ma",
            "Dan",
            "Ren",
            "Fu",
            "Jing",
            "Yan",
            "Xie",
            "Wen",
            "Zhong",
            "Pa",
            "Du",
            "Ji",
            "Keng",
            "Zhong",
            "Yao",
            "Jin",
            "Yun",
            "Miao",
            "Pei",
            "Shi",
            "Yue",
            "Zhuang",
            "Niu",
            "Yan",
            "Na",
            "Xin",
            "Fen",
            "Bi",
            "Yu",
            "Tuo",
            "Feng",
            "Yuan",
            "Fang",
            "Wu",
            "Yu",
            "Gui",
            "Du",
            "Ba",
            "Ni",
            "Zhou",
            "Zhuo",
            "Zhao",
            "Da",
            "Nai",
            "Yuan",
            "Tou",
            "Xuan",
            "Zhi",
            "E",
            "Mei",
            "Mo",
            "Qi",
            "Bi",
            "Shen",
            "Qie",
            "E",
            "He",
            "Xu",
            "Fa",
            "Zheng",
            "Min",
            "Ban",
            "Mu",
            "Fu",
            "Ling",
            "Zi",
            "Zi",
            "Shi",
            "Ran",
            "Shan",
            "Yang",
            "Man",
            "Jie",
            "Gu",
            "Si",
            "Xing",
            "Wei",
            "Zi",
            "Ju",
            "Shan",
            "Pin",
            "Ren",
            "Yao",
            "Tong",
            "Jiang",
            "Shu",
            "Ji",
            "Gai",
            "Shang",
            "Kuo",
            "Juan",
            "Jiao",
            "Gou",
            "Mu",
            "Jian",
            "Jian",
            "Yi",
            "Nian",
            "Zhi",
            "Ji",
            "Ji",
            "Xian",
            "Heng",
            "Guang",
            "Jun",
            "Kua",
            "Yan",
            "Ming",
            "Lie",
            "Pei",
            "Yan",
            "You",
            "Yan",
            "Cha",
            "Shen",
            "Yin",
            "Chi",
            "Gui",
            "Quan",
            "Zi"
        ],
        [
            "Song",
            "Wei",
            "Hong",
            "Wa",
            "Lou",
            "Ya",
            "Rao",
            "Jiao",
            "Luan",
            "Ping",
            "Xian",
            "Shao",
            "Li",
            "Cheng",
            "Xiao",
            "Mang",
            "Fu",
            "Suo",
            "Wu",
            "Wei",
            "Ke",
            "Lai",
            "Chuo",
            "Ding",
            "Niang",
            "Xing",
            "Nan",
            "Yu",
            "Nuo",
            "Pei",
            "Nei",
            "Juan",
            "Shen",
            "Zhi",
            "Han",
            "Di",
            "Zhuang",
            "E",
            "Pin",
            "Tui",
            "Han",
            "Mian",
            "Wu",
            "Yan",
            "Wu",
            "Xi",
            "Yan",
            "Yu",
            "Si",
            "Yu",
            "Wa",
            ,
            "Xian",
            "Ju",
            "Qu",
            "Shui",
            "Qi",
            "Xian",
            "Zhui",
            "Dong",
            "Chang",
            "Lu",
            "Ai",
            "E",
            "E",
            "Lou",
            "Mian",
            "Cong",
            "Pou",
            "Ju",
            "Po",
            "Cai",
            "Ding",
            "Wan",
            "Biao",
            "Xiao",
            "Shu",
            "Qi",
            "Hui",
            "Fu",
            "E",
            "Wo",
            "Tan",
            "Fei",
            "Wei",
            "Jie",
            "Tian",
            "Ni",
            "Quan",
            "Jing",
            "Hun",
            "Jing",
            "Qian",
            "Dian",
            "Xing",
            "Hu",
            "Wa",
            "Lai",
            "Bi",
            "Yin",
            "Chou",
            "Chuo",
            "Fu",
            "Jing",
            "Lun",
            "Yan",
            "Lan",
            "Kun",
            "Yin",
            "Ya",
            "Ju",
            "Li",
            "Dian",
            "Xian",
            "Hwa",
            "Hua",
            "Ying",
            "Chan",
            "Shen",
            "Ting",
            "Dang",
            "Yao",
            "Wu",
            "Nan",
            "Ruo",
            "Jia",
            "Tou",
            "Xu",
            "Yu",
            "Wei",
            "Ti",
            "Rou",
            "Mei",
            "Dan",
            "Ruan",
            "Qin",
            "Hui",
            "Wu",
            "Qian",
            "Chun",
            "Mao",
            "Fu",
            "Jie",
            "Duan",
            "Xi",
            "Zhong",
            "Mei",
            "Huang",
            "Mian",
            "An",
            "Ying",
            "Xuan",
            "Jie",
            "Wei",
            "Mei",
            "Yuan",
            "Zhen",
            "Qiu",
            "Ti",
            "Xie",
            "Tuo",
            "Lian",
            "Mao",
            "Ran",
            "Si",
            "Pian",
            "Wei",
            "Wa",
            "Jiu",
            "Hu",
            "Ao",
            ,
            "Bou",
            "Xu",
            "Tou",
            "Gui",
            "Zou",
            "Yao",
            "Pi",
            "Xi",
            "Yuan",
            "Ying",
            "Rong",
            "Ru",
            "Chi",
            "Liu",
            "Mei",
            "Pan",
            "Ao",
            "Ma",
            "Gou",
            "Kui",
            "Qin",
            "Jia",
            "Sao",
            "Zhen",
            "Yuan",
            "Cha",
            "Yong",
            "Ming",
            "Ying",
            "Ji",
            "Su",
            "Niao",
            "Xian",
            "Tao",
            "Pang",
            "Lang",
            "Nao",
            "Bao",
            "Ai",
            "Pi",
            "Pin",
            "Yi",
            "Piao",
            "Yu",
            "Lei",
            "Xuan",
            "Man",
            "Yi",
            "Zhang",
            "Kang",
            "Yong",
            "Ni",
            "Li",
            "Di",
            "Gui",
            "Yan",
            "Jin",
            "Zhuan",
            "Chang",
            "Ce",
            "Han",
            "Nen",
            "Lao",
            "Mo",
            "Zhe",
            "Hu",
            "Hu",
            "Ao",
            "Nen",
            "Qiang",
            "Ma",
            "Pie",
            "Gu",
            "Wu",
            "Jiao",
            "Tuo",
            "Zhan",
            "Mao",
            "Xian",
            "Xian",
            "Mo",
            "Liao",
            "Lian",
            "Hua"
        ],
        [
            "Gui",
            "Deng",
            "Zhi",
            "Xu",
            "Yi",
            "Hua",
            "Xi",
            "Hui",
            "Rao",
            "Xi",
            "Yan",
            "Chan",
            "Jiao",
            "Mei",
            "Fan",
            "Fan",
            "Xian",
            "Yi",
            "Wei",
            "Jiao",
            "Fu",
            "Shi",
            "Bi",
            "Shan",
            "Sui",
            "Qiang",
            "Lian",
            "Huan",
            "Xin",
            "Niao",
            "Dong",
            "Yi",
            "Can",
            "Ai",
            "Niang",
            "Neng",
            "Ma",
            "Tiao",
            "Chou",
            "Jin",
            "Ci",
            "Yu",
            "Pin",
            "Yong",
            "Xu",
            "Nai",
            "Yan",
            "Tai",
            "Ying",
            "Can",
            "Niao",
            "Wo",
            "Ying",
            "Mian",
            "Kaka",
            "Ma",
            "Shen",
            "Xing",
            "Ni",
            "Du",
            "Liu",
            "Yuan",
            "Lan",
            "Yan",
            "Shuang",
            "Ling",
            "Jiao",
            "Niang",
            "Lan",
            "Xian",
            "Ying",
            "Shuang",
            "Shuai",
            "Quan",
            "Mi",
            "Li",
            "Luan",
            "Yan",
            "Zhu",
            "Lan",
            "Zi",
            "Jie",
            "Jue",
            "Jue",
            "Kong",
            "Yun",
            "Zi",
            "Zi",
            "Cun",
            "Sun",
            "Fu",
            "Bei",
            "Zi",
            "Xiao",
            "Xin",
            "Meng",
            "Si",
            "Tai",
            "Bao",
            "Ji",
            "Gu",
            "Nu",
            "Xue",
            ,
            "Zhuan",
            "Hai",
            "Luan",
            "Sun",
            "Huai",
            "Mie",
            "Cong",
            "Qian",
            "Shu",
            "Chan",
            "Ya",
            "Zi",
            "Ni",
            "Fu",
            "Zi",
            "Li",
            "Xue",
            "Bo",
            "Ru",
            "Lai",
            "Nie",
            "Nie",
            "Ying",
            "Luan",
            "Mian",
            "Ning",
            "Rong",
            "Ta",
            "Gui",
            "Zhai",
            "Qiong",
            "Yu",
            "Shou",
            "An",
            "Tu",
            "Song",
            "Wan",
            "Rou",
            "Yao",
            "Hong",
            "Yi",
            "Jing",
            "Zhun",
            "Mi",
            "Zhu",
            "Dang",
            "Hong",
            "Zong",
            "Guan",
            "Zhou",
            "Ding",
            "Wan",
            "Yi",
            "Bao",
            "Shi",
            "Shi",
            "Chong",
            "Shen",
            "Ke",
            "Xuan",
            "Shi",
            "You",
            "Huan",
            "Yi",
            "Tiao",
            "Shi",
            "Xian",
            "Gong",
            "Cheng",
            "Qun",
            "Gong",
            "Xiao",
            "Zai",
            "Zha",
            "Bao",
            "Hai",
            "Yan",
            "Xiao",
            "Jia",
            "Shen",
            "Chen",
            "Rong",
            "Huang",
            "Mi",
            "Kou",
            "Kuan",
            "Bin",
            "Su",
            "Cai",
            "Zan",
            "Ji",
            "Yuan",
            "Ji",
            "Yin",
            "Mi",
            "Kou",
            "Qing",
            "Que",
            "Zhen",
            "Jian",
            "Fu",
            "Ning",
            "Bing",
            "Huan",
            "Mei",
            "Qin",
            "Han",
            "Yu",
            "Shi",
            "Ning",
            "Qin",
            "Ning",
            "Zhi",
            "Yu",
            "Bao",
            "Kuan",
            "Ning",
            "Qin",
            "Mo",
            "Cha",
            "Ju",
            "Gua",
            "Qin",
            "Hu",
            "Wu",
            "Liao",
            "Shi",
            "Zhu",
            "Zhai",
            "Shen",
            "Wei",
            "Xie",
            "Kuan",
            "Hui",
            "Liao",
            "Jun",
            "Huan",
            "Yi",
            "Yi",
            "Bao",
            "Qin",
            "Chong",
            "Bao",
            "Feng",
            "Cun",
            "Dui",
            "Si",
            "Xun",
            "Dao",
            "Lu",
            "Dui",
            "Shou"
        ],
        [
            "Po",
            "Feng",
            "Zhuan",
            "Fu",
            "She",
            "Ke",
            "Jiang",
            "Jiang",
            "Zhuan",
            "Wei",
            "Zun",
            "Xun",
            "Shu",
            "Dui",
            "Dao",
            "Xiao",
            "Ji",
            "Shao",
            "Er",
            "Er",
            "Er",
            "Ga",
            "Jian",
            "Shu",
            "Chen",
            "Shang",
            "Shang",
            "Mo",
            "Ga",
            "Chang",
            "Liao",
            "Xian",
            "Xian",
            ,
            "Wang",
            "Wang",
            "You",
            "Liao",
            "Liao",
            "Yao",
            "Mang",
            "Wang",
            "Wang",
            "Wang",
            "Ga",
            "Yao",
            "Duo",
            "Kui",
            "Zhong",
            "Jiu",
            "Gan",
            "Gu",
            "Gan",
            "Tui",
            "Gan",
            "Gan",
            "Shi",
            "Yin",
            "Chi",
            "Kao",
            "Ni",
            "Jin",
            "Wei",
            "Niao",
            "Ju",
            "Pi",
            "Ceng",
            "Xi",
            "Bi",
            "Ju",
            "Jie",
            "Tian",
            "Qu",
            "Ti",
            "Jie",
            "Wu",
            "Diao",
            "Shi",
            "Shi",
            "Ping",
            "Ji",
            "Xie",
            "Chen",
            "Xi",
            "Ni",
            "Zhan",
            "Xi",
            ,
            "Man",
            "E",
            "Lou",
            "Ping",
            "Ti",
            "Fei",
            "Shu",
            "Xie",
            "Tu",
            "Lu",
            "Lu",
            "Xi",
            "Ceng",
            "Lu",
            "Ju",
            "Xie",
            "Ju",
            "Jue",
            "Liao",
            "Jue",
            "Shu",
            "Xi",
            "Che",
            "Tun",
            "Ni",
            "Shan",
            ,
            "Xian",
            "Li",
            "Xue",
            "Nata",
            ,
            "Long",
            "Yi",
            "Qi",
            "Ren",
            "Wu",
            "Han",
            "Shen",
            "Yu",
            "Chu",
            "Sui",
            "Qi",
            ,
            "Yue",
            "Ban",
            "Yao",
            "Ang",
            "Ya",
            "Wu",
            "Jie",
            "E",
            "Ji",
            "Qian",
            "Fen",
            "Yuan",
            "Qi",
            "Cen",
            "Qian",
            "Qi",
            "Cha",
            "Jie",
            "Qu",
            "Gang",
            "Xian",
            "Ao",
            "Lan",
            "Dao",
            "Ba",
            "Zuo",
            "Zuo",
            "Yang",
            "Ju",
            "Gang",
            "Ke",
            "Gou",
            "Xue",
            "Bei",
            "Li",
            "Tiao",
            "Ju",
            "Yan",
            "Fu",
            "Xiu",
            "Jia",
            "Ling",
            "Tuo",
            "Pei",
            "You",
            "Dai",
            "Kuang",
            "Yue",
            "Qu",
            "Hu",
            "Po",
            "Min",
            "An",
            "Tiao",
            "Ling",
            "Chi",
            "Yuri",
            "Dong",
            "Cem",
            "Kui",
            "Xiu",
            "Mao",
            "Tong",
            "Xue",
            "Yi",
            "Kura",
            "He",
            "Ke",
            "Luo",
            "E",
            "Fu",
            "Xun",
            "Die",
            "Lu",
            "An",
            "Er",
            "Gai",
            "Quan",
            "Tong",
            "Yi",
            "Mu",
            "Shi",
            "An",
            "Wei",
            "Hu",
            "Zhi",
            "Mi",
            "Li",
            "Ji",
            "Tong",
            "Wei",
            "You",
            "Sang",
            "Xia",
            "Li",
            "Yao",
            "Jiao",
            "Zheng",
            "Luan",
            "Jiao",
            "E",
            "E",
            "Yu",
            "Ye",
            "Bu",
            "Qiao",
            "Qun",
            "Feng",
            "Feng",
            "Nao",
            "Li",
            "You",
            "Xian",
            "Hong",
            "Dao",
            "Shen",
            "Cheng",
            "Tu",
            "Geng",
            "Jun",
            "Hao",
            "Xia",
            "Yin",
            "Yu"
        ],
        [
            "Lang",
            "Kan",
            "Lao",
            "Lai",
            "Xian",
            "Que",
            "Kong",
            "Chong",
            "Chong",
            "Ta",
            "Lin",
            "Hua",
            "Ju",
            "Lai",
            "Qi",
            "Min",
            "Kun",
            "Kun",
            "Zu",
            "Gu",
            "Cui",
            "Ya",
            "Ya",
            "Gang",
            "Lun",
            "Lun",
            "Leng",
            "Jue",
            "Duo",
            "Zheng",
            "Guo",
            "Yin",
            "Dong",
            "Han",
            "Zheng",
            "Wei",
            "Yao",
            "Pi",
            "Yan",
            "Song",
            "Jie",
            "Beng",
            "Zu",
            "Jue",
            "Dong",
            "Zhan",
            "Gu",
            "Yin",
            ,
            "Ze",
            "Huang",
            "Yu",
            "Wei",
            "Yang",
            "Feng",
            "Qiu",
            "Dun",
            "Ti",
            "Yi",
            "Zhi",
            "Shi",
            "Zai",
            "Yao",
            "E",
            "Zhu",
            "Kan",
            "Lu",
            "Yan",
            "Mei",
            "Gan",
            "Ji",
            "Ji",
            "Huan",
            "Ting",
            "Sheng",
            "Mei",
            "Qian",
            "Wu",
            "Yu",
            "Zong",
            "Lan",
            "Jue",
            "Yan",
            "Yan",
            "Wei",
            "Zong",
            "Cha",
            "Sui",
            "Rong",
            "Yamashina",
            "Qin",
            "Yu",
            "Kewashii",
            "Lou",
            "Tu",
            "Dui",
            "Xi",
            "Weng",
            "Cang",
            "Dang",
            "Hong",
            "Jie",
            "Ai",
            "Liu",
            "Wu",
            "Song",
            "Qiao",
            "Zi",
            "Wei",
            "Beng",
            "Dian",
            "Cuo",
            "Qian",
            "Yong",
            "Nie",
            "Cuo",
            "Ji",
            ,
            "Tao",
            "Song",
            "Zong",
            "Jiang",
            "Liao",
            "Kang",
            "Chan",
            "Die",
            "Cen",
            "Ding",
            "Tu",
            "Lou",
            "Zhang",
            "Zhan",
            "Zhan",
            "Ao",
            "Cao",
            "Qu",
            "Qiang",
            "Zui",
            "Zui",
            "Dao",
            "Dao",
            "Xi",
            "Yu",
            "Bo",
            "Long",
            "Xiang",
            "Ceng",
            "Bo",
            "Qin",
            "Jiao",
            "Yan",
            "Lao",
            "Zhan",
            "Lin",
            "Liao",
            "Liao",
            "Jin",
            "Deng",
            "Duo",
            "Zun",
            "Jiao",
            "Gui",
            "Yao",
            "Qiao",
            "Yao",
            "Jue",
            "Zhan",
            "Yi",
            "Xue",
            "Nao",
            "Ye",
            "Ye",
            "Yi",
            "E",
            "Xian",
            "Ji",
            "Xie",
            "Ke",
            "Xi",
            "Di",
            "Ao",
            "Zui",
            ,
            "Ni",
            "Rong",
            "Dao",
            "Ling",
            "Za",
            "Yu",
            "Yue",
            "Yin",
            ,
            "Jie",
            "Li",
            "Sui",
            "Long",
            "Long",
            "Dian",
            "Ying",
            "Xi",
            "Ju",
            "Chan",
            "Ying",
            "Kui",
            "Yan",
            "Wei",
            "Nao",
            "Quan",
            "Chao",
            "Cuan",
            "Luan",
            "Dian",
            "Dian",
            ,
            "Yan",
            "Yan",
            "Yan",
            "Nao",
            "Yan",
            "Chuan",
            "Gui",
            "Chuan",
            "Zhou",
            "Huang",
            "Jing",
            "Xun",
            "Chao",
            "Chao",
            "Lie",
            "Gong",
            "Zuo",
            "Qiao",
            "Ju",
            "Gong",
            "Kek",
            "Wu",
            "Pwu",
            "Pwu",
            "Chai",
            "Qiu",
            "Qiu",
            "Ji",
            "Yi",
            "Si",
            "Ba",
            "Zhi",
            "Zhao",
            "Xiang",
            "Yi",
            "Jin",
            "Xun",
            "Juan",
            "Phas",
            "Xun",
            "Jin",
            "Fu"
        ],
        [
            "Za",
            "Bi",
            "Shi",
            "Bu",
            "Ding",
            "Shuai",
            "Fan",
            "Nie",
            "Shi",
            "Fen",
            "Pa",
            "Zhi",
            "Xi",
            "Hu",
            "Dan",
            "Wei",
            "Zhang",
            "Tang",
            "Dai",
            "Ma",
            "Pei",
            "Pa",
            "Tie",
            "Fu",
            "Lian",
            "Zhi",
            "Zhou",
            "Bo",
            "Zhi",
            "Di",
            "Mo",
            "Yi",
            "Yi",
            "Ping",
            "Qia",
            "Juan",
            "Ru",
            "Shuai",
            "Dai",
            "Zheng",
            "Shui",
            "Qiao",
            "Zhen",
            "Shi",
            "Qun",
            "Xi",
            "Bang",
            "Dai",
            "Gui",
            "Chou",
            "Ping",
            "Zhang",
            "Sha",
            "Wan",
            "Dai",
            "Wei",
            "Chang",
            "Sha",
            "Qi",
            "Ze",
            "Guo",
            "Mao",
            "Du",
            "Hou",
            "Zheng",
            "Xu",
            "Mi",
            "Wei",
            "Wo",
            "Fu",
            "Yi",
            "Bang",
            "Ping",
            "Tazuna",
            "Gong",
            "Pan",
            "Huang",
            "Dao",
            "Mi",
            "Jia",
            "Teng",
            "Hui",
            "Zhong",
            "Shan",
            "Man",
            "Mu",
            "Biao",
            "Guo",
            "Ze",
            "Mu",
            "Bang",
            "Zhang",
            "Jiong",
            "Chan",
            "Fu",
            "Zhi",
            "Hu",
            "Fan",
            "Chuang",
            "Bi",
            "Hei",
            ,
            "Mi",
            "Qiao",
            "Chan",
            "Fen",
            "Meng",
            "Bang",
            "Chou",
            "Mie",
            "Chu",
            "Jie",
            "Xian",
            "Lan",
            "Gan",
            "Ping",
            "Nian",
            "Qian",
            "Bing",
            "Bing",
            "Xing",
            "Gan",
            "Yao",
            "Huan",
            "You",
            "You",
            "Ji",
            "Guang",
            "Pi",
            "Ting",
            "Ze",
            "Guang",
            "Zhuang",
            "Mo",
            "Qing",
            "Bi",
            "Qin",
            "Dun",
            "Chuang",
            "Gui",
            "Ya",
            "Bai",
            "Jie",
            "Xu",
            "Lu",
            "Wu",
            ,
            "Ku",
            "Ying",
            "Di",
            "Pao",
            "Dian",
            "Ya",
            "Miao",
            "Geng",
            "Ci",
            "Fu",
            "Tong",
            "Pang",
            "Fei",
            "Xiang",
            "Yi",
            "Zhi",
            "Tiao",
            "Zhi",
            "Xiu",
            "Du",
            "Zuo",
            "Xiao",
            "Tu",
            "Gui",
            "Ku",
            "Pang",
            "Ting",
            "You",
            "Bu",
            "Ding",
            "Cheng",
            "Lai",
            "Bei",
            "Ji",
            "An",
            "Shu",
            "Kang",
            "Yong",
            "Tuo",
            "Song",
            "Shu",
            "Qing",
            "Yu",
            "Yu",
            "Miao",
            "Sou",
            "Ce",
            "Xiang",
            "Fei",
            "Jiu",
            "He",
            "Hui",
            "Liu",
            "Sha",
            "Lian",
            "Lang",
            "Sou",
            "Jian",
            "Pou",
            "Qing",
            "Jiu",
            "Jiu",
            "Qin",
            "Ao",
            "Kuo",
            "Lou",
            "Yin",
            "Liao",
            "Dai",
            "Lu",
            "Yi",
            "Chu",
            "Chan",
            "Tu",
            "Si",
            "Xin",
            "Miao",
            "Chang",
            "Wu",
            "Fei",
            "Guang",
            "Koc",
            "Kuai",
            "Bi",
            "Qiang",
            "Xie",
            "Lin",
            "Lin",
            "Liao",
            "Lu",
            ,
            "Ying",
            "Xian",
            "Ting",
            "Yong",
            "Li",
            "Ting",
            "Yin",
            "Xun",
            "Yan",
            "Ting",
            "Di",
            "Po",
            "Jian",
            "Hui",
            "Nai",
            "Hui",
            "Gong",
            "Nian"
        ],
        [
            "Kai",
            "Bian",
            "Yi",
            "Qi",
            "Nong",
            "Fen",
            "Ju",
            "Yan",
            "Yi",
            "Zang",
            "Bi",
            "Yi",
            "Yi",
            "Er",
            "San",
            "Shi",
            "Er",
            "Shi",
            "Shi",
            "Gong",
            "Diao",
            "Yin",
            "Hu",
            "Fu",
            "Hong",
            "Wu",
            "Tui",
            "Chi",
            "Jiang",
            "Ba",
            "Shen",
            "Di",
            "Zhang",
            "Jue",
            "Tao",
            "Fu",
            "Di",
            "Mi",
            "Xian",
            "Hu",
            "Chao",
            "Nu",
            "Jing",
            "Zhen",
            "Yi",
            "Mi",
            "Quan",
            "Wan",
            "Shao",
            "Ruo",
            "Xuan",
            "Jing",
            "Dun",
            "Zhang",
            "Jiang",
            "Qiang",
            "Peng",
            "Dan",
            "Qiang",
            "Bi",
            "Bi",
            "She",
            "Dan",
            "Jian",
            "Gou",
            "Sei",
            "Fa",
            "Bi",
            "Kou",
            "Nagi",
            "Bie",
            "Xiao",
            "Dan",
            "Kuo",
            "Qiang",
            "Hong",
            "Mi",
            "Kuo",
            "Wan",
            "Jue",
            "Ji",
            "Ji",
            "Gui",
            "Dang",
            "Lu",
            "Lu",
            "Tuan",
            "Hui",
            "Zhi",
            "Hui",
            "Hui",
            "Yi",
            "Yi",
            "Yi",
            "Yi",
            "Huo",
            "Huo",
            "Shan",
            "Xing",
            "Wen",
            "Tong",
            "Yan",
            "Yan",
            "Yu",
            "Chi",
            "Cai",
            "Biao",
            "Diao",
            "Bin",
            "Peng",
            "Yong",
            "Piao",
            "Zhang",
            "Ying",
            "Chi",
            "Chi",
            "Zhuo",
            "Tuo",
            "Ji",
            "Pang",
            "Zhong",
            "Yi",
            "Wang",
            "Che",
            "Bi",
            "Chi",
            "Ling",
            "Fu",
            "Wang",
            "Zheng",
            "Cu",
            "Wang",
            "Jing",
            "Dai",
            "Xi",
            "Xun",
            "Hen",
            "Yang",
            "Huai",
            "Lu",
            "Hou",
            "Wa",
            "Cheng",
            "Zhi",
            "Xu",
            "Jing",
            "Tu",
            "Cong",
            ,
            "Lai",
            "Cong",
            "De",
            "Pai",
            "Xi",
            ,
            "Qi",
            "Chang",
            "Zhi",
            "Cong",
            "Zhou",
            "Lai",
            "Yu",
            "Xie",
            "Jie",
            "Jian",
            "Chi",
            "Jia",
            "Bian",
            "Huang",
            "Fu",
            "Xun",
            "Wei",
            "Pang",
            "Yao",
            "Wei",
            "Xi",
            "Zheng",
            "Piao",
            "Chi",
            "De",
            "Zheng",
            "Zheng",
            "Bie",
            "De",
            "Chong",
            "Che",
            "Jiao",
            "Wei",
            "Jiao",
            "Hui",
            "Mei",
            "Long",
            "Xiang",
            "Bao",
            "Qu",
            "Xin",
            "Shu",
            "Bi",
            "Yi",
            "Le",
            "Ren",
            "Dao",
            "Ding",
            "Gai",
            "Ji",
            "Ren",
            "Ren",
            "Chan",
            "Tan",
            "Te",
            "Te",
            "Gan",
            "Qi",
            "Shi",
            "Cun",
            "Zhi",
            "Wang",
            "Mang",
            "Xi",
            "Fan",
            "Ying",
            "Tian",
            "Min",
            "Min",
            "Zhong",
            "Chong",
            "Wu",
            "Ji",
            "Wu",
            "Xi",
            "Ye",
            "You",
            "Wan",
            "Cong",
            "Zhong",
            "Kuai",
            "Yu",
            "Bian",
            "Zhi",
            "Qi",
            "Cui",
            "Chen",
            "Tai",
            "Tun",
            "Qian",
            "Nian",
            "Hun",
            "Xiong",
            "Niu",
            "Wang",
            "Xian",
            "Xin",
            "Kang",
            "Hu",
            "Kai",
            "Fen"
        ],
        [
            "Huai",
            "Tai",
            "Song",
            "Wu",
            "Ou",
            "Chang",
            "Chuang",
            "Ju",
            "Yi",
            "Bao",
            "Chao",
            "Min",
            "Pei",
            "Zuo",
            "Zen",
            "Yang",
            "Kou",
            "Ban",
            "Nu",
            "Nao",
            "Zheng",
            "Pa",
            "Bu",
            "Tie",
            "Gu",
            "Hu",
            "Ju",
            "Da",
            "Lian",
            "Si",
            "Chou",
            "Di",
            "Dai",
            "Yi",
            "Tu",
            "You",
            "Fu",
            "Ji",
            "Peng",
            "Xing",
            "Yuan",
            "Ni",
            "Guai",
            "Fu",
            "Xi",
            "Bi",
            "You",
            "Qie",
            "Xuan",
            "Cong",
            "Bing",
            "Huang",
            "Xu",
            "Chu",
            "Pi",
            "Xi",
            "Xi",
            "Tan",
            "Koraeru",
            "Zong",
            "Dui",
            ,
            "Ki",
            "Yi",
            "Chi",
            "Ren",
            "Xun",
            "Shi",
            "Xi",
            "Lao",
            "Heng",
            "Kuang",
            "Mu",
            "Zhi",
            "Xie",
            "Lian",
            "Tiao",
            "Huang",
            "Die",
            "Hao",
            "Kong",
            "Gui",
            "Heng",
            "Xi",
            "Xiao",
            "Shu",
            "S",
            "Kua",
            "Qiu",
            "Yang",
            "Hui",
            "Hui",
            "Chi",
            "Jia",
            "Yi",
            "Xiong",
            "Guai",
            "Lin",
            "Hui",
            "Zi",
            "Xu",
            "Chi",
            "Xiang",
            "Nu",
            "Hen",
            "En",
            "Ke",
            "Tong",
            "Tian",
            "Gong",
            "Quan",
            "Xi",
            "Qia",
            "Yue",
            "Peng",
            "Ken",
            "De",
            "Hui",
            "E",
            "Kyuu",
            "Tong",
            "Yan",
            "Kai",
            "Ce",
            "Nao",
            "Yun",
            "Mang",
            "Yong",
            "Yong",
            "Yuan",
            "Pi",
            "Kun",
            "Qiao",
            "Yue",
            "Yu",
            "Yu",
            "Jie",
            "Xi",
            "Zhe",
            "Lin",
            "Ti",
            "Han",
            "Hao",
            "Qie",
            "Ti",
            "Bu",
            "Yi",
            "Qian",
            "Hui",
            "Xi",
            "Bei",
            "Man",
            "Yi",
            "Heng",
            "Song",
            "Quan",
            "Cheng",
            "Hui",
            "Wu",
            "Wu",
            "You",
            "Li",
            "Liang",
            "Huan",
            "Cong",
            "Yi",
            "Yue",
            "Li",
            "Nin",
            "Nao",
            "E",
            "Que",
            "Xuan",
            "Qian",
            "Wu",
            "Min",
            "Cong",
            "Fei",
            "Bei",
            "Duo",
            "Cui",
            "Chang",
            "Men",
            "Li",
            "Ji",
            "Guan",
            "Guan",
            "Xing",
            "Dao",
            "Qi",
            "Kong",
            "Tian",
            "Lun",
            "Xi",
            "Kan",
            "Kun",
            "Ni",
            "Qing",
            "Chou",
            "Dun",
            "Guo",
            "Chan",
            "Liang",
            "Wan",
            "Yuan",
            "Jin",
            "Ji",
            "Lin",
            "Yu",
            "Huo",
            "He",
            "Quan",
            "Tan",
            "Ti",
            "Ti",
            "Nie",
            "Wang",
            "Chuo",
            "Bu",
            "Hun",
            "Xi",
            "Tang",
            "Xin",
            "Wei",
            "Hui",
            "E",
            "Rui",
            "Zong",
            "Jian",
            "Yong",
            "Dian",
            "Ju",
            "Can",
            "Cheng",
            "De",
            "Bei",
            "Qie",
            "Can",
            "Dan",
            "Guan",
            "Duo",
            "Nao",
            "Yun",
            "Xiang",
            "Zhui",
            "Die",
            "Huang",
            "Chun",
            "Qiong",
            "Re",
            "Xing",
            "Ce",
            "Bian",
            "Hun",
            "Zong",
            "Ti"
        ],
        [
            "Qiao",
            "Chou",
            "Bei",
            "Xuan",
            "Wei",
            "Ge",
            "Qian",
            "Wei",
            "Yu",
            "Yu",
            "Bi",
            "Xuan",
            "Huan",
            "Min",
            "Bi",
            "Yi",
            "Mian",
            "Yong",
            "Kai",
            "Dang",
            "Yin",
            "E",
            "Chen",
            "Mou",
            "Ke",
            "Ke",
            "Yu",
            "Ai",
            "Qie",
            "Yan",
            "Nuo",
            "Gan",
            "Yun",
            "Zong",
            "Sai",
            "Leng",
            "Fen",
            ,
            "Kui",
            "Kui",
            "Que",
            "Gong",
            "Yun",
            "Su",
            "Su",
            "Qi",
            "Yao",
            "Song",
            "Huang",
            "Ji",
            "Gu",
            "Ju",
            "Chuang",
            "Ni",
            "Xie",
            "Kai",
            "Zheng",
            "Yong",
            "Cao",
            "Sun",
            "Shen",
            "Bo",
            "Kai",
            "Yuan",
            "Xie",
            "Hun",
            "Yong",
            "Yang",
            "Li",
            "Sao",
            "Tao",
            "Yin",
            "Ci",
            "Xu",
            "Qian",
            "Tai",
            "Huang",
            "Yun",
            "Shen",
            "Ming",
            ,
            "She",
            "Cong",
            "Piao",
            "Mo",
            "Mu",
            "Guo",
            "Chi",
            "Can",
            "Can",
            "Can",
            "Cui",
            "Min",
            "Te",
            "Zhang",
            "Tong",
            "Ao",
            "Shuang",
            "Man",
            "Guan",
            "Que",
            "Zao",
            "Jiu",
            "Hui",
            "Kai",
            "Lian",
            "Ou",
            "Song",
            "Jin",
            "Yin",
            "Lu",
            "Shang",
            "Wei",
            "Tuan",
            "Man",
            "Qian",
            "She",
            "Yong",
            "Qing",
            "Kang",
            "Di",
            "Zhi",
            "Lou",
            "Juan",
            "Qi",
            "Qi",
            "Yu",
            "Ping",
            "Liao",
            "Cong",
            "You",
            "Chong",
            "Zhi",
            "Tong",
            "Cheng",
            "Qi",
            "Qu",
            "Peng",
            "Bei",
            "Bie",
            "Chun",
            "Jiao",
            "Zeng",
            "Chi",
            "Lian",
            "Ping",
            "Kui",
            "Hui",
            "Qiao",
            "Cheng",
            "Yin",
            "Yin",
            "Xi",
            "Xi",
            "Dan",
            "Tan",
            "Duo",
            "Dui",
            "Dui",
            "Su",
            "Jue",
            "Ce",
            "Xiao",
            "Fan",
            "Fen",
            "Lao",
            "Lao",
            "Chong",
            "Han",
            "Qi",
            "Xian",
            "Min",
            "Jing",
            "Liao",
            "Wu",
            "Can",
            "Jue",
            "Cu",
            "Xian",
            "Tan",
            "Sheng",
            "Pi",
            "Yi",
            "Chu",
            "Xian",
            "Nao",
            "Dan",
            "Tan",
            "Jing",
            "Song",
            "Han",
            "Jiao",
            "Wai",
            "Huan",
            "Dong",
            "Qin",
            "Qin",
            "Qu",
            "Cao",
            "Ken",
            "Xie",
            "Ying",
            "Ao",
            "Mao",
            "Yi",
            "Lin",
            "Se",
            "Jun",
            "Huai",
            "Men",
            "Lan",
            "Ai",
            "Lin",
            "Yan",
            "Gua",
            "Xia",
            "Chi",
            "Yu",
            "Yin",
            "Dai",
            "Meng",
            "Ai",
            "Meng",
            "Dui",
            "Qi",
            "Mo",
            "Lan",
            "Men",
            "Chou",
            "Zhi",
            "Nuo",
            "Nuo",
            "Yan",
            "Yang",
            "Bo",
            "Zhi",
            "Kuang",
            "Kuang",
            "You",
            "Fu",
            "Liu",
            "Mie",
            "Cheng",
            ,
            "Chan",
            "Meng",
            "Lan",
            "Huai",
            "Xuan",
            "Rang",
            "Chan",
            "Ji",
            "Ju",
            "Huan",
            "She",
            "Yi"
        ],
        [
            "Lian",
            "Nan",
            "Mi",
            "Tang",
            "Jue",
            "Gang",
            "Gang",
            "Gang",
            "Ge",
            "Yue",
            "Wu",
            "Jian",
            "Xu",
            "Shu",
            "Rong",
            "Xi",
            "Cheng",
            "Wo",
            "Jie",
            "Ge",
            "Jian",
            "Qiang",
            "Huo",
            "Qiang",
            "Zhan",
            "Dong",
            "Qi",
            "Jia",
            "Die",
            "Zei",
            "Jia",
            "Ji",
            "Shi",
            "Kan",
            "Ji",
            "Kui",
            "Gai",
            "Deng",
            "Zhan",
            "Chuang",
            "Ge",
            "Jian",
            "Jie",
            "Yu",
            "Jian",
            "Yan",
            "Lu",
            "Xi",
            "Zhan",
            "Xi",
            "Xi",
            "Chuo",
            "Dai",
            "Qu",
            "Hu",
            "Hu",
            "Hu",
            "E",
            "Shi",
            "Li",
            "Mao",
            "Hu",
            "Li",
            "Fang",
            "Suo",
            "Bian",
            "Dian",
            "Jiong",
            "Shang",
            "Yi",
            "Yi",
            "Shan",
            "Hu",
            "Fei",
            "Yan",
            "Shou",
            "T",
            "Cai",
            "Zha",
            "Qiu",
            "Le",
            "Bu",
            "Ba",
            "Da",
            "Reng",
            "Fu",
            "Hameru",
            "Zai",
            "Tuo",
            "Zhang",
            "Diao",
            "Kang",
            "Yu",
            "Ku",
            "Han",
            "Shen",
            "Cha",
            "Yi",
            "Gu",
            "Kou",
            "Wu",
            "Tuo",
            "Qian",
            "Zhi",
            "Ren",
            "Kuo",
            "Men",
            "Sao",
            "Yang",
            "Niu",
            "Ban",
            "Che",
            "Rao",
            "Xi",
            "Qian",
            "Ban",
            "Jia",
            "Yu",
            "Fu",
            "Ao",
            "Xi",
            "Pi",
            "Zhi",
            "Zi",
            "E",
            "Dun",
            "Zhao",
            "Cheng",
            "Ji",
            "Yan",
            "Kuang",
            "Bian",
            "Chao",
            "Ju",
            "Wen",
            "Hu",
            "Yue",
            "Jue",
            "Ba",
            "Qin",
            "Zhen",
            "Zheng",
            "Yun",
            "Wan",
            "Nu",
            "Yi",
            "Shu",
            "Zhua",
            "Pou",
            "Tou",
            "Dou",
            "Kang",
            "Zhe",
            "Pou",
            "Fu",
            "Pao",
            "Ba",
            "Ao",
            "Ze",
            "Tuan",
            "Kou",
            "Lun",
            "Qiang",
            ,
            "Hu",
            "Bao",
            "Bing",
            "Zhi",
            "Peng",
            "Tan",
            "Pu",
            "Pi",
            "Tai",
            "Yao",
            "Zhen",
            "Zha",
            "Yang",
            "Bao",
            "He",
            "Ni",
            "Yi",
            "Di",
            "Chi",
            "Pi",
            "Za",
            "Mo",
            "Mo",
            "Shen",
            "Ya",
            "Chou",
            "Qu",
            "Min",
            "Chu",
            "Jia",
            "Fu",
            "Zhan",
            "Zhu",
            "Dan",
            "Chai",
            "Mu",
            "Nian",
            "La",
            "Fu",
            "Pao",
            "Ban",
            "Pai",
            "Ling",
            "Na",
            "Guai",
            "Qian",
            "Ju",
            "Tuo",
            "Ba",
            "Tuo",
            "Tuo",
            "Ao",
            "Ju",
            "Zhuo",
            "Pan",
            "Zhao",
            "Bai",
            "Bai",
            "Di",
            "Ni",
            "Ju",
            "Kuo",
            "Long",
            "Jian",
            ,
            "Yong",
            "Lan",
            "Ning",
            "Bo",
            "Ze",
            "Qian",
            "Hen",
            "Gua",
            "Shi",
            "Jie",
            "Zheng",
            "Nin",
            "Gong",
            "Gong",
            "Quan",
            "Shuan",
            "Cun",
            "Zan",
            "Kao",
            "Chi",
            "Xie",
            "Ce",
            "Hui",
            "Pin",
            "Zhuai",
            "Shi",
            "Na"
        ],
        [
            "Bo",
            "Chi",
            "Gua",
            "Zhi",
            "Kuo",
            "Duo",
            "Duo",
            "Zhi",
            "Qie",
            "An",
            "Nong",
            "Zhen",
            "Ge",
            "Jiao",
            "Ku",
            "Dong",
            "Ru",
            "Tiao",
            "Lie",
            "Zha",
            "Lu",
            "Die",
            "Wa",
            "Jue",
            "Mushiru",
            "Ju",
            "Zhi",
            "Luan",
            "Ya",
            "Zhua",
            "Ta",
            "Xie",
            "Nao",
            "Dang",
            "Jiao",
            "Zheng",
            "Ji",
            "Hui",
            "Xun",
            "Ku",
            "Ai",
            "Tuo",
            "Nuo",
            "Cuo",
            "Bo",
            "Geng",
            "Ti",
            "Zhen",
            "Cheng",
            "Suo",
            "Suo",
            "Keng",
            "Mei",
            "Long",
            "Ju",
            "Peng",
            "Jian",
            "Yi",
            "Ting",
            "Shan",
            "Nuo",
            "Wan",
            "Xie",
            "Cha",
            "Feng",
            "Jiao",
            "Wu",
            "Jun",
            "Jiu",
            "Tong",
            "Kun",
            "Huo",
            "Tu",
            "Zhuo",
            "Pou",
            "Le",
            "Ba",
            "Han",
            "Shao",
            "Nie",
            "Juan",
            "Ze",
            "Song",
            "Ye",
            "Jue",
            "Bu",
            "Huan",
            "Bu",
            "Zun",
            "Yi",
            "Zhai",
            "Lu",
            "Sou",
            "Tuo",
            "Lao",
            "Sun",
            "Bang",
            "Jian",
            "Huan",
            "Dao",
            ,
            "Wan",
            "Qin",
            "Peng",
            "She",
            "Lie",
            "Min",
            "Men",
            "Fu",
            "Bai",
            "Ju",
            "Dao",
            "Wo",
            "Ai",
            "Juan",
            "Yue",
            "Zong",
            "Chen",
            "Chui",
            "Jie",
            "Tu",
            "Ben",
            "Na",
            "Nian",
            "Nuo",
            "Zu",
            "Wo",
            "Xi",
            "Xian",
            "Cheng",
            "Dian",
            "Sao",
            "Lun",
            "Qing",
            "Gang",
            "Duo",
            "Shou",
            "Diao",
            "Pou",
            "Di",
            "Zhang",
            "Gun",
            "Ji",
            "Tao",
            "Qia",
            "Qi",
            "Pai",
            "Shu",
            "Qian",
            "Ling",
            "Yi",
            "Ya",
            "Jue",
            "Zheng",
            "Liang",
            "Gua",
            "Yi",
            "Huo",
            "Shan",
            "Zheng",
            "Lue",
            "Cai",
            "Tan",
            "Che",
            "Bing",
            "Jie",
            "Ti",
            "Kong",
            "Tui",
            "Yan",
            "Cuo",
            "Zou",
            "Ju",
            "Tian",
            "Qian",
            "Ken",
            "Bai",
            "Shou",
            "Jie",
            "Lu",
            "Guo",
            "Haba",
            ,
            "Zhi",
            "Dan",
            "Mang",
            "Xian",
            "Sao",
            "Guan",
            "Peng",
            "Yuan",
            "Nuo",
            "Jian",
            "Zhen",
            "Jiu",
            "Jian",
            "Yu",
            "Yan",
            "Kui",
            "Nan",
            "Hong",
            "Rou",
            "Pi",
            "Wei",
            "Sai",
            "Zou",
            "Xuan",
            "Miao",
            "Ti",
            "Nie",
            "Cha",
            "Shi",
            "Zong",
            "Zhen",
            "Yi",
            "Shun",
            "Heng",
            "Bian",
            "Yang",
            "Huan",
            "Yan",
            "Zuan",
            "An",
            "Xu",
            "Ya",
            "Wo",
            "Ke",
            "Chuai",
            "Ji",
            "Ti",
            "La",
            "La",
            "Cheng",
            "Kai",
            "Jiu",
            "Jiu",
            "Tu",
            "Jie",
            "Hui",
            "Geng",
            "Chong",
            "Shuo",
            "She",
            "Xie",
            "Yuan",
            "Qian",
            "Ye",
            "Cha",
            "Zha",
            "Bei",
            "Yao",
            ,
            ,
            "Lan",
            "Wen",
            "Qin"
        ],
        [
            "Chan",
            "Ge",
            "Lou",
            "Zong",
            "Geng",
            "Jiao",
            "Gou",
            "Qin",
            "Yong",
            "Que",
            "Chou",
            "Chi",
            "Zhan",
            "Sun",
            "Sun",
            "Bo",
            "Chu",
            "Rong",
            "Beng",
            "Cuo",
            "Sao",
            "Ke",
            "Yao",
            "Dao",
            "Zhi",
            "Nu",
            "Xie",
            "Jian",
            "Sou",
            "Qiu",
            "Gao",
            "Xian",
            "Shuo",
            "Sang",
            "Jin",
            "Mie",
            "E",
            "Chui",
            "Nuo",
            "Shan",
            "Ta",
            "Jie",
            "Tang",
            "Pan",
            "Ban",
            "Da",
            "Li",
            "Tao",
            "Hu",
            "Zhi",
            "Wa",
            "Xia",
            "Qian",
            "Wen",
            "Qiang",
            "Tian",
            "Zhen",
            "E",
            "Xi",
            "Nuo",
            "Quan",
            "Cha",
            "Zha",
            "Ge",
            "Wu",
            "En",
            "She",
            "Kang",
            "She",
            "Shu",
            "Bai",
            "Yao",
            "Bin",
            "Sou",
            "Tan",
            "Sa",
            "Chan",
            "Suo",
            "Liao",
            "Chong",
            "Chuang",
            "Guo",
            "Bing",
            "Feng",
            "Shuai",
            "Di",
            "Qi",
            "Sou",
            "Zhai",
            "Lian",
            "Tang",
            "Chi",
            "Guan",
            "Lu",
            "Luo",
            "Lou",
            "Zong",
            "Gai",
            "Hu",
            "Zha",
            "Chuang",
            "Tang",
            "Hua",
            "Cui",
            "Nai",
            "Mo",
            "Jiang",
            "Gui",
            "Ying",
            "Zhi",
            "Ao",
            "Zhi",
            "Nie",
            "Man",
            "Shan",
            "Kou",
            "Shu",
            "Suo",
            "Tuan",
            "Jiao",
            "Mo",
            "Mo",
            "Zhe",
            "Xian",
            "Keng",
            "Piao",
            "Jiang",
            "Yin",
            "Gou",
            "Qian",
            "Lue",
            "Ji",
            "Ying",
            "Jue",
            "Pie",
            "Pie",
            "Lao",
            "Dun",
            "Xian",
            "Ruan",
            "Kui",
            "Zan",
            "Yi",
            "Xun",
            "Cheng",
            "Cheng",
            "Sa",
            "Nao",
            "Heng",
            "Si",
            "Qian",
            "Huang",
            "Da",
            "Zun",
            "Nian",
            "Lin",
            "Zheng",
            "Hui",
            "Zhuang",
            "Jiao",
            "Ji",
            "Cao",
            "Dan",
            "Dan",
            "Che",
            "Bo",
            "Che",
            "Jue",
            "Xiao",
            "Liao",
            "Ben",
            "Fu",
            "Qiao",
            "Bo",
            "Cuo",
            "Zhuo",
            "Zhuan",
            "Tuo",
            "Pu",
            "Qin",
            "Dun",
            "Nian",
            ,
            "Xie",
            "Lu",
            "Jiao",
            "Cuan",
            "Ta",
            "Han",
            "Qiao",
            "Zhua",
            "Jian",
            "Gan",
            "Yong",
            "Lei",
            "Kuo",
            "Lu",
            "Shan",
            "Zhuo",
            "Ze",
            "Pu",
            "Chuo",
            "Ji",
            "Dang",
            "Suo",
            "Cao",
            "Qing",
            "Jing",
            "Huan",
            "Jie",
            "Qin",
            "Kuai",
            "Dan",
            "Xi",
            "Ge",
            "Pi",
            "Bo",
            "Ao",
            "Ju",
            "Ye",
            ,
            "Mang",
            "Sou",
            "Mi",
            "Ji",
            "Tai",
            "Zhuo",
            "Dao",
            "Xing",
            "Lan",
            "Ca",
            "Ju",
            "Ye",
            "Ru",
            "Ye",
            "Ye",
            "Ni",
            "Hu",
            "Ji",
            "Bin",
            "Ning",
            "Ge",
            "Zhi",
            "Jie",
            "Kuo",
            "Mo",
            "Jian",
            "Xie",
            "Lie",
            "Tan",
            "Bai",
            "Sou",
            "Lu",
            "Lue",
            "Rao",
            "Zhi"
        ],
        [
            "Pan",
            "Yang",
            "Lei",
            "Sa",
            "Shu",
            "Zan",
            "Nian",
            "Xian",
            "Jun",
            "Huo",
            "Li",
            "La",
            "Han",
            "Ying",
            "Lu",
            "Long",
            "Qian",
            "Qian",
            "Zan",
            "Qian",
            "Lan",
            "San",
            "Ying",
            "Mei",
            "Rang",
            "Chan",
            ,
            "Cuan",
            "Xi",
            "She",
            "Luo",
            "Jun",
            "Mi",
            "Li",
            "Zan",
            "Luan",
            "Tan",
            "Zuan",
            "Li",
            "Dian",
            "Wa",
            "Dang",
            "Jiao",
            "Jue",
            "Lan",
            "Li",
            "Nang",
            "Zhi",
            "Gui",
            "Gui",
            "Qi",
            "Xin",
            "Pu",
            "Sui",
            "Shou",
            "Kao",
            "You",
            "Gai",
            "Yi",
            "Gong",
            "Gan",
            "Ban",
            "Fang",
            "Zheng",
            "Bo",
            "Dian",
            "Kou",
            "Min",
            "Wu",
            "Gu",
            "He",
            "Ce",
            "Xiao",
            "Mi",
            "Chu",
            "Ge",
            "Di",
            "Xu",
            "Jiao",
            "Min",
            "Chen",
            "Jiu",
            "Zhen",
            "Duo",
            "Yu",
            "Chi",
            "Ao",
            "Bai",
            "Xu",
            "Jiao",
            "Duo",
            "Lian",
            "Nie",
            "Bi",
            "Chang",
            "Dian",
            "Duo",
            "Yi",
            "Gan",
            "San",
            "Ke",
            "Yan",
            "Dun",
            "Qi",
            "Dou",
            "Xiao",
            "Duo",
            "Jiao",
            "Jing",
            "Yang",
            "Xia",
            "Min",
            "Shu",
            "Ai",
            "Qiao",
            "Ai",
            "Zheng",
            "Di",
            "Zhen",
            "Fu",
            "Shu",
            "Liao",
            "Qu",
            "Xiong",
            "Xi",
            "Jiao",
            "Sen",
            "Jiao",
            "Zhuo",
            "Yi",
            "Lian",
            "Bi",
            "Li",
            "Xiao",
            "Xiao",
            "Wen",
            "Xue",
            "Qi",
            "Qi",
            "Zhai",
            "Bin",
            "Jue",
            "Zhai",
            ,
            "Fei",
            "Ban",
            "Ban",
            "Lan",
            "Yu",
            "Lan",
            "Wei",
            "Dou",
            "Sheng",
            "Liao",
            "Jia",
            "Hu",
            "Xie",
            "Jia",
            "Yu",
            "Zhen",
            "Jiao",
            "Wo",
            "Tou",
            "Chu",
            "Jin",
            "Chi",
            "Yin",
            "Fu",
            "Qiang",
            "Zhan",
            "Qu",
            "Zhuo",
            "Zhan",
            "Duan",
            "Zhuo",
            "Si",
            "Xin",
            "Zhuo",
            "Zhuo",
            "Qin",
            "Lin",
            "Zhuo",
            "Chu",
            "Duan",
            "Zhu",
            "Fang",
            "Xie",
            "Hang",
            "Yu",
            "Shi",
            "Pei",
            "You",
            "Mye",
            "Pang",
            "Qi",
            "Zhan",
            "Mao",
            "Lu",
            "Pei",
            "Pi",
            "Liu",
            "Fu",
            "Fang",
            "Xuan",
            "Jing",
            "Jing",
            "Ni",
            "Zu",
            "Zhao",
            "Yi",
            "Liu",
            "Shao",
            "Jian",
            "Es",
            "Yi",
            "Qi",
            "Zhi",
            "Fan",
            "Piao",
            "Fan",
            "Zhan",
            "Guai",
            "Sui",
            "Yu",
            "Wu",
            "Ji",
            "Ji",
            "Ji",
            "Huo",
            "Ri",
            "Dan",
            "Jiu",
            "Zhi",
            "Zao",
            "Xie",
            "Tiao",
            "Xun",
            "Xu",
            "Xu",
            "Xu",
            "Gan",
            "Han",
            "Tai",
            "Di",
            "Xu",
            "Chan",
            "Shi",
            "Kuang",
            "Yang",
            "Shi",
            "Wang",
            "Min",
            "Min",
            "Tun",
            "Chun",
            "Wu"
        ],
        [
            "Yun",
            "Bei",
            "Ang",
            "Ze",
            "Ban",
            "Jie",
            "Kun",
            "Sheng",
            "Hu",
            "Fang",
            "Hao",
            "Gui",
            "Chang",
            "Xuan",
            "Ming",
            "Hun",
            "Fen",
            "Qin",
            "Hu",
            "Yi",
            "Xi",
            "Xin",
            "Yan",
            "Ze",
            "Fang",
            "Tan",
            "Shen",
            "Ju",
            "Yang",
            "Zan",
            "Bing",
            "Xing",
            "Ying",
            "Xuan",
            "Pei",
            "Zhen",
            "Ling",
            "Chun",
            "Hao",
            "Mei",
            "Zuo",
            "Mo",
            "Bian",
            "Xu",
            "Hun",
            "Zhao",
            "Zong",
            "Shi",
            "Shi",
            "Yu",
            "Fei",
            "Die",
            "Mao",
            "Ni",
            "Chang",
            "Wen",
            "Dong",
            "Ai",
            "Bing",
            "Ang",
            "Zhou",
            "Long",
            "Xian",
            "Kuang",
            "Tiao",
            "Chao",
            "Shi",
            "Huang",
            "Huang",
            "Xuan",
            "Kui",
            "Xu",
            "Jiao",
            "Jin",
            "Zhi",
            "Jin",
            "Shang",
            "Tong",
            "Hong",
            "Yan",
            "Gai",
            "Xiang",
            "Shai",
            "Xiao",
            "Ye",
            "Yun",
            "Hui",
            "Han",
            "Han",
            "Jun",
            "Wan",
            "Xian",
            "Kun",
            "Zhou",
            "Xi",
            "Cheng",
            "Sheng",
            "Bu",
            "Zhe",
            "Zhe",
            "Wu",
            "Han",
            "Hui",
            "Hao",
            "Chen",
            "Wan",
            "Tian",
            "Zhuo",
            "Zui",
            "Zhou",
            "Pu",
            "Jing",
            "Xi",
            "Shan",
            "Yi",
            "Xi",
            "Qing",
            "Qi",
            "Jing",
            "Gui",
            "Zhen",
            "Yi",
            "Zhi",
            "An",
            "Wan",
            "Lin",
            "Liang",
            "Chang",
            "Wang",
            "Xiao",
            "Zan",
            "Hi",
            "Xuan",
            "Xuan",
            "Yi",
            "Xia",
            "Yun",
            "Hui",
            "Fu",
            "Min",
            "Kui",
            "He",
            "Ying",
            "Du",
            "Wei",
            "Shu",
            "Qing",
            "Mao",
            "Nan",
            "Jian",
            "Nuan",
            "An",
            "Yang",
            "Chun",
            "Yao",
            "Suo",
            "Jin",
            "Ming",
            "Jiao",
            "Kai",
            "Gao",
            "Weng",
            "Chang",
            "Qi",
            "Hao",
            "Yan",
            "Li",
            "Ai",
            "Ji",
            "Gui",
            "Men",
            "Zan",
            "Xie",
            "Hao",
            "Mu",
            "Mo",
            "Cong",
            "Ni",
            "Zhang",
            "Hui",
            "Bao",
            "Han",
            "Xuan",
            "Chuan",
            "Liao",
            "Xian",
            "Dan",
            "Jing",
            "Pie",
            "Lin",
            "Tun",
            "Xi",
            "Yi",
            "Ji",
            "Huang",
            "Tai",
            "Ye",
            "Ye",
            "Li",
            "Tan",
            "Tong",
            "Xiao",
            "Fei",
            "Qin",
            "Zhao",
            "Hao",
            "Yi",
            "Xiang",
            "Xing",
            "Sen",
            "Jiao",
            "Bao",
            "Jing",
            "Yian",
            "Ai",
            "Ye",
            "Ru",
            "Shu",
            "Meng",
            "Xun",
            "Yao",
            "Pu",
            "Li",
            "Chen",
            "Kuang",
            "Die",
            ,
            "Yan",
            "Huo",
            "Lu",
            "Xi",
            "Rong",
            "Long",
            "Nang",
            "Luo",
            "Luan",
            "Shai",
            "Tang",
            "Yan",
            "Chu",
            "Yue",
            "Yue",
            "Qu",
            "Yi",
            "Geng",
            "Ye",
            "Hu",
            "He",
            "Shu",
            "Cao",
            "Cao",
            "Noboru",
            "Man",
            "Ceng",
            "Ceng",
            "Ti"
        ],
        [
            "Zui",
            "Can",
            "Xu",
            "Hui",
            "Yin",
            "Qie",
            "Fen",
            "Pi",
            "Yue",
            "You",
            "Ruan",
            "Peng",
            "Ban",
            "Fu",
            "Ling",
            "Fei",
            "Qu",
            ,
            "Nu",
            "Tiao",
            "Shuo",
            "Zhen",
            "Lang",
            "Lang",
            "Juan",
            "Ming",
            "Huang",
            "Wang",
            "Tun",
            "Zhao",
            "Ji",
            "Qi",
            "Ying",
            "Zong",
            "Wang",
            "Tong",
            "Lang",
            ,
            "Meng",
            "Long",
            "Mu",
            "Deng",
            "Wei",
            "Mo",
            "Ben",
            "Zha",
            "Zhu",
            "Shu",
            ,
            "Zhu",
            "Ren",
            "Ba",
            "Po",
            "Duo",
            "Duo",
            "Dao",
            "Li",
            "Qiu",
            "Ji",
            "Jiu",
            "Bi",
            "Xiu",
            "Ting",
            "Ci",
            "Sha",
            "Eburi",
            "Za",
            "Quan",
            "Qian",
            "Yu",
            "Gan",
            "Wu",
            "Cha",
            "Shan",
            "Xun",
            "Fan",
            "Wu",
            "Zi",
            "Li",
            "Xing",
            "Cai",
            "Cun",
            "Ren",
            "Shao",
            "Tuo",
            "Di",
            "Zhang",
            "Mang",
            "Chi",
            "Yi",
            "Gu",
            "Gong",
            "Du",
            "Yi",
            "Qi",
            "Shu",
            "Gang",
            "Tiao",
            "Moku",
            "Soma",
            "Tochi",
            "Lai",
            "Sugi",
            "Mang",
            "Yang",
            "Ma",
            "Miao",
            "Si",
            "Yuan",
            "Hang",
            "Fei",
            "Bei",
            "Jie",
            "Dong",
            "Gao",
            "Yao",
            "Xian",
            "Chu",
            "Qun",
            "Pa",
            "Shu",
            "Hua",
            "Xin",
            "Chou",
            "Zhu",
            "Chou",
            "Song",
            "Ban",
            "Song",
            "Ji",
            "Yue",
            "Jin",
            "Gou",
            "Ji",
            "Mao",
            "Pi",
            "Bi",
            "Wang",
            "Ang",
            "Fang",
            "Fen",
            "Yi",
            "Fu",
            "Nan",
            "Xi",
            "Hu",
            "Ya",
            "Dou",
            "Xun",
            "Zhen",
            "Yao",
            "Lin",
            "Rui",
            "E",
            "Mei",
            "Zhao",
            "Guo",
            "Zhi",
            "Cong",
            "Yun",
            "Waku",
            "Dou",
            "Shu",
            "Zao",
            ,
            "Li",
            "Haze",
            "Jian",
            "Cheng",
            "Matsu",
            "Qiang",
            "Feng",
            "Nan",
            "Xiao",
            "Xian",
            "Ku",
            "Ping",
            "Yi",
            "Xi",
            "Zhi",
            "Guai",
            "Xiao",
            "Jia",
            "Jia",
            "Gou",
            "Fu",
            "Mo",
            "Yi",
            "Ye",
            "Ye",
            "Shi",
            "Nie",
            "Bi",
            "Duo",
            "Yi",
            "Ling",
            "Bing",
            "Ni",
            "La",
            "He",
            "Pan",
            "Fan",
            "Zhong",
            "Dai",
            "Ci",
            "Yang",
            "Fu",
            "Bo",
            "Mou",
            "Gan",
            "Qi",
            "Ran",
            "Rou",
            "Mao",
            "Zhao",
            "Song",
            "Zhe",
            "Xia",
            "You",
            "Shen",
            "Ju",
            "Tuo",
            "Zuo",
            "Nan",
            "Ning",
            "Yong",
            "Di",
            "Zhi",
            "Zha",
            "Cha",
            "Dan",
            "Gu",
            "Pu",
            "Jiu",
            "Ao",
            "Fu",
            "Jian",
            "Bo",
            "Duo",
            "Ke",
            "Nai",
            "Zhu",
            "Bi",
            "Liu",
            "Chai",
            "Zha",
            "Si",
            "Zhu",
            "Pei",
            "Shi",
            "Guai",
            "Cha",
            "Yao",
            "Jue",
            "Jiu",
            "Shi"
        ],
        [
            "Zhi",
            "Liu",
            "Mei",
            "Hoy",
            "Rong",
            "Zha",
            ,
            "Biao",
            "Zhan",
            "Jie",
            "Long",
            "Dong",
            "Lu",
            "Sayng",
            "Li",
            "Lan",
            "Yong",
            "Shu",
            "Xun",
            "Shuan",
            "Qi",
            "Zhen",
            "Qi",
            "Li",
            "Yi",
            "Xiang",
            "Zhen",
            "Li",
            "Su",
            "Gua",
            "Kan",
            "Bing",
            "Ren",
            "Xiao",
            "Bo",
            "Ren",
            "Bing",
            "Zi",
            "Chou",
            "Yi",
            "Jie",
            "Xu",
            "Zhu",
            "Jian",
            "Zui",
            "Er",
            "Er",
            "You",
            "Fa",
            "Gong",
            "Kao",
            "Lao",
            "Zhan",
            "Li",
            "Yin",
            "Yang",
            "He",
            "Gen",
            "Zhi",
            "Chi",
            "Ge",
            "Zai",
            "Luan",
            "Fu",
            "Jie",
            "Hang",
            "Gui",
            "Tao",
            "Guang",
            "Wei",
            "Kuang",
            "Ru",
            "An",
            "An",
            "Juan",
            "Yi",
            "Zhuo",
            "Ku",
            "Zhi",
            "Qiong",
            "Tong",
            "Sang",
            "Sang",
            "Huan",
            "Jie",
            "Jiu",
            "Xue",
            "Duo",
            "Zhui",
            "Yu",
            "Zan",
            "Kasei",
            "Ying",
            "Masu",
            ,
            "Zhan",
            "Ya",
            "Nao",
            "Zhen",
            "Dang",
            "Qi",
            "Qiao",
            "Hua",
            "Kuai",
            "Jiang",
            "Zhuang",
            "Xun",
            "Suo",
            "Sha",
            "Zhen",
            "Bei",
            "Ting",
            "Gua",
            "Jing",
            "Bo",
            "Ben",
            "Fu",
            "Rui",
            "Tong",
            "Jue",
            "Xi",
            "Lang",
            "Liu",
            "Feng",
            "Qi",
            "Wen",
            "Jun",
            "Gan",
            "Cu",
            "Liang",
            "Qiu",
            "Ting",
            "You",
            "Mei",
            "Bang",
            "Long",
            "Peng",
            "Zhuang",
            "Di",
            "Xuan",
            "Tu",
            "Zao",
            "Ao",
            "Gu",
            "Bi",
            "Di",
            "Han",
            "Zi",
            "Zhi",
            "Ren",
            "Bei",
            "Geng",
            "Jian",
            "Huan",
            "Wan",
            "Nuo",
            "Jia",
            "Tiao",
            "Ji",
            "Xiao",
            "Lu",
            "Huan",
            "Shao",
            "Cen",
            "Fen",
            "Song",
            "Meng",
            "Wu",
            "Li",
            "Li",
            "Dou",
            "Cen",
            "Ying",
            "Suo",
            "Ju",
            "Ti",
            "Jie",
            "Kun",
            "Zhuo",
            "Shu",
            "Chan",
            "Fan",
            "Wei",
            "Jing",
            "Li",
            "Bing",
            "Fumoto",
            "Shikimi",
            "Tao",
            "Zhi",
            "Lai",
            "Lian",
            "Jian",
            "Zhuo",
            "Ling",
            "Li",
            "Qi",
            "Bing",
            "Zhun",
            "Cong",
            "Qian",
            "Mian",
            "Qi",
            "Qi",
            "Cai",
            "Gun",
            "Chan",
            "Te",
            "Fei",
            "Pai",
            "Bang",
            "Pou",
            "Hun",
            "Zong",
            "Cheng",
            "Zao",
            "Ji",
            "Li",
            "Peng",
            "Yu",
            "Yu",
            "Gu",
            "Hun",
            "Dong",
            "Tang",
            "Gang",
            "Wang",
            "Di",
            "Xi",
            "Fan",
            "Cheng",
            "Zhan",
            "Qi",
            "Yuan",
            "Yan",
            "Yu",
            "Quan",
            "Yi",
            "Sen",
            "Ren",
            "Chui",
            "Leng",
            "Qi",
            "Zhuo",
            "Fu",
            "Ke",
            "Lai",
            "Zou",
            "Zou",
            "Zhuo",
            "Guan",
            "Fen",
            "Fen",
            "Chen",
            "Qiong",
            "Nie"
        ],
        [
            "Wan",
            "Guo",
            "Lu",
            "Hao",
            "Jie",
            "Yi",
            "Chou",
            "Ju",
            "Ju",
            "Cheng",
            "Zuo",
            "Liang",
            "Qiang",
            "Zhi",
            "Zhui",
            "Ya",
            "Ju",
            "Bei",
            "Jiao",
            "Zhuo",
            "Zi",
            "Bin",
            "Peng",
            "Ding",
            "Chu",
            "Chang",
            "Kunugi",
            "Momiji",
            "Jian",
            "Gui",
            "Xi",
            "Du",
            "Qian",
            "Kunugi",
            "Soko",
            "Shide",
            "Luo",
            "Zhi",
            "Ken",
            "Myeng",
            "Tafu",
            ,
            "Peng",
            "Zhan",
            ,
            "Tuo",
            "Sen",
            "Duo",
            "Ye",
            "Fou",
            "Wei",
            "Wei",
            "Duan",
            "Jia",
            "Zong",
            "Jian",
            "Yi",
            "Shen",
            "Xi",
            "Yan",
            "Yan",
            "Chuan",
            "Zhan",
            "Chun",
            "Yu",
            "He",
            "Zha",
            "Wo",
            "Pian",
            "Bi",
            "Yao",
            "Huo",
            "Xu",
            "Ruo",
            "Yang",
            "La",
            "Yan",
            "Ben",
            "Hun",
            "Kui",
            "Jie",
            "Kui",
            "Si",
            "Feng",
            "Xie",
            "Tuo",
            "Zhi",
            "Jian",
            "Mu",
            "Mao",
            "Chu",
            "Hu",
            "Hu",
            "Lian",
            "Leng",
            "Ting",
            "Nan",
            "Yu",
            "You",
            "Mei",
            "Song",
            "Xuan",
            "Xuan",
            "Ying",
            "Zhen",
            "Pian",
            "Ye",
            "Ji",
            "Jie",
            "Ye",
            "Chu",
            "Shun",
            "Yu",
            "Cou",
            "Wei",
            "Mei",
            "Di",
            "Ji",
            "Jie",
            "Kai",
            "Qiu",
            "Ying",
            "Rou",
            "Heng",
            "Lou",
            "Le",
            "Hazou",
            "Katsura",
            "Pin",
            "Muro",
            "Gai",
            "Tan",
            "Lan",
            "Yun",
            "Yu",
            "Chen",
            "Lu",
            "Ju",
            "Sakaki",
            ,
            "Pi",
            "Xie",
            "Jia",
            "Yi",
            "Zhan",
            "Fu",
            "Nai",
            "Mi",
            "Lang",
            "Rong",
            "Gu",
            "Jian",
            "Ju",
            "Ta",
            "Yao",
            "Zhen",
            "Bang",
            "Sha",
            "Yuan",
            "Zi",
            "Ming",
            "Su",
            "Jia",
            "Yao",
            "Jie",
            "Huang",
            "Gan",
            "Fei",
            "Zha",
            "Qian",
            "Ma",
            "Sun",
            "Yuan",
            "Xie",
            "Rong",
            "Shi",
            "Zhi",
            "Cui",
            "Yun",
            "Ting",
            "Liu",
            "Rong",
            "Tang",
            "Que",
            "Zhai",
            "Si",
            "Sheng",
            "Ta",
            "Ke",
            "Xi",
            "Gu",
            "Qi",
            "Kao",
            "Gao",
            "Sun",
            "Pan",
            "Tao",
            "Ge",
            "Xun",
            "Dian",
            "Nou",
            "Ji",
            "Shuo",
            "Gou",
            "Chui",
            "Qiang",
            "Cha",
            "Qian",
            "Huai",
            "Mei",
            "Xu",
            "Gang",
            "Gao",
            "Zhuo",
            "Tuo",
            "Hashi",
            "Yang",
            "Dian",
            "Jia",
            "Jian",
            "Zui",
            "Kashi",
            "Ori",
            "Bin",
            "Zhu",
            ,
            "Xi",
            "Qi",
            "Lian",
            "Hui",
            "Yong",
            "Qian",
            "Guo",
            "Gai",
            "Gai",
            "Tuan",
            "Hua",
            "Cu",
            "Sen",
            "Cui",
            "Beng",
            "You",
            "Hu",
            "Jiang",
            "Hu",
            "Huan",
            "Kui",
            "Yi",
            "Nie",
            "Gao",
            "Kang",
            "Gui",
            "Gui",
            "Cao",
            "Man",
            "Jin"
        ],
        [
            "Di",
            "Zhuang",
            "Le",
            "Lang",
            "Chen",
            "Cong",
            "Li",
            "Xiu",
            "Qing",
            "Shuang",
            "Fan",
            "Tong",
            "Guan",
            "Ji",
            "Suo",
            "Lei",
            "Lu",
            "Liang",
            "Mi",
            "Lou",
            "Chao",
            "Su",
            "Ke",
            "Shu",
            "Tang",
            "Biao",
            "Lu",
            "Jiu",
            "Shu",
            "Zha",
            "Shu",
            "Zhang",
            "Men",
            "Mo",
            "Niao",
            "Yang",
            "Tiao",
            "Peng",
            "Zhu",
            "Sha",
            "Xi",
            "Quan",
            "Heng",
            "Jian",
            "Cong",
            ,
            "Hokuso",
            "Qiang",
            "Tara",
            "Ying",
            "Er",
            "Xin",
            "Zhi",
            "Qiao",
            "Zui",
            "Cong",
            "Pu",
            "Shu",
            "Hua",
            "Kui",
            "Zhen",
            "Zun",
            "Yue",
            "Zhan",
            "Xi",
            "Xun",
            "Dian",
            "Fa",
            "Gan",
            "Mo",
            "Wu",
            "Qiao",
            "Nao",
            "Lin",
            "Liu",
            "Qiao",
            "Xian",
            "Run",
            "Fan",
            "Zhan",
            "Tuo",
            "Lao",
            "Yun",
            "Shun",
            "Tui",
            "Cheng",
            "Tang",
            "Meng",
            "Ju",
            "Cheng",
            "Su",
            "Jue",
            "Jue",
            "Tan",
            "Hui",
            "Ji",
            "Nuo",
            "Xiang",
            "Tuo",
            "Ning",
            "Rui",
            "Zhu",
            "Chuang",
            "Zeng",
            "Fen",
            "Qiong",
            "Ran",
            "Heng",
            "Cen",
            "Gu",
            "Liu",
            "Lao",
            "Gao",
            "Chu",
            "Zusa",
            "Nude",
            "Ca",
            "San",
            "Ji",
            "Dou",
            "Shou",
            "Lu",
            ,
            ,
            "Yuan",
            "Ta",
            "Shu",
            "Jiang",
            "Tan",
            "Lin",
            "Nong",
            "Yin",
            "Xi",
            "Sui",
            "Shan",
            "Zui",
            "Xuan",
            "Cheng",
            "Gan",
            "Ju",
            "Zui",
            "Yi",
            "Qin",
            "Pu",
            "Yan",
            "Lei",
            "Feng",
            "Hui",
            "Dang",
            "Ji",
            "Sui",
            "Bo",
            "Bi",
            "Ding",
            "Chu",
            "Zhua",
            "Kuai",
            "Ji",
            "Jie",
            "Jia",
            "Qing",
            "Zhe",
            "Jian",
            "Qiang",
            "Dao",
            "Yi",
            "Biao",
            "Song",
            "She",
            "Lin",
            "Kunugi",
            "Cha",
            "Meng",
            "Yin",
            "Tao",
            "Tai",
            "Mian",
            "Qi",
            "Toan",
            "Bin",
            "Huo",
            "Ji",
            "Qian",
            "Mi",
            "Ning",
            "Yi",
            "Gao",
            "Jian",
            "Yin",
            "Er",
            "Qing",
            "Yan",
            "Qi",
            "Mi",
            "Zhao",
            "Gui",
            "Chun",
            "Ji",
            "Kui",
            "Po",
            "Deng",
            "Chu",
            ,
            "Mian",
            "You",
            "Zhi",
            "Guang",
            "Qian",
            "Lei",
            "Lei",
            "Sa",
            "Lu",
            "Li",
            "Cuan",
            "Lu",
            "Mie",
            "Hui",
            "Ou",
            "Lu",
            "Jie",
            "Gao",
            "Du",
            "Yuan",
            "Li",
            "Fei",
            "Zhuo",
            "Sou",
            "Lian",
            "Tamo",
            "Chu",
            ,
            "Zhu",
            "Lu",
            "Yan",
            "Li",
            "Zhu",
            "Chen",
            "Jie",
            "E",
            "Su",
            "Huai",
            "Nie",
            "Yu",
            "Long",
            "Lai",
            ,
            "Xian",
            "Kwi",
            "Ju",
            "Xiao",
            "Ling",
            "Ying",
            "Jian",
            "Yin",
            "You",
            "Ying"
        ],
        [
            "Xiang",
            "Nong",
            "Bo",
            "Chan",
            "Lan",
            "Ju",
            "Shuang",
            "She",
            "Wei",
            "Cong",
            "Quan",
            "Qu",
            "Cang",
            ,
            "Yu",
            "Luo",
            "Li",
            "Zan",
            "Luan",
            "Dang",
            "Jue",
            "Em",
            "Lan",
            "Lan",
            "Zhu",
            "Lei",
            "Li",
            "Ba",
            "Nang",
            "Yu",
            "Ling",
            "Tsuki",
            "Qian",
            "Ci",
            "Huan",
            "Xin",
            "Yu",
            "Yu",
            "Qian",
            "Ou",
            "Xu",
            "Chao",
            "Chu",
            "Chi",
            "Kai",
            "Yi",
            "Jue",
            "Xi",
            "Xu",
            "Xia",
            "Yu",
            "Kuai",
            "Lang",
            "Kuan",
            "Shuo",
            "Xi",
            "Ai",
            "Yi",
            "Qi",
            "Hu",
            "Chi",
            "Qin",
            "Kuan",
            "Kan",
            "Kuan",
            "Kan",
            "Chuan",
            "Sha",
            "Gua",
            "Yin",
            "Xin",
            "Xie",
            "Yu",
            "Qian",
            "Xiao",
            "Yi",
            "Ge",
            "Wu",
            "Tan",
            "Jin",
            "Ou",
            "Hu",
            "Ti",
            "Huan",
            "Xu",
            "Pen",
            "Xi",
            "Xiao",
            "Xu",
            "Xi",
            "Sen",
            "Lian",
            "Chu",
            "Yi",
            "Kan",
            "Yu",
            "Chuo",
            "Huan",
            "Zhi",
            "Zheng",
            "Ci",
            "Bu",
            "Wu",
            "Qi",
            "Bu",
            "Bu",
            "Wai",
            "Ju",
            "Qian",
            "Chi",
            "Se",
            "Chi",
            "Se",
            "Zhong",
            "Sui",
            "Sui",
            "Li",
            "Cuo",
            "Yu",
            "Li",
            "Gui",
            "Dai",
            "Dai",
            "Si",
            "Jian",
            "Zhe",
            "Mo",
            "Mo",
            "Yao",
            "Mo",
            "Cu",
            "Yang",
            "Tian",
            "Sheng",
            "Dai",
            "Shang",
            "Xu",
            "Xun",
            "Shu",
            "Can",
            "Jue",
            "Piao",
            "Qia",
            "Qiu",
            "Su",
            "Qing",
            "Yun",
            "Lian",
            "Yi",
            "Fou",
            "Zhi",
            "Ye",
            "Can",
            "Hun",
            "Dan",
            "Ji",
            "Ye",
            "Zhen",
            "Yun",
            "Wen",
            "Chou",
            "Bin",
            "Ti",
            "Jin",
            "Shang",
            "Yin",
            "Diao",
            "Cu",
            "Hui",
            "Cuan",
            "Yi",
            "Dan",
            "Du",
            "Jiang",
            "Lian",
            "Bin",
            "Du",
            "Tsukusu",
            "Jian",
            "Shu",
            "Ou",
            "Duan",
            "Zhu",
            "Yin",
            "Qing",
            "Yi",
            "Sha",
            "Que",
            "Ke",
            "Yao",
            "Jun",
            "Dian",
            "Hui",
            "Hui",
            "Gu",
            "Que",
            "Ji",
            "Yi",
            "Ou",
            "Hui",
            "Duan",
            "Yi",
            "Xiao",
            "Wu",
            "Guan",
            "Mu",
            "Mei",
            "Mei",
            "Ai",
            "Zuo",
            "Du",
            "Yu",
            "Bi",
            "Bi",
            "Bi",
            "Pi",
            "Pi",
            "Bi",
            "Chan",
            "Mao",
            ,
            ,
            "Pu",
            "Mushiru",
            "Jia",
            "Zhan",
            "Sai",
            "Mu",
            "Tuo",
            "Xun",
            "Er",
            "Rong",
            "Xian",
            "Ju",
            "Mu",
            "Hao",
            "Qiu",
            "Dou",
            "Mushiru",
            "Tan",
            "Pei",
            "Ju",
            "Duo",
            "Cui",
            "Bi",
            "San",
            ,
            "Mao",
            "Sui",
            "Yu",
            "Yu",
            "Tuo",
            "He",
            "Jian",
            "Ta",
            "San"
        ],
        [
            "Lu",
            "Mu",
            "Li",
            "Tong",
            "Rong",
            "Chang",
            "Pu",
            "Luo",
            "Zhan",
            "Sao",
            "Zhan",
            "Meng",
            "Luo",
            "Qu",
            "Die",
            "Shi",
            "Di",
            "Min",
            "Jue",
            "Mang",
            "Qi",
            "Pie",
            "Nai",
            "Qi",
            "Dao",
            "Xian",
            "Chuan",
            "Fen",
            "Ri",
            "Nei",
            ,
            "Fu",
            "Shen",
            "Dong",
            "Qing",
            "Qi",
            "Yin",
            "Xi",
            "Hai",
            "Yang",
            "An",
            "Ya",
            "Ke",
            "Qing",
            "Ya",
            "Dong",
            "Dan",
            "Lu",
            "Qing",
            "Yang",
            "Yun",
            "Yun",
            "Shui",
            "San",
            "Zheng",
            "Bing",
            "Yong",
            "Dang",
            "Shitamizu",
            "Le",
            "Ni",
            "Tun",
            "Fan",
            "Gui",
            "Ting",
            "Zhi",
            "Qiu",
            "Bin",
            "Ze",
            "Mian",
            "Cuan",
            "Hui",
            "Diao",
            "Han",
            "Cha",
            "Zhuo",
            "Chuan",
            "Wan",
            "Fan",
            "Dai",
            "Xi",
            "Tuo",
            "Mang",
            "Qiu",
            "Qi",
            "Shan",
            "Pai",
            "Han",
            "Qian",
            "Wu",
            "Wu",
            "Xun",
            "Si",
            "Ru",
            "Gong",
            "Jiang",
            "Chi",
            "Wu",
            "Tsuchi",
            ,
            "Tang",
            "Zhi",
            "Chi",
            "Qian",
            "Mi",
            "Yu",
            "Wang",
            "Qing",
            "Jing",
            "Rui",
            "Jun",
            "Hong",
            "Tai",
            "Quan",
            "Ji",
            "Bian",
            "Bian",
            "Gan",
            "Wen",
            "Zhong",
            "Fang",
            "Xiong",
            "Jue",
            "Hang",
            "Niou",
            "Qi",
            "Fen",
            "Xu",
            "Xu",
            "Qin",
            "Yi",
            "Wo",
            "Yun",
            "Yuan",
            "Hang",
            "Yan",
            "Shen",
            "Chen",
            "Dan",
            "You",
            "Dun",
            "Hu",
            "Huo",
            "Qie",
            "Mu",
            "Rou",
            "Mei",
            "Ta",
            "Mian",
            "Wu",
            "Chong",
            "Tian",
            "Bi",
            "Sha",
            "Zhi",
            "Pei",
            "Pan",
            "Zhui",
            "Za",
            "Gou",
            "Liu",
            "Mei",
            "Ze",
            "Feng",
            "Ou",
            "Li",
            "Lun",
            "Cang",
            "Feng",
            "Wei",
            "Hu",
            "Mo",
            "Mei",
            "Shu",
            "Ju",
            "Zan",
            "Tuo",
            "Tuo",
            "Tuo",
            "He",
            "Li",
            "Mi",
            "Yi",
            "Fa",
            "Fei",
            "You",
            "Tian",
            "Zhi",
            "Zhao",
            "Gu",
            "Zhan",
            "Yan",
            "Si",
            "Kuang",
            "Jiong",
            "Ju",
            "Xie",
            "Qiu",
            "Yi",
            "Jia",
            "Zhong",
            "Quan",
            "Bo",
            "Hui",
            "Mi",
            "Ben",
            "Zhuo",
            "Chu",
            "Le",
            "You",
            "Gu",
            "Hong",
            "Gan",
            "Fa",
            "Mao",
            "Si",
            "Hu",
            "Ping",
            "Ci",
            "Fan",
            "Chi",
            "Su",
            "Ning",
            "Cheng",
            "Ling",
            "Pao",
            "Bo",
            "Qi",
            "Si",
            "Ni",
            "Ju",
            "Yue",
            "Zhu",
            "Sheng",
            "Lei",
            "Xuan",
            "Xue",
            "Fu",
            "Pan",
            "Min",
            "Tai",
            "Yang",
            "Ji",
            "Yong",
            "Guan",
            "Beng",
            "Xue",
            "Long",
            "Lu",
            ,
            "Bo",
            "Xie",
            "Po",
            "Ze",
            "Jing",
            "Yin"
        ],
        [
            "Zhou",
            "Ji",
            "Yi",
            "Hui",
            "Hui",
            "Zui",
            "Cheng",
            "Yin",
            "Wei",
            "Hou",
            "Jian",
            "Yang",
            "Lie",
            "Si",
            "Ji",
            "Er",
            "Xing",
            "Fu",
            "Sa",
            "Suo",
            "Zhi",
            "Yin",
            "Wu",
            "Xi",
            "Kao",
            "Zhu",
            "Jiang",
            "Luo",
            ,
            "An",
            "Dong",
            "Yi",
            "Mou",
            "Lei",
            "Yi",
            "Mi",
            "Quan",
            "Jin",
            "Mo",
            "Wei",
            "Xiao",
            "Xie",
            "Hong",
            "Xu",
            "Shuo",
            "Kuang",
            "Tao",
            "Qie",
            "Ju",
            "Er",
            "Zhou",
            "Ru",
            "Ping",
            "Xun",
            "Xiong",
            "Zhi",
            "Guang",
            "Huan",
            "Ming",
            "Huo",
            "Wa",
            "Qia",
            "Pai",
            "Wu",
            "Qu",
            "Liu",
            "Yi",
            "Jia",
            "Jing",
            "Qian",
            "Jiang",
            "Jiao",
            "Cheng",
            "Shi",
            "Zhuo",
            "Ce",
            "Pal",
            "Kuai",
            "Ji",
            "Liu",
            "Chan",
            "Hun",
            "Hu",
            "Nong",
            "Xun",
            "Jin",
            "Lie",
            "Qiu",
            "Wei",
            "Zhe",
            "Jun",
            "Han",
            "Bang",
            "Mang",
            "Zhuo",
            "You",
            "Xi",
            "Bo",
            "Dou",
            "Wan",
            "Hong",
            "Yi",
            "Pu",
            "Ying",
            "Lan",
            "Hao",
            "Lang",
            "Han",
            "Li",
            "Geng",
            "Fu",
            "Wu",
            "Lian",
            "Chun",
            "Feng",
            "Yi",
            "Yu",
            "Tong",
            "Lao",
            "Hai",
            "Jin",
            "Jia",
            "Chong",
            "Weng",
            "Mei",
            "Sui",
            "Cheng",
            "Pei",
            "Xian",
            "Shen",
            "Tu",
            "Kun",
            "Pin",
            "Nie",
            "Han",
            "Jing",
            "Xiao",
            "She",
            "Nian",
            "Tu",
            "Yong",
            "Xiao",
            "Xian",
            "Ting",
            "E",
            "Su",
            "Tun",
            "Juan",
            "Cen",
            "Ti",
            "Li",
            "Shui",
            "Si",
            "Lei",
            "Shui",
            "Tao",
            "Du",
            "Lao",
            "Lai",
            "Lian",
            "Wei",
            "Wo",
            "Yun",
            "Huan",
            "Di",
            ,
            "Run",
            "Jian",
            "Zhang",
            "Se",
            "Fu",
            "Guan",
            "Xing",
            "Shou",
            "Shuan",
            "Ya",
            "Chuo",
            "Zhang",
            "Ye",
            "Kong",
            "Wo",
            "Han",
            "Tuo",
            "Dong",
            "He",
            "Wo",
            "Ju",
            "Gan",
            "Liang",
            "Hun",
            "Ta",
            "Zhuo",
            "Dian",
            "Qie",
            "De",
            "Juan",
            "Zi",
            "Xi",
            "Yao",
            "Qi",
            "Gu",
            "Guo",
            "Han",
            "Lin",
            "Tang",
            "Zhou",
            "Peng",
            "Hao",
            "Chang",
            "Shu",
            "Qi",
            "Fang",
            "Chi",
            "Lu",
            "Nao",
            "Ju",
            "Tao",
            "Cong",
            "Lei",
            "Zhi",
            "Peng",
            "Fei",
            "Song",
            "Tian",
            "Pi",
            "Dan",
            "Yu",
            "Ni",
            "Yu",
            "Lu",
            "Gan",
            "Mi",
            "Jing",
            "Ling",
            "Lun",
            "Yin",
            "Cui",
            "Qu",
            "Huai",
            "Yu",
            "Nian",
            "Shen",
            "Piao",
            "Chun",
            "Wa",
            "Yuan",
            "Lai",
            "Hun",
            "Qing",
            "Yan",
            "Qian",
            "Tian",
            "Miao",
            "Zhi",
            "Yin",
            "Mi"
        ],
        [
            "Ben",
            "Yuan",
            "Wen",
            "Re",
            "Fei",
            "Qing",
            "Yuan",
            "Ke",
            "Ji",
            "She",
            "Yuan",
            "Shibui",
            "Lu",
            "Zi",
            "Du",
            ,
            "Jian",
            "Min",
            "Pi",
            "Tani",
            "Yu",
            "Yuan",
            "Shen",
            "Shen",
            "Rou",
            "Huan",
            "Zhu",
            "Jian",
            "Nuan",
            "Yu",
            "Qiu",
            "Ting",
            "Qu",
            "Du",
            "Feng",
            "Zha",
            "Bo",
            "Wo",
            "Wo",
            "Di",
            "Wei",
            "Wen",
            "Ru",
            "Xie",
            "Ce",
            "Wei",
            "Ge",
            "Gang",
            "Yan",
            "Hong",
            "Xuan",
            "Mi",
            "Ke",
            "Mao",
            "Ying",
            "Yan",
            "You",
            "Hong",
            "Miao",
            "Xing",
            "Mei",
            "Zai",
            "Hun",
            "Nai",
            "Kui",
            "Shi",
            "E",
            "Pai",
            "Mei",
            "Lian",
            "Qi",
            "Qi",
            "Mei",
            "Tian",
            "Cou",
            "Wei",
            "Can",
            "Tuan",
            "Mian",
            "Hui",
            "Mo",
            "Xu",
            "Ji",
            "Pen",
            "Jian",
            "Jian",
            "Hu",
            "Feng",
            "Xiang",
            "Yi",
            "Yin",
            "Zhan",
            "Shi",
            "Jie",
            "Cheng",
            "Huang",
            "Tan",
            "Yu",
            "Bi",
            "Min",
            "Shi",
            "Tu",
            "Sheng",
            "Yong",
            "Qu",
            "Zhong",
            "Suei",
            "Jiu",
            "Jiao",
            "Qiou",
            "Yin",
            "Tang",
            "Long",
            "Huo",
            "Yuan",
            "Nan",
            "Ban",
            "You",
            "Quan",
            "Chui",
            "Liang",
            "Chan",
            "Yan",
            "Chun",
            "Nie",
            "Zi",
            "Wan",
            "Shi",
            "Man",
            "Ying",
            "Ratsu",
            "Kui",
            ,
            "Jian",
            "Xu",
            "Lu",
            "Gui",
            "Gai",
            ,
            ,
            "Po",
            "Jin",
            "Gui",
            "Tang",
            "Yuan",
            "Suo",
            "Yuan",
            "Lian",
            "Yao",
            "Meng",
            "Zhun",
            "Sheng",
            "Ke",
            "Tai",
            "Da",
            "Wa",
            "Liu",
            "Gou",
            "Sao",
            "Ming",
            "Zha",
            "Shi",
            "Yi",
            "Lun",
            "Ma",
            "Pu",
            "Wei",
            "Li",
            "Cai",
            "Wu",
            "Xi",
            "Wen",
            "Qiang",
            "Ze",
            "Shi",
            "Su",
            "Yi",
            "Zhen",
            "Sou",
            "Yun",
            "Xiu",
            "Yin",
            "Rong",
            "Hun",
            "Su",
            "Su",
            "Ni",
            "Ta",
            "Shi",
            "Ru",
            "Wei",
            "Pan",
            "Chu",
            "Chu",
            "Pang",
            "Weng",
            "Cang",
            "Mie",
            "He",
            "Dian",
            "Hao",
            "Huang",
            "Xi",
            "Zi",
            "Di",
            "Zhi",
            "Ying",
            "Fu",
            "Jie",
            "Hua",
            "Ge",
            "Zi",
            "Tao",
            "Teng",
            "Sui",
            "Bi",
            "Jiao",
            "Hui",
            "Gun",
            "Yin",
            "Gao",
            "Long",
            "Zhi",
            "Yan",
            "She",
            "Man",
            "Ying",
            "Chun",
            "Lu",
            "Lan",
            "Luan",
            ,
            "Bin",
            "Tan",
            "Yu",
            "Sou",
            "Hu",
            "Bi",
            "Biao",
            "Zhi",
            "Jiang",
            "Kou",
            "Shen",
            "Shang",
            "Di",
            "Mi",
            "Ao",
            "Lu",
            "Hu",
            "Hu",
            "You",
            "Chan",
            "Fan",
            "Yong",
            "Gun",
            "Man"
        ],
        [
            "Qing",
            "Yu",
            "Piao",
            "Ji",
            "Ya",
            "Jiao",
            "Qi",
            "Xi",
            "Ji",
            "Lu",
            "Lu",
            "Long",
            "Jin",
            "Guo",
            "Cong",
            "Lou",
            "Zhi",
            "Gai",
            "Qiang",
            "Li",
            "Yan",
            "Cao",
            "Jiao",
            "Cong",
            "Qun",
            "Tuan",
            "Ou",
            "Teng",
            "Ye",
            "Xi",
            "Mi",
            "Tang",
            "Mo",
            "Shang",
            "Han",
            "Lian",
            "Lan",
            "Wa",
            "Li",
            "Qian",
            "Feng",
            "Xuan",
            "Yi",
            "Man",
            "Zi",
            "Mang",
            "Kang",
            "Lei",
            "Peng",
            "Shu",
            "Zhang",
            "Zhang",
            "Chong",
            "Xu",
            "Huan",
            "Kuo",
            "Jian",
            "Yan",
            "Chuang",
            "Liao",
            "Cui",
            "Ti",
            "Yang",
            "Jiang",
            "Cong",
            "Ying",
            "Hong",
            "Xun",
            "Shu",
            "Guan",
            "Ying",
            "Xiao",
            ,
            ,
            "Xu",
            "Lian",
            "Zhi",
            "Wei",
            "Pi",
            "Jue",
            "Jiao",
            "Po",
            "Dang",
            "Hui",
            "Jie",
            "Wu",
            "Pa",
            "Ji",
            "Pan",
            "Gui",
            "Xiao",
            "Qian",
            "Qian",
            "Xi",
            "Lu",
            "Xi",
            "Xuan",
            "Dun",
            "Huang",
            "Min",
            "Run",
            "Su",
            "Liao",
            "Zhen",
            "Zhong",
            "Yi",
            "Di",
            "Wan",
            "Dan",
            "Tan",
            "Chao",
            "Xun",
            "Kui",
            "Yie",
            "Shao",
            "Tu",
            "Zhu",
            "San",
            "Hei",
            "Bi",
            "Shan",
            "Chan",
            "Chan",
            "Shu",
            "Tong",
            "Pu",
            "Lin",
            "Wei",
            "Se",
            "Se",
            "Cheng",
            "Jiong",
            "Cheng",
            "Hua",
            "Jiao",
            "Lao",
            "Che",
            "Gan",
            "Cun",
            "Heng",
            "Si",
            "Shu",
            "Peng",
            "Han",
            "Yun",
            "Liu",
            "Hong",
            "Fu",
            "Hao",
            "He",
            "Xian",
            "Jian",
            "Shan",
            "Xi",
            "Oki",
            ,
            "Lan",
            ,
            "Yu",
            "Lin",
            "Min",
            "Zao",
            "Dang",
            "Wan",
            "Ze",
            "Xie",
            "Yu",
            "Li",
            "Shi",
            "Xue",
            "Ling",
            "Man",
            "Zi",
            "Yong",
            "Kuai",
            "Can",
            "Lian",
            "Dian",
            "Ye",
            "Ao",
            "Huan",
            "Zhen",
            "Chan",
            "Man",
            "Dan",
            "Dan",
            "Yi",
            "Sui",
            "Pi",
            "Ju",
            "Ta",
            "Qin",
            "Ji",
            "Zhuo",
            "Lian",
            "Nong",
            "Guo",
            "Jin",
            "Fen",
            "Se",
            "Ji",
            "Sui",
            "Hui",
            "Chu",
            "Ta",
            "Song",
            "Ding",
            ,
            "Zhu",
            "Lai",
            "Bin",
            "Lian",
            "Mi",
            "Shi",
            "Shu",
            "Mi",
            "Ning",
            "Ying",
            "Ying",
            "Meng",
            "Jin",
            "Qi",
            "Pi",
            "Ji",
            "Hao",
            "Ru",
            "Zui",
            "Wo",
            "Tao",
            "Yin",
            "Yin",
            "Dui",
            "Ci",
            "Huo",
            "Jing",
            "Lan",
            "Jun",
            "Ai",
            "Pu",
            "Zhuo",
            "Wei",
            "Bin",
            "Gu",
            "Qian",
            "Xing",
            "Hama",
            "Kuo",
            "Fei",
            ,
            "Boku",
            "Jian",
            "Wei",
            "Luo",
            "Zan",
            "Lu",
            "Li"
        ],
        [
            "You",
            "Yang",
            "Lu",
            "Si",
            "Jie",
            "Ying",
            "Du",
            "Wang",
            "Hui",
            "Xie",
            "Pan",
            "Shen",
            "Biao",
            "Chan",
            "Mo",
            "Liu",
            "Jian",
            "Pu",
            "Se",
            "Cheng",
            "Gu",
            "Bin",
            "Huo",
            "Xian",
            "Lu",
            "Qin",
            "Han",
            "Ying",
            "Yong",
            "Li",
            "Jing",
            "Xiao",
            "Ying",
            "Sui",
            "Wei",
            "Xie",
            "Huai",
            "Hao",
            "Zhu",
            "Long",
            "Lai",
            "Dui",
            "Fan",
            "Hu",
            "Lai",
            ,
            ,
            "Ying",
            "Mi",
            "Ji",
            "Lian",
            "Jian",
            "Ying",
            "Fen",
            "Lin",
            "Yi",
            "Jian",
            "Yue",
            "Chan",
            "Dai",
            "Rang",
            "Jian",
            "Lan",
            "Fan",
            "Shuang",
            "Yuan",
            "Zhuo",
            "Feng",
            "She",
            "Lei",
            "Lan",
            "Cong",
            "Qu",
            "Yong",
            "Qian",
            "Fa",
            "Guan",
            "Que",
            "Yan",
            "Hao",
            "Hyeng",
            "Sa",
            "Zan",
            "Luan",
            "Yan",
            "Li",
            "Mi",
            "Shan",
            "Tan",
            "Dang",
            "Jiao",
            "Chan",
            ,
            "Hao",
            "Ba",
            "Zhu",
            "Lan",
            "Lan",
            "Nang",
            "Wan",
            "Luan",
            "Xun",
            "Xian",
            "Yan",
            "Gan",
            "Yan",
            "Yu",
            "Huo",
            "Si",
            "Mie",
            "Guang",
            "Deng",
            "Hui",
            "Xiao",
            "Xiao",
            "Hu",
            "Hong",
            "Ling",
            "Zao",
            "Zhuan",
            "Jiu",
            "Zha",
            "Xie",
            "Chi",
            "Zhuo",
            "Zai",
            "Zai",
            "Can",
            "Yang",
            "Qi",
            "Zhong",
            "Fen",
            "Niu",
            "Jiong",
            "Wen",
            "Po",
            "Yi",
            "Lu",
            "Chui",
            "Pi",
            "Kai",
            "Pan",
            "Yan",
            "Kai",
            "Pang",
            "Mu",
            "Chao",
            "Liao",
            "Gui",
            "Kang",
            "Tun",
            "Guang",
            "Xin",
            "Zhi",
            "Guang",
            "Guang",
            "Wei",
            "Qiang",
            ,
            "Da",
            "Xia",
            "Zheng",
            "Zhu",
            "Ke",
            "Zhao",
            "Fu",
            "Ba",
            "Duo",
            "Duo",
            "Ling",
            "Zhuo",
            "Xuan",
            "Ju",
            "Tan",
            "Pao",
            "Jiong",
            "Pao",
            "Tai",
            "Tai",
            "Bing",
            "Yang",
            "Tong",
            "Han",
            "Zhu",
            "Zha",
            "Dian",
            "Wei",
            "Shi",
            "Lian",
            "Chi",
            "Huang",
            ,
            "Hu",
            "Shuo",
            "Lan",
            "Jing",
            "Jiao",
            "Xu",
            "Xing",
            "Quan",
            "Lie",
            "Huan",
            "Yang",
            "Xiao",
            "Xiu",
            "Xian",
            "Yin",
            "Wu",
            "Zhou",
            "Yao",
            "Shi",
            "Wei",
            "Tong",
            "Xue",
            "Zai",
            "Kai",
            "Hong",
            "Luo",
            "Xia",
            "Zhu",
            "Xuan",
            "Zheng",
            "Po",
            "Yan",
            "Hui",
            "Guang",
            "Zhe",
            "Hui",
            "Kao",
            ,
            "Fan",
            "Shao",
            "Ye",
            "Hui",
            ,
            "Tang",
            "Jin",
            "Re",
            ,
            "Xi",
            "Fu",
            "Jiong",
            "Che",
            "Pu",
            "Jing",
            "Zhuo",
            "Ting",
            "Wan",
            "Hai",
            "Peng",
            "Lang",
            "Shan",
            "Hu",
            "Feng",
            "Chi",
            "Rong"
        ],
        [
            "Hu",
            "Xi",
            "Shu",
            "He",
            "Xun",
            "Ku",
            "Jue",
            "Xiao",
            "Xi",
            "Yan",
            "Han",
            "Zhuang",
            "Jun",
            "Di",
            "Xie",
            "Ji",
            "Wu",
            ,
            ,
            "Han",
            "Yan",
            "Huan",
            "Men",
            "Ju",
            "Chou",
            "Bei",
            "Fen",
            "Lin",
            "Kun",
            "Hun",
            "Tun",
            "Xi",
            "Cui",
            "Wu",
            "Hong",
            "Ju",
            "Fu",
            "Wo",
            "Jiao",
            "Cong",
            "Feng",
            "Ping",
            "Qiong",
            "Ruo",
            "Xi",
            "Qiong",
            "Xin",
            "Zhuo",
            "Yan",
            "Yan",
            "Yi",
            "Jue",
            "Yu",
            "Gang",
            "Ran",
            "Pi",
            "Gu",
            ,
            "Sheng",
            "Chang",
            "Shao",
            ,
            ,
            ,
            ,
            "Chen",
            "He",
            "Kui",
            "Zhong",
            "Duan",
            "Xia",
            "Hui",
            "Feng",
            "Lian",
            "Xuan",
            "Xing",
            "Huang",
            "Jiao",
            "Jian",
            "Bi",
            "Ying",
            "Zhu",
            "Wei",
            "Tuan",
            "Tian",
            "Xi",
            "Nuan",
            "Nuan",
            "Chan",
            "Yan",
            "Jiong",
            "Jiong",
            "Yu",
            "Mei",
            "Sha",
            "Wei",
            "Ye",
            "Xin",
            "Qiong",
            "Rou",
            "Mei",
            "Huan",
            "Xu",
            "Zhao",
            "Wei",
            "Fan",
            "Qiu",
            "Sui",
            "Yang",
            "Lie",
            "Zhu",
            "Jie",
            "Gao",
            "Gua",
            "Bao",
            "Hu",
            "Yun",
            "Xia",
            ,
            ,
            "Bian",
            "Gou",
            "Tui",
            "Tang",
            "Chao",
            "Shan",
            "N",
            "Bo",
            "Huang",
            "Xie",
            "Xi",
            "Wu",
            "Xi",
            "Yun",
            "He",
            "He",
            "Xi",
            "Yun",
            "Xiong",
            "Nai",
            "Shan",
            "Qiong",
            "Yao",
            "Xun",
            "Mi",
            "Lian",
            "Ying",
            "Wen",
            "Rong",
            "Oozutsu",
            ,
            "Qiang",
            "Liu",
            "Xi",
            "Bi",
            "Biao",
            "Zong",
            "Lu",
            "Jian",
            "Shou",
            "Yi",
            "Lou",
            "Feng",
            "Sui",
            "Yi",
            "Tong",
            "Jue",
            "Zong",
            "Yun",
            "Hu",
            "Yi",
            "Zhi",
            "Ao",
            "Wei",
            "Liao",
            "Han",
            "Ou",
            "Re",
            "Jiong",
            "Man",
            ,
            "Shang",
            "Cuan",
            "Zeng",
            "Jian",
            "Xi",
            "Xi",
            "Xi",
            "Yi",
            "Xiao",
            "Chi",
            "Huang",
            "Chan",
            "Ye",
            "Qian",
            "Ran",
            "Yan",
            "Xian",
            "Qiao",
            "Zun",
            "Deng",
            "Dun",
            "Shen",
            "Jiao",
            "Fen",
            "Si",
            "Liao",
            "Yu",
            "Lin",
            "Tong",
            "Shao",
            "Fen",
            "Fan",
            "Yan",
            "Xun",
            "Lan",
            "Mei",
            "Tang",
            "Yi",
            "Jing",
            "Men",
            ,
            ,
            "Ying",
            "Yu",
            "Yi",
            "Xue",
            "Lan",
            "Tai",
            "Zao",
            "Can",
            "Sui",
            "Xi",
            "Que",
            "Cong",
            "Lian",
            "Hui",
            "Zhu",
            "Xie",
            "Ling",
            "Wei",
            "Yi",
            "Xie",
            "Zhao",
            "Hui",
            "Tatsu",
            "Nung",
            "Lan",
            "Ru",
            "Xian",
            "Kao",
            "Xun",
            "Jin",
            "Chou",
            "Chou",
            "Yao"
        ],
        [
            "He",
            "Lan",
            "Biao",
            "Rong",
            "Li",
            "Mo",
            "Bao",
            "Ruo",
            "Lu",
            "La",
            "Ao",
            "Xun",
            "Kuang",
            "Shuo",
            ,
            "Li",
            "Lu",
            "Jue",
            "Liao",
            "Yan",
            "Xi",
            "Xie",
            "Long",
            "Ye",
            ,
            "Rang",
            "Yue",
            "Lan",
            "Cong",
            "Jue",
            "Tong",
            "Guan",
            ,
            "Che",
            "Mi",
            "Tang",
            "Lan",
            "Zhu",
            ,
            "Ling",
            "Cuan",
            "Yu",
            "Zhua",
            "Tsumekanmuri",
            "Pa",
            "Zheng",
            "Pao",
            "Cheng",
            "Yuan",
            "Ai",
            "Wei",
            ,
            "Jue",
            "Jue",
            "Fu",
            "Ye",
            "Ba",
            "Die",
            "Ye",
            "Yao",
            "Zu",
            "Shuang",
            "Er",
            "Qiang",
            "Chuang",
            "Ge",
            "Zang",
            "Die",
            "Qiang",
            "Yong",
            "Qiang",
            "Pian",
            "Ban",
            "Pan",
            "Shao",
            "Jian",
            "Pai",
            "Du",
            "Chuang",
            "Tou",
            "Zha",
            "Bian",
            "Die",
            "Bang",
            "Bo",
            "Chuang",
            "You",
            ,
            "Du",
            "Ya",
            "Cheng",
            "Niu",
            "Ushihen",
            "Pin",
            "Jiu",
            "Mou",
            "Tuo",
            "Mu",
            "Lao",
            "Ren",
            "Mang",
            "Fang",
            "Mao",
            "Mu",
            "Gang",
            "Wu",
            "Yan",
            "Ge",
            "Bei",
            "Si",
            "Jian",
            "Gu",
            "You",
            "Ge",
            "Sheng",
            "Mu",
            "Di",
            "Qian",
            "Quan",
            "Quan",
            "Zi",
            "Te",
            "Xi",
            "Mang",
            "Keng",
            "Qian",
            "Wu",
            "Gu",
            "Xi",
            "Li",
            "Li",
            "Pou",
            "Ji",
            "Gang",
            "Zhi",
            "Ben",
            "Quan",
            "Run",
            "Du",
            "Ju",
            "Jia",
            "Jian",
            "Feng",
            "Pian",
            "Ke",
            "Ju",
            "Kao",
            "Chu",
            "Xi",
            "Bei",
            "Luo",
            "Jie",
            "Ma",
            "San",
            "Wei",
            "Li",
            "Dun",
            "Tong",
            ,
            "Jiang",
            "Ikenie",
            "Li",
            "Du",
            "Lie",
            "Pi",
            "Piao",
            "Bao",
            "Xi",
            "Chou",
            "Wei",
            "Kui",
            "Chou",
            "Quan",
            "Fan",
            "Ba",
            "Fan",
            "Qiu",
            "Ji",
            "Cai",
            "Chuo",
            "An",
            "Jie",
            "Zhuang",
            "Guang",
            "Ma",
            "You",
            "Kang",
            "Bo",
            "Hou",
            "Ya",
            "Yin",
            "Huan",
            "Zhuang",
            "Yun",
            "Kuang",
            "Niu",
            "Di",
            "Qing",
            "Zhong",
            "Mu",
            "Bei",
            "Pi",
            "Ju",
            "Ni",
            "Sheng",
            "Pao",
            "Xia",
            "Tuo",
            "Hu",
            "Ling",
            "Fei",
            "Pi",
            "Ni",
            "Ao",
            "You",
            "Gou",
            "Yue",
            "Ju",
            "Dan",
            "Po",
            "Gu",
            "Xian",
            "Ning",
            "Huan",
            "Hen",
            "Jiao",
            "He",
            "Zhao",
            "Ji",
            "Xun",
            "Shan",
            "Ta",
            "Rong",
            "Shou",
            "Tong",
            "Lao",
            "Du",
            "Xia",
            "Shi",
            "Hua",
            "Zheng",
            "Yu",
            "Sun",
            "Yu",
            "Bi",
            "Mang",
            "Xi",
            "Juan",
            "Li",
            "Xia",
            "Yin",
            "Suan",
            "Lang",
            "Bei",
            "Zhi",
            "Yan"
        ],
        [
            "Sha",
            "Li",
            "Han",
            "Xian",
            "Jing",
            "Pai",
            "Fei",
            "Yao",
            "Ba",
            "Qi",
            "Ni",
            "Biao",
            "Yin",
            "Lai",
            "Xi",
            "Jian",
            "Qiang",
            "Kun",
            "Yan",
            "Guo",
            "Zong",
            "Mi",
            "Chang",
            "Yi",
            "Zhi",
            "Zheng",
            "Ya",
            "Meng",
            "Cai",
            "Cu",
            "She",
            "Kari",
            "Cen",
            "Luo",
            "Hu",
            "Zong",
            "Ji",
            "Wei",
            "Feng",
            "Wo",
            "Yuan",
            "Xing",
            "Zhu",
            "Mao",
            "Wei",
            "Yuan",
            "Xian",
            "Tuan",
            "Ya",
            "Nao",
            "Xie",
            "Jia",
            "Hou",
            "Bian",
            "You",
            "You",
            "Mei",
            "Zha",
            "Yao",
            "Sun",
            "Bo",
            "Ming",
            "Hua",
            "Yuan",
            "Sou",
            "Ma",
            "Yuan",
            "Dai",
            "Yu",
            "Shi",
            "Hao",
            ,
            "Yi",
            "Zhen",
            "Chuang",
            "Hao",
            "Man",
            "Jing",
            "Jiang",
            "Mu",
            "Zhang",
            "Chan",
            "Ao",
            "Ao",
            "Hao",
            "Cui",
            "Fen",
            "Jue",
            "Bi",
            "Bi",
            "Huang",
            "Pu",
            "Lin",
            "Yu",
            "Tong",
            "Yao",
            "Liao",
            "Shuo",
            "Xiao",
            "Swu",
            "Ton",
            "Xi",
            "Ge",
            "Juan",
            "Du",
            "Hui",
            "Kuai",
            "Xian",
            "Xie",
            "Ta",
            "Xian",
            "Xun",
            "Ning",
            "Pin",
            "Huo",
            "Nou",
            "Meng",
            "Lie",
            "Nao",
            "Guang",
            "Shou",
            "Lu",
            "Ta",
            "Xian",
            "Mi",
            "Rang",
            "Huan",
            "Nao",
            "Luo",
            "Xian",
            "Qi",
            "Jue",
            "Xuan",
            "Miao",
            "Zi",
            "Lu",
            "Lu",
            "Yu",
            "Su",
            "Wang",
            "Qiu",
            "Ga",
            "Ding",
            "Le",
            "Ba",
            "Ji",
            "Hong",
            "Di",
            "Quan",
            "Gan",
            "Jiu",
            "Yu",
            "Ji",
            "Yu",
            "Yang",
            "Ma",
            "Gong",
            "Wu",
            "Fu",
            "Wen",
            "Jie",
            "Ya",
            "Fen",
            "Bian",
            "Beng",
            "Yue",
            "Jue",
            "Yun",
            "Jue",
            "Wan",
            "Jian",
            "Mei",
            "Dan",
            "Pi",
            "Wei",
            "Huan",
            "Xian",
            "Qiang",
            "Ling",
            "Dai",
            "Yi",
            "An",
            "Ping",
            "Dian",
            "Fu",
            "Xuan",
            "Xi",
            "Bo",
            "Ci",
            "Gou",
            "Jia",
            "Shao",
            "Po",
            "Ci",
            "Ke",
            "Ran",
            "Sheng",
            "Shen",
            "Yi",
            "Zu",
            "Jia",
            "Min",
            "Shan",
            "Liu",
            "Bi",
            "Zhen",
            "Zhen",
            "Jue",
            "Fa",
            "Long",
            "Jin",
            "Jiao",
            "Jian",
            "Li",
            "Guang",
            "Xian",
            "Zhou",
            "Gong",
            "Yan",
            "Xiu",
            "Yang",
            "Xu",
            "Luo",
            "Su",
            "Zhu",
            "Qin",
            "Ken",
            "Xun",
            "Bao",
            "Er",
            "Xiang",
            "Yao",
            "Xia",
            "Heng",
            "Gui",
            "Chong",
            "Xu",
            "Ban",
            "Pei",
            ,
            "Dang",
            "Ei",
            "Hun",
            "Wen",
            "E",
            "Cheng",
            "Ti",
            "Wu",
            "Wu",
            "Cheng",
            "Jun",
            "Mei",
            "Bei",
            "Ting",
            "Xian",
            "Chuo"
        ],
        [
            "Han",
            "Xuan",
            "Yan",
            "Qiu",
            "Quan",
            "Lang",
            "Li",
            "Xiu",
            "Fu",
            "Liu",
            "Ye",
            "Xi",
            "Ling",
            "Li",
            "Jin",
            "Lian",
            "Suo",
            "Chiisai",
            ,
            "Wan",
            "Dian",
            "Pin",
            "Zhan",
            "Cui",
            "Min",
            "Yu",
            "Ju",
            "Chen",
            "Lai",
            "Wen",
            "Sheng",
            "Wei",
            "Dian",
            "Chu",
            "Zhuo",
            "Pei",
            "Cheng",
            "Hu",
            "Qi",
            "E",
            "Kun",
            "Chang",
            "Qi",
            "Beng",
            "Wan",
            "Lu",
            "Cong",
            "Guan",
            "Yan",
            "Diao",
            "Bei",
            "Lin",
            "Qin",
            "Pi",
            "Pa",
            "Que",
            "Zhuo",
            "Qin",
            "Fa",
            ,
            "Qiong",
            "Du",
            "Jie",
            "Hun",
            "Yu",
            "Mao",
            "Mei",
            "Chun",
            "Xuan",
            "Ti",
            "Xing",
            "Dai",
            "Rou",
            "Min",
            "Zhen",
            "Wei",
            "Ruan",
            "Huan",
            "Jie",
            "Chuan",
            "Jian",
            "Zhuan",
            "Yang",
            "Lian",
            "Quan",
            "Xia",
            "Duan",
            "Yuan",
            "Ye",
            "Nao",
            "Hu",
            "Ying",
            "Yu",
            "Huang",
            "Rui",
            "Se",
            "Liu",
            "Shi",
            "Rong",
            "Suo",
            "Yao",
            "Wen",
            "Wu",
            "Jin",
            "Jin",
            "Ying",
            "Ma",
            "Tao",
            "Liu",
            "Tang",
            "Li",
            "Lang",
            "Gui",
            "Zhen",
            "Qiang",
            "Cuo",
            "Jue",
            "Zhao",
            "Yao",
            "Ai",
            "Bin",
            "Tu",
            "Chang",
            "Kun",
            "Zhuan",
            "Cong",
            "Jin",
            "Yi",
            "Cui",
            "Cong",
            "Qi",
            "Li",
            "Ying",
            "Suo",
            "Qiu",
            "Xuan",
            "Ao",
            "Lian",
            "Man",
            "Zhang",
            "Yin",
            ,
            "Ying",
            "Zhi",
            "Lu",
            "Wu",
            "Deng",
            "Xiou",
            "Zeng",
            "Xun",
            "Qu",
            "Dang",
            "Lin",
            "Liao",
            "Qiong",
            "Su",
            "Huang",
            "Gui",
            "Pu",
            "Jing",
            "Fan",
            "Jin",
            "Liu",
            "Ji",
            ,
            "Jing",
            "Ai",
            "Bi",
            "Can",
            "Qu",
            "Zao",
            "Dang",
            "Jiao",
            "Gun",
            "Tan",
            "Hui",
            "Huan",
            "Se",
            "Sui",
            "Tian",
            ,
            "Yu",
            "Jin",
            "Lu",
            "Bin",
            "Shou",
            "Wen",
            "Zui",
            "Lan",
            "Xi",
            "Ji",
            "Xuan",
            "Ruan",
            "Huo",
            "Gai",
            "Lei",
            "Du",
            "Li",
            "Zhi",
            "Rou",
            "Li",
            "Zan",
            "Qiong",
            "Zhe",
            "Gui",
            "Sui",
            "La",
            "Long",
            "Lu",
            "Li",
            "Zan",
            "Lan",
            "Ying",
            "Mi",
            "Xiang",
            "Xi",
            "Guan",
            "Dao",
            "Zan",
            "Huan",
            "Gua",
            "Bo",
            "Die",
            "Bao",
            "Hu",
            "Zhi",
            "Piao",
            "Ban",
            "Rang",
            "Li",
            "Wa",
            "Dekaguramu",
            "Jiang",
            "Qian",
            "Fan",
            "Pen",
            "Fang",
            "Dan",
            "Weng",
            "Ou",
            "Deshiguramu",
            "Miriguramu",
            "Thon",
            "Hu",
            "Ling",
            "Yi",
            "Ping",
            "Ci",
            "Hekutogura",
            "Juan",
            "Chang",
            "Chi",
            "Sarake",
            "Dang",
            "Meng",
            "Pou"
        ],
        [
            "Zhui",
            "Ping",
            "Bian",
            "Zhou",
            "Zhen",
            "Senchigura",
            "Ci",
            "Ying",
            "Qi",
            "Xian",
            "Lou",
            "Di",
            "Ou",
            "Meng",
            "Zhuan",
            "Peng",
            "Lin",
            "Zeng",
            "Wu",
            "Pi",
            "Dan",
            "Weng",
            "Ying",
            "Yan",
            "Gan",
            "Dai",
            "Shen",
            "Tian",
            "Tian",
            "Han",
            "Chang",
            "Sheng",
            "Qing",
            "Sheng",
            "Chan",
            "Chan",
            "Rui",
            "Sheng",
            "Su",
            "Sen",
            "Yong",
            "Shuai",
            "Lu",
            "Fu",
            "Yong",
            "Beng",
            "Feng",
            "Ning",
            "Tian",
            "You",
            "Jia",
            "Shen",
            "Zha",
            "Dian",
            "Fu",
            "Nan",
            "Dian",
            "Ping",
            "Ting",
            "Hua",
            "Ting",
            "Quan",
            "Zi",
            "Meng",
            "Bi",
            "Qi",
            "Liu",
            "Xun",
            "Liu",
            "Chang",
            "Mu",
            "Yun",
            "Fan",
            "Fu",
            "Geng",
            "Tian",
            "Jie",
            "Jie",
            "Quan",
            "Wei",
            "Fu",
            "Tian",
            "Mu",
            "Tap",
            "Pan",
            "Jiang",
            "Wa",
            "Da",
            "Nan",
            "Liu",
            "Ben",
            "Zhen",
            "Chu",
            "Mu",
            "Mu",
            "Ce",
            "Cen",
            "Gai",
            "Bi",
            "Da",
            "Zhi",
            "Lue",
            "Qi",
            "Lue",
            "Pan",
            "Kesa",
            "Fan",
            "Hua",
            "Yu",
            "Yu",
            "Mu",
            "Jun",
            "Yi",
            "Liu",
            "Yu",
            "Die",
            "Chou",
            "Hua",
            "Dang",
            "Chuo",
            "Ji",
            "Wan",
            "Jiang",
            "Sheng",
            "Chang",
            "Tuan",
            "Lei",
            "Ji",
            "Cha",
            "Liu",
            "Tatamu",
            "Tuan",
            "Lin",
            "Jiang",
            "Jiang",
            "Chou",
            "Bo",
            "Die",
            "Die",
            "Pi",
            "Nie",
            "Dan",
            "Shu",
            "Shu",
            "Zhi",
            "Yi",
            "Chuang",
            "Nai",
            "Ding",
            "Bi",
            "Jie",
            "Liao",
            "Gong",
            "Ge",
            "Jiu",
            "Zhou",
            "Xia",
            "Shan",
            "Xu",
            "Nue",
            "Li",
            "Yang",
            "Chen",
            "You",
            "Ba",
            "Jie",
            "Jue",
            "Zhi",
            "Xia",
            "Cui",
            "Bi",
            "Yi",
            "Li",
            "Zong",
            "Chuang",
            "Feng",
            "Zhu",
            "Pao",
            "Pi",
            "Gan",
            "Ke",
            "Ci",
            "Xie",
            "Qi",
            "Dan",
            "Zhen",
            "Fa",
            "Zhi",
            "Teng",
            "Ju",
            "Ji",
            "Fei",
            "Qu",
            "Dian",
            "Jia",
            "Xian",
            "Cha",
            "Bing",
            "Ni",
            "Zheng",
            "Yong",
            "Jing",
            "Quan",
            "Chong",
            "Tong",
            "Yi",
            "Kai",
            "Wei",
            "Hui",
            "Duo",
            "Yang",
            "Chi",
            "Zhi",
            "Hen",
            "Ya",
            "Mei",
            "Dou",
            "Jing",
            "Xiao",
            "Tong",
            "Tu",
            "Mang",
            "Pi",
            "Xiao",
            "Suan",
            "Pu",
            "Li",
            "Zhi",
            "Cuo",
            "Duo",
            "Wu",
            "Sha",
            "Lao",
            "Shou",
            "Huan",
            "Xian",
            "Yi",
            "Peng",
            "Zhang",
            "Guan",
            "Tan",
            "Fei",
            "Ma",
            "Lin",
            "Chi",
            "Ji",
            "Dian",
            "An",
            "Chi",
            "Bi",
            "Bei",
            "Min",
            "Gu",
            "Dui",
            "E",
            "Wei"
        ],
        [
            "Yu",
            "Cui",
            "Ya",
            "Zhu",
            "Cu",
            "Dan",
            "Shen",
            "Zhung",
            "Ji",
            "Yu",
            "Hou",
            "Feng",
            "La",
            "Yang",
            "Shen",
            "Tu",
            "Yu",
            "Gua",
            "Wen",
            "Huan",
            "Ku",
            "Jia",
            "Yin",
            "Yi",
            "Lu",
            "Sao",
            "Jue",
            "Chi",
            "Xi",
            "Guan",
            "Yi",
            "Wen",
            "Ji",
            "Chuang",
            "Ban",
            "Lei",
            "Liu",
            "Chai",
            "Shou",
            "Nue",
            "Dian",
            "Da",
            "Pie",
            "Tan",
            "Zhang",
            "Biao",
            "Shen",
            "Cu",
            "Luo",
            "Yi",
            "Zong",
            "Chou",
            "Zhang",
            "Zhai",
            "Sou",
            "Suo",
            "Que",
            "Diao",
            "Lou",
            "Lu",
            "Mo",
            "Jin",
            "Yin",
            "Ying",
            "Huang",
            "Fu",
            "Liao",
            "Long",
            "Qiao",
            "Liu",
            "Lao",
            "Xian",
            "Fei",
            "Dan",
            "Yin",
            "He",
            "Ai",
            "Ban",
            "Xian",
            "Guan",
            "Guai",
            "Nong",
            "Yu",
            "Wei",
            "Yi",
            "Yong",
            "Pi",
            "Lei",
            "Li",
            "Shu",
            "Dan",
            "Lin",
            "Dian",
            "Lin",
            "Lai",
            "Pie",
            "Ji",
            "Chi",
            "Yang",
            "Xian",
            "Jie",
            "Zheng",
            ,
            "Li",
            "Huo",
            "Lai",
            "Shaku",
            "Dian",
            "Xian",
            "Ying",
            "Yin",
            "Qu",
            "Yong",
            "Tan",
            "Dian",
            "Luo",
            "Luan",
            "Luan",
            "Bo",
            ,
            "Gui",
            "Po",
            "Fa",
            "Deng",
            "Fa",
            "Bai",
            "Bai",
            "Qie",
            "Bi",
            "Zao",
            "Zao",
            "Mao",
            "De",
            "Pa",
            "Jie",
            "Huang",
            "Gui",
            "Ci",
            "Ling",
            "Gao",
            "Mo",
            "Ji",
            "Jiao",
            "Peng",
            "Gao",
            "Ai",
            "E",
            "Hao",
            "Han",
            "Bi",
            "Wan",
            "Chou",
            "Qian",
            "Xi",
            "Ai",
            "Jiong",
            "Hao",
            "Huang",
            "Hao",
            "Ze",
            "Cui",
            "Hao",
            "Xiao",
            "Ye",
            "Po",
            "Hao",
            "Jiao",
            "Ai",
            "Xing",
            "Huang",
            "Li",
            "Piao",
            "He",
            "Jiao",
            "Pi",
            "Gan",
            "Pao",
            "Zhou",
            "Jun",
            "Qiu",
            "Cun",
            "Que",
            "Zha",
            "Gu",
            "Jun",
            "Jun",
            "Zhou",
            "Zha",
            "Gu",
            "Zhan",
            "Du",
            "Min",
            "Qi",
            "Ying",
            "Yu",
            "Bei",
            "Zhao",
            "Zhong",
            "Pen",
            "He",
            "Ying",
            "He",
            "Yi",
            "Bo",
            "Wan",
            "He",
            "Ang",
            "Zhan",
            "Yan",
            "Jian",
            "He",
            "Yu",
            "Kui",
            "Fan",
            "Gai",
            "Dao",
            "Pan",
            "Fu",
            "Qiu",
            "Sheng",
            "Dao",
            "Lu",
            "Zhan",
            "Meng",
            "Li",
            "Jin",
            "Xu",
            "Jian",
            "Pan",
            "Guan",
            "An",
            "Lu",
            "Shu",
            "Zhou",
            "Dang",
            "An",
            "Gu",
            "Li",
            "Mu",
            "Cheng",
            "Gan",
            "Xu",
            "Mang",
            "Mang",
            "Zhi",
            "Qi",
            "Ruan",
            "Tian",
            "Xiang",
            "Dun",
            "Xin",
            "Xi",
            "Pan",
            "Feng",
            "Dun",
            "Min"
        ],
        [
            "Ming",
            "Sheng",
            "Shi",
            "Yun",
            "Mian",
            "Pan",
            "Fang",
            "Miao",
            "Dan",
            "Mei",
            "Mao",
            "Kan",
            "Xian",
            "Ou",
            "Shi",
            "Yang",
            "Zheng",
            "Yao",
            "Shen",
            "Huo",
            "Da",
            "Zhen",
            "Kuang",
            "Ju",
            "Shen",
            "Chi",
            "Sheng",
            "Mei",
            "Mo",
            "Zhu",
            "Zhen",
            "Zhen",
            "Mian",
            "Di",
            "Yuan",
            "Die",
            "Yi",
            "Zi",
            "Zi",
            "Chao",
            "Zha",
            "Xuan",
            "Bing",
            "Mi",
            "Long",
            "Sui",
            "Dong",
            "Mi",
            "Die",
            "Yi",
            "Er",
            "Ming",
            "Xuan",
            "Chi",
            "Kuang",
            "Juan",
            "Mou",
            "Zhen",
            "Tiao",
            "Yang",
            "Yan",
            "Mo",
            "Zhong",
            "Mai",
            "Zhao",
            "Zheng",
            "Mei",
            "Jun",
            "Shao",
            "Han",
            "Huan",
            "Di",
            "Cheng",
            "Cuo",
            "Juan",
            "E",
            "Wan",
            "Xian",
            "Xi",
            "Kun",
            "Lai",
            "Jian",
            "Shan",
            "Tian",
            "Hun",
            "Wan",
            "Ling",
            "Shi",
            "Qiong",
            "Lie",
            "Yai",
            "Jing",
            "Zheng",
            "Li",
            "Lai",
            "Sui",
            "Juan",
            "Shui",
            "Sui",
            "Du",
            "Bi",
            "Bi",
            "Mu",
            "Hun",
            "Ni",
            "Lu",
            "Yi",
            "Jie",
            "Cai",
            "Zhou",
            "Yu",
            "Hun",
            "Ma",
            "Xia",
            "Xing",
            "Xi",
            "Gun",
            "Cai",
            "Chun",
            "Jian",
            "Mei",
            "Du",
            "Hou",
            "Xuan",
            "Ti",
            "Kui",
            "Gao",
            "Rui",
            "Mou",
            "Xu",
            "Fa",
            "Wen",
            "Miao",
            "Chou",
            "Kui",
            "Mi",
            "Weng",
            "Kou",
            "Dang",
            "Chen",
            "Ke",
            "Sou",
            "Xia",
            "Qiong",
            "Mao",
            "Ming",
            "Man",
            "Shui",
            "Ze",
            "Zhang",
            "Yi",
            "Diao",
            "Ou",
            "Mo",
            "Shun",
            "Cong",
            "Lou",
            "Chi",
            "Man",
            "Piao",
            "Cheng",
            "Ji",
            "Meng",
            ,
            "Run",
            "Pie",
            "Xi",
            "Qiao",
            "Pu",
            "Zhu",
            "Deng",
            "Shen",
            "Shun",
            "Liao",
            "Che",
            "Xian",
            "Kan",
            "Ye",
            "Xu",
            "Tong",
            "Mou",
            "Lin",
            "Kui",
            "Xian",
            "Ye",
            "Ai",
            "Hui",
            "Zhan",
            "Jian",
            "Gu",
            "Zhao",
            "Qu",
            "Wei",
            "Chou",
            "Sao",
            "Ning",
            "Xun",
            "Yao",
            "Huo",
            "Meng",
            "Mian",
            "Bin",
            "Mian",
            "Li",
            "Kuang",
            "Jue",
            "Xuan",
            "Mian",
            "Huo",
            "Lu",
            "Meng",
            "Long",
            "Guan",
            "Man",
            "Xi",
            "Chu",
            "Tang",
            "Kan",
            "Zhu",
            "Mao",
            "Jin",
            "Lin",
            "Yu",
            "Shuo",
            "Ce",
            "Jue",
            "Shi",
            "Yi",
            "Shen",
            "Zhi",
            "Hou",
            "Shen",
            "Ying",
            "Ju",
            "Zhou",
            "Jiao",
            "Cuo",
            "Duan",
            "Ai",
            "Jiao",
            "Zeng",
            "Huo",
            "Bai",
            "Shi",
            "Ding",
            "Qi",
            "Ji",
            "Zi",
            "Gan",
            "Wu",
            "Tuo",
            "Ku",
            "Qiang",
            "Xi",
            "Fan",
            "Kuang"
        ],
        [
            "Dang",
            "Ma",
            "Sha",
            "Dan",
            "Jue",
            "Li",
            "Fu",
            "Min",
            "Nuo",
            "Huo",
            "Kang",
            "Zhi",
            "Qi",
            "Kan",
            "Jie",
            "Fen",
            "E",
            "Ya",
            "Pi",
            "Zhe",
            "Yan",
            "Sui",
            "Zhuan",
            "Che",
            "Dun",
            "Pan",
            "Yan",
            ,
            "Feng",
            "Fa",
            "Mo",
            "Zha",
            "Qu",
            "Yu",
            "Luo",
            "Tuo",
            "Tuo",
            "Di",
            "Zhai",
            "Zhen",
            "Ai",
            "Fei",
            "Mu",
            "Zhu",
            "Li",
            "Bian",
            "Nu",
            "Ping",
            "Peng",
            "Ling",
            "Pao",
            "Le",
            "Po",
            "Bo",
            "Po",
            "Shen",
            "Za",
            "Nuo",
            "Li",
            "Long",
            "Tong",
            ,
            "Li",
            "Aragane",
            "Chu",
            "Keng",
            "Quan",
            "Zhu",
            "Kuang",
            "Huo",
            "E",
            "Nao",
            "Jia",
            "Lu",
            "Wei",
            "Ai",
            "Luo",
            "Ken",
            "Xing",
            "Yan",
            "Tong",
            "Peng",
            "Xi",
            ,
            "Hong",
            "Shuo",
            "Xia",
            "Qiao",
            ,
            "Wei",
            "Qiao",
            ,
            "Keng",
            "Xiao",
            "Que",
            "Chan",
            "Lang",
            "Hong",
            "Yu",
            "Xiao",
            "Xia",
            "Mang",
            "Long",
            "Iong",
            "Che",
            "Che",
            "E",
            "Liu",
            "Ying",
            "Mang",
            "Que",
            "Yan",
            "Sha",
            "Kun",
            "Yu",
            ,
            "Kaki",
            "Lu",
            "Chen",
            "Jian",
            "Nue",
            "Song",
            "Zhuo",
            "Keng",
            "Peng",
            "Yan",
            "Zhui",
            "Kong",
            "Ceng",
            "Qi",
            "Zong",
            "Qing",
            "Lin",
            "Jun",
            "Bo",
            "Ding",
            "Min",
            "Diao",
            "Jian",
            "He",
            "Lu",
            "Ai",
            "Sui",
            "Que",
            "Ling",
            "Bei",
            "Yin",
            "Dui",
            "Wu",
            "Qi",
            "Lun",
            "Wan",
            "Dian",
            "Gang",
            "Pei",
            "Qi",
            "Chen",
            "Ruan",
            "Yan",
            "Die",
            "Ding",
            "Du",
            "Tuo",
            "Jie",
            "Ying",
            "Bian",
            "Ke",
            "Bi",
            "Wei",
            "Shuo",
            "Zhen",
            "Duan",
            "Xia",
            "Dang",
            "Ti",
            "Nao",
            "Peng",
            "Jian",
            "Di",
            "Tan",
            "Cha",
            "Seki",
            "Qi",
            ,
            "Feng",
            "Xuan",
            "Que",
            "Que",
            "Ma",
            "Gong",
            "Nian",
            "Su",
            "E",
            "Ci",
            "Liu",
            "Si",
            "Tang",
            "Bang",
            "Hua",
            "Pi",
            "Wei",
            "Sang",
            "Lei",
            "Cuo",
            "Zhen",
            "Xia",
            "Qi",
            "Lian",
            "Pan",
            "Wei",
            "Yun",
            "Dui",
            "Zhe",
            "Ke",
            "La",
            ,
            "Qing",
            "Gun",
            "Zhuan",
            "Chan",
            "Qi",
            "Ao",
            "Peng",
            "Lu",
            "Lu",
            "Kan",
            "Qiang",
            "Chen",
            "Yin",
            "Lei",
            "Biao",
            "Qi",
            "Mo",
            "Qi",
            "Cui",
            "Zong",
            "Qing",
            "Chuo",
            ,
            "Ji",
            "Shan",
            "Lao",
            "Qu",
            "Zeng",
            "Deng",
            "Jian",
            "Xi",
            "Lin",
            "Ding",
            "Dian",
            "Huang",
            "Pan",
            "Za",
            "Qiao",
            "Di",
            "Li"
        ],
        [
            "Tani",
            "Jiao",
            ,
            "Zhang",
            "Qiao",
            "Dun",
            "Xian",
            "Yu",
            "Zhui",
            "He",
            "Huo",
            "Zhai",
            "Lei",
            "Ke",
            "Chu",
            "Ji",
            "Que",
            "Dang",
            "Yi",
            "Jiang",
            "Pi",
            "Pi",
            "Yu",
            "Pin",
            "Qi",
            "Ai",
            "Kai",
            "Jian",
            "Yu",
            "Ruan",
            "Meng",
            "Pao",
            "Ci",
            ,
            ,
            "Mie",
            "Ca",
            "Xian",
            "Kuang",
            "Lei",
            "Lei",
            "Zhi",
            "Li",
            "Li",
            "Fan",
            "Que",
            "Pao",
            "Ying",
            "Li",
            "Long",
            "Long",
            "Mo",
            "Bo",
            "Shuang",
            "Guan",
            "Lan",
            "Zan",
            "Yan",
            "Shi",
            "Shi",
            "Li",
            "Reng",
            "She",
            "Yue",
            "Si",
            "Qi",
            "Ta",
            "Ma",
            "Xie",
            "Xian",
            "Xian",
            "Zhi",
            "Qi",
            "Zhi",
            "Beng",
            "Dui",
            "Zhong",
            ,
            "Yi",
            "Shi",
            "You",
            "Zhi",
            "Tiao",
            "Fu",
            "Fu",
            "Mi",
            "Zu",
            "Zhi",
            "Suan",
            "Mei",
            "Zuo",
            "Qu",
            "Hu",
            "Zhu",
            "Shen",
            "Sui",
            "Ci",
            "Chai",
            "Mi",
            "Lu",
            "Yu",
            "Xiang",
            "Wu",
            "Tiao",
            "Piao",
            "Zhu",
            "Gui",
            "Xia",
            "Zhi",
            "Ji",
            "Gao",
            "Zhen",
            "Gao",
            "Shui",
            "Jin",
            "Chen",
            "Gai",
            "Kun",
            "Di",
            "Dao",
            "Huo",
            "Tao",
            "Qi",
            "Gu",
            "Guan",
            "Zui",
            "Ling",
            "Lu",
            "Bing",
            "Jin",
            "Dao",
            "Zhi",
            "Lu",
            "Shan",
            "Bei",
            "Zhe",
            "Hui",
            "You",
            "Xi",
            "Yin",
            "Zi",
            "Huo",
            "Zhen",
            "Fu",
            "Yuan",
            "Wu",
            "Xian",
            "Yang",
            "Ti",
            "Yi",
            "Mei",
            "Si",
            "Di",
            ,
            "Zhuo",
            "Zhen",
            "Yong",
            "Ji",
            "Gao",
            "Tang",
            "Si",
            "Ma",
            "Ta",
            ,
            "Xuan",
            "Qi",
            "Yu",
            "Xi",
            "Ji",
            "Si",
            "Chan",
            "Tan",
            "Kuai",
            "Sui",
            "Li",
            "Nong",
            "Ni",
            "Dao",
            "Li",
            "Rang",
            "Yue",
            "Ti",
            "Zan",
            "Lei",
            "Rou",
            "Yu",
            "Yu",
            "Chi",
            "Xie",
            "Qin",
            "He",
            "Tu",
            "Xiu",
            "Si",
            "Ren",
            "Tu",
            "Zi",
            "Cha",
            "Gan",
            "Yi",
            "Xian",
            "Bing",
            "Nian",
            "Qiu",
            "Qiu",
            "Zhong",
            "Fen",
            "Hao",
            "Yun",
            "Ke",
            "Miao",
            "Zhi",
            "Geng",
            "Bi",
            "Zhi",
            "Yu",
            "Mi",
            "Ku",
            "Ban",
            "Pi",
            "Ni",
            "Li",
            "You",
            "Zu",
            "Pi",
            "Ba",
            "Ling",
            "Mo",
            "Cheng",
            "Nian",
            "Qin",
            "Yang",
            "Zuo",
            "Zhi",
            "Zhi",
            "Shu",
            "Ju",
            "Zi",
            "Huo",
            "Ji",
            "Cheng",
            "Tong",
            "Zhi",
            "Huo",
            "He",
            "Yin",
            "Zi",
            "Zhi",
            "Jie",
            "Ren",
            "Du",
            "Yi",
            "Zhu",
            "Hui",
            "Nong",
            "Fu"
        ],
        [
            "Xi",
            "Kao",
            "Lang",
            "Fu",
            "Ze",
            "Shui",
            "Lu",
            "Kun",
            "Gan",
            "Geng",
            "Ti",
            "Cheng",
            "Tu",
            "Shao",
            "Shui",
            "Ya",
            "Lun",
            "Lu",
            "Gu",
            "Zuo",
            "Ren",
            "Zhun",
            "Bang",
            "Bai",
            "Ji",
            "Zhi",
            "Zhi",
            "Kun",
            "Leng",
            "Peng",
            "Ke",
            "Bing",
            "Chou",
            "Zu",
            "Yu",
            "Su",
            "Lue",
            ,
            "Yi",
            "Xi",
            "Bian",
            "Ji",
            "Fu",
            "Bi",
            "Nuo",
            "Jie",
            "Zhong",
            "Zong",
            "Xu",
            "Cheng",
            "Dao",
            "Wen",
            "Lian",
            "Zi",
            "Yu",
            "Ji",
            "Xu",
            "Zhen",
            "Zhi",
            "Dao",
            "Jia",
            "Ji",
            "Gao",
            "Gao",
            "Gu",
            "Rong",
            "Sui",
            "You",
            "Ji",
            "Kang",
            "Mu",
            "Shan",
            "Men",
            "Zhi",
            "Ji",
            "Lu",
            "Su",
            "Ji",
            "Ying",
            "Wen",
            "Qiu",
            "Se",
            ,
            "Yi",
            "Huang",
            "Qie",
            "Ji",
            "Sui",
            "Xiao",
            "Pu",
            "Jiao",
            "Zhuo",
            "Tong",
            "Sai",
            "Lu",
            "Sui",
            "Nong",
            "Se",
            "Hui",
            "Rang",
            "Nuo",
            "Yu",
            "Bin",
            "Ji",
            "Tui",
            "Wen",
            "Cheng",
            "Huo",
            "Gong",
            "Lu",
            "Biao",
            ,
            "Rang",
            "Zhuo",
            "Li",
            "Zan",
            "Xue",
            "Wa",
            "Jiu",
            "Qiong",
            "Xi",
            "Qiong",
            "Kong",
            "Yu",
            "Sen",
            "Jing",
            "Yao",
            "Chuan",
            "Zhun",
            "Tu",
            "Lao",
            "Qie",
            "Zhai",
            "Yao",
            "Bian",
            "Bao",
            "Yao",
            "Bing",
            "Wa",
            "Zhu",
            "Jiao",
            "Qiao",
            "Diao",
            "Wu",
            "Gui",
            "Yao",
            "Zhi",
            "Chuang",
            "Yao",
            "Tiao",
            "Jiao",
            "Chuang",
            "Jiong",
            "Xiao",
            "Cheng",
            "Kou",
            "Cuan",
            "Wo",
            "Dan",
            "Ku",
            "Ke",
            "Zhui",
            "Xu",
            "Su",
            "Guan",
            "Kui",
            "Dou",
            ,
            "Yin",
            "Wo",
            "Wa",
            "Ya",
            "Yu",
            "Ju",
            "Qiong",
            "Yao",
            "Yao",
            "Tiao",
            "Chao",
            "Yu",
            "Tian",
            "Diao",
            "Ju",
            "Liao",
            "Xi",
            "Wu",
            "Kui",
            "Chuang",
            "Zhao",
            ,
            "Kuan",
            "Long",
            "Cheng",
            "Cui",
            "Piao",
            "Zao",
            "Cuan",
            "Qiao",
            "Qiong",
            "Dou",
            "Zao",
            "Long",
            "Qie",
            "Li",
            "Chu",
            "Shi",
            "Fou",
            "Qian",
            "Chu",
            "Hong",
            "Qi",
            "Qian",
            "Gong",
            "Shi",
            "Shu",
            "Miao",
            "Ju",
            "Zhan",
            "Zhu",
            "Ling",
            "Long",
            "Bing",
            "Jing",
            "Jing",
            "Zhang",
            "Yi",
            "Si",
            "Jun",
            "Hong",
            "Tong",
            "Song",
            "Jing",
            "Diao",
            "Yi",
            "Shu",
            "Jing",
            "Qu",
            "Jie",
            "Ping",
            "Duan",
            "Shao",
            "Zhuan",
            "Ceng",
            "Deng",
            "Cui",
            "Huai",
            "Jing",
            "Kan",
            "Jing",
            "Zhu",
            "Zhu",
            "Le",
            "Peng",
            "Yu",
            "Chi",
            "Gan"
        ],
        [
            "Mang",
            "Zhu",
            "Utsubo",
            "Du",
            "Ji",
            "Xiao",
            "Ba",
            "Suan",
            "Ji",
            "Zhen",
            "Zhao",
            "Sun",
            "Ya",
            "Zhui",
            "Yuan",
            "Hu",
            "Gang",
            "Xiao",
            "Cen",
            "Pi",
            "Bi",
            "Jian",
            "Yi",
            "Dong",
            "Shan",
            "Sheng",
            "Xia",
            "Di",
            "Zhu",
            "Na",
            "Chi",
            "Gu",
            "Li",
            "Qie",
            "Min",
            "Bao",
            "Tiao",
            "Si",
            "Fu",
            "Ce",
            "Ben",
            "Pei",
            "Da",
            "Zi",
            "Di",
            "Ling",
            "Ze",
            "Nu",
            "Fu",
            "Gou",
            "Fan",
            "Jia",
            "Ge",
            "Fan",
            "Shi",
            "Mao",
            "Po",
            "Sey",
            "Jian",
            "Qiong",
            "Long",
            "Souke",
            "Bian",
            "Luo",
            "Gui",
            "Qu",
            "Chi",
            "Yin",
            "Yao",
            "Xian",
            "Bi",
            "Qiong",
            "Gua",
            "Deng",
            "Jiao",
            "Jin",
            "Quan",
            "Sun",
            "Ru",
            "Fa",
            "Kuang",
            "Zhu",
            "Tong",
            "Ji",
            "Da",
            "Xing",
            "Ce",
            "Zhong",
            "Kou",
            "Lai",
            "Bi",
            "Shai",
            "Dang",
            "Zheng",
            "Ce",
            "Fu",
            "Yun",
            "Tu",
            "Pa",
            "Li",
            "Lang",
            "Ju",
            "Guan",
            "Jian",
            "Han",
            "Tong",
            "Xia",
            "Zhi",
            "Cheng",
            "Suan",
            "Shi",
            "Zhu",
            "Zuo",
            "Xiao",
            "Shao",
            "Ting",
            "Ce",
            "Yan",
            "Gao",
            "Kuai",
            "Gan",
            "Chou",
            "Kago",
            "Gang",
            "Yun",
            "O",
            "Qian",
            "Xiao",
            "Jian",
            "Pu",
            "Lai",
            "Zou",
            "Bi",
            "Bi",
            "Bi",
            "Ge",
            "Chi",
            "Guai",
            "Yu",
            "Jian",
            "Zhao",
            "Gu",
            "Chi",
            "Zheng",
            "Jing",
            "Sha",
            "Zhou",
            "Lu",
            "Bo",
            "Ji",
            "Lin",
            "Suan",
            "Jun",
            "Fu",
            "Zha",
            "Gu",
            "Kong",
            "Qian",
            "Quan",
            "Jun",
            "Chui",
            "Guan",
            "Yuan",
            "Ce",
            "Ju",
            "Bo",
            "Ze",
            "Qie",
            "Tuo",
            "Luo",
            "Dan",
            "Xiao",
            "Ruo",
            "Jian",
            "Xuan",
            "Bian",
            "Sun",
            "Xiang",
            "Xian",
            "Ping",
            "Zhen",
            "Sheng",
            "Hu",
            "Shi",
            "Zhu",
            "Yue",
            "Chun",
            "Lu",
            "Wu",
            "Dong",
            "Xiao",
            "Ji",
            "Jie",
            "Huang",
            "Xing",
            "Mei",
            "Fan",
            "Chui",
            "Zhuan",
            "Pian",
            "Feng",
            "Zhu",
            "Hong",
            "Qie",
            "Hou",
            "Qiu",
            "Miao",
            "Qian",
            ,
            "Kui",
            "Sik",
            "Lou",
            "Yun",
            "He",
            "Tang",
            "Yue",
            "Chou",
            "Gao",
            "Fei",
            "Ruo",
            "Zheng",
            "Gou",
            "Nie",
            "Qian",
            "Xiao",
            "Cuan",
            "Gong",
            "Pang",
            "Du",
            "Li",
            "Bi",
            "Zhuo",
            "Chu",
            "Shai",
            "Chi",
            "Zhu",
            "Qiang",
            "Long",
            "Lan",
            "Jian",
            "Bu",
            "Li",
            "Hui",
            "Bi",
            "Di",
            "Cong",
            "Yan",
            "Peng",
            "Sen",
            "Zhuan",
            "Pai",
            "Piao",
            "Dou",
            "Yu",
            "Mie",
            "Zhuan"
        ],
        [
            "Ze",
            "Xi",
            "Guo",
            "Yi",
            "Hu",
            "Chan",
            "Kou",
            "Cu",
            "Ping",
            "Chou",
            "Ji",
            "Gui",
            "Su",
            "Lou",
            "Zha",
            "Lu",
            "Nian",
            "Suo",
            "Cuan",
            "Sasara",
            "Suo",
            "Le",
            "Duan",
            "Yana",
            "Xiao",
            "Bo",
            "Mi",
            "Si",
            "Dang",
            "Liao",
            "Dan",
            "Dian",
            "Fu",
            "Jian",
            "Min",
            "Kui",
            "Dai",
            "Qiao",
            "Deng",
            "Huang",
            "Sun",
            "Lao",
            "Zan",
            "Xiao",
            "Du",
            "Shi",
            "Zan",
            ,
            "Pai",
            "Hata",
            "Pai",
            "Gan",
            "Ju",
            "Du",
            "Lu",
            "Yan",
            "Bo",
            "Dang",
            "Sai",
            "Ke",
            "Long",
            "Qian",
            "Lian",
            "Bo",
            "Zhou",
            "Lai",
            ,
            "Lan",
            "Kui",
            "Yu",
            "Yue",
            "Hao",
            "Zhen",
            "Tai",
            "Ti",
            "Mi",
            "Chou",
            "Ji",
            ,
            "Hata",
            "Teng",
            "Zhuan",
            "Zhou",
            "Fan",
            "Sou",
            "Zhou",
            "Kuji",
            "Zhuo",
            "Teng",
            "Lu",
            "Lu",
            "Jian",
            "Tuo",
            "Ying",
            "Yu",
            "Lai",
            "Long",
            "Shinshi",
            "Lian",
            "Lan",
            "Qian",
            "Yue",
            "Zhong",
            "Qu",
            "Lian",
            "Bian",
            "Duan",
            "Zuan",
            "Li",
            "Si",
            "Luo",
            "Ying",
            "Yue",
            "Zhuo",
            "Xu",
            "Mi",
            "Di",
            "Fan",
            "Shen",
            "Zhe",
            "Shen",
            "Nu",
            "Xie",
            "Lei",
            "Xian",
            "Zi",
            "Ni",
            "Cun",
            ,
            "Qian",
            "Kume",
            "Bi",
            "Ban",
            "Wu",
            "Sha",
            "Kang",
            "Rou",
            "Fen",
            "Bi",
            "Cui",
            ,
            "Li",
            "Chi",
            "Nukamiso",
            "Ro",
            "Ba",
            "Li",
            "Gan",
            "Ju",
            "Po",
            "Mo",
            "Cu",
            "Nian",
            "Zhou",
            "Li",
            "Su",
            "Tiao",
            "Li",
            "Qi",
            "Su",
            "Hong",
            "Tong",
            "Zi",
            "Ce",
            "Yue",
            "Zhou",
            "Lin",
            "Zhuang",
            "Bai",
            ,
            "Fen",
            "Ji",
            ,
            "Sukumo",
            "Liang",
            "Xian",
            "Fu",
            "Liang",
            "Can",
            "Geng",
            "Li",
            "Yue",
            "Lu",
            "Ju",
            "Qi",
            "Cui",
            "Bai",
            "Zhang",
            "Lin",
            "Zong",
            "Jing",
            "Guo",
            "Kouji",
            "San",
            "San",
            "Tang",
            "Bian",
            "Rou",
            "Mian",
            "Hou",
            "Xu",
            "Zong",
            "Hu",
            "Jian",
            "Zan",
            "Ci",
            "Li",
            "Xie",
            "Fu",
            "Ni",
            "Bei",
            "Gu",
            "Xiu",
            "Gao",
            "Tang",
            "Qiu",
            "Sukumo",
            "Cao",
            "Zhuang",
            "Tang",
            "Mi",
            "San",
            "Fen",
            "Zao",
            "Kang",
            "Jiang",
            "Mo",
            "San",
            "San",
            "Nuo",
            "Xi",
            "Liang",
            "Jiang",
            "Kuai",
            "Bo",
            "Huan",
            ,
            "Zong",
            "Xian",
            "Nuo",
            "Tuan",
            "Nie",
            "Li",
            "Zuo",
            "Di",
            "Nie",
            "Tiao",
            "Lan",
            "Mi",
            "Jiao",
            "Jiu",
            "Xi",
            "Gong",
            "Zheng",
            "Jiu",
            "You"
        ],
        [
            "Ji",
            "Cha",
            "Zhou",
            "Xun",
            "Yue",
            "Hong",
            "Yu",
            "He",
            "Wan",
            "Ren",
            "Wen",
            "Wen",
            "Qiu",
            "Na",
            "Zi",
            "Tou",
            "Niu",
            "Fou",
            "Jie",
            "Shu",
            "Chun",
            "Pi",
            "Yin",
            "Sha",
            "Hong",
            "Zhi",
            "Ji",
            "Fen",
            "Yun",
            "Ren",
            "Dan",
            "Jin",
            "Su",
            "Fang",
            "Suo",
            "Cui",
            "Jiu",
            "Zha",
            "Kinu",
            "Jin",
            "Fu",
            "Zhi",
            "Ci",
            "Zi",
            "Chou",
            "Hong",
            "Zha",
            "Lei",
            "Xi",
            "Fu",
            "Xie",
            "Shen",
            "Bei",
            "Zhu",
            "Qu",
            "Ling",
            "Zhu",
            "Shao",
            "Gan",
            "Yang",
            "Fu",
            "Tuo",
            "Zhen",
            "Dai",
            "Zhuo",
            "Shi",
            "Zhong",
            "Xian",
            "Zu",
            "Jiong",
            "Ban",
            "Ju",
            "Mo",
            "Shu",
            "Zui",
            "Wata",
            "Jing",
            "Ren",
            "Heng",
            "Xie",
            "Jie",
            "Zhu",
            "Chou",
            "Gua",
            "Bai",
            "Jue",
            "Kuang",
            "Hu",
            "Ci",
            "Geng",
            "Geng",
            "Tao",
            "Xie",
            "Ku",
            "Jiao",
            "Quan",
            "Gai",
            "Luo",
            "Xuan",
            "Bing",
            "Xian",
            "Fu",
            "Gei",
            "Tong",
            "Rong",
            "Tiao",
            "Yin",
            "Lei",
            "Xie",
            "Quan",
            "Xu",
            "Lun",
            "Die",
            "Tong",
            "Si",
            "Jiang",
            "Xiang",
            "Hui",
            "Jue",
            "Zhi",
            "Jian",
            "Juan",
            "Chi",
            "Mian",
            "Zhen",
            "Lu",
            "Cheng",
            "Qiu",
            "Shu",
            "Bang",
            "Tong",
            "Xiao",
            "Wan",
            "Qin",
            "Geng",
            "Xiu",
            "Ti",
            "Xiu",
            "Xie",
            "Hong",
            "Xi",
            "Fu",
            "Ting",
            "Sui",
            "Dui",
            "Kun",
            "Fu",
            "Jing",
            "Hu",
            "Zhi",
            "Yan",
            "Jiong",
            "Feng",
            "Ji",
            "Sok",
            "Kase",
            "Zong",
            "Lin",
            "Duo",
            "Li",
            "Lu",
            "Liang",
            "Chou",
            "Quan",
            "Shao",
            "Qi",
            "Qi",
            "Zhun",
            "Qi",
            "Wan",
            "Qian",
            "Xian",
            "Shou",
            "Wei",
            "Qi",
            "Tao",
            "Wan",
            "Gang",
            "Wang",
            "Beng",
            "Zhui",
            "Cai",
            "Guo",
            "Cui",
            "Lun",
            "Liu",
            "Qi",
            "Zhan",
            "Bei",
            "Chuo",
            "Ling",
            "Mian",
            "Qi",
            "Qie",
            "Tan",
            "Zong",
            "Gun",
            "Zou",
            "Yi",
            "Zi",
            "Xing",
            "Liang",
            "Jin",
            "Fei",
            "Rui",
            "Min",
            "Yu",
            "Zong",
            "Fan",
            "Lu",
            "Xu",
            "Yingl",
            "Zhang",
            "Kasuri",
            "Xu",
            "Xiang",
            "Jian",
            "Ke",
            "Xian",
            "Ruan",
            "Mian",
            "Qi",
            "Duan",
            "Zhong",
            "Di",
            "Min",
            "Miao",
            "Yuan",
            "Xie",
            "Bao",
            "Si",
            "Qiu",
            "Bian",
            "Huan",
            "Geng",
            "Cong",
            "Mian",
            "Wei",
            "Fu",
            "Wei",
            "Yu",
            "Gou",
            "Miao",
            "Xie",
            "Lian",
            "Zong",
            "Bian",
            "Yun",
            "Yin",
            "Ti",
            "Gua",
            "Zhi",
            "Yun",
            "Cheng",
            "Chan",
            "Dai"
        ],
        [
            "Xia",
            "Yuan",
            "Zong",
            "Xu",
            "Nawa",
            "Odoshi",
            "Geng",
            "Sen",
            "Ying",
            "Jin",
            "Yi",
            "Zhui",
            "Ni",
            "Bang",
            "Gu",
            "Pan",
            "Zhou",
            "Jian",
            "Cuo",
            "Quan",
            "Shuang",
            "Yun",
            "Xia",
            "Shuai",
            "Xi",
            "Rong",
            "Tao",
            "Fu",
            "Yun",
            "Zhen",
            "Gao",
            "Ru",
            "Hu",
            "Zai",
            "Teng",
            "Xian",
            "Su",
            "Zhen",
            "Zong",
            "Tao",
            "Horo",
            "Cai",
            "Bi",
            "Feng",
            "Cu",
            "Li",
            "Suo",
            "Yin",
            "Xi",
            "Zong",
            "Lei",
            "Zhuan",
            "Qian",
            "Man",
            "Zhi",
            "Lu",
            "Mo",
            "Piao",
            "Lian",
            "Mi",
            "Xuan",
            "Zong",
            "Ji",
            "Shan",
            "Sui",
            "Fan",
            "Shuai",
            "Beng",
            "Yi",
            "Sao",
            "Mou",
            "Zhou",
            "Qiang",
            "Hun",
            "Sem",
            "Xi",
            "Jung",
            "Xiu",
            "Ran",
            "Xuan",
            "Hui",
            "Qiao",
            "Zeng",
            "Zuo",
            "Zhi",
            "Shan",
            "San",
            "Lin",
            "Yu",
            "Fan",
            "Liao",
            "Chuo",
            "Zun",
            "Jian",
            "Rao",
            "Chan",
            "Rui",
            "Xiu",
            "Hui",
            "Hua",
            "Zuan",
            "Xi",
            "Qiang",
            "Un",
            "Da",
            "Sheng",
            "Hui",
            "Xi",
            "Se",
            "Jian",
            "Jiang",
            "Huan",
            "Zao",
            "Cong",
            "Jie",
            "Jiao",
            "Bo",
            "Chan",
            "Yi",
            "Nao",
            "Sui",
            "Yi",
            "Shai",
            "Xu",
            "Ji",
            "Bin",
            "Qian",
            "Lan",
            "Pu",
            "Xun",
            "Zuan",
            "Qi",
            "Peng",
            "Li",
            "Mo",
            "Lei",
            "Xie",
            "Zuan",
            "Kuang",
            "You",
            "Xu",
            "Lei",
            "Xian",
            "Chan",
            "Kou",
            "Lu",
            "Chan",
            "Ying",
            "Cai",
            "Xiang",
            "Xian",
            "Zui",
            "Zuan",
            "Luo",
            "Xi",
            "Dao",
            "Lan",
            "Lei",
            "Lian",
            "Si",
            "Jiu",
            "Yu",
            "Hong",
            "Zhou",
            "Xian",
            "He",
            "Yue",
            "Ji",
            "Wan",
            "Kuang",
            "Ji",
            "Ren",
            "Wei",
            "Yun",
            "Hong",
            "Chun",
            "Pi",
            "Sha",
            "Gang",
            "Na",
            "Ren",
            "Zong",
            "Lun",
            "Fen",
            "Zhi",
            "Wen",
            "Fang",
            "Zhu",
            "Yin",
            "Niu",
            "Shu",
            "Xian",
            "Gan",
            "Xie",
            "Fu",
            "Lian",
            "Zu",
            "Shen",
            "Xi",
            "Zhi",
            "Zhong",
            "Zhou",
            "Ban",
            "Fu",
            "Zhuo",
            "Shao",
            "Yi",
            "Jing",
            "Dai",
            "Bang",
            "Rong",
            "Jie",
            "Ku",
            "Rao",
            "Die",
            "Heng",
            "Hui",
            "Gei",
            "Xuan",
            "Jiang",
            "Luo",
            "Jue",
            "Jiao",
            "Tong",
            "Geng",
            "Xiao",
            "Juan",
            "Xiu",
            "Xi",
            "Sui",
            "Tao",
            "Ji",
            "Ti",
            "Ji",
            "Xu",
            "Ling",
            ,
            "Xu",
            "Qi",
            "Fei",
            "Chuo",
            "Zhang",
            "Gun",
            "Sheng",
            "Wei",
            "Mian",
            "Shou",
            "Beng",
            "Chou",
            "Tao",
            "Liu",
            "Quan",
            "Zong",
            "Zhan",
            "Wan",
            "Lu"
        ],
        [
            "Zhui",
            "Zi",
            "Ke",
            "Xiang",
            "Jian",
            "Mian",
            "Lan",
            "Ti",
            "Miao",
            "Qi",
            "Yun",
            "Hui",
            "Si",
            "Duo",
            "Duan",
            "Bian",
            "Xian",
            "Gou",
            "Zhui",
            "Huan",
            "Di",
            "Lu",
            "Bian",
            "Min",
            "Yuan",
            "Jin",
            "Fu",
            "Ru",
            "Zhen",
            "Feng",
            "Shuai",
            "Gao",
            "Chan",
            "Li",
            "Yi",
            "Jian",
            "Bin",
            "Piao",
            "Man",
            "Lei",
            "Ying",
            "Suo",
            "Mou",
            "Sao",
            "Xie",
            "Liao",
            "Shan",
            "Zeng",
            "Jiang",
            "Qian",
            "Zao",
            "Huan",
            "Jiao",
            "Zuan",
            "Fou",
            "Xie",
            "Gang",
            "Fou",
            "Que",
            "Fou",
            "Kaakeru",
            "Bo",
            "Ping",
            "Hou",
            ,
            "Gang",
            "Ying",
            "Ying",
            "Qing",
            "Xia",
            "Guan",
            "Zun",
            "Tan",
            "Chang",
            "Qi",
            "Weng",
            "Ying",
            "Lei",
            "Tan",
            "Lu",
            "Guan",
            "Wang",
            "Wang",
            "Gang",
            "Wang",
            "Han",
            ,
            "Luo",
            "Fu",
            "Mi",
            "Fa",
            "Gu",
            "Zhu",
            "Ju",
            "Mao",
            "Gu",
            "Min",
            "Gang",
            "Ba",
            "Gua",
            "Ti",
            "Juan",
            "Fu",
            "Lin",
            "Yan",
            "Zhao",
            "Zui",
            "Gua",
            "Zhuo",
            "Yu",
            "Zhi",
            "An",
            "Fa",
            "Nan",
            "Shu",
            "Si",
            "Pi",
            "Ma",
            "Liu",
            "Ba",
            "Fa",
            "Li",
            "Chao",
            "Wei",
            "Bi",
            "Ji",
            "Zeng",
            "Tong",
            "Liu",
            "Ji",
            "Juan",
            "Mi",
            "Zhao",
            "Luo",
            "Pi",
            "Ji",
            "Ji",
            "Luan",
            "Yang",
            "Mie",
            "Qiang",
            "Ta",
            "Mei",
            "Yang",
            "You",
            "You",
            "Fen",
            "Ba",
            "Gao",
            "Yang",
            "Gu",
            "Qiang",
            "Zang",
            "Gao",
            "Ling",
            "Yi",
            "Zhu",
            "Di",
            "Xiu",
            "Qian",
            "Yi",
            "Xian",
            "Rong",
            "Qun",
            "Qun",
            "Qian",
            "Huan",
            "Zui",
            "Xian",
            "Yi",
            "Yashinau",
            "Qiang",
            "Xian",
            "Yu",
            "Geng",
            "Jie",
            "Tang",
            "Yuan",
            "Xi",
            "Fan",
            "Shan",
            "Fen",
            "Shan",
            "Lian",
            "Lei",
            "Geng",
            "Nou",
            "Qiang",
            "Chan",
            "Yu",
            "Gong",
            "Yi",
            "Chong",
            "Weng",
            "Fen",
            "Hong",
            "Chi",
            "Chi",
            "Cui",
            "Fu",
            "Xia",
            "Pen",
            "Yi",
            "La",
            "Yi",
            "Pi",
            "Ling",
            "Liu",
            "Zhi",
            "Qu",
            "Xi",
            "Xie",
            "Xiang",
            "Xi",
            "Xi",
            "Qi",
            "Qiao",
            "Hui",
            "Hui",
            "Xiao",
            "Se",
            "Hong",
            "Jiang",
            "Di",
            "Cui",
            "Fei",
            "Tao",
            "Sha",
            "Chi",
            "Zhu",
            "Jian",
            "Xuan",
            "Shi",
            "Pian",
            "Zong",
            "Wan",
            "Hui",
            "Hou",
            "He",
            "He",
            "Han",
            "Ao",
            "Piao",
            "Yi",
            "Lian",
            "Qu",
            ,
            "Lin",
            "Pen",
            "Qiao",
            "Ao",
            "Fan",
            "Yi",
            "Hui",
            "Xuan",
            "Dao"
        ],
        [
            "Yao",
            "Lao",
            ,
            "Kao",
            "Mao",
            "Zhe",
            "Qi",
            "Gou",
            "Gou",
            "Gou",
            "Die",
            "Die",
            "Er",
            "Shua",
            "Ruan",
            "Er",
            "Nai",
            "Zhuan",
            "Lei",
            "Ting",
            "Zi",
            "Geng",
            "Chao",
            "Hao",
            "Yun",
            "Pa",
            "Pi",
            "Chi",
            "Si",
            "Chu",
            "Jia",
            "Ju",
            "He",
            "Chu",
            "Lao",
            "Lun",
            "Ji",
            "Tang",
            "Ou",
            "Lou",
            "Nou",
            "Gou",
            "Pang",
            "Ze",
            "Lou",
            "Ji",
            "Lao",
            "Huo",
            "You",
            "Mo",
            "Huai",
            "Er",
            "Zhe",
            "Ting",
            "Ye",
            "Da",
            "Song",
            "Qin",
            "Yun",
            "Chi",
            "Dan",
            "Dan",
            "Hong",
            "Geng",
            "Zhi",
            ,
            "Nie",
            "Dan",
            "Zhen",
            "Che",
            "Ling",
            "Zheng",
            "You",
            "Wa",
            "Liao",
            "Long",
            "Zhi",
            "Ning",
            "Tiao",
            "Er",
            "Ya",
            "Die",
            "Gua",
            ,
            "Lian",
            "Hao",
            "Sheng",
            "Lie",
            "Pin",
            "Jing",
            "Ju",
            "Bi",
            "Di",
            "Guo",
            "Wen",
            "Xu",
            "Ping",
            "Cong",
            "Shikato",
            ,
            "Ting",
            "Yu",
            "Cong",
            "Kui",
            "Tsuraneru",
            "Kui",
            "Cong",
            "Lian",
            "Weng",
            "Kui",
            "Lian",
            "Lian",
            "Cong",
            "Ao",
            "Sheng",
            "Song",
            "Ting",
            "Kui",
            "Nie",
            "Zhi",
            "Dan",
            "Ning",
            "Qie",
            "Ji",
            "Ting",
            "Ting",
            "Long",
            "Yu",
            "Yu",
            "Zhao",
            "Si",
            "Su",
            "Yi",
            "Su",
            "Si",
            "Zhao",
            "Zhao",
            "Rou",
            "Yi",
            "Le",
            "Ji",
            "Qiu",
            "Ken",
            "Cao",
            "Ge",
            "Di",
            "Huan",
            "Huang",
            "Yi",
            "Ren",
            "Xiao",
            "Ru",
            "Zhou",
            "Yuan",
            "Du",
            "Gang",
            "Rong",
            "Gan",
            "Cha",
            "Wo",
            "Chang",
            "Gu",
            "Zhi",
            "Han",
            "Fu",
            "Fei",
            "Fen",
            "Pei",
            "Pang",
            "Jian",
            "Fang",
            "Zhun",
            "You",
            "Na",
            "Hang",
            "Ken",
            "Ran",
            "Gong",
            "Yu",
            "Wen",
            "Yao",
            "Jin",
            "Pi",
            "Qian",
            "Xi",
            "Xi",
            "Fei",
            "Ken",
            "Jing",
            "Tai",
            "Shen",
            "Zhong",
            "Zhang",
            "Xie",
            "Shen",
            "Wei",
            "Zhou",
            "Die",
            "Dan",
            "Fei",
            "Ba",
            "Bo",
            "Qu",
            "Tian",
            "Bei",
            "Gua",
            "Tai",
            "Zi",
            "Ku",
            "Zhi",
            "Ni",
            "Ping",
            "Zi",
            "Fu",
            "Pang",
            "Zhen",
            "Xian",
            "Zuo",
            "Pei",
            "Jia",
            "Sheng",
            "Zhi",
            "Bao",
            "Mu",
            "Qu",
            "Hu",
            "Ke",
            "Yi",
            "Yin",
            "Xu",
            "Yang",
            "Long",
            "Dong",
            "Ka",
            "Lu",
            "Jing",
            "Nu",
            "Yan",
            "Pang",
            "Kua",
            "Yi",
            "Guang",
            "Gai",
            "Ge",
            "Dong",
            "Zhi",
            "Xiao",
            "Xiong",
            "Xiong",
            "Er",
            "E",
            "Xing",
            "Pian",
            "Neng",
            "Zi",
            "Gui"
        ],
        [
            "Cheng",
            "Tiao",
            "Zhi",
            "Cui",
            "Mei",
            "Xie",
            "Cui",
            "Xie",
            "Mo",
            "Mai",
            "Ji",
            "Obiyaakasu",
            ,
            "Kuai",
            "Sa",
            "Zang",
            "Qi",
            "Nao",
            "Mi",
            "Nong",
            "Luan",
            "Wan",
            "Bo",
            "Wen",
            "Guan",
            "Qiu",
            "Jiao",
            "Jing",
            "Rou",
            "Heng",
            "Cuo",
            "Lie",
            "Shan",
            "Ting",
            "Mei",
            "Chun",
            "Shen",
            "Xie",
            "De",
            "Zui",
            "Cu",
            "Xiu",
            "Xin",
            "Tuo",
            "Pao",
            "Cheng",
            "Nei",
            "Fu",
            "Dou",
            "Tuo",
            "Niao",
            "Noy",
            "Pi",
            "Gu",
            "Gua",
            "Li",
            "Lian",
            "Zhang",
            "Cui",
            "Jie",
            "Liang",
            "Zhou",
            "Pi",
            "Biao",
            "Lun",
            "Pian",
            "Guo",
            "Kui",
            "Chui",
            "Dan",
            "Tian",
            "Nei",
            "Jing",
            "Jie",
            "La",
            "Yi",
            "An",
            "Ren",
            "Shen",
            "Chuo",
            "Fu",
            "Fu",
            "Ju",
            "Fei",
            "Qiang",
            "Wan",
            "Dong",
            "Pi",
            "Guo",
            "Zong",
            "Ding",
            "Wu",
            "Mei",
            "Ruan",
            "Zhuan",
            "Zhi",
            "Cou",
            "Gua",
            "Ou",
            "Di",
            "An",
            "Xing",
            "Nao",
            "Yu",
            "Chuan",
            "Nan",
            "Yun",
            "Zhong",
            "Rou",
            "E",
            "Sai",
            "Tu",
            "Yao",
            "Jian",
            "Wei",
            "Jiao",
            "Yu",
            "Jia",
            "Duan",
            "Bi",
            "Chang",
            "Fu",
            "Xian",
            "Ni",
            "Mian",
            "Wa",
            "Teng",
            "Tui",
            "Bang",
            "Qian",
            "Lu",
            "Wa",
            "Sou",
            "Tang",
            "Su",
            "Zhui",
            "Ge",
            "Yi",
            "Bo",
            "Liao",
            "Ji",
            "Pi",
            "Xie",
            "Gao",
            "Lu",
            "Bin",
            "Ou",
            "Chang",
            "Lu",
            "Guo",
            "Pang",
            "Chuai",
            "Piao",
            "Jiang",
            "Fu",
            "Tang",
            "Mo",
            "Xi",
            "Zhuan",
            "Lu",
            "Jiao",
            "Ying",
            "Lu",
            "Zhi",
            "Tara",
            "Chun",
            "Lian",
            "Tong",
            "Peng",
            "Ni",
            "Zha",
            "Liao",
            "Cui",
            "Gui",
            "Xiao",
            "Teng",
            "Fan",
            "Zhi",
            "Jiao",
            "Shan",
            "Wu",
            "Cui",
            "Run",
            "Xiang",
            "Sui",
            "Fen",
            "Ying",
            "Tan",
            "Zhua",
            "Dan",
            "Kuai",
            "Nong",
            "Tun",
            "Lian",
            "Bi",
            "Yong",
            "Jue",
            "Chu",
            "Yi",
            "Juan",
            "La",
            "Lian",
            "Sao",
            "Tun",
            "Gu",
            "Qi",
            "Cui",
            "Bin",
            "Xun",
            "Ru",
            "Huo",
            "Zang",
            "Xian",
            "Biao",
            "Xing",
            "Kuan",
            "La",
            "Yan",
            "Lu",
            "Huo",
            "Zang",
            "Luo",
            "Qu",
            "Zang",
            "Luan",
            "Ni",
            "Zang",
            "Chen",
            "Qian",
            "Wo",
            "Guang",
            "Zang",
            "Lin",
            "Guang",
            "Zi",
            "Jiao",
            "Nie",
            "Chou",
            "Ji",
            "Gao",
            "Chou",
            "Mian",
            "Nie",
            "Zhi",
            "Zhi",
            "Ge",
            "Jian",
            "Die",
            "Zhi",
            "Xiu",
            "Tai",
            "Zhen",
            "Jiu",
            "Xian",
            "Yu",
            "Cha"
        ],
        [
            "Yao",
            "Yu",
            "Chong",
            "Xi",
            "Xi",
            "Jiu",
            "Yu",
            "Yu",
            "Xing",
            "Ju",
            "Jiu",
            "Xin",
            "She",
            "She",
            "Yadoru",
            "Jiu",
            "Shi",
            "Tan",
            "Shu",
            "Shi",
            "Tian",
            "Dan",
            "Pu",
            "Pu",
            "Guan",
            "Hua",
            "Tan",
            "Chuan",
            "Shun",
            "Xia",
            "Wu",
            "Zhou",
            "Dao",
            "Gang",
            "Shan",
            "Yi",
            ,
            "Pa",
            "Tai",
            "Fan",
            "Ban",
            "Chuan",
            "Hang",
            "Fang",
            "Ban",
            "Que",
            "Hesaki",
            "Zhong",
            "Jian",
            "Cang",
            "Ling",
            "Zhu",
            "Ze",
            "Duo",
            "Bo",
            "Xian",
            "Ge",
            "Chuan",
            "Jia",
            "Lu",
            "Hong",
            "Pang",
            "Xi",
            ,
            "Fu",
            "Zao",
            "Feng",
            "Li",
            "Shao",
            "Yu",
            "Lang",
            "Ting",
            ,
            "Wei",
            "Bo",
            "Meng",
            "Nian",
            "Ju",
            "Huang",
            "Shou",
            "Zong",
            "Bian",
            "Mao",
            "Die",
            ,
            "Bang",
            "Cha",
            "Yi",
            "Sao",
            "Cang",
            "Cao",
            "Lou",
            "Dai",
            "Sori",
            "Yao",
            "Tong",
            "Yofune",
            "Dang",
            "Tan",
            "Lu",
            "Yi",
            "Jie",
            "Jian",
            "Huo",
            "Meng",
            "Qi",
            "Lu",
            "Lu",
            "Chan",
            "Shuang",
            "Gen",
            "Liang",
            "Jian",
            "Jian",
            "Se",
            "Yan",
            "Fu",
            "Ping",
            "Yan",
            "Yan",
            "Cao",
            "Cao",
            "Yi",
            "Le",
            "Ting",
            "Qiu",
            "Ai",
            "Nai",
            "Tiao",
            "Jiao",
            "Jie",
            "Peng",
            "Wan",
            "Yi",
            "Chai",
            "Mian",
            "Mie",
            "Gan",
            "Qian",
            "Yu",
            "Yu",
            "Shuo",
            "Qiong",
            "Tu",
            "Xia",
            "Qi",
            "Mang",
            "Zi",
            "Hui",
            "Sui",
            "Zhi",
            "Xiang",
            "Bi",
            "Fu",
            "Tun",
            "Wei",
            "Wu",
            "Zhi",
            "Qi",
            "Shan",
            "Wen",
            "Qian",
            "Ren",
            "Fou",
            "Kou",
            "Jie",
            "Lu",
            "Xu",
            "Ji",
            "Qin",
            "Qi",
            "Yuan",
            "Fen",
            "Ba",
            "Rui",
            "Xin",
            "Ji",
            "Hua",
            "Hua",
            "Fang",
            "Wu",
            "Jue",
            "Gou",
            "Zhi",
            "Yun",
            "Qin",
            "Ao",
            "Chu",
            "Mao",
            "Ya",
            "Fei",
            "Reng",
            "Hang",
            "Cong",
            "Yin",
            "You",
            "Bian",
            "Yi",
            "Susa",
            "Wei",
            "Li",
            "Pi",
            "E",
            "Xian",
            "Chang",
            "Cang",
            "Meng",
            "Su",
            "Yi",
            "Yuan",
            "Ran",
            "Ling",
            "Tai",
            "Tiao",
            "Di",
            "Miao",
            "Qiong",
            "Li",
            "Yong",
            "Ke",
            "Mu",
            "Pei",
            "Bao",
            "Gou",
            "Min",
            "Yi",
            "Yi",
            "Ju",
            "Pi",
            "Ruo",
            "Ku",
            "Zhu",
            "Ni",
            "Bo",
            "Bing",
            "Shan",
            "Qiu",
            "Yao",
            "Xian",
            "Ben",
            "Hong",
            "Ying",
            "Zha",
            "Dong",
            "Ju",
            "Die",
            "Nie",
            "Gan",
            "Hu",
            "Ping",
            "Mei",
            "Fu",
            "Sheng",
            "Gu",
            "Bi",
            "Wei"
        ],
        [
            "Fu",
            "Zhuo",
            "Mao",
            "Fan",
            "Qie",
            "Mao",
            "Mao",
            "Ba",
            "Zi",
            "Mo",
            "Zi",
            "Di",
            "Chi",
            "Ji",
            "Jing",
            "Long",
            ,
            "Niao",
            ,
            "Xue",
            "Ying",
            "Qiong",
            "Ge",
            "Ming",
            "Li",
            "Rong",
            "Yin",
            "Gen",
            "Qian",
            "Chai",
            "Chen",
            "Yu",
            "Xiu",
            "Zi",
            "Lie",
            "Wu",
            "Ji",
            "Kui",
            "Ce",
            "Chong",
            "Ci",
            "Gou",
            "Guang",
            "Mang",
            "Chi",
            "Jiao",
            "Jiao",
            "Fu",
            "Yu",
            "Zhu",
            "Zi",
            "Jiang",
            "Hui",
            "Yin",
            "Cha",
            "Fa",
            "Rong",
            "Ru",
            "Chong",
            "Mang",
            "Tong",
            "Zhong",
            ,
            "Zhu",
            "Xun",
            "Huan",
            "Kua",
            "Quan",
            "Gai",
            "Da",
            "Jing",
            "Xing",
            "Quan",
            "Cao",
            "Jing",
            "Er",
            "An",
            "Shou",
            "Chi",
            "Ren",
            "Jian",
            "Ti",
            "Huang",
            "Ping",
            "Li",
            "Jin",
            "Lao",
            "Shu",
            "Zhuang",
            "Da",
            "Jia",
            "Rao",
            "Bi",
            "Ze",
            "Qiao",
            "Hui",
            "Qi",
            "Dang",
            ,
            "Rong",
            "Hun",
            "Ying",
            "Luo",
            "Ying",
            "Xun",
            "Jin",
            "Sun",
            "Yin",
            "Mai",
            "Hong",
            "Zhou",
            "Yao",
            "Du",
            "Wei",
            "Chu",
            "Dou",
            "Fu",
            "Ren",
            "Yin",
            "He",
            "Bi",
            "Bu",
            "Yun",
            "Di",
            "Tu",
            "Sui",
            "Sui",
            "Cheng",
            "Chen",
            "Wu",
            "Bie",
            "Xi",
            "Geng",
            "Li",
            "Fu",
            "Zhu",
            "Mo",
            "Li",
            "Zhuang",
            "Ji",
            "Duo",
            "Qiu",
            "Sha",
            "Suo",
            "Chen",
            "Feng",
            "Ju",
            "Mei",
            "Meng",
            "Xing",
            "Jing",
            "Che",
            "Xin",
            "Jun",
            "Yan",
            "Ting",
            "Diao",
            "Cuo",
            "Wan",
            "Han",
            "You",
            "Cuo",
            "Jia",
            "Wang",
            "You",
            "Niu",
            "Shao",
            "Xian",
            "Lang",
            "Fu",
            "E",
            "Mo",
            "Wen",
            "Jie",
            "Nan",
            "Mu",
            "Kan",
            "Lai",
            "Lian",
            "Shi",
            "Wo",
            "Usagi",
            "Lian",
            "Huo",
            "You",
            "Ying",
            "Ying",
            "Nuc",
            "Chun",
            "Mang",
            "Mang",
            "Ci",
            "Wan",
            "Jing",
            "Di",
            "Qu",
            "Dong",
            "Jian",
            "Zou",
            "Gu",
            "La",
            "Lu",
            "Ju",
            "Wei",
            "Jun",
            "Nie",
            "Kun",
            "He",
            "Pu",
            "Zi",
            "Gao",
            "Guo",
            "Fu",
            "Lun",
            "Chang",
            "Chou",
            "Song",
            "Chui",
            "Zhan",
            "Men",
            "Cai",
            "Ba",
            "Li",
            "Tu",
            "Bo",
            "Han",
            "Bao",
            "Qin",
            "Juan",
            "Xi",
            "Qin",
            "Di",
            "Jie",
            "Pu",
            "Dang",
            "Jin",
            "Zhao",
            "Tai",
            "Geng",
            "Hua",
            "Gu",
            "Ling",
            "Fei",
            "Jin",
            "An",
            "Wang",
            "Beng",
            "Zhou",
            "Yan",
            "Ju",
            "Jian",
            "Lin",
            "Tan",
            "Shu",
            "Tian",
            "Dao"
        ],
        [
            "Hu",
            "Qi",
            "He",
            "Cui",
            "Tao",
            "Chun",
            "Bei",
            "Chang",
            "Huan",
            "Fei",
            "Lai",
            "Qi",
            "Meng",
            "Ping",
            "Wei",
            "Dan",
            "Sha",
            "Huan",
            "Yan",
            "Yi",
            "Tiao",
            "Qi",
            "Wan",
            "Ce",
            "Nai",
            "Kutabireru",
            "Tuo",
            "Jiu",
            "Tie",
            "Luo",
            ,
            ,
            "Meng",
            ,
            "Yaji",
            ,
            "Ying",
            "Ying",
            "Ying",
            "Xiao",
            "Sa",
            "Qiu",
            "Ke",
            "Xiang",
            "Wan",
            "Yu",
            "Yu",
            "Fu",
            "Lian",
            "Xuan",
            "Yuan",
            "Nan",
            "Ze",
            "Wo",
            "Chun",
            "Xiao",
            "Yu",
            "Pian",
            "Mao",
            "An",
            "E",
            "Luo",
            "Ying",
            "Huo",
            "Gua",
            "Jiang",
            "Mian",
            "Zuo",
            "Zuo",
            "Ju",
            "Bao",
            "Rou",
            "Xi",
            "Xie",
            "An",
            "Qu",
            "Jian",
            "Fu",
            "Lu",
            "Jing",
            "Pen",
            "Feng",
            "Hong",
            "Hong",
            "Hou",
            "Yan",
            "Tu",
            "Zhu",
            "Zi",
            "Xiang",
            "Shen",
            "Ge",
            "Jie",
            "Jing",
            "Mi",
            "Huang",
            "Shen",
            "Pu",
            "Gai",
            "Dong",
            "Zhou",
            "Qian",
            "Wei",
            "Bo",
            "Wei",
            "Pa",
            "Ji",
            "Hu",
            "Zang",
            "Jia",
            "Duan",
            "Yao",
            "Jun",
            "Cong",
            "Quan",
            "Wei",
            "Xian",
            "Kui",
            "Ting",
            "Hun",
            "Xi",
            "Shi",
            "Qi",
            "Lan",
            "Zong",
            "Yao",
            "Yuan",
            "Mei",
            "Yun",
            "Shu",
            "Di",
            "Zhuan",
            "Guan",
            "Sukumo",
            "Xue",
            "Chan",
            "Kai",
            "Kui",
            ,
            "Jiang",
            "Lou",
            "Wei",
            "Pai",
            ,
            "Sou",
            "Yin",
            "Shi",
            "Chun",
            "Shi",
            "Yun",
            "Zhen",
            "Lang",
            "Nu",
            "Meng",
            "He",
            "Que",
            "Suan",
            "Yuan",
            "Li",
            "Ju",
            "Xi",
            "Pang",
            "Chu",
            "Xu",
            "Tu",
            "Liu",
            "Wo",
            "Zhen",
            "Qian",
            "Zu",
            "Po",
            "Cuo",
            "Yuan",
            "Chu",
            "Yu",
            "Kuai",
            "Pan",
            "Pu",
            "Pu",
            "Na",
            "Shuo",
            "Xi",
            "Fen",
            "Yun",
            "Zheng",
            "Jian",
            "Ji",
            "Ruo",
            "Cang",
            "En",
            "Mi",
            "Hao",
            "Sun",
            "Zhen",
            "Ming",
            "Sou",
            "Xu",
            "Liu",
            "Xi",
            "Gu",
            "Lang",
            "Rong",
            "Weng",
            "Gai",
            "Cuo",
            "Shi",
            "Tang",
            "Luo",
            "Ru",
            "Suo",
            "Xian",
            "Bei",
            "Yao",
            "Gui",
            "Bi",
            "Zong",
            "Gun",
            "Za",
            "Xiu",
            "Ce",
            "Hai",
            "Lan",
            ,
            "Ji",
            "Li",
            "Can",
            "Lang",
            "Yu",
            ,
            "Ying",
            "Mo",
            "Diao",
            "Tiao",
            "Mao",
            "Tong",
            "Zhu",
            "Peng",
            "An",
            "Lian",
            "Cong",
            "Xi",
            "Ping",
            "Qiu",
            "Jin",
            "Chun",
            "Jie",
            "Wei",
            "Tui",
            "Cao",
            "Yu",
            "Yi",
            "Ji",
            "Liao",
            "Bi",
            "Lu",
            "Su"
        ],
        [
            "Bu",
            "Zhang",
            "Luo",
            "Jiang",
            "Man",
            "Yan",
            "Ling",
            "Ji",
            "Piao",
            "Gun",
            "Han",
            "Di",
            "Su",
            "Lu",
            "She",
            "Shang",
            "Di",
            "Mie",
            "Xun",
            "Man",
            "Bo",
            "Di",
            "Cuo",
            "Zhe",
            "Sen",
            "Xuan",
            "Wei",
            "Hu",
            "Ao",
            "Mi",
            "Lou",
            "Cu",
            "Zhong",
            "Cai",
            "Po",
            "Jiang",
            "Mi",
            "Cong",
            "Niao",
            "Hui",
            "Jun",
            "Yin",
            "Jian",
            "Yan",
            "Shu",
            "Yin",
            "Kui",
            "Chen",
            "Hu",
            "Sha",
            "Kou",
            "Qian",
            "Ma",
            "Zang",
            "Sonoko",
            "Qiang",
            "Dou",
            "Lian",
            "Lin",
            "Kou",
            "Ai",
            "Bi",
            "Li",
            "Wei",
            "Ji",
            "Xun",
            "Sheng",
            "Fan",
            "Meng",
            "Ou",
            "Chan",
            "Dian",
            "Xun",
            "Jiao",
            "Rui",
            "Rui",
            "Lei",
            "Yu",
            "Qiao",
            "Chu",
            "Hua",
            "Jian",
            "Mai",
            "Yun",
            "Bao",
            "You",
            "Qu",
            "Lu",
            "Rao",
            "Hui",
            "E",
            "Teng",
            "Fei",
            "Jue",
            "Zui",
            "Fa",
            "Ru",
            "Fen",
            "Kui",
            "Shun",
            "Rui",
            "Ya",
            "Xu",
            "Fu",
            "Jue",
            "Dang",
            "Wu",
            "Tong",
            "Si",
            "Xiao",
            "Xi",
            "Long",
            "Yun",
            ,
            "Qi",
            "Jian",
            "Yun",
            "Sun",
            "Ling",
            "Yu",
            "Xia",
            "Yong",
            "Ji",
            "Hong",
            "Si",
            "Nong",
            "Lei",
            "Xuan",
            "Yun",
            "Yu",
            "Xi",
            "Hao",
            "Bo",
            "Hao",
            "Ai",
            "Wei",
            "Hui",
            "Wei",
            "Ji",
            "Ci",
            "Xiang",
            "Luan",
            "Mie",
            "Yi",
            "Leng",
            "Jiang",
            "Can",
            "Shen",
            "Qiang",
            "Lian",
            "Ke",
            "Yuan",
            "Da",
            "Ti",
            "Tang",
            "Xie",
            "Bi",
            "Zhan",
            "Sun",
            "Lian",
            "Fan",
            "Ding",
            "Jie",
            "Gu",
            "Xie",
            "Shu",
            "Jian",
            "Kao",
            "Hong",
            "Sa",
            "Xin",
            "Xun",
            "Yao",
            "Hie",
            "Sou",
            "Shu",
            "Xun",
            "Dui",
            "Pin",
            "Wei",
            "Neng",
            "Chou",
            "Mai",
            "Ru",
            "Piao",
            "Tai",
            "Qi",
            "Zao",
            "Chen",
            "Zhen",
            "Er",
            "Ni",
            "Ying",
            "Gao",
            "Cong",
            "Xiao",
            "Qi",
            "Fa",
            "Jian",
            "Xu",
            "Kui",
            "Jie",
            "Bian",
            "Diao",
            "Mi",
            "Lan",
            "Jin",
            "Cang",
            "Miao",
            "Qiong",
            "Qie",
            "Xian",
            ,
            "Ou",
            "Xian",
            "Su",
            "Lu",
            "Yi",
            "Xu",
            "Xie",
            "Li",
            "Yi",
            "La",
            "Lei",
            "Xiao",
            "Di",
            "Zhi",
            "Bei",
            "Teng",
            "Yao",
            "Mo",
            "Huan",
            "Piao",
            "Fan",
            "Sou",
            "Tan",
            "Tui",
            "Qiong",
            "Qiao",
            "Wei",
            "Liu",
            "Hui",
            ,
            "Gao",
            "Yun",
            ,
            "Li",
            "Shu",
            "Chu",
            "Ai",
            "Lin",
            "Zao",
            "Xuan",
            "Chen",
            "Lai",
            "Huo"
        ],
        [
            "Tuo",
            "Wu",
            "Rui",
            "Rui",
            "Qi",
            "Heng",
            "Lu",
            "Su",
            "Tui",
            "Mang",
            "Yun",
            "Pin",
            "Yu",
            "Xun",
            "Ji",
            "Jiong",
            "Xian",
            "Mo",
            "Hagi",
            "Su",
            "Jiong",
            ,
            "Nie",
            "Bo",
            "Rang",
            "Yi",
            "Xian",
            "Yu",
            "Ju",
            "Lian",
            "Lian",
            "Yin",
            "Qiang",
            "Ying",
            "Long",
            "Tong",
            "Wei",
            "Yue",
            "Ling",
            "Qu",
            "Yao",
            "Fan",
            "Mi",
            "Lan",
            "Kui",
            "Lan",
            "Ji",
            "Dang",
            "Katsura",
            "Lei",
            "Lei",
            "Hua",
            "Feng",
            "Zhi",
            "Wei",
            "Kui",
            "Zhan",
            "Huai",
            "Li",
            "Ji",
            "Mi",
            "Lei",
            "Huai",
            "Luo",
            "Ji",
            "Kui",
            "Lu",
            "Jian",
            "San",
            ,
            "Lei",
            "Quan",
            "Xiao",
            "Yi",
            "Luan",
            "Men",
            "Bie",
            "Hu",
            "Hu",
            "Lu",
            "Nue",
            "Lu",
            "Si",
            "Xiao",
            "Qian",
            "Chu",
            "Hu",
            "Xu",
            "Cuo",
            "Fu",
            "Xu",
            "Xu",
            "Lu",
            "Hu",
            "Yu",
            "Hao",
            "Jiao",
            "Ju",
            "Guo",
            "Bao",
            "Yan",
            "Zhan",
            "Zhan",
            "Kui",
            "Ban",
            "Xi",
            "Shu",
            "Chong",
            "Qiu",
            "Diao",
            "Ji",
            "Qiu",
            "Cheng",
            "Shi",
            ,
            "Di",
            "Zhe",
            "She",
            "Yu",
            "Gan",
            "Zi",
            "Hong",
            "Hui",
            "Meng",
            "Ge",
            "Sui",
            "Xia",
            "Chai",
            "Shi",
            "Yi",
            "Ma",
            "Xiang",
            "Fang",
            "E",
            "Pa",
            "Chi",
            "Qian",
            "Wen",
            "Wen",
            "Rui",
            "Bang",
            "Bi",
            "Yue",
            "Yue",
            "Jun",
            "Qi",
            "Ran",
            "Yin",
            "Qi",
            "Tian",
            "Yuan",
            "Jue",
            "Hui",
            "Qin",
            "Qi",
            "Zhong",
            "Ya",
            "Ci",
            "Mu",
            "Wang",
            "Fen",
            "Fen",
            "Hang",
            "Gong",
            "Zao",
            "Fu",
            "Ran",
            "Jie",
            "Fu",
            "Chi",
            "Dou",
            "Piao",
            "Xian",
            "Ni",
            "Te",
            "Qiu",
            "You",
            "Zha",
            "Ping",
            "Chi",
            "You",
            "He",
            "Han",
            "Ju",
            "Li",
            "Fu",
            "Ran",
            "Zha",
            "Gou",
            "Pi",
            "Bo",
            "Xian",
            "Zhu",
            "Diao",
            "Bie",
            "Bing",
            "Gu",
            "Ran",
            "Qu",
            "She",
            "Tie",
            "Ling",
            "Gu",
            "Dan",
            "Gu",
            "Ying",
            "Li",
            "Cheng",
            "Qu",
            "Mou",
            "Ge",
            "Ci",
            "Hui",
            "Hui",
            "Mang",
            "Fu",
            "Yang",
            "Wa",
            "Lie",
            "Zhu",
            "Yi",
            "Xian",
            "Kuo",
            "Jiao",
            "Li",
            "Yi",
            "Ping",
            "Ji",
            "Ha",
            "She",
            "Yi",
            "Wang",
            "Mo",
            "Qiong",
            "Qie",
            "Gui",
            "Gong",
            "Zhi",
            "Man",
            "Ebi",
            "Zhi",
            "Jia",
            "Rao",
            "Si",
            "Qi",
            "Xing",
            "Lie",
            "Qiu",
            "Shao",
            "Yong",
            "Jia",
            "Shui",
            "Che",
            "Bai",
            "E",
            "Han"
        ],
        [
            "Shu",
            "Xuan",
            "Feng",
            "Shen",
            "Zhen",
            "Fu",
            "Xian",
            "Zhe",
            "Wu",
            "Fu",
            "Li",
            "Lang",
            "Bi",
            "Chu",
            "Yuan",
            "You",
            "Jie",
            "Dan",
            "Yan",
            "Ting",
            "Dian",
            "Shui",
            "Hui",
            "Gua",
            "Zhi",
            "Song",
            "Fei",
            "Ju",
            "Mi",
            "Qi",
            "Qi",
            "Yu",
            "Jun",
            "Zha",
            "Meng",
            "Qiang",
            "Si",
            "Xi",
            "Lun",
            "Li",
            "Die",
            "Tiao",
            "Tao",
            "Kun",
            "Gan",
            "Han",
            "Yu",
            "Bang",
            "Fei",
            "Pi",
            "Wei",
            "Dun",
            "Yi",
            "Yuan",
            "Su",
            "Quan",
            "Qian",
            "Rui",
            "Ni",
            "Qing",
            "Wei",
            "Liang",
            "Guo",
            "Wan",
            "Dong",
            "E",
            "Ban",
            "Di",
            "Wang",
            "Can",
            "Yang",
            "Ying",
            "Guo",
            "Chan",
            ,
            "La",
            "Ke",
            "Ji",
            "He",
            "Ting",
            "Mai",
            "Xu",
            "Mian",
            "Yu",
            "Jie",
            "Shi",
            "Xuan",
            "Huang",
            "Yan",
            "Bian",
            "Rou",
            "Wei",
            "Fu",
            "Yuan",
            "Mei",
            "Wei",
            "Fu",
            "Ruan",
            "Xie",
            "You",
            "Qiu",
            "Mao",
            "Xia",
            "Ying",
            "Shi",
            "Chong",
            "Tang",
            "Zhu",
            "Zong",
            "Ti",
            "Fu",
            "Yuan",
            "Hui",
            "Meng",
            "La",
            "Du",
            "Hu",
            "Qiu",
            "Die",
            "Li",
            "Gua",
            "Yun",
            "Ju",
            "Nan",
            "Lou",
            "Qun",
            "Rong",
            "Ying",
            "Jiang",
            ,
            "Lang",
            "Pang",
            "Si",
            "Xi",
            "Ci",
            "Xi",
            "Yuan",
            "Weng",
            "Lian",
            "Sou",
            "Ban",
            "Rong",
            "Rong",
            "Ji",
            "Wu",
            "Qiu",
            "Han",
            "Qin",
            "Yi",
            "Bi",
            "Hua",
            "Tang",
            "Yi",
            "Du",
            "Nai",
            "He",
            "Hu",
            "Hui",
            "Ma",
            "Ming",
            "Yi",
            "Wen",
            "Ying",
            "Teng",
            "Yu",
            "Cang",
            "So",
            "Ebi",
            "Man",
            ,
            "Shang",
            "Zhe",
            "Cao",
            "Chi",
            "Di",
            "Ao",
            "Lu",
            "Wei",
            "Zhi",
            "Tang",
            "Chen",
            "Piao",
            "Qu",
            "Pi",
            "Yu",
            "Jian",
            "Luo",
            "Lou",
            "Qin",
            "Zhong",
            "Yin",
            "Jiang",
            "Shuai",
            "Wen",
            "Jiao",
            "Wan",
            "Zhi",
            "Zhe",
            "Ma",
            "Ma",
            "Guo",
            "Liu",
            "Mao",
            "Xi",
            "Cong",
            "Li",
            "Man",
            "Xiao",
            "Kamakiri",
            "Zhang",
            "Mang",
            "Xiang",
            "Mo",
            "Zui",
            "Si",
            "Qiu",
            "Te",
            "Zhi",
            "Peng",
            "Peng",
            "Jiao",
            "Qu",
            "Bie",
            "Liao",
            "Pan",
            "Gui",
            "Xi",
            "Ji",
            "Zhuan",
            "Huang",
            "Fei",
            "Lao",
            "Jue",
            "Jue",
            "Hui",
            "Yin",
            "Chan",
            "Jiao",
            "Shan",
            "Rao",
            "Xiao",
            "Mou",
            "Chong",
            "Xun",
            "Si",
            ,
            "Cheng",
            "Dang",
            "Li",
            "Xie",
            "Shan",
            "Yi",
            "Jing",
            "Da",
            "Chan",
            "Qi"
        ],
        [
            "Ci",
            "Xiang",
            "She",
            "Luo",
            "Qin",
            "Ying",
            "Chai",
            "Li",
            "Ze",
            "Xuan",
            "Lian",
            "Zhu",
            "Ze",
            "Xie",
            "Mang",
            "Xie",
            "Qi",
            "Rong",
            "Jian",
            "Meng",
            "Hao",
            "Ruan",
            "Huo",
            "Zhuo",
            "Jie",
            "Bin",
            "He",
            "Mie",
            "Fan",
            "Lei",
            "Jie",
            "La",
            "Mi",
            "Li",
            "Chun",
            "Li",
            "Qiu",
            "Nie",
            "Lu",
            "Du",
            "Xiao",
            "Zhu",
            "Long",
            "Li",
            "Long",
            "Feng",
            "Ye",
            "Beng",
            "Shang",
            "Gu",
            "Juan",
            "Ying",
            ,
            "Xi",
            "Can",
            "Qu",
            "Quan",
            "Du",
            "Can",
            "Man",
            "Jue",
            "Jie",
            "Zhu",
            "Zha",
            "Xie",
            "Huang",
            "Niu",
            "Pei",
            "Nu",
            "Xin",
            "Zhong",
            "Mo",
            "Er",
            "Ke",
            "Mie",
            "Xi",
            "Xing",
            "Yan",
            "Kan",
            "Yuan",
            ,
            "Ling",
            "Xuan",
            "Shu",
            "Xian",
            "Tong",
            "Long",
            "Jie",
            "Xian",
            "Ya",
            "Hu",
            "Wei",
            "Dao",
            "Chong",
            "Wei",
            "Dao",
            "Zhun",
            "Heng",
            "Qu",
            "Yi",
            "Yi",
            "Bu",
            "Gan",
            "Yu",
            "Biao",
            "Cha",
            "Yi",
            "Shan",
            "Chen",
            "Fu",
            "Gun",
            "Fen",
            "Shuai",
            "Jie",
            "Na",
            "Zhong",
            "Dan",
            "Ri",
            "Zhong",
            "Zhong",
            "Xie",
            "Qi",
            "Xie",
            "Ran",
            "Zhi",
            "Ren",
            "Qin",
            "Jin",
            "Jun",
            "Yuan",
            "Mei",
            "Chai",
            "Ao",
            "Niao",
            "Hui",
            "Ran",
            "Jia",
            "Tuo",
            "Ling",
            "Dai",
            "Bao",
            "Pao",
            "Yao",
            "Zuo",
            "Bi",
            "Shao",
            "Tan",
            "Ju",
            "He",
            "Shu",
            "Xiu",
            "Zhen",
            "Yi",
            "Pa",
            "Bo",
            "Di",
            "Wa",
            "Fu",
            "Gun",
            "Zhi",
            "Zhi",
            "Ran",
            "Pan",
            "Yi",
            "Mao",
            "Tuo",
            "Na",
            "Kou",
            "Xian",
            "Chan",
            "Qu",
            "Bei",
            "Gun",
            "Xi",
            "Ne",
            "Bo",
            "Horo",
            "Fu",
            "Yi",
            "Chi",
            "Ku",
            "Ren",
            "Jiang",
            "Jia",
            "Cun",
            "Mo",
            "Jie",
            "Er",
            "Luo",
            "Ru",
            "Zhu",
            "Gui",
            "Yin",
            "Cai",
            "Lie",
            "Kamishimo",
            "Yuki",
            "Zhuang",
            "Dang",
            ,
            "Kun",
            "Ken",
            "Niao",
            "Shu",
            "Jia",
            "Kun",
            "Cheng",
            "Li",
            "Juan",
            "Shen",
            "Pou",
            "Ge",
            "Yi",
            "Yu",
            "Zhen",
            "Liu",
            "Qiu",
            "Qun",
            "Ji",
            "Yi",
            "Bu",
            "Zhuang",
            "Shui",
            "Sha",
            "Qun",
            "Li",
            "Lian",
            "Lian",
            "Ku",
            "Jian",
            "Fou",
            "Chan",
            "Bi",
            "Gun",
            "Tao",
            "Yuan",
            "Ling",
            "Chi",
            "Chang",
            "Chou",
            "Duo",
            "Biao",
            "Liang",
            "Chang",
            "Pei",
            "Pei",
            "Fei",
            "Yuan",
            "Luo",
            "Guo",
            "Yan",
            "Du",
            "Xi",
            "Zhi",
            "Ju",
            "Qi"
        ],
        [
            "Ji",
            "Zhi",
            "Gua",
            "Ken",
            "Che",
            "Ti",
            "Ti",
            "Fu",
            "Chong",
            "Xie",
            "Bian",
            "Die",
            "Kun",
            "Duan",
            "Xiu",
            "Xiu",
            "He",
            "Yuan",
            "Bao",
            "Bao",
            "Fu",
            "Yu",
            "Tuan",
            "Yan",
            "Hui",
            "Bei",
            "Chu",
            "Lu",
            "Ena",
            "Hitoe",
            "Yun",
            "Da",
            "Gou",
            "Da",
            "Huai",
            "Rong",
            "Yuan",
            "Ru",
            "Nai",
            "Jiong",
            "Suo",
            "Ban",
            "Tun",
            "Chi",
            "Sang",
            "Niao",
            "Ying",
            "Jie",
            "Qian",
            "Huai",
            "Ku",
            "Lian",
            "Bao",
            "Li",
            "Zhe",
            "Shi",
            "Lu",
            "Yi",
            "Die",
            "Xie",
            "Xian",
            "Wei",
            "Biao",
            "Cao",
            "Ji",
            "Jiang",
            "Sen",
            "Bao",
            "Xiang",
            "Chihaya",
            "Pu",
            "Jian",
            "Zhuan",
            "Jian",
            "Zui",
            "Ji",
            "Dan",
            "Za",
            "Fan",
            "Bo",
            "Xiang",
            "Xin",
            "Bie",
            "Rao",
            "Man",
            "Lan",
            "Ao",
            "Duo",
            "Gui",
            "Cao",
            "Sui",
            "Nong",
            "Chan",
            "Lian",
            "Bi",
            "Jin",
            "Dang",
            "Shu",
            "Tan",
            "Bi",
            "Lan",
            "Pu",
            "Ru",
            "Zhi",
            ,
            "Shu",
            "Wa",
            "Shi",
            "Bai",
            "Xie",
            "Bo",
            "Chen",
            "Lai",
            "Long",
            "Xi",
            "Xian",
            "Lan",
            "Zhe",
            "Dai",
            "Tasuki",
            "Zan",
            "Shi",
            "Jian",
            "Pan",
            "Yi",
            "Ran",
            "Ya",
            "Xi",
            "Xi",
            "Yao",
            "Feng",
            "Tan",
            ,
            "Biao",
            "Fu",
            "Ba",
            "He",
            "Ji",
            "Ji",
            "Jian",
            "Guan",
            "Bian",
            "Yan",
            "Gui",
            "Jue",
            "Pian",
            "Mao",
            "Mi",
            "Mi",
            "Mie",
            "Shi",
            "Si",
            "Zhan",
            "Luo",
            "Jue",
            "Mi",
            "Tiao",
            "Lian",
            "Yao",
            "Zhi",
            "Jun",
            "Xi",
            "Shan",
            "Wei",
            "Xi",
            "Tian",
            "Yu",
            "Lan",
            "E",
            "Du",
            "Qin",
            "Pang",
            "Ji",
            "Ming",
            "Ying",
            "Gou",
            "Qu",
            "Zhan",
            "Jin",
            "Guan",
            "Deng",
            "Jian",
            "Luo",
            "Qu",
            "Jian",
            "Wei",
            "Jue",
            "Qu",
            "Luo",
            "Lan",
            "Shen",
            "Di",
            "Guan",
            "Jian",
            "Guan",
            "Yan",
            "Gui",
            "Mi",
            "Shi",
            "Zhan",
            "Lan",
            "Jue",
            "Ji",
            "Xi",
            "Di",
            "Tian",
            "Yu",
            "Gou",
            "Jin",
            "Qu",
            "Jiao",
            "Jiu",
            "Jin",
            "Cu",
            "Jue",
            "Zhi",
            "Chao",
            "Ji",
            "Gu",
            "Dan",
            "Zui",
            "Di",
            "Shang",
            "Hua",
            "Quan",
            "Ge",
            "Chi",
            "Jie",
            "Gui",
            "Gong",
            "Chu",
            "Jie",
            "Hun",
            "Qiu",
            "Xing",
            "Su",
            "Ni",
            "Ji",
            "Lu",
            "Zhi",
            "Zha",
            "Bi",
            "Xing",
            "Hu",
            "Shang",
            "Gong",
            "Zhi",
            "Xue",
            "Chu",
            "Xi",
            "Yi",
            "Lu",
            "Jue",
            "Xi",
            "Yan",
            "Xi"
        ],
        [
            "Yan",
            "Yan",
            "Ding",
            "Fu",
            "Qiu",
            "Qiu",
            "Jiao",
            "Hong",
            "Ji",
            "Fan",
            "Xun",
            "Diao",
            "Hong",
            "Cha",
            "Tao",
            "Xu",
            "Jie",
            "Yi",
            "Ren",
            "Xun",
            "Yin",
            "Shan",
            "Qi",
            "Tuo",
            "Ji",
            "Xun",
            "Yin",
            "E",
            "Fen",
            "Ya",
            "Yao",
            "Song",
            "Shen",
            "Yin",
            "Xin",
            "Jue",
            "Xiao",
            "Ne",
            "Chen",
            "You",
            "Zhi",
            "Xiong",
            "Fang",
            "Xin",
            "Chao",
            "She",
            "Xian",
            "Sha",
            "Tun",
            "Xu",
            "Yi",
            "Yi",
            "Su",
            "Chi",
            "He",
            "Shen",
            "He",
            "Xu",
            "Zhen",
            "Zhu",
            "Zheng",
            "Gou",
            "Zi",
            "Zi",
            "Zhan",
            "Gu",
            "Fu",
            "Quan",
            "Die",
            "Ling",
            "Di",
            "Yang",
            "Li",
            "Nao",
            "Pan",
            "Zhou",
            "Gan",
            "Yi",
            "Ju",
            "Ao",
            "Zha",
            "Tuo",
            "Yi",
            "Qu",
            "Zhao",
            "Ping",
            "Bi",
            "Xiong",
            "Qu",
            "Ba",
            "Da",
            "Zu",
            "Tao",
            "Zhu",
            "Ci",
            "Zhe",
            "Yong",
            "Xu",
            "Xun",
            "Yi",
            "Huang",
            "He",
            "Shi",
            "Cha",
            "Jiao",
            "Shi",
            "Hen",
            "Cha",
            "Gou",
            "Gui",
            "Quan",
            "Hui",
            "Jie",
            "Hua",
            "Gai",
            "Xiang",
            "Wei",
            "Shen",
            "Chou",
            "Tong",
            "Mi",
            "Zhan",
            "Ming",
            "E",
            "Hui",
            "Yan",
            "Xiong",
            "Gua",
            "Er",
            "Beng",
            "Tiao",
            "Chi",
            "Lei",
            "Zhu",
            "Kuang",
            "Kua",
            "Wu",
            "Yu",
            "Teng",
            "Ji",
            "Zhi",
            "Ren",
            "Su",
            "Lang",
            "E",
            "Kuang",
            "E",
            "Shi",
            "Ting",
            "Dan",
            "Bo",
            "Chan",
            "You",
            "Heng",
            "Qiao",
            "Qin",
            "Shua",
            "An",
            "Yu",
            "Xiao",
            "Cheng",
            "Jie",
            "Xian",
            "Wu",
            "Wu",
            "Gao",
            "Song",
            "Pu",
            "Hui",
            "Jing",
            "Shuo",
            "Zhen",
            "Shuo",
            "Du",
            "Yasashi",
            "Chang",
            "Shui",
            "Jie",
            "Ke",
            "Qu",
            "Cong",
            "Xiao",
            "Sui",
            "Wang",
            "Xuan",
            "Fei",
            "Chi",
            "Ta",
            "Yi",
            "Na",
            "Yin",
            "Diao",
            "Pi",
            "Chuo",
            "Chan",
            "Chen",
            "Zhun",
            "Ji",
            "Qi",
            "Tan",
            "Zhui",
            "Wei",
            "Ju",
            "Qing",
            "Jian",
            "Zheng",
            "Ze",
            "Zou",
            "Qian",
            "Zhuo",
            "Liang",
            "Jian",
            "Zhu",
            "Hao",
            "Lun",
            "Shen",
            "Biao",
            "Huai",
            "Pian",
            "Yu",
            "Die",
            "Xu",
            "Pian",
            "Shi",
            "Xuan",
            "Shi",
            "Hun",
            "Hua",
            "E",
            "Zhong",
            "Di",
            "Xie",
            "Fu",
            "Pu",
            "Ting",
            "Jian",
            "Qi",
            "Yu",
            "Zi",
            "Chuan",
            "Xi",
            "Hui",
            "Yin",
            "An",
            "Xian",
            "Nan",
            "Chen",
            "Feng",
            "Zhu",
            "Yang",
            "Yan",
            "Heng",
            "Xuan",
            "Ge",
            "Nuo",
            "Qi"
        ],
        [
            "Mou",
            "Ye",
            "Wei",
            ,
            "Teng",
            "Zou",
            "Shan",
            "Jian",
            "Bo",
            "Ku",
            "Huang",
            "Huo",
            "Ge",
            "Ying",
            "Mi",
            "Xiao",
            "Mi",
            "Xi",
            "Qiang",
            "Chen",
            "Nue",
            "Ti",
            "Su",
            "Bang",
            "Chi",
            "Qian",
            "Shi",
            "Jiang",
            "Yuan",
            "Xie",
            "Xue",
            "Tao",
            "Yao",
            "Yao",
            ,
            "Yu",
            "Biao",
            "Cong",
            "Qing",
            "Li",
            "Mo",
            "Mo",
            "Shang",
            "Zhe",
            "Miu",
            "Jian",
            "Ze",
            "Jie",
            "Lian",
            "Lou",
            "Can",
            "Ou",
            "Guan",
            "Xi",
            "Zhuo",
            "Ao",
            "Ao",
            "Jin",
            "Zhe",
            "Yi",
            "Hu",
            "Jiang",
            "Man",
            "Chao",
            "Han",
            "Hua",
            "Chan",
            "Xu",
            "Zeng",
            "Se",
            "Xi",
            "She",
            "Dui",
            "Zheng",
            "Nao",
            "Lan",
            "E",
            "Ying",
            "Jue",
            "Ji",
            "Zun",
            "Jiao",
            "Bo",
            "Hui",
            "Zhuan",
            "Mu",
            "Zen",
            "Zha",
            "Shi",
            "Qiao",
            "Tan",
            "Zen",
            "Pu",
            "Sheng",
            "Xuan",
            "Zao",
            "Tan",
            "Dang",
            "Sui",
            "Qian",
            "Ji",
            "Jiao",
            "Jing",
            "Lian",
            "Nou",
            "Yi",
            "Ai",
            "Zhan",
            "Pi",
            "Hui",
            "Hua",
            "Yi",
            "Yi",
            "Shan",
            "Rang",
            "Nou",
            "Qian",
            "Zhui",
            "Ta",
            "Hu",
            "Zhou",
            "Hao",
            "Ye",
            "Ying",
            "Jian",
            "Yu",
            "Jian",
            "Hui",
            "Du",
            "Zhe",
            "Xuan",
            "Zan",
            "Lei",
            "Shen",
            "Wei",
            "Chan",
            "Li",
            "Yi",
            "Bian",
            "Zhe",
            "Yan",
            "E",
            "Chou",
            "Wei",
            "Chou",
            "Yao",
            "Chan",
            "Rang",
            "Yin",
            "Lan",
            "Chen",
            "Huo",
            "Zhe",
            "Huan",
            "Zan",
            "Yi",
            "Dang",
            "Zhan",
            "Yan",
            "Du",
            "Yan",
            "Ji",
            "Ding",
            "Fu",
            "Ren",
            "Ji",
            "Jie",
            "Hong",
            "Tao",
            "Rang",
            "Shan",
            "Qi",
            "Tuo",
            "Xun",
            "Yi",
            "Xun",
            "Ji",
            "Ren",
            "Jiang",
            "Hui",
            "Ou",
            "Ju",
            "Ya",
            "Ne",
            "Xu",
            "E",
            "Lun",
            "Xiong",
            "Song",
            "Feng",
            "She",
            "Fang",
            "Jue",
            "Zheng",
            "Gu",
            "He",
            "Ping",
            "Zu",
            "Shi",
            "Xiong",
            "Zha",
            "Su",
            "Zhen",
            "Di",
            "Zou",
            "Ci",
            "Qu",
            "Zhao",
            "Bi",
            "Yi",
            "Yi",
            "Kuang",
            "Lei",
            "Shi",
            "Gua",
            "Shi",
            "Jie",
            "Hui",
            "Cheng",
            "Zhu",
            "Shen",
            "Hua",
            "Dan",
            "Gou",
            "Quan",
            "Gui",
            "Xun",
            "Yi",
            "Zheng",
            "Gai",
            "Xiang",
            "Cha",
            "Hun",
            "Xu",
            "Zhou",
            "Jie",
            "Wu",
            "Yu",
            "Qiao",
            "Wu",
            "Gao",
            "You",
            "Hui",
            "Kuang",
            "Shuo",
            "Song",
            "Ai",
            "Qing",
            "Zhu",
            "Zou",
            "Nuo",
            "Du",
            "Zhuo",
            "Fei",
            "Ke",
            "Wei"
        ],
        [
            "Yu",
            "Shui",
            "Shen",
            "Diao",
            "Chan",
            "Liang",
            "Zhun",
            "Sui",
            "Tan",
            "Shen",
            "Yi",
            "Mou",
            "Chen",
            "Die",
            "Huang",
            "Jian",
            "Xie",
            "Nue",
            "Ye",
            "Wei",
            "E",
            "Yu",
            "Xuan",
            "Chan",
            "Zi",
            "An",
            "Yan",
            "Di",
            "Mi",
            "Pian",
            "Xu",
            "Mo",
            "Dang",
            "Su",
            "Xie",
            "Yao",
            "Bang",
            "Shi",
            "Qian",
            "Mi",
            "Jin",
            "Man",
            "Zhe",
            "Jian",
            "Miu",
            "Tan",
            "Zen",
            "Qiao",
            "Lan",
            "Pu",
            "Jue",
            "Yan",
            "Qian",
            "Zhan",
            "Chen",
            "Gu",
            "Qian",
            "Hong",
            "Xia",
            "Jue",
            "Hong",
            "Han",
            "Hong",
            "Xi",
            "Xi",
            "Huo",
            "Liao",
            "Han",
            "Du",
            "Long",
            "Dou",
            "Jiang",
            "Qi",
            "Shi",
            "Li",
            "Deng",
            "Wan",
            "Bi",
            "Shu",
            "Xian",
            "Feng",
            "Zhi",
            "Zhi",
            "Yan",
            "Yan",
            "Shi",
            "Chu",
            "Hui",
            "Tun",
            "Yi",
            "Tun",
            "Yi",
            "Jian",
            "Ba",
            "Hou",
            "E",
            "Cu",
            "Xiang",
            "Huan",
            "Jian",
            "Ken",
            "Gai",
            "Qu",
            "Fu",
            "Xi",
            "Bin",
            "Hao",
            "Yu",
            "Zhu",
            "Jia",
            ,
            "Xi",
            "Bo",
            "Wen",
            "Huan",
            "Bin",
            "Di",
            "Zong",
            "Fen",
            "Yi",
            "Zhi",
            "Bao",
            "Chai",
            "Han",
            "Pi",
            "Na",
            "Pi",
            "Gou",
            "Na",
            "You",
            "Diao",
            "Mo",
            "Si",
            "Xiu",
            "Huan",
            "Kun",
            "He",
            "He",
            "Mo",
            "Han",
            "Mao",
            "Li",
            "Ni",
            "Bi",
            "Yu",
            "Jia",
            "Tuan",
            "Mao",
            "Pi",
            "Xi",
            "E",
            "Ju",
            "Mo",
            "Chu",
            "Tan",
            "Huan",
            "Jue",
            "Bei",
            "Zhen",
            "Yuan",
            "Fu",
            "Cai",
            "Gong",
            "Te",
            "Yi",
            "Hang",
            "Wan",
            "Pin",
            "Huo",
            "Fan",
            "Tan",
            "Guan",
            "Ze",
            "Zhi",
            "Er",
            "Zhu",
            "Shi",
            "Bi",
            "Zi",
            "Er",
            "Gui",
            "Pian",
            "Bian",
            "Mai",
            "Dai",
            "Sheng",
            "Kuang",
            "Fei",
            "Tie",
            "Yi",
            "Chi",
            "Mao",
            "He",
            "Bi",
            "Lu",
            "Ren",
            "Hui",
            "Gai",
            "Pian",
            "Zi",
            "Jia",
            "Xu",
            "Zei",
            "Jiao",
            "Gai",
            "Zang",
            "Jian",
            "Ying",
            "Xun",
            "Zhen",
            "She",
            "Bin",
            "Bin",
            "Qiu",
            "She",
            "Chuan",
            "Zang",
            "Zhou",
            "Lai",
            "Zan",
            "Si",
            "Chen",
            "Shang",
            "Tian",
            "Pei",
            "Geng",
            "Xian",
            "Mai",
            "Jian",
            "Sui",
            "Fu",
            "Tan",
            "Cong",
            "Cong",
            "Zhi",
            "Ji",
            "Zhang",
            "Du",
            "Jin",
            "Xiong",
            "Shun",
            "Yun",
            "Bao",
            "Zai",
            "Lai",
            "Feng",
            "Cang",
            "Ji",
            "Sheng",
            "Ai",
            "Zhuan",
            "Fu",
            "Gou",
            "Sai",
            "Ze",
            "Liao"
        ],
        [
            "Wei",
            "Bai",
            "Chen",
            "Zhuan",
            "Zhi",
            "Zhui",
            "Biao",
            "Yun",
            "Zeng",
            "Tan",
            "Zan",
            "Yan",
            ,
            "Shan",
            "Wan",
            "Ying",
            "Jin",
            "Gan",
            "Xian",
            "Zang",
            "Bi",
            "Du",
            "Shu",
            "Yan",
            ,
            "Xuan",
            "Long",
            "Gan",
            "Zang",
            "Bei",
            "Zhen",
            "Fu",
            "Yuan",
            "Gong",
            "Cai",
            "Ze",
            "Xian",
            "Bai",
            "Zhang",
            "Huo",
            "Zhi",
            "Fan",
            "Tan",
            "Pin",
            "Bian",
            "Gou",
            "Zhu",
            "Guan",
            "Er",
            "Jian",
            "Bi",
            "Shi",
            "Tie",
            "Gui",
            "Kuang",
            "Dai",
            "Mao",
            "Fei",
            "He",
            "Yi",
            "Zei",
            "Zhi",
            "Jia",
            "Hui",
            "Zi",
            "Ren",
            "Lu",
            "Zang",
            "Zi",
            "Gai",
            "Jin",
            "Qiu",
            "Zhen",
            "Lai",
            "She",
            "Fu",
            "Du",
            "Ji",
            "Shu",
            "Shang",
            "Si",
            "Bi",
            "Zhou",
            "Geng",
            "Pei",
            "Tan",
            "Lai",
            "Feng",
            "Zhui",
            "Fu",
            "Zhuan",
            "Sai",
            "Ze",
            "Yan",
            "Zan",
            "Yun",
            "Zeng",
            "Shan",
            "Ying",
            "Gan",
            "Chi",
            "Xi",
            "She",
            "Nan",
            "Xiong",
            "Xi",
            "Cheng",
            "He",
            "Cheng",
            "Zhe",
            "Xia",
            "Tang",
            "Zou",
            "Zou",
            "Li",
            "Jiu",
            "Fu",
            "Zhao",
            "Gan",
            "Qi",
            "Shan",
            "Qiong",
            "Qin",
            "Xian",
            "Ci",
            "Jue",
            "Qin",
            "Chi",
            "Ci",
            "Chen",
            "Chen",
            "Die",
            "Ju",
            "Chao",
            "Di",
            "Se",
            "Zhan",
            "Zhu",
            "Yue",
            "Qu",
            "Jie",
            "Chi",
            "Chu",
            "Gua",
            "Xue",
            "Ci",
            "Tiao",
            "Duo",
            "Lie",
            "Gan",
            "Suo",
            "Cu",
            "Xi",
            "Zhao",
            "Su",
            "Yin",
            "Ju",
            "Jian",
            "Que",
            "Tang",
            "Chuo",
            "Cui",
            "Lu",
            "Qu",
            "Dang",
            "Qiu",
            "Zi",
            "Ti",
            "Qu",
            "Chi",
            "Huang",
            "Qiao",
            "Qiao",
            "Yao",
            "Zao",
            "Ti",
            ,
            "Zan",
            "Zan",
            "Zu",
            "Pa",
            "Bao",
            "Ku",
            "Ke",
            "Dun",
            "Jue",
            "Fu",
            "Chen",
            "Jian",
            "Fang",
            "Zhi",
            "Sa",
            "Yue",
            "Pa",
            "Qi",
            "Yue",
            "Qiang",
            "Tuo",
            "Tai",
            "Yi",
            "Nian",
            "Ling",
            "Mei",
            "Ba",
            "Die",
            "Ku",
            "Tuo",
            "Jia",
            "Ci",
            "Pao",
            "Qia",
            "Zhu",
            "Ju",
            "Die",
            "Zhi",
            "Fu",
            "Pan",
            "Ju",
            "Shan",
            "Bo",
            "Ni",
            "Ju",
            "Li",
            "Gen",
            "Yi",
            "Ji",
            "Dai",
            "Xian",
            "Jiao",
            "Duo",
            "Zhu",
            "Zhuan",
            "Kua",
            "Zhuai",
            "Gui",
            "Qiong",
            "Kui",
            "Xiang",
            "Chi",
            "Lu",
            "Beng",
            "Zhi",
            "Jia",
            "Tiao",
            "Cai",
            "Jian",
            "Ta",
            "Qiao",
            "Bi",
            "Xian",
            "Duo",
            "Ji",
            "Ju",
            "Ji",
            "Shu",
            "Tu"
        ],
        [
            "Chu",
            "Jing",
            "Nie",
            "Xiao",
            "Bo",
            "Chi",
            "Qun",
            "Mou",
            "Shu",
            "Lang",
            "Yong",
            "Jiao",
            "Chou",
            "Qiao",
            ,
            "Ta",
            "Jian",
            "Qi",
            "Wo",
            "Wei",
            "Zhuo",
            "Jie",
            "Ji",
            "Nie",
            "Ju",
            "Ju",
            "Lun",
            "Lu",
            "Leng",
            "Huai",
            "Ju",
            "Chi",
            "Wan",
            "Quan",
            "Ti",
            "Bo",
            "Zu",
            "Qie",
            "Ji",
            "Cu",
            "Zong",
            "Cai",
            "Zong",
            "Peng",
            "Zhi",
            "Zheng",
            "Dian",
            "Zhi",
            "Yu",
            "Duo",
            "Dun",
            "Chun",
            "Yong",
            "Zhong",
            "Di",
            "Zhe",
            "Chen",
            "Chuai",
            "Jian",
            "Gua",
            "Tang",
            "Ju",
            "Fu",
            "Zu",
            "Die",
            "Pian",
            "Rou",
            "Nuo",
            "Ti",
            "Cha",
            "Tui",
            "Jian",
            "Dao",
            "Cuo",
            "Xi",
            "Ta",
            "Qiang",
            "Zhan",
            "Dian",
            "Ti",
            "Ji",
            "Nie",
            "Man",
            "Liu",
            "Zhan",
            "Bi",
            "Chong",
            "Lu",
            "Liao",
            "Cu",
            "Tang",
            "Dai",
            "Suo",
            "Xi",
            "Kui",
            "Ji",
            "Zhi",
            "Qiang",
            "Di",
            "Man",
            "Zong",
            "Lian",
            "Beng",
            "Zao",
            "Nian",
            "Bie",
            "Tui",
            "Ju",
            "Deng",
            "Ceng",
            "Xian",
            "Fan",
            "Chu",
            "Zhong",
            "Dun",
            "Bo",
            "Cu",
            "Zu",
            "Jue",
            "Jue",
            "Lin",
            "Ta",
            "Qiao",
            "Qiao",
            "Pu",
            "Liao",
            "Dun",
            "Cuan",
            "Kuang",
            "Zao",
            "Ta",
            "Bi",
            "Bi",
            "Zhu",
            "Ju",
            "Chu",
            "Qiao",
            "Dun",
            "Chou",
            "Ji",
            "Wu",
            "Yue",
            "Nian",
            "Lin",
            "Lie",
            "Zhi",
            "Li",
            "Zhi",
            "Chan",
            "Chu",
            "Duan",
            "Wei",
            "Long",
            "Lin",
            "Xian",
            "Wei",
            "Zuan",
            "Lan",
            "Xie",
            "Rang",
            "Xie",
            "Nie",
            "Ta",
            "Qu",
            "Jie",
            "Cuan",
            "Zuan",
            "Xi",
            "Kui",
            "Jue",
            "Lin",
            "Shen",
            "Gong",
            "Dan",
            "Segare",
            "Qu",
            "Ti",
            "Duo",
            "Duo",
            "Gong",
            "Lang",
            "Nerau",
            "Luo",
            "Ai",
            "Ji",
            "Ju",
            "Tang",
            "Utsuke",
            ,
            "Yan",
            "Shitsuke",
            "Kang",
            "Qu",
            "Lou",
            "Lao",
            "Tuo",
            "Zhi",
            "Yagate",
            "Ti",
            "Dao",
            "Yagate",
            "Yu",
            "Che",
            "Ya",
            "Gui",
            "Jun",
            "Wei",
            "Yue",
            "Xin",
            "Di",
            "Xuan",
            "Fan",
            "Ren",
            "Shan",
            "Qiang",
            "Shu",
            "Tun",
            "Chen",
            "Dai",
            "E",
            "Na",
            "Qi",
            "Mao",
            "Ruan",
            "Ren",
            "Fan",
            "Zhuan",
            "Hong",
            "Hu",
            "Qu",
            "Huang",
            "Di",
            "Ling",
            "Dai",
            "Ao",
            "Zhen",
            "Fan",
            "Kuang",
            "Ang",
            "Peng",
            "Bei",
            "Gu",
            "Ku",
            "Pao",
            "Zhu",
            "Rong",
            "E",
            "Ba",
            "Zhou",
            "Zhi",
            "Yao",
            "Ke",
            "Yi",
            "Qing",
            "Shi",
            "Ping"
        ],
        [
            "Er",
            "Qiong",
            "Ju",
            "Jiao",
            "Guang",
            "Lu",
            "Kai",
            "Quan",
            "Zhou",
            "Zai",
            "Zhi",
            "She",
            "Liang",
            "Yu",
            "Shao",
            "You",
            "Huan",
            "Yun",
            "Zhe",
            "Wan",
            "Fu",
            "Qing",
            "Zhou",
            "Ni",
            "Ling",
            "Zhe",
            "Zhan",
            "Liang",
            "Zi",
            "Hui",
            "Wang",
            "Chuo",
            "Guo",
            "Kan",
            "Yi",
            "Peng",
            "Qian",
            "Gun",
            "Nian",
            "Pian",
            "Guan",
            "Bei",
            "Lun",
            "Pai",
            "Liang",
            "Ruan",
            "Rou",
            "Ji",
            "Yang",
            "Xian",
            "Chuan",
            "Cou",
            "Qun",
            "Ge",
            "You",
            "Hong",
            "Shu",
            "Fu",
            "Zi",
            "Fu",
            "Wen",
            "Ben",
            "Zhan",
            "Yu",
            "Wen",
            "Tao",
            "Gu",
            "Zhen",
            "Xia",
            "Yuan",
            "Lu",
            "Jiu",
            "Chao",
            "Zhuan",
            "Wei",
            "Hun",
            "Sori",
            "Che",
            "Jiao",
            "Zhan",
            "Pu",
            "Lao",
            "Fen",
            "Fan",
            "Lin",
            "Ge",
            "Se",
            "Kan",
            "Huan",
            "Yi",
            "Ji",
            "Dui",
            "Er",
            "Yu",
            "Xian",
            "Hong",
            "Lei",
            "Pei",
            "Li",
            "Li",
            "Lu",
            "Lin",
            "Che",
            "Ya",
            "Gui",
            "Xuan",
            "Di",
            "Ren",
            "Zhuan",
            "E",
            "Lun",
            "Ruan",
            "Hong",
            "Ku",
            "Ke",
            "Lu",
            "Zhou",
            "Zhi",
            "Yi",
            "Hu",
            "Zhen",
            "Li",
            "Yao",
            "Qing",
            "Shi",
            "Zai",
            "Zhi",
            "Jiao",
            "Zhou",
            "Quan",
            "Lu",
            "Jiao",
            "Zhe",
            "Fu",
            "Liang",
            "Nian",
            "Bei",
            "Hui",
            "Gun",
            "Wang",
            "Liang",
            "Chuo",
            "Zi",
            "Cou",
            "Fu",
            "Ji",
            "Wen",
            "Shu",
            "Pei",
            "Yuan",
            "Xia",
            "Zhan",
            "Lu",
            "Che",
            "Lin",
            "Xin",
            "Gu",
            "Ci",
            "Ci",
            "Pi",
            "Zui",
            "Bian",
            "La",
            "La",
            "Ci",
            "Xue",
            "Ban",
            "Bian",
            "Bian",
            "Bian",
            ,
            "Bian",
            "Ban",
            "Ci",
            "Bian",
            "Bian",
            "Chen",
            "Ru",
            "Nong",
            "Nong",
            "Zhen",
            "Chuo",
            "Chuo",
            "Suberu",
            "Reng",
            "Bian",
            "Bian",
            "Sip",
            "Ip",
            "Liao",
            "Da",
            "Chan",
            "Gan",
            "Qian",
            "Yu",
            "Yu",
            "Qi",
            "Xun",
            "Yi",
            "Guo",
            "Mai",
            "Qi",
            "Za",
            "Wang",
            "Jia",
            "Zhun",
            "Ying",
            "Ti",
            "Yun",
            "Jin",
            "Hang",
            "Ya",
            "Fan",
            "Wu",
            "Da",
            "E",
            "Huan",
            "Zhe",
            "Totemo",
            "Jin",
            "Yuan",
            "Wei",
            "Lian",
            "Chi",
            "Che",
            "Ni",
            "Tiao",
            "Zhi",
            "Yi",
            "Jiong",
            "Jia",
            "Chen",
            "Dai",
            "Er",
            "Di",
            "Po",
            "Wang",
            "Die",
            "Ze",
            "Tao",
            "Shu",
            "Tuo",
            "Kep",
            "Jing",
            "Hui",
            "Tong",
            "You",
            "Mi",
            "Beng",
            "Ji",
            "Nai",
            "Yi",
            "Jie",
            "Zhui",
            "Lie",
            "Xun"
        ],
        [
            "Tui",
            "Song",
            "Gua",
            "Tao",
            "Pang",
            "Hou",
            "Ni",
            "Dun",
            "Jiong",
            "Xuan",
            "Xun",
            "Bu",
            "You",
            "Xiao",
            "Qiu",
            "Tou",
            "Zhu",
            "Qiu",
            "Di",
            "Di",
            "Tu",
            "Jing",
            "Ti",
            "Dou",
            "Yi",
            "Zhe",
            "Tong",
            "Guang",
            "Wu",
            "Shi",
            "Cheng",
            "Su",
            "Zao",
            "Qun",
            "Feng",
            "Lian",
            "Suo",
            "Hui",
            "Li",
            "Sako",
            "Lai",
            "Ben",
            "Cuo",
            "Jue",
            "Beng",
            "Huan",
            "Dai",
            "Lu",
            "You",
            "Zhou",
            "Jin",
            "Yu",
            "Chuo",
            "Kui",
            "Wei",
            "Ti",
            "Yi",
            "Da",
            "Yuan",
            "Luo",
            "Bi",
            "Nuo",
            "Yu",
            "Dang",
            "Sui",
            "Dun",
            "Sui",
            "Yan",
            "Chuan",
            "Chi",
            "Ti",
            "Yu",
            "Shi",
            "Zhen",
            "You",
            "Yun",
            "E",
            "Bian",
            "Guo",
            "E",
            "Xia",
            "Huang",
            "Qiu",
            "Dao",
            "Da",
            "Wei",
            "Appare",
            "Yi",
            "Gou",
            "Yao",
            "Chu",
            "Liu",
            "Xun",
            "Ta",
            "Di",
            "Chi",
            "Yuan",
            "Su",
            "Ta",
            "Qian",
            ,
            "Yao",
            "Guan",
            "Zhang",
            "Ao",
            "Shi",
            "Ce",
            "Chi",
            "Su",
            "Zao",
            "Zhe",
            "Dun",
            "Di",
            "Lou",
            "Chi",
            "Cuo",
            "Lin",
            "Zun",
            "Rao",
            "Qian",
            "Xuan",
            "Yu",
            "Yi",
            "Wu",
            "Liao",
            "Ju",
            "Shi",
            "Bi",
            "Yao",
            "Mai",
            "Xie",
            "Sui",
            "Huan",
            "Zhan",
            "Teng",
            "Er",
            "Miao",
            "Bian",
            "Bian",
            "La",
            "Li",
            "Yuan",
            "Yao",
            "Luo",
            "Li",
            "Yi",
            "Ting",
            "Deng",
            "Qi",
            "Yong",
            "Shan",
            "Han",
            "Yu",
            "Mang",
            "Ru",
            "Qiong",
            ,
            "Kuang",
            "Fu",
            "Kang",
            "Bin",
            "Fang",
            "Xing",
            "Na",
            "Xin",
            "Shen",
            "Bang",
            "Yuan",
            "Cun",
            "Huo",
            "Xie",
            "Bang",
            "Wu",
            "Ju",
            "You",
            "Han",
            "Tai",
            "Qiu",
            "Bi",
            "Pei",
            "Bing",
            "Shao",
            "Bei",
            "Wa",
            "Di",
            "Zou",
            "Ye",
            "Lin",
            "Kuang",
            "Gui",
            "Zhu",
            "Shi",
            "Ku",
            "Yu",
            "Gai",
            "Ge",
            "Xi",
            "Zhi",
            "Ji",
            "Xun",
            "Hou",
            "Xing",
            "Jiao",
            "Xi",
            "Gui",
            "Nuo",
            "Lang",
            "Jia",
            "Kuai",
            "Zheng",
            "Otoko",
            "Yun",
            "Yan",
            "Cheng",
            "Dou",
            "Chi",
            "Lu",
            "Fu",
            "Wu",
            "Fu",
            "Gao",
            "Hao",
            "Lang",
            "Jia",
            "Geng",
            "Jun",
            "Ying",
            "Bo",
            "Xi",
            "Bei",
            "Li",
            "Yun",
            "Bu",
            "Xiao",
            "Qi",
            "Pi",
            "Qing",
            "Guo",
            "Zhou",
            "Tan",
            "Zou",
            "Ping",
            "Lai",
            "Ni",
            "Chen",
            "You",
            "Bu",
            "Xiang",
            "Dan",
            "Ju",
            "Yong",
            "Qiao",
            "Yi",
            "Du",
            "Yan",
            "Mei"
        ],
        [
            "Ruo",
            "Bei",
            "E",
            "Yu",
            "Juan",
            "Yu",
            "Yun",
            "Hou",
            "Kui",
            "Xiang",
            "Xiang",
            "Sou",
            "Tang",
            "Ming",
            "Xi",
            "Ru",
            "Chu",
            "Zi",
            "Zou",
            "Ju",
            "Wu",
            "Xiang",
            "Yun",
            "Hao",
            "Yong",
            "Bi",
            "Mo",
            "Chao",
            "Fu",
            "Liao",
            "Yin",
            "Zhuan",
            "Hu",
            "Qiao",
            "Yan",
            "Zhang",
            "Fan",
            "Qiao",
            "Xu",
            "Deng",
            "Bi",
            "Xin",
            "Bi",
            "Ceng",
            "Wei",
            "Zheng",
            "Mao",
            "Shan",
            "Lin",
            "Po",
            "Dan",
            "Meng",
            "Ye",
            "Cao",
            "Kuai",
            "Feng",
            "Meng",
            "Zou",
            "Kuang",
            "Lian",
            "Zan",
            "Chan",
            "You",
            "Qi",
            "Yan",
            "Chan",
            "Zan",
            "Ling",
            "Huan",
            "Xi",
            "Feng",
            "Zan",
            "Li",
            "You",
            "Ding",
            "Qiu",
            "Zhuo",
            "Pei",
            "Zhou",
            "Yi",
            "Hang",
            "Yu",
            "Jiu",
            "Yan",
            "Zui",
            "Mao",
            "Dan",
            "Xu",
            "Tou",
            "Zhen",
            "Fen",
            "Sakenomoto",
            ,
            "Yun",
            "Tai",
            "Tian",
            "Qia",
            "Tuo",
            "Zuo",
            "Han",
            "Gu",
            "Su",
            "Po",
            "Chou",
            "Zai",
            "Ming",
            "Luo",
            "Chuo",
            "Chou",
            "You",
            "Tong",
            "Zhi",
            "Xian",
            "Jiang",
            "Cheng",
            "Yin",
            "Tu",
            "Xiao",
            "Mei",
            "Ku",
            "Suan",
            "Lei",
            "Pu",
            "Zui",
            "Hai",
            "Yan",
            "Xi",
            "Niang",
            "Wei",
            "Lu",
            "Lan",
            "Yan",
            "Tao",
            "Pei",
            "Zhan",
            "Chun",
            "Tan",
            "Zui",
            "Chuo",
            "Cu",
            "Kun",
            "Ti",
            "Mian",
            "Du",
            "Hu",
            "Xu",
            "Xing",
            "Tan",
            "Jiu",
            "Chun",
            "Yun",
            "Po",
            "Ke",
            "Sou",
            "Mi",
            "Quan",
            "Chou",
            "Cuo",
            "Yun",
            "Yong",
            "Ang",
            "Zha",
            "Hai",
            "Tang",
            "Jiang",
            "Piao",
            "Shan",
            "Yu",
            "Li",
            "Zao",
            "Lao",
            "Yi",
            "Jiang",
            "Pu",
            "Jiao",
            "Xi",
            "Tan",
            "Po",
            "Nong",
            "Yi",
            "Li",
            "Ju",
            "Jiao",
            "Yi",
            "Niang",
            "Ru",
            "Xun",
            "Chou",
            "Yan",
            "Ling",
            "Mi",
            "Mi",
            "Niang",
            "Xin",
            "Jiao",
            "Xi",
            "Mi",
            "Yan",
            "Bian",
            "Cai",
            "Shi",
            "You",
            "Shi",
            "Shi",
            "Li",
            "Chong",
            "Ye",
            "Liang",
            "Li",
            "Jin",
            "Jin",
            "Qiu",
            "Yi",
            "Diao",
            "Dao",
            "Zhao",
            "Ding",
            "Po",
            "Qiu",
            "He",
            "Fu",
            "Zhen",
            "Zhi",
            "Ba",
            "Luan",
            "Fu",
            "Nai",
            "Diao",
            "Shan",
            "Qiao",
            "Kou",
            "Chuan",
            "Zi",
            "Fan",
            "Yu",
            "Hua",
            "Han",
            "Gong",
            "Qi",
            "Mang",
            "Ri",
            "Di",
            "Si",
            "Xi",
            "Yi",
            "Chai",
            "Shi",
            "Tu",
            "Xi",
            "Nu",
            "Qian",
            "Ishiyumi",
            "Jian",
            "Pi",
            "Ye",
            "Yin"
        ],
        [
            "Ba",
            "Fang",
            "Chen",
            "Xing",
            "Tou",
            "Yue",
            "Yan",
            "Fu",
            "Pi",
            "Na",
            "Xin",
            "E",
            "Jue",
            "Dun",
            "Gou",
            "Yin",
            "Qian",
            "Ban",
            "Ji",
            "Ren",
            "Chao",
            "Niu",
            "Fen",
            "Yun",
            "Ji",
            "Qin",
            "Pi",
            "Guo",
            "Hong",
            "Yin",
            "Jun",
            "Shi",
            "Yi",
            "Zhong",
            "Nie",
            "Gai",
            "Ri",
            "Huo",
            "Tai",
            "Kang",
            "Habaki",
            "Irori",
            "Ngaak",
            ,
            "Duo",
            "Zi",
            "Ni",
            "Tu",
            "Shi",
            "Min",
            "Gu",
            "E",
            "Ling",
            "Bing",
            "Yi",
            "Gu",
            "Ba",
            "Pi",
            "Yu",
            "Si",
            "Zuo",
            "Bu",
            "You",
            "Dian",
            "Jia",
            "Zhen",
            "Shi",
            "Shi",
            "Tie",
            "Ju",
            "Zhan",
            "Shi",
            "She",
            "Xuan",
            "Zhao",
            "Bao",
            "He",
            "Bi",
            "Sheng",
            "Chu",
            "Shi",
            "Bo",
            "Zhu",
            "Chi",
            "Za",
            "Po",
            "Tong",
            "Qian",
            "Fu",
            "Zhai",
            "Liu",
            "Qian",
            "Fu",
            "Li",
            "Yue",
            "Pi",
            "Yang",
            "Ban",
            "Bo",
            "Jie",
            "Gou",
            "Shu",
            "Zheng",
            "Mu",
            "Ni",
            "Nie",
            "Di",
            "Jia",
            "Mu",
            "Dan",
            "Shen",
            "Yi",
            "Si",
            "Kuang",
            "Ka",
            "Bei",
            "Jian",
            "Tong",
            "Xing",
            "Hong",
            "Jiao",
            "Chi",
            "Er",
            "Ge",
            "Bing",
            "Shi",
            "Mou",
            "Jia",
            "Yin",
            "Jun",
            "Zhou",
            "Chong",
            "Shang",
            "Tong",
            "Mo",
            "Lei",
            "Ji",
            "Yu",
            "Xu",
            "Ren",
            "Zun",
            "Zhi",
            "Qiong",
            "Shan",
            "Chi",
            "Xian",
            "Xing",
            "Quan",
            "Pi",
            "Tie",
            "Zhu",
            "Hou",
            "Ming",
            "Kua",
            "Yao",
            "Xian",
            "Xian",
            "Xiu",
            "Jun",
            "Cha",
            "Lao",
            "Ji",
            "Pi",
            "Ru",
            "Mi",
            "Yi",
            "Yin",
            "Guang",
            "An",
            "Diou",
            "You",
            "Se",
            "Kao",
            "Qian",
            "Luan",
            "Kasugai",
            "Ai",
            "Diao",
            "Han",
            "Rui",
            "Shi",
            "Keng",
            "Qiu",
            "Xiao",
            "Zhe",
            "Xiu",
            "Zang",
            "Ti",
            "Cuo",
            "Gua",
            "Gong",
            "Zhong",
            "Dou",
            "Lu",
            "Mei",
            "Lang",
            "Wan",
            "Xin",
            "Yun",
            "Bei",
            "Wu",
            "Su",
            "Yu",
            "Chan",
            "Ting",
            "Bo",
            "Han",
            "Jia",
            "Hong",
            "Cuan",
            "Feng",
            "Chan",
            "Wan",
            "Zhi",
            "Si",
            "Xuan",
            "Wu",
            "Wu",
            "Tiao",
            "Gong",
            "Zhuo",
            "Lue",
            "Xing",
            "Qian",
            "Shen",
            "Han",
            "Lue",
            "Xie",
            "Chu",
            "Zheng",
            "Ju",
            "Xian",
            "Tie",
            "Mang",
            "Pu",
            "Li",
            "Pan",
            "Rui",
            "Cheng",
            "Gao",
            "Li",
            "Te",
            "Pyeng",
            "Zhu",
            ,
            "Tu",
            "Liu",
            "Zui",
            "Ju",
            "Chang",
            "Yuan",
            "Jian",
            "Gang",
            "Diao",
            "Tao",
            "Chang"
        ],
        [
            "Lun",
            "Kua",
            "Ling",
            "Bei",
            "Lu",
            "Li",
            "Qiang",
            "Pou",
            "Juan",
            "Min",
            "Zui",
            "Peng",
            "An",
            "Pi",
            "Xian",
            "Ya",
            "Zhui",
            "Lei",
            "A",
            "Kong",
            "Ta",
            "Kun",
            "Du",
            "Wei",
            "Chui",
            "Zi",
            "Zheng",
            "Ben",
            "Nie",
            "Cong",
            "Qun",
            "Tan",
            "Ding",
            "Qi",
            "Qian",
            "Zhuo",
            "Qi",
            "Yu",
            "Jin",
            "Guan",
            "Mao",
            "Chang",
            "Tian",
            "Xi",
            "Lian",
            "Tao",
            "Gu",
            "Cuo",
            "Shu",
            "Zhen",
            "Lu",
            "Meng",
            "Lu",
            "Hua",
            "Biao",
            "Ga",
            "Lai",
            "Ken",
            "Kazari",
            "Bu",
            "Nai",
            "Wan",
            "Zan",
            ,
            "De",
            "Xian",
            ,
            "Huo",
            "Liang",
            ,
            "Men",
            "Kai",
            "Ying",
            "Di",
            "Lian",
            "Guo",
            "Xian",
            "Du",
            "Tu",
            "Wei",
            "Cong",
            "Fu",
            "Rou",
            "Ji",
            "E",
            "Rou",
            "Chen",
            "Ti",
            "Zha",
            "Hong",
            "Yang",
            "Duan",
            "Xia",
            "Yu",
            "Keng",
            "Xing",
            "Huang",
            "Wei",
            "Fu",
            "Zhao",
            "Cha",
            "Qie",
            "She",
            "Hong",
            "Kui",
            "Tian",
            "Mou",
            "Qiao",
            "Qiao",
            "Hou",
            "Tou",
            "Cong",
            "Huan",
            "Ye",
            "Min",
            "Jian",
            "Duan",
            "Jian",
            "Song",
            "Kui",
            "Hu",
            "Xuan",
            "Duo",
            "Jie",
            "Zhen",
            "Bian",
            "Zhong",
            "Zi",
            "Xiu",
            "Ye",
            "Mei",
            "Pai",
            "Ai",
            "Jie",
            ,
            "Mei",
            "Chuo",
            "Ta",
            "Bang",
            "Xia",
            "Lian",
            "Suo",
            "Xi",
            "Liu",
            "Zu",
            "Ye",
            "Nou",
            "Weng",
            "Rong",
            "Tang",
            "Suo",
            "Qiang",
            "Ge",
            "Shuo",
            "Chui",
            "Bo",
            "Pan",
            "Sa",
            "Bi",
            "Sang",
            "Gang",
            "Zi",
            "Wu",
            "Ying",
            "Huang",
            "Tiao",
            "Liu",
            "Kai",
            "Sun",
            "Sha",
            "Sou",
            "Wan",
            "Hao",
            "Zhen",
            "Zhen",
            "Luo",
            "Yi",
            "Yuan",
            "Tang",
            "Nie",
            "Xi",
            "Jia",
            "Ge",
            "Ma",
            "Juan",
            "Kasugai",
            "Habaki",
            "Suo",
            ,
            ,
            ,
            "Na",
            "Lu",
            "Suo",
            "Ou",
            "Zu",
            "Tuan",
            "Xiu",
            "Guan",
            "Xuan",
            "Lian",
            "Shou",
            "Ao",
            "Man",
            "Mo",
            "Luo",
            "Bi",
            "Wei",
            "Liu",
            "Di",
            "Qiao",
            "Cong",
            "Yi",
            "Lu",
            "Ao",
            "Keng",
            "Qiang",
            "Cui",
            "Qi",
            "Chang",
            "Tang",
            "Man",
            "Yong",
            "Chan",
            "Feng",
            "Jing",
            "Biao",
            "Shu",
            "Lou",
            "Xiu",
            "Cong",
            "Long",
            "Zan",
            "Jian",
            "Cao",
            "Li",
            "Xia",
            "Xi",
            "Kang",
            ,
            "Beng",
            ,
            ,
            "Zheng",
            "Lu",
            "Hua",
            "Ji",
            "Pu",
            "Hui",
            "Qiang",
            "Po",
            "Lin",
            "Suo",
            "Xiu",
            "San",
            "Cheng"
        ],
        [
            "Kui",
            "Si",
            "Liu",
            "Nao",
            "Heng",
            "Pie",
            "Sui",
            "Fan",
            "Qiao",
            "Quan",
            "Yang",
            "Tang",
            "Xiang",
            "Jue",
            "Jiao",
            "Zun",
            "Liao",
            "Jie",
            "Lao",
            "Dui",
            "Tan",
            "Zan",
            "Ji",
            "Jian",
            "Zhong",
            "Deng",
            "Ya",
            "Ying",
            "Dui",
            "Jue",
            "Nou",
            "Ti",
            "Pu",
            "Tie",
            ,
            ,
            "Ding",
            "Shan",
            "Kai",
            "Jian",
            "Fei",
            "Sui",
            "Lu",
            "Juan",
            "Hui",
            "Yu",
            "Lian",
            "Zhuo",
            "Qiao",
            "Qian",
            "Zhuo",
            "Lei",
            "Bi",
            "Tie",
            "Huan",
            "Ye",
            "Duo",
            "Guo",
            "Dang",
            "Ju",
            "Fen",
            "Da",
            "Bei",
            "Yi",
            "Ai",
            "Zong",
            "Xun",
            "Diao",
            "Zhu",
            "Heng",
            "Zhui",
            "Ji",
            "Nie",
            "Ta",
            "Huo",
            "Qing",
            "Bin",
            "Ying",
            "Kui",
            "Ning",
            "Xu",
            "Jian",
            "Jian",
            "Yari",
            "Cha",
            "Zhi",
            "Mie",
            "Li",
            "Lei",
            "Ji",
            "Zuan",
            "Kuang",
            "Shang",
            "Peng",
            "La",
            "Du",
            "Shuo",
            "Chuo",
            "Lu",
            "Biao",
            "Bao",
            "Lu",
            ,
            ,
            "Long",
            "E",
            "Lu",
            "Xin",
            "Jian",
            "Lan",
            "Bo",
            "Jian",
            "Yao",
            "Chan",
            "Xiang",
            "Jian",
            "Xi",
            "Guan",
            "Cang",
            "Nie",
            "Lei",
            "Cuan",
            "Qu",
            "Pan",
            "Luo",
            "Zuan",
            "Luan",
            "Zao",
            "Nie",
            "Jue",
            "Tang",
            "Shu",
            "Lan",
            "Jin",
            "Qiu",
            "Yi",
            "Zhen",
            "Ding",
            "Zhao",
            "Po",
            "Diao",
            "Tu",
            "Qian",
            "Chuan",
            "Shan",
            "Ji",
            "Fan",
            "Diao",
            "Men",
            "Nu",
            "Xi",
            "Chai",
            "Xing",
            "Gai",
            "Bu",
            "Tai",
            "Ju",
            "Dun",
            "Chao",
            "Zhong",
            "Na",
            "Bei",
            "Gang",
            "Ban",
            "Qian",
            "Yao",
            "Qin",
            "Jun",
            "Wu",
            "Gou",
            "Kang",
            "Fang",
            "Huo",
            "Tou",
            "Niu",
            "Ba",
            "Yu",
            "Qian",
            "Zheng",
            "Qian",
            "Gu",
            "Bo",
            "E",
            "Po",
            "Bu",
            "Ba",
            "Yue",
            "Zuan",
            "Mu",
            "Dan",
            "Jia",
            "Dian",
            "You",
            "Tie",
            "Bo",
            "Ling",
            "Shuo",
            "Qian",
            "Liu",
            "Bao",
            "Shi",
            "Xuan",
            "She",
            "Bi",
            "Ni",
            "Pi",
            "Duo",
            "Xing",
            "Kao",
            "Lao",
            "Er",
            "Mang",
            "Ya",
            "You",
            "Cheng",
            "Jia",
            "Ye",
            "Nao",
            "Zhi",
            "Dang",
            "Tong",
            "Lu",
            "Diao",
            "Yin",
            "Kai",
            "Zha",
            "Zhu",
            "Xian",
            "Ting",
            "Diu",
            "Xian",
            "Hua",
            "Quan",
            "Sha",
            "Jia",
            "Yao",
            "Ge",
            "Ming",
            "Zheng",
            "Se",
            "Jiao",
            "Yi",
            "Chan",
            "Chong",
            "Tang",
            "An",
            "Yin",
            "Ru",
            "Zhu",
            "Lao",
            "Pu",
            "Wu",
            "Lai",
            "Te",
            "Lian",
            "Keng"
        ],
        [
            "Xiao",
            "Suo",
            "Li",
            "Zheng",
            "Chu",
            "Guo",
            "Gao",
            "Tie",
            "Xiu",
            "Cuo",
            "Lue",
            "Feng",
            "Xin",
            "Liu",
            "Kai",
            "Jian",
            "Rui",
            "Ti",
            "Lang",
            "Qian",
            "Ju",
            "A",
            "Qiang",
            "Duo",
            "Tian",
            "Cuo",
            "Mao",
            "Ben",
            "Qi",
            "De",
            "Kua",
            "Kun",
            "Chang",
            "Xi",
            "Gu",
            "Luo",
            "Chui",
            "Zhui",
            "Jin",
            "Zhi",
            "Xian",
            "Juan",
            "Huo",
            "Pou",
            "Tan",
            "Ding",
            "Jian",
            "Ju",
            "Meng",
            "Zi",
            "Qie",
            "Ying",
            "Kai",
            "Qiang",
            "Song",
            "E",
            "Cha",
            "Qiao",
            "Zhong",
            "Duan",
            "Sou",
            "Huang",
            "Huan",
            "Ai",
            "Du",
            "Mei",
            "Lou",
            "Zi",
            "Fei",
            "Mei",
            "Mo",
            "Zhen",
            "Bo",
            "Ge",
            "Nie",
            "Tang",
            "Juan",
            "Nie",
            "Na",
            "Liu",
            "Hao",
            "Bang",
            "Yi",
            "Jia",
            "Bin",
            "Rong",
            "Biao",
            "Tang",
            "Man",
            "Luo",
            "Beng",
            "Yong",
            "Jing",
            "Di",
            "Zu",
            "Xuan",
            "Liu",
            "Tan",
            "Jue",
            "Liao",
            "Pu",
            "Lu",
            "Dui",
            "Lan",
            "Pu",
            "Cuan",
            "Qiang",
            "Deng",
            "Huo",
            "Lei",
            "Huan",
            "Zhuo",
            "Lian",
            "Yi",
            "Cha",
            "Biao",
            "La",
            "Chan",
            "Xiang",
            "Chang",
            "Chang",
            "Jiu",
            "Ao",
            "Die",
            "Qu",
            "Liao",
            "Mi",
            "Chang",
            "Men",
            "Ma",
            "Shuan",
            "Shan",
            "Huo",
            "Men",
            "Yan",
            "Bi",
            "Han",
            "Bi",
            "San",
            "Kai",
            "Kang",
            "Beng",
            "Hong",
            "Run",
            "San",
            "Xian",
            "Xian",
            "Jian",
            "Min",
            "Xia",
            "Yuru",
            "Dou",
            "Zha",
            "Nao",
            "Jian",
            "Peng",
            "Xia",
            "Ling",
            "Bian",
            "Bi",
            "Run",
            "He",
            "Guan",
            "Ge",
            "Ge",
            "Fa",
            "Chu",
            "Hong",
            "Gui",
            "Min",
            "Se",
            "Kun",
            "Lang",
            "Lu",
            "Ting",
            "Sha",
            "Ju",
            "Yue",
            "Yue",
            "Chan",
            "Qu",
            "Lin",
            "Chang",
            "Shai",
            "Kun",
            "Yan",
            "Min",
            "Yan",
            "E",
            "Hun",
            "Yu",
            "Wen",
            "Xiang",
            "Bao",
            "Xiang",
            "Qu",
            "Yao",
            "Wen",
            "Ban",
            "An",
            "Wei",
            "Yin",
            "Kuo",
            "Que",
            "Lan",
            "Du",
            ,
            "Phwung",
            "Tian",
            "Nie",
            "Ta",
            "Kai",
            "He",
            "Que",
            "Chuang",
            "Guan",
            "Dou",
            "Qi",
            "Kui",
            "Tang",
            "Guan",
            "Piao",
            "Kan",
            "Xi",
            "Hui",
            "Chan",
            "Pi",
            "Dang",
            "Huan",
            "Ta",
            "Wen",
            ,
            "Men",
            "Shuan",
            "Shan",
            "Yan",
            "Han",
            "Bi",
            "Wen",
            "Chuang",
            "Run",
            "Wei",
            "Xian",
            "Hong",
            "Jian",
            "Min",
            "Kang",
            "Men",
            "Zha",
            "Nao",
            "Gui",
            "Wen",
            "Ta",
            "Min",
            "Lu",
            "Kai"
        ],
        [
            "Fa",
            "Ge",
            "He",
            "Kun",
            "Jiu",
            "Yue",
            "Lang",
            "Du",
            "Yu",
            "Yan",
            "Chang",
            "Xi",
            "Wen",
            "Hun",
            "Yan",
            "E",
            "Chan",
            "Lan",
            "Qu",
            "Hui",
            "Kuo",
            "Que",
            "Ge",
            "Tian",
            "Ta",
            "Que",
            "Kan",
            "Huan",
            "Fu",
            "Fu",
            "Le",
            "Dui",
            "Xin",
            "Qian",
            "Wu",
            "Yi",
            "Tuo",
            "Yin",
            "Yang",
            "Dou",
            "E",
            "Sheng",
            "Ban",
            "Pei",
            "Keng",
            "Yun",
            "Ruan",
            "Zhi",
            "Pi",
            "Jing",
            "Fang",
            "Yang",
            "Yin",
            "Zhen",
            "Jie",
            "Cheng",
            "E",
            "Qu",
            "Di",
            "Zu",
            "Zuo",
            "Dian",
            "Ling",
            "A",
            "Tuo",
            "Tuo",
            "Po",
            "Bing",
            "Fu",
            "Ji",
            "Lu",
            "Long",
            "Chen",
            "Xing",
            "Duo",
            "Lou",
            "Mo",
            "Jiang",
            "Shu",
            "Duo",
            "Xian",
            "Er",
            "Gui",
            "Yu",
            "Gai",
            "Shan",
            "Xun",
            "Qiao",
            "Xing",
            "Chun",
            "Fu",
            "Bi",
            "Xia",
            "Shan",
            "Sheng",
            "Zhi",
            "Pu",
            "Dou",
            "Yuan",
            "Zhen",
            "Chu",
            "Xian",
            "Tou",
            "Nie",
            "Yun",
            "Xian",
            "Pei",
            "Pei",
            "Zou",
            "Yi",
            "Dui",
            "Lun",
            "Yin",
            "Ju",
            "Chui",
            "Chen",
            "Pi",
            "Ling",
            "Tao",
            "Xian",
            "Lu",
            "Sheng",
            "Xian",
            "Yin",
            "Zhu",
            "Yang",
            "Reng",
            "Shan",
            "Chong",
            "Yan",
            "Yin",
            "Yu",
            "Ti",
            "Yu",
            "Long",
            "Wei",
            "Wei",
            "Nie",
            "Dui",
            "Sui",
            "An",
            "Huang",
            "Jie",
            "Sui",
            "Yin",
            "Gai",
            "Yan",
            "Hui",
            "Ge",
            "Yun",
            "Wu",
            "Wei",
            "Ai",
            "Xi",
            "Tang",
            "Ji",
            "Zhang",
            "Dao",
            "Ao",
            "Xi",
            "Yin",
            ,
            "Rao",
            "Lin",
            "Tui",
            "Deng",
            "Pi",
            "Sui",
            "Sui",
            "Yu",
            "Xian",
            "Fen",
            "Ni",
            "Er",
            "Ji",
            "Dao",
            "Xi",
            "Yin",
            "E",
            "Hui",
            "Long",
            "Xi",
            "Li",
            "Li",
            "Li",
            "Zhui",
            "He",
            "Zhi",
            "Zhun",
            "Jun",
            "Nan",
            "Yi",
            "Que",
            "Yan",
            "Qian",
            "Ya",
            "Xiong",
            "Ya",
            "Ji",
            "Gu",
            "Huan",
            "Zhi",
            "Gou",
            "Jun",
            "Ci",
            "Yong",
            "Ju",
            "Chu",
            "Hu",
            "Za",
            "Luo",
            "Yu",
            "Chou",
            "Diao",
            "Sui",
            "Han",
            "Huo",
            "Shuang",
            "Guan",
            "Chu",
            "Za",
            "Yong",
            "Ji",
            "Xi",
            "Chou",
            "Liu",
            "Li",
            "Nan",
            "Xue",
            "Za",
            "Ji",
            "Ji",
            "Yu",
            "Yu",
            "Xue",
            "Na",
            "Fou",
            "Se",
            "Mu",
            "Wen",
            "Fen",
            "Pang",
            "Yun",
            "Li",
            "Li",
            "Ang",
            "Ling",
            "Lei",
            "An",
            "Bao",
            "Meng",
            "Dian",
            "Dang",
            "Xing",
            "Wu",
            "Zhao"
        ],
        [
            "Xu",
            "Ji",
            "Mu",
            "Chen",
            "Xiao",
            "Zha",
            "Ting",
            "Zhen",
            "Pei",
            "Mei",
            "Ling",
            "Qi",
            "Chou",
            "Huo",
            "Sha",
            "Fei",
            "Weng",
            "Zhan",
            "Yin",
            "Ni",
            "Chou",
            "Tun",
            "Lin",
            ,
            "Dong",
            "Ying",
            "Wu",
            "Ling",
            "Shuang",
            "Ling",
            "Xia",
            "Hong",
            "Yin",
            "Mo",
            "Mai",
            "Yun",
            "Liu",
            "Meng",
            "Bin",
            "Wu",
            "Wei",
            "Huo",
            "Yin",
            "Xi",
            "Yi",
            "Ai",
            "Dan",
            "Deng",
            "Xian",
            "Yu",
            "Lu",
            "Long",
            "Dai",
            "Ji",
            "Pang",
            "Yang",
            "Ba",
            "Pi",
            "Wei",
            ,
            "Xi",
            "Ji",
            "Mai",
            "Meng",
            "Meng",
            "Lei",
            "Li",
            "Huo",
            "Ai",
            "Fei",
            "Dai",
            "Long",
            "Ling",
            "Ai",
            "Feng",
            "Li",
            "Bao",
            ,
            "He",
            "He",
            "Bing",
            "Qing",
            "Qing",
            "Jing",
            "Tian",
            "Zhen",
            "Jing",
            "Cheng",
            "Qing",
            "Jing",
            "Jing",
            "Dian",
            "Jing",
            "Tian",
            "Fei",
            "Fei",
            "Kao",
            "Mi",
            "Mian",
            "Mian",
            "Pao",
            "Ye",
            "Tian",
            "Hui",
            "Ye",
            "Ge",
            "Ding",
            "Cha",
            "Jian",
            "Ren",
            "Di",
            "Du",
            "Wu",
            "Ren",
            "Qin",
            "Jin",
            "Xue",
            "Niu",
            "Ba",
            "Yin",
            "Sa",
            "Na",
            "Mo",
            "Zu",
            "Da",
            "Ban",
            "Yi",
            "Yao",
            "Tao",
            "Tuo",
            "Jia",
            "Hong",
            "Pao",
            "Yang",
            "Tomo",
            "Yin",
            "Jia",
            "Tao",
            "Ji",
            "Xie",
            "An",
            "An",
            "Hen",
            "Gong",
            "Kohaze",
            "Da",
            "Qiao",
            "Ting",
            "Wan",
            "Ying",
            "Sui",
            "Tiao",
            "Qiao",
            "Xuan",
            "Kong",
            "Beng",
            "Ta",
            "Zhang",
            "Bing",
            "Kuo",
            "Ju",
            "La",
            "Xie",
            "Rou",
            "Bang",
            "Yi",
            "Qiu",
            "Qiu",
            "He",
            "Xiao",
            "Mu",
            "Ju",
            "Jian",
            "Bian",
            "Di",
            "Jian",
            "On",
            "Tao",
            "Gou",
            "Ta",
            "Bei",
            "Xie",
            "Pan",
            "Ge",
            "Bi",
            "Kuo",
            "Tang",
            "Lou",
            "Gui",
            "Qiao",
            "Xue",
            "Ji",
            "Jian",
            "Jiang",
            "Chan",
            "Da",
            "Huo",
            "Xian",
            "Qian",
            "Du",
            "Wa",
            "Jian",
            "Lan",
            "Wei",
            "Ren",
            "Fu",
            "Mei",
            "Juan",
            "Ge",
            "Wei",
            "Qiao",
            "Han",
            "Chang",
            ,
            "Rou",
            "Xun",
            "She",
            "Wei",
            "Ge",
            "Bei",
            "Tao",
            "Gou",
            "Yun",
            ,
            "Bi",
            "Wei",
            "Hui",
            "Du",
            "Wa",
            "Du",
            "Wei",
            "Ren",
            "Fu",
            "Han",
            "Wei",
            "Yun",
            "Tao",
            "Jiu",
            "Jiu",
            "Xian",
            "Xie",
            "Xian",
            "Ji",
            "Yin",
            "Za",
            "Yun",
            "Shao",
            "Le",
            "Peng",
            "Heng",
            "Ying",
            "Yun",
            "Peng",
            "Yin",
            "Yin",
            "Xiang"
        ],
        [
            "Hu",
            "Ye",
            "Ding",
            "Qing",
            "Pan",
            "Xiang",
            "Shun",
            "Han",
            "Xu",
            "Yi",
            "Xu",
            "Gu",
            "Song",
            "Kui",
            "Qi",
            "Hang",
            "Yu",
            "Wan",
            "Ban",
            "Dun",
            "Di",
            "Dan",
            "Pan",
            "Po",
            "Ling",
            "Ce",
            "Jing",
            "Lei",
            "He",
            "Qiao",
            "E",
            "E",
            "Wei",
            "Jie",
            "Gua",
            "Shen",
            "Yi",
            "Shen",
            "Hai",
            "Dui",
            "Pian",
            "Ping",
            "Lei",
            "Fu",
            "Jia",
            "Tou",
            "Hui",
            "Kui",
            "Jia",
            "Le",
            "Tian",
            "Cheng",
            "Ying",
            "Jun",
            "Hu",
            "Han",
            "Jing",
            "Tui",
            "Tui",
            "Pin",
            "Lai",
            "Tui",
            "Zi",
            "Zi",
            "Chui",
            "Ding",
            "Lai",
            "Yan",
            "Han",
            "Jian",
            "Ke",
            "Cui",
            "Jiong",
            "Qin",
            "Yi",
            "Sai",
            "Ti",
            "E",
            "E",
            "Yan",
            "Hun",
            "Kan",
            "Yong",
            "Zhuan",
            "Yan",
            "Xian",
            "Xin",
            "Yi",
            "Yuan",
            "Sang",
            "Dian",
            "Dian",
            "Jiang",
            "Ku",
            "Lei",
            "Liao",
            "Piao",
            "Yi",
            "Man",
            "Qi",
            "Rao",
            "Hao",
            "Qiao",
            "Gu",
            "Xun",
            "Qian",
            "Hui",
            "Zhan",
            "Ru",
            "Hong",
            "Bin",
            "Xian",
            "Pin",
            "Lu",
            "Lan",
            "Nie",
            "Quan",
            "Ye",
            "Ding",
            "Qing",
            "Han",
            "Xiang",
            "Shun",
            "Xu",
            "Xu",
            "Wan",
            "Gu",
            "Dun",
            "Qi",
            "Ban",
            "Song",
            "Hang",
            "Yu",
            "Lu",
            "Ling",
            "Po",
            "Jing",
            "Jie",
            "Jia",
            "Tian",
            "Han",
            "Ying",
            "Jiong",
            "Hai",
            "Yi",
            "Pin",
            "Hui",
            "Tui",
            "Han",
            "Ying",
            "Ying",
            "Ke",
            "Ti",
            "Yong",
            "E",
            "Zhuan",
            "Yan",
            "E",
            "Nie",
            "Man",
            "Dian",
            "Sang",
            "Hao",
            "Lei",
            "Zhan",
            "Ru",
            "Pin",
            "Quan",
            "Feng",
            "Biao",
            "Oroshi",
            "Fu",
            "Xia",
            "Zhan",
            "Biao",
            "Sa",
            "Ba",
            "Tai",
            "Lie",
            "Gua",
            "Xuan",
            "Shao",
            "Ju",
            "Bi",
            "Si",
            "Wei",
            "Yang",
            "Yao",
            "Sou",
            "Kai",
            "Sao",
            "Fan",
            "Liu",
            "Xi",
            "Liao",
            "Piao",
            "Piao",
            "Liu",
            "Biao",
            "Biao",
            "Biao",
            "Liao",
            ,
            "Se",
            "Feng",
            "Biao",
            "Feng",
            "Yang",
            "Zhan",
            "Biao",
            "Sa",
            "Ju",
            "Si",
            "Sou",
            "Yao",
            "Liu",
            "Piao",
            "Biao",
            "Biao",
            "Fei",
            "Fan",
            "Fei",
            "Fei",
            "Shi",
            "Shi",
            "Can",
            "Ji",
            "Ding",
            "Si",
            "Tuo",
            "Zhan",
            "Sun",
            "Xiang",
            "Tun",
            "Ren",
            "Yu",
            "Juan",
            "Chi",
            "Yin",
            "Fan",
            "Fan",
            "Sun",
            "Yin",
            "Zhu",
            "Yi",
            "Zhai",
            "Bi",
            "Jie",
            "Tao",
            "Liu",
            "Ci",
            "Tie",
            "Si",
            "Bao",
            "Shi",
            "Duo"
        ],
        [
            "Hai",
            "Ren",
            "Tian",
            "Jiao",
            "Jia",
            "Bing",
            "Yao",
            "Tong",
            "Ci",
            "Xiang",
            "Yang",
            "Yang",
            "Er",
            "Yan",
            "Le",
            "Yi",
            "Can",
            "Bo",
            "Nei",
            "E",
            "Bu",
            "Jun",
            "Dou",
            "Su",
            "Yu",
            "Shi",
            "Yao",
            "Hun",
            "Guo",
            "Shi",
            "Jian",
            "Zhui",
            "Bing",
            "Xian",
            "Bu",
            "Ye",
            "Tan",
            "Fei",
            "Zhang",
            "Wei",
            "Guan",
            "E",
            "Nuan",
            "Hun",
            "Hu",
            "Huang",
            "Tie",
            "Hui",
            "Jian",
            "Hou",
            "He",
            "Xing",
            "Fen",
            "Wei",
            "Gu",
            "Cha",
            "Song",
            "Tang",
            "Bo",
            "Gao",
            "Xi",
            "Kui",
            "Liu",
            "Sou",
            "Tao",
            "Ye",
            "Yun",
            "Mo",
            "Tang",
            "Man",
            "Bi",
            "Yu",
            "Xiu",
            "Jin",
            "San",
            "Kui",
            "Zhuan",
            "Shan",
            "Chi",
            "Dan",
            "Yi",
            "Ji",
            "Rao",
            "Cheng",
            "Yong",
            "Tao",
            "Hui",
            "Xiang",
            "Zhan",
            "Fen",
            "Hai",
            "Meng",
            "Yan",
            "Mo",
            "Chan",
            "Xiang",
            "Luo",
            "Zuan",
            "Nang",
            "Shi",
            "Ding",
            "Ji",
            "Tuo",
            "Xing",
            "Tun",
            "Xi",
            "Ren",
            "Yu",
            "Chi",
            "Fan",
            "Yin",
            "Jian",
            "Shi",
            "Bao",
            "Si",
            "Duo",
            "Yi",
            "Er",
            "Rao",
            "Xiang",
            "Jia",
            "Le",
            "Jiao",
            "Yi",
            "Bing",
            "Bo",
            "Dou",
            "E",
            "Yu",
            "Nei",
            "Jun",
            "Guo",
            "Hun",
            "Xian",
            "Guan",
            "Cha",
            "Kui",
            "Gu",
            "Sou",
            "Chan",
            "Ye",
            "Mo",
            "Bo",
            "Liu",
            "Xiu",
            "Jin",
            "Man",
            "San",
            "Zhuan",
            "Nang",
            "Shou",
            "Kui",
            "Guo",
            "Xiang",
            "Fen",
            "Ba",
            "Ni",
            "Bi",
            "Bo",
            "Tu",
            "Han",
            "Fei",
            "Jian",
            "An",
            "Ai",
            "Fu",
            "Xian",
            "Wen",
            "Xin",
            "Fen",
            "Bin",
            "Xing",
            "Ma",
            "Yu",
            "Feng",
            "Han",
            "Di",
            "Tuo",
            "Tuo",
            "Chi",
            "Xun",
            "Zhu",
            "Zhi",
            "Pei",
            "Xin",
            "Ri",
            "Sa",
            "Yin",
            "Wen",
            "Zhi",
            "Dan",
            "Lu",
            "You",
            "Bo",
            "Bao",
            "Kuai",
            "Tuo",
            "Yi",
            "Qu",
            ,
            "Qu",
            "Jiong",
            "Bo",
            "Zhao",
            "Yuan",
            "Peng",
            "Zhou",
            "Ju",
            "Zhu",
            "Nu",
            "Ju",
            "Pi",
            "Zang",
            "Jia",
            "Ling",
            "Zhen",
            "Tai",
            "Fu",
            "Yang",
            "Shi",
            "Bi",
            "Tuo",
            "Tuo",
            "Si",
            "Liu",
            "Ma",
            "Pian",
            "Tao",
            "Zhi",
            "Rong",
            "Teng",
            "Dong",
            "Xun",
            "Quan",
            "Shen",
            "Jiong",
            "Er",
            "Hai",
            "Bo",
            "Zhu",
            "Yin",
            "Luo",
            "Shuu",
            "Dan",
            "Xie",
            "Liu",
            "Ju",
            "Song",
            "Qin",
            "Mang",
            "Liang",
            "Han",
            "Tu",
            "Xuan",
            "Tui",
            "Jun"
        ],
        [
            "E",
            "Cheng",
            "Xin",
            "Ai",
            "Lu",
            "Zhui",
            "Zhou",
            "She",
            "Pian",
            "Kun",
            "Tao",
            "Lai",
            "Zong",
            "Ke",
            "Qi",
            "Qi",
            "Yan",
            "Fei",
            "Sao",
            "Yan",
            "Jie",
            "Yao",
            "Wu",
            "Pian",
            "Cong",
            "Pian",
            "Qian",
            "Fei",
            "Huang",
            "Jian",
            "Huo",
            "Yu",
            "Ti",
            "Quan",
            "Xia",
            "Zong",
            "Kui",
            "Rou",
            "Si",
            "Gua",
            "Tuo",
            "Kui",
            "Sou",
            "Qian",
            "Cheng",
            "Zhi",
            "Liu",
            "Pang",
            "Teng",
            "Xi",
            "Cao",
            "Du",
            "Yan",
            "Yuan",
            "Zou",
            "Sao",
            "Shan",
            "Li",
            "Zhi",
            "Shuang",
            "Lu",
            "Xi",
            "Luo",
            "Zhang",
            "Mo",
            "Ao",
            "Can",
            "Piao",
            "Cong",
            "Qu",
            "Bi",
            "Zhi",
            "Yu",
            "Xu",
            "Hua",
            "Bo",
            "Su",
            "Xiao",
            "Lin",
            "Chan",
            "Dun",
            "Liu",
            "Tuo",
            "Zeng",
            "Tan",
            "Jiao",
            "Tie",
            "Yan",
            "Luo",
            "Zhan",
            "Jing",
            "Yi",
            "Ye",
            "Tuo",
            "Bin",
            "Zou",
            "Yan",
            "Peng",
            "Lu",
            "Teng",
            "Xiang",
            "Ji",
            "Shuang",
            "Ju",
            "Xi",
            "Huan",
            "Li",
            "Biao",
            "Ma",
            "Yu",
            "Tuo",
            "Xun",
            "Chi",
            "Qu",
            "Ri",
            "Bo",
            "Lu",
            "Zang",
            "Shi",
            "Si",
            "Fu",
            "Ju",
            "Zou",
            "Zhu",
            "Tuo",
            "Nu",
            "Jia",
            "Yi",
            "Tai",
            "Xiao",
            "Ma",
            "Yin",
            "Jiao",
            "Hua",
            "Luo",
            "Hai",
            "Pian",
            "Biao",
            "Li",
            "Cheng",
            "Yan",
            "Xin",
            "Qin",
            "Jun",
            "Qi",
            "Qi",
            "Ke",
            "Zhui",
            "Zong",
            "Su",
            "Can",
            "Pian",
            "Zhi",
            "Kui",
            "Sao",
            "Wu",
            "Ao",
            "Liu",
            "Qian",
            "Shan",
            "Piao",
            "Luo",
            "Cong",
            "Chan",
            "Zou",
            "Ji",
            "Shuang",
            "Xiang",
            "Gu",
            "Wei",
            "Wei",
            "Wei",
            "Yu",
            "Gan",
            "Yi",
            "Ang",
            "Tou",
            "Xie",
            "Bao",
            "Bi",
            "Chi",
            "Ti",
            "Di",
            "Ku",
            "Hai",
            "Qiao",
            "Gou",
            "Kua",
            "Ge",
            "Tui",
            "Geng",
            "Pian",
            "Bi",
            "Ke",
            "Ka",
            "Yu",
            "Sui",
            "Lou",
            "Bo",
            "Xiao",
            "Pang",
            "Bo",
            "Ci",
            "Kuan",
            "Bin",
            "Mo",
            "Liao",
            "Lou",
            "Nao",
            "Du",
            "Zang",
            "Sui",
            "Ti",
            "Bin",
            "Kuan",
            "Lu",
            "Gao",
            "Gao",
            "Qiao",
            "Kao",
            "Qiao",
            "Lao",
            "Zao",
            "Biao",
            "Kun",
            "Kun",
            "Ti",
            "Fang",
            "Xiu",
            "Ran",
            "Mao",
            "Dan",
            "Kun",
            "Bin",
            "Fa",
            "Tiao",
            "Peng",
            "Zi",
            "Fa",
            "Ran",
            "Ti",
            "Pao",
            "Pi",
            "Mao",
            "Fu",
            "Er",
            "Rong",
            "Qu",
            "Gong",
            "Xiu",
            "Gua",
            "Ji",
            "Peng",
            "Zhua",
            "Shao",
            "Sha"
        ],
        [
            "Ti",
            "Li",
            "Bin",
            "Zong",
            "Ti",
            "Peng",
            "Song",
            "Zheng",
            "Quan",
            "Zong",
            "Shun",
            "Jian",
            "Duo",
            "Hu",
            "La",
            "Jiu",
            "Qi",
            "Lian",
            "Zhen",
            "Bin",
            "Peng",
            "Mo",
            "San",
            "Man",
            "Man",
            "Seng",
            "Xu",
            "Lie",
            "Qian",
            "Qian",
            "Nong",
            "Huan",
            "Kuai",
            "Ning",
            "Bin",
            "Lie",
            "Rang",
            "Dou",
            "Dou",
            "Nao",
            "Hong",
            "Xi",
            "Dou",
            "Han",
            "Dou",
            "Dou",
            "Jiu",
            "Chang",
            "Yu",
            "Yu",
            "Li",
            "Juan",
            "Fu",
            "Qian",
            "Gui",
            "Zong",
            "Liu",
            "Gui",
            "Shang",
            "Yu",
            "Gui",
            "Mei",
            "Ji",
            "Qi",
            "Jie",
            "Kui",
            "Hun",
            "Ba",
            "Po",
            "Mei",
            "Xu",
            "Yan",
            "Xiao",
            "Liang",
            "Yu",
            "Tui",
            "Qi",
            "Wang",
            "Liang",
            "Wei",
            "Jian",
            "Chi",
            "Piao",
            "Bi",
            "Mo",
            "Ji",
            "Xu",
            "Chou",
            "Yan",
            "Zhan",
            "Yu",
            "Dao",
            "Ren",
            "Ji",
            "Eri",
            "Gong",
            "Tuo",
            "Diao",
            "Ji",
            "Xu",
            "E",
            "E",
            "Sha",
            "Hang",
            "Tun",
            "Mo",
            "Jie",
            "Shen",
            "Fan",
            "Yuan",
            "Bi",
            "Lu",
            "Wen",
            "Hu",
            "Lu",
            "Za",
            "Fang",
            "Fen",
            "Na",
            "You",
            "Namazu",
            "Todo",
            "He",
            "Xia",
            "Qu",
            "Han",
            "Pi",
            "Ling",
            "Tuo",
            "Bo",
            "Qiu",
            "Ping",
            "Fu",
            "Bi",
            "Ji",
            "Wei",
            "Ju",
            "Diao",
            "Bo",
            "You",
            "Gun",
            "Pi",
            "Nian",
            "Xing",
            "Tai",
            "Bao",
            "Fu",
            "Zha",
            "Ju",
            "Gu",
            "Kajika",
            "Tong",
            ,
            "Ta",
            "Jie",
            "Shu",
            "Hou",
            "Xiang",
            "Er",
            "An",
            "Wei",
            "Tiao",
            "Zhu",
            "Yin",
            "Lie",
            "Luo",
            "Tong",
            "Yi",
            "Qi",
            "Bing",
            "Wei",
            "Jiao",
            "Bu",
            "Gui",
            "Xian",
            "Ge",
            "Hui",
            "Bora",
            "Mate",
            "Kao",
            "Gori",
            "Duo",
            "Jun",
            "Ti",
            "Man",
            "Xiao",
            "Za",
            "Sha",
            "Qin",
            "Yu",
            "Nei",
            "Zhe",
            "Gun",
            "Geng",
            "Su",
            "Wu",
            "Qiu",
            "Ting",
            "Fu",
            "Wan",
            "You",
            "Li",
            "Sha",
            "Sha",
            "Gao",
            "Meng",
            "Ugui",
            "Asari",
            "Subashiri",
            "Kazunoko",
            "Yong",
            "Ni",
            "Zi",
            "Qi",
            "Qing",
            "Xiang",
            "Nei",
            "Chun",
            "Ji",
            "Diao",
            "Qie",
            "Gu",
            "Zhou",
            "Dong",
            "Lai",
            "Fei",
            "Ni",
            "Yi",
            "Kun",
            "Lu",
            "Jiu",
            "Chang",
            "Jing",
            "Lun",
            "Ling",
            "Zou",
            "Li",
            "Meng",
            "Zong",
            "Zhi",
            "Nian",
            "Shachi",
            "Dojou",
            "Sukesou",
            "Shi",
            "Shen",
            "Hun",
            "Shi",
            "Hou",
            "Xing",
            "Zhu",
            "La",
            "Zong",
            "Ji",
            "Bian",
            "Bian"
        ],
        [
            "Huan",
            "Quan",
            "Ze",
            "Wei",
            "Wei",
            "Yu",
            "Qun",
            "Rou",
            "Die",
            "Huang",
            "Lian",
            "Yan",
            "Qiu",
            "Qiu",
            "Jian",
            "Bi",
            "E",
            "Yang",
            "Fu",
            "Sai",
            "Jian",
            "Xia",
            "Tuo",
            "Hu",
            "Muroaji",
            "Ruo",
            "Haraka",
            "Wen",
            "Jian",
            "Hao",
            "Wu",
            "Fang",
            "Sao",
            "Liu",
            "Ma",
            "Shi",
            "Shi",
            "Yin",
            "Z",
            "Teng",
            "Ta",
            "Yao",
            "Ge",
            "Rong",
            "Qian",
            "Qi",
            "Wen",
            "Ruo",
            "Hatahata",
            "Lian",
            "Ao",
            "Le",
            "Hui",
            "Min",
            "Ji",
            "Tiao",
            "Qu",
            "Jian",
            "Sao",
            "Man",
            "Xi",
            "Qiu",
            "Biao",
            "Ji",
            "Ji",
            "Zhu",
            "Jiang",
            "Qiu",
            "Zhuan",
            "Yong",
            "Zhang",
            "Kang",
            "Xue",
            "Bie",
            "Jue",
            "Qu",
            "Xiang",
            "Bo",
            "Jiao",
            "Xun",
            "Su",
            "Huang",
            "Zun",
            "Shan",
            "Shan",
            "Fan",
            "Jue",
            "Lin",
            "Xun",
            "Miao",
            "Xi",
            "Eso",
            "Kyou",
            "Fen",
            "Guan",
            "Hou",
            "Kuai",
            "Zei",
            "Sao",
            "Zhan",
            "Gan",
            "Gui",
            "Sheng",
            "Li",
            "Chang",
            "Hatahata",
            "Shiira",
            "Mutsu",
            "Ru",
            "Ji",
            "Xu",
            "Huo",
            "Shiira",
            "Li",
            "Lie",
            "Li",
            "Mie",
            "Zhen",
            "Xiang",
            "E",
            "Lu",
            "Guan",
            "Li",
            "Xian",
            "Yu",
            "Dao",
            "Ji",
            "You",
            "Tun",
            "Lu",
            "Fang",
            "Ba",
            "He",
            "Bo",
            "Ping",
            "Nian",
            "Lu",
            "You",
            "Zha",
            "Fu",
            "Bo",
            "Bao",
            "Hou",
            "Pi",
            "Tai",
            "Gui",
            "Jie",
            "Kao",
            "Wei",
            "Er",
            "Tong",
            "Ze",
            "Hou",
            "Kuai",
            "Ji",
            "Jiao",
            "Xian",
            "Za",
            "Xiang",
            "Xun",
            "Geng",
            "Li",
            "Lian",
            "Jian",
            "Li",
            "Shi",
            "Tiao",
            "Gun",
            "Sha",
            "Wan",
            "Jun",
            "Ji",
            "Yong",
            "Qing",
            "Ling",
            "Qi",
            "Zou",
            "Fei",
            "Kun",
            "Chang",
            "Gu",
            "Ni",
            "Nian",
            "Diao",
            "Jing",
            "Shen",
            "Shi",
            "Zi",
            "Fen",
            "Die",
            "Bi",
            "Chang",
            "Shi",
            "Wen",
            "Wei",
            "Sai",
            "E",
            "Qiu",
            "Fu",
            "Huang",
            "Quan",
            "Jiang",
            "Bian",
            "Sao",
            "Ao",
            "Qi",
            "Ta",
            "Yin",
            "Yao",
            "Fang",
            "Jian",
            "Le",
            "Biao",
            "Xue",
            "Bie",
            "Man",
            "Min",
            "Yong",
            "Wei",
            "Xi",
            "Jue",
            "Shan",
            "Lin",
            "Zun",
            "Huo",
            "Gan",
            "Li",
            "Zhan",
            "Guan",
            "Niao",
            "Yi",
            "Fu",
            "Li",
            "Jiu",
            "Bu",
            "Yan",
            "Fu",
            "Diao",
            "Ji",
            "Feng",
            "Nio",
            "Gan",
            "Shi",
            "Feng",
            "Ming",
            "Bao",
            "Yuan",
            "Zhi",
            "Hu",
            "Qin",
            "Fu",
            "Fen",
            "Wen",
            "Jian",
            "Shi",
            "Yu"
        ],
        [
            "Fou",
            "Yiao",
            "Jue",
            "Jue",
            "Pi",
            "Huan",
            "Zhen",
            "Bao",
            "Yan",
            "Ya",
            "Zheng",
            "Fang",
            "Feng",
            "Wen",
            "Ou",
            "Te",
            "Jia",
            "Nu",
            "Ling",
            "Mie",
            "Fu",
            "Tuo",
            "Wen",
            "Li",
            "Bian",
            "Zhi",
            "Ge",
            "Yuan",
            "Zi",
            "Qu",
            "Xiao",
            "Zhi",
            "Dan",
            "Ju",
            "You",
            "Gu",
            "Zhong",
            "Yu",
            "Yang",
            "Rong",
            "Ya",
            "Tie",
            "Yu",
            "Shigi",
            "Ying",
            "Zhui",
            "Wu",
            "Er",
            "Gua",
            "Ai",
            "Zhi",
            "Yan",
            "Heng",
            "Jiao",
            "Ji",
            "Lie",
            "Zhu",
            "Ren",
            "Yi",
            "Hong",
            "Luo",
            "Ru",
            "Mou",
            "Ge",
            "Ren",
            "Jiao",
            "Xiu",
            "Zhou",
            "Zhi",
            "Luo",
            "Chidori",
            "Toki",
            "Ten",
            "Luan",
            "Jia",
            "Ji",
            "Yu",
            "Huan",
            "Tuo",
            "Bu",
            "Wu",
            "Juan",
            "Yu",
            "Bo",
            "Xun",
            "Xun",
            "Bi",
            "Xi",
            "Jun",
            "Ju",
            "Tu",
            "Jing",
            "Ti",
            "E",
            "E",
            "Kuang",
            "Hu",
            "Wu",
            "Shen",
            "Lai",
            "Ikaruga",
            "Kakesu",
            "Lu",
            "Ping",
            "Shu",
            "Fu",
            "An",
            "Zhao",
            "Peng",
            "Qin",
            "Qian",
            "Bei",
            "Diao",
            "Lu",
            "Que",
            "Jian",
            "Ju",
            "Tu",
            "Ya",
            "Yuan",
            "Qi",
            "Li",
            "Ye",
            "Zhui",
            "Kong",
            "Zhui",
            "Kun",
            "Sheng",
            "Qi",
            "Jing",
            "Yi",
            "Yi",
            "Jing",
            "Zi",
            "Lai",
            "Dong",
            "Qi",
            "Chun",
            "Geng",
            "Ju",
            "Qu",
            "Isuka",
            "Kikuitadaki",
            "Ji",
            "Shu",
            ,
            "Chi",
            "Miao",
            "Rou",
            "An",
            "Qiu",
            "Ti",
            "Hu",
            "Ti",
            "E",
            "Jie",
            "Mao",
            "Fu",
            "Chun",
            "Tu",
            "Yan",
            "He",
            "Yuan",
            "Pian",
            "Yun",
            "Mei",
            "Hu",
            "Ying",
            "Dun",
            "Mu",
            "Ju",
            "Tsugumi",
            "Cang",
            "Fang",
            "Gu",
            "Ying",
            "Yuan",
            "Xuan",
            "Weng",
            "Shi",
            "He",
            "Chu",
            "Tang",
            "Xia",
            "Ruo",
            "Liu",
            "Ji",
            "Gu",
            "Jian",
            "Zhun",
            "Han",
            "Zi",
            "Zi",
            "Ni",
            "Yao",
            "Yan",
            "Ji",
            "Li",
            "Tian",
            "Kou",
            "Ti",
            "Ti",
            "Ni",
            "Tu",
            "Ma",
            "Jiao",
            "Gao",
            "Tian",
            "Chen",
            "Li",
            "Zhuan",
            "Zhe",
            "Ao",
            "Yao",
            "Yi",
            "Ou",
            "Chi",
            "Zhi",
            "Liao",
            "Rong",
            "Lou",
            "Bi",
            "Shuang",
            "Zhuo",
            "Yu",
            "Wu",
            "Jue",
            "Yin",
            "Quan",
            "Si",
            "Jiao",
            "Yi",
            "Hua",
            "Bi",
            "Ying",
            "Su",
            "Huang",
            "Fan",
            "Jiao",
            "Liao",
            "Yan",
            "Kao",
            "Jiu",
            "Xian",
            "Xian",
            "Tu",
            "Mai",
            "Zun",
            "Yu",
            "Ying",
            "Lu",
            "Tuan",
            "Xian",
            "Xue",
            "Yi",
            "Pi"
        ],
        [
            "Shu",
            "Luo",
            "Qi",
            "Yi",
            "Ji",
            "Zhe",
            "Yu",
            "Zhan",
            "Ye",
            "Yang",
            "Pi",
            "Ning",
            "Huo",
            "Mi",
            "Ying",
            "Meng",
            "Di",
            "Yue",
            "Yu",
            "Lei",
            "Bao",
            "Lu",
            "He",
            "Long",
            "Shuang",
            "Yue",
            "Ying",
            "Guan",
            "Qu",
            "Li",
            "Luan",
            "Niao",
            "Jiu",
            "Ji",
            "Yuan",
            "Ming",
            "Shi",
            "Ou",
            "Ya",
            "Cang",
            "Bao",
            "Zhen",
            "Gu",
            "Dong",
            "Lu",
            "Ya",
            "Xiao",
            "Yang",
            "Ling",
            "Zhi",
            "Qu",
            "Yuan",
            "Xue",
            "Tuo",
            "Si",
            "Zhi",
            "Er",
            "Gua",
            "Xiu",
            "Heng",
            "Zhou",
            "Ge",
            "Luan",
            "Hong",
            "Wu",
            "Bo",
            "Li",
            "Juan",
            "Hu",
            "E",
            "Yu",
            "Xian",
            "Ti",
            "Wu",
            "Que",
            "Miao",
            "An",
            "Kun",
            "Bei",
            "Peng",
            "Qian",
            "Chun",
            "Geng",
            "Yuan",
            "Su",
            "Hu",
            "He",
            "E",
            "Gu",
            "Qiu",
            "Zi",
            "Mei",
            "Mu",
            "Ni",
            "Yao",
            "Weng",
            "Liu",
            "Ji",
            "Ni",
            "Jian",
            "He",
            "Yi",
            "Ying",
            "Zhe",
            "Liao",
            "Liao",
            "Jiao",
            "Jiu",
            "Yu",
            "Lu",
            "Xuan",
            "Zhan",
            "Ying",
            "Huo",
            "Meng",
            "Guan",
            "Shuang",
            "Lu",
            "Jin",
            "Ling",
            "Jian",
            "Xian",
            "Cuo",
            "Jian",
            "Jian",
            "Yan",
            "Cuo",
            "Lu",
            "You",
            "Cu",
            "Ji",
            "Biao",
            "Cu",
            "Biao",
            "Zhu",
            "Jun",
            "Zhu",
            "Jian",
            "Mi",
            "Mi",
            "Wu",
            "Liu",
            "Chen",
            "Jun",
            "Lin",
            "Ni",
            "Qi",
            "Lu",
            "Jiu",
            "Jun",
            "Jing",
            "Li",
            "Xiang",
            "Yan",
            "Jia",
            "Mi",
            "Li",
            "She",
            "Zhang",
            "Lin",
            "Jing",
            "Ji",
            "Ling",
            "Yan",
            "Cu",
            "Mai",
            "Mai",
            "Ge",
            "Chao",
            "Fu",
            "Mian",
            "Mian",
            "Fu",
            "Pao",
            "Qu",
            "Qu",
            "Mou",
            "Fu",
            "Xian",
            "Lai",
            "Qu",
            "Mian",
            ,
            "Feng",
            "Fu",
            "Qu",
            "Mian",
            "Ma",
            "Mo",
            "Mo",
            "Hui",
            "Ma",
            "Zou",
            "Nen",
            "Fen",
            "Huang",
            "Huang",
            "Jin",
            "Guang",
            "Tian",
            "Tou",
            "Heng",
            "Xi",
            "Kuang",
            "Heng",
            "Shu",
            "Li",
            "Nian",
            "Chi",
            "Hei",
            "Hei",
            "Yi",
            "Qian",
            "Dan",
            "Xi",
            "Tuan",
            "Mo",
            "Mo",
            "Qian",
            "Dai",
            "Chu",
            "You",
            "Dian",
            "Yi",
            "Xia",
            "Yan",
            "Qu",
            "Mei",
            "Yan",
            "Jing",
            "Yu",
            "Li",
            "Dang",
            "Du",
            "Can",
            "Yin",
            "An",
            "Yan",
            "Tan",
            "An",
            "Zhen",
            "Dai",
            "Can",
            "Yi",
            "Mei",
            "Dan",
            "Yan",
            "Du",
            "Lu",
            "Zhi",
            "Fen",
            "Fu",
            "Fu",
            "Min",
            "Min",
            "Yuan"
        ],
        [
            "Cu",
            "Qu",
            "Chao",
            "Wa",
            "Zhu",
            "Zhi",
            "Mang",
            "Ao",
            "Bie",
            "Tuo",
            "Bi",
            "Yuan",
            "Chao",
            "Tuo",
            "Ding",
            "Mi",
            "Nai",
            "Ding",
            "Zi",
            "Gu",
            "Gu",
            "Dong",
            "Fen",
            "Tao",
            "Yuan",
            "Pi",
            "Chang",
            "Gao",
            "Qi",
            "Yuan",
            "Tang",
            "Teng",
            "Shu",
            "Shu",
            "Fen",
            "Fei",
            "Wen",
            "Ba",
            "Diao",
            "Tuo",
            "Tong",
            "Qu",
            "Sheng",
            "Shi",
            "You",
            "Shi",
            "Ting",
            "Wu",
            "Nian",
            "Jing",
            "Hun",
            "Ju",
            "Yan",
            "Tu",
            "Ti",
            "Xi",
            "Xian",
            "Yan",
            "Lei",
            "Bi",
            "Yao",
            "Qiu",
            "Han",
            "Wu",
            "Wu",
            "Hou",
            "Xi",
            "Ge",
            "Zha",
            "Xiu",
            "Weng",
            "Zha",
            "Nong",
            "Nang",
            "Qi",
            "Zhai",
            "Ji",
            "Zi",
            "Ji",
            "Ji",
            "Qi",
            "Ji",
            "Chi",
            "Chen",
            "Chen",
            "He",
            "Ya",
            "Ken",
            "Xie",
            "Pao",
            "Cuo",
            "Shi",
            "Zi",
            "Chi",
            "Nian",
            "Ju",
            "Tiao",
            "Ling",
            "Ling",
            "Chu",
            "Quan",
            "Xie",
            "Ken",
            "Nie",
            "Jiu",
            "Yao",
            "Chuo",
            "Kun",
            "Yu",
            "Chu",
            "Yi",
            "Ni",
            "Cuo",
            "Zou",
            "Qu",
            "Nen",
            "Xian",
            "Ou",
            "E",
            "Wo",
            "Yi",
            "Chuo",
            "Zou",
            "Dian",
            "Chu",
            "Jin",
            "Ya",
            "Chi",
            "Chen",
            "He",
            "Ken",
            "Ju",
            "Ling",
            "Pao",
            "Tiao",
            "Zi",
            "Ken",
            "Yu",
            "Chuo",
            "Qu",
            "Wo",
            "Long",
            "Pang",
            "Gong",
            "Pang",
            "Yan",
            "Long",
            "Long",
            "Gong",
            "Kan",
            "Ta",
            "Ling",
            "Ta",
            "Long",
            "Gong",
            "Kan",
            "Gui",
            "Qiu",
            "Bie",
            "Gui",
            "Yue",
            "Chui",
            "He",
            "Jue",
            "Xie",
            "Yu"
        ],
        [
            "it",
            "ix",
            "i",
            "ip",
            "iet",
            "iex",
            "ie",
            "iep",
            "at",
            "ax",
            "a",
            "ap",
            "uox",
            "uo",
            "uop",
            "ot",
            "ox",
            "o",
            "op",
            "ex",
            "e",
            "wu",
            "bit",
            "bix",
            "bi",
            "bip",
            "biet",
            "biex",
            "bie",
            "biep",
            "bat",
            "bax",
            "ba",
            "bap",
            "buox",
            "buo",
            "buop",
            "bot",
            "box",
            "bo",
            "bop",
            "bex",
            "be",
            "bep",
            "but",
            "bux",
            "bu",
            "bup",
            "burx",
            "bur",
            "byt",
            "byx",
            "by",
            "byp",
            "byrx",
            "byr",
            "pit",
            "pix",
            "pi",
            "pip",
            "piex",
            "pie",
            "piep",
            "pat",
            "pax",
            "pa",
            "pap",
            "puox",
            "puo",
            "puop",
            "pot",
            "pox",
            "po",
            "pop",
            "put",
            "pux",
            "pu",
            "pup",
            "purx",
            "pur",
            "pyt",
            "pyx",
            "py",
            "pyp",
            "pyrx",
            "pyr",
            "bbit",
            "bbix",
            "bbi",
            "bbip",
            "bbiet",
            "bbiex",
            "bbie",
            "bbiep",
            "bbat",
            "bbax",
            "bba",
            "bbap",
            "bbuox",
            "bbuo",
            "bbuop",
            "bbot",
            "bbox",
            "bbo",
            "bbop",
            "bbex",
            "bbe",
            "bbep",
            "bbut",
            "bbux",
            "bbu",
            "bbup",
            "bburx",
            "bbur",
            "bbyt",
            "bbyx",
            "bby",
            "bbyp",
            "nbit",
            "nbix",
            "nbi",
            "nbip",
            "nbiex",
            "nbie",
            "nbiep",
            "nbat",
            "nbax",
            "nba",
            "nbap",
            "nbot",
            "nbox",
            "nbo",
            "nbop",
            "nbut",
            "nbux",
            "nbu",
            "nbup",
            "nburx",
            "nbur",
            "nbyt",
            "nbyx",
            "nby",
            "nbyp",
            "nbyrx",
            "nbyr",
            "hmit",
            "hmix",
            "hmi",
            "hmip",
            "hmiex",
            "hmie",
            "hmiep",
            "hmat",
            "hmax",
            "hma",
            "hmap",
            "hmuox",
            "hmuo",
            "hmuop",
            "hmot",
            "hmox",
            "hmo",
            "hmop",
            "hmut",
            "hmux",
            "hmu",
            "hmup",
            "hmurx",
            "hmur",
            "hmyx",
            "hmy",
            "hmyp",
            "hmyrx",
            "hmyr",
            "mit",
            "mix",
            "mi",
            "mip",
            "miex",
            "mie",
            "miep",
            "mat",
            "max",
            "ma",
            "map",
            "muot",
            "muox",
            "muo",
            "muop",
            "mot",
            "mox",
            "mo",
            "mop",
            "mex",
            "me",
            "mut",
            "mux",
            "mu",
            "mup",
            "murx",
            "mur",
            "myt",
            "myx",
            "my",
            "myp",
            "fit",
            "fix",
            "fi",
            "fip",
            "fat",
            "fax",
            "fa",
            "fap",
            "fox",
            "fo",
            "fop",
            "fut",
            "fux",
            "fu",
            "fup",
            "furx",
            "fur",
            "fyt",
            "fyx",
            "fy",
            "fyp",
            "vit",
            "vix",
            "vi",
            "vip",
            "viet",
            "viex",
            "vie",
            "viep",
            "vat",
            "vax",
            "va",
            "vap",
            "vot",
            "vox",
            "vo",
            "vop",
            "vex",
            "vep",
            "vut",
            "vux",
            "vu",
            "vup",
            "vurx",
            "vur",
            "vyt",
            "vyx",
            "vy",
            "vyp",
            "vyrx",
            "vyr"
        ],
        [
            "dit",
            "dix",
            "di",
            "dip",
            "diex",
            "die",
            "diep",
            "dat",
            "dax",
            "da",
            "dap",
            "duox",
            "duo",
            "dot",
            "dox",
            "do",
            "dop",
            "dex",
            "de",
            "dep",
            "dut",
            "dux",
            "du",
            "dup",
            "durx",
            "dur",
            "tit",
            "tix",
            "ti",
            "tip",
            "tiex",
            "tie",
            "tiep",
            "tat",
            "tax",
            "ta",
            "tap",
            "tuot",
            "tuox",
            "tuo",
            "tuop",
            "tot",
            "tox",
            "to",
            "top",
            "tex",
            "te",
            "tep",
            "tut",
            "tux",
            "tu",
            "tup",
            "turx",
            "tur",
            "ddit",
            "ddix",
            "ddi",
            "ddip",
            "ddiex",
            "ddie",
            "ddiep",
            "ddat",
            "ddax",
            "dda",
            "ddap",
            "dduox",
            "dduo",
            "dduop",
            "ddot",
            "ddox",
            "ddo",
            "ddop",
            "ddex",
            "dde",
            "ddep",
            "ddut",
            "ddux",
            "ddu",
            "ddup",
            "ddurx",
            "ddur",
            "ndit",
            "ndix",
            "ndi",
            "ndip",
            "ndiex",
            "ndie",
            "ndat",
            "ndax",
            "nda",
            "ndap",
            "ndot",
            "ndox",
            "ndo",
            "ndop",
            "ndex",
            "nde",
            "ndep",
            "ndut",
            "ndux",
            "ndu",
            "ndup",
            "ndurx",
            "ndur",
            "hnit",
            "hnix",
            "hni",
            "hnip",
            "hniet",
            "hniex",
            "hnie",
            "hniep",
            "hnat",
            "hnax",
            "hna",
            "hnap",
            "hnuox",
            "hnuo",
            "hnot",
            "hnox",
            "hnop",
            "hnex",
            "hne",
            "hnep",
            "hnut",
            "nit",
            "nix",
            "ni",
            "nip",
            "niex",
            "nie",
            "niep",
            "nax",
            "na",
            "nap",
            "nuox",
            "nuo",
            "nuop",
            "not",
            "nox",
            "no",
            "nop",
            "nex",
            "ne",
            "nep",
            "nut",
            "nux",
            "nu",
            "nup",
            "nurx",
            "nur",
            "hlit",
            "hlix",
            "hli",
            "hlip",
            "hliex",
            "hlie",
            "hliep",
            "hlat",
            "hlax",
            "hla",
            "hlap",
            "hluox",
            "hluo",
            "hluop",
            "hlox",
            "hlo",
            "hlop",
            "hlex",
            "hle",
            "hlep",
            "hlut",
            "hlux",
            "hlu",
            "hlup",
            "hlurx",
            "hlur",
            "hlyt",
            "hlyx",
            "hly",
            "hlyp",
            "hlyrx",
            "hlyr",
            "lit",
            "lix",
            "li",
            "lip",
            "liet",
            "liex",
            "lie",
            "liep",
            "lat",
            "lax",
            "la",
            "lap",
            "luot",
            "luox",
            "luo",
            "luop",
            "lot",
            "lox",
            "lo",
            "lop",
            "lex",
            "le",
            "lep",
            "lut",
            "lux",
            "lu",
            "lup",
            "lurx",
            "lur",
            "lyt",
            "lyx",
            "ly",
            "lyp",
            "lyrx",
            "lyr",
            "git",
            "gix",
            "gi",
            "gip",
            "giet",
            "giex",
            "gie",
            "giep",
            "gat",
            "gax",
            "ga",
            "gap",
            "guot",
            "guox",
            "guo",
            "guop",
            "got",
            "gox",
            "go",
            "gop",
            "get",
            "gex",
            "ge",
            "gep",
            "gut",
            "gux",
            "gu",
            "gup",
            "gurx",
            "gur",
            "kit",
            "kix",
            "ki",
            "kip",
            "kiex",
            "kie",
            "kiep",
            "kat"
        ],
        [
            "kax",
            "ka",
            "kap",
            "kuox",
            "kuo",
            "kuop",
            "kot",
            "kox",
            "ko",
            "kop",
            "ket",
            "kex",
            "ke",
            "kep",
            "kut",
            "kux",
            "ku",
            "kup",
            "kurx",
            "kur",
            "ggit",
            "ggix",
            "ggi",
            "ggiex",
            "ggie",
            "ggiep",
            "ggat",
            "ggax",
            "gga",
            "ggap",
            "gguot",
            "gguox",
            "gguo",
            "gguop",
            "ggot",
            "ggox",
            "ggo",
            "ggop",
            "gget",
            "ggex",
            "gge",
            "ggep",
            "ggut",
            "ggux",
            "ggu",
            "ggup",
            "ggurx",
            "ggur",
            "mgiex",
            "mgie",
            "mgat",
            "mgax",
            "mga",
            "mgap",
            "mguox",
            "mguo",
            "mguop",
            "mgot",
            "mgox",
            "mgo",
            "mgop",
            "mgex",
            "mge",
            "mgep",
            "mgut",
            "mgux",
            "mgu",
            "mgup",
            "mgurx",
            "mgur",
            "hxit",
            "hxix",
            "hxi",
            "hxip",
            "hxiet",
            "hxiex",
            "hxie",
            "hxiep",
            "hxat",
            "hxax",
            "hxa",
            "hxap",
            "hxuot",
            "hxuox",
            "hxuo",
            "hxuop",
            "hxot",
            "hxox",
            "hxo",
            "hxop",
            "hxex",
            "hxe",
            "hxep",
            "ngiex",
            "ngie",
            "ngiep",
            "ngat",
            "ngax",
            "nga",
            "ngap",
            "nguot",
            "nguox",
            "nguo",
            "ngot",
            "ngox",
            "ngo",
            "ngop",
            "ngex",
            "nge",
            "ngep",
            "hit",
            "hiex",
            "hie",
            "hat",
            "hax",
            "ha",
            "hap",
            "huot",
            "huox",
            "huo",
            "huop",
            "hot",
            "hox",
            "ho",
            "hop",
            "hex",
            "he",
            "hep",
            "wat",
            "wax",
            "wa",
            "wap",
            "wuox",
            "wuo",
            "wuop",
            "wox",
            "wo",
            "wop",
            "wex",
            "we",
            "wep",
            "zit",
            "zix",
            "zi",
            "zip",
            "ziex",
            "zie",
            "ziep",
            "zat",
            "zax",
            "za",
            "zap",
            "zuox",
            "zuo",
            "zuop",
            "zot",
            "zox",
            "zo",
            "zop",
            "zex",
            "ze",
            "zep",
            "zut",
            "zux",
            "zu",
            "zup",
            "zurx",
            "zur",
            "zyt",
            "zyx",
            "zy",
            "zyp",
            "zyrx",
            "zyr",
            "cit",
            "cix",
            "ci",
            "cip",
            "ciet",
            "ciex",
            "cie",
            "ciep",
            "cat",
            "cax",
            "ca",
            "cap",
            "cuox",
            "cuo",
            "cuop",
            "cot",
            "cox",
            "co",
            "cop",
            "cex",
            "ce",
            "cep",
            "cut",
            "cux",
            "cu",
            "cup",
            "curx",
            "cur",
            "cyt",
            "cyx",
            "cy",
            "cyp",
            "cyrx",
            "cyr",
            "zzit",
            "zzix",
            "zzi",
            "zzip",
            "zziet",
            "zziex",
            "zzie",
            "zziep",
            "zzat",
            "zzax",
            "zza",
            "zzap",
            "zzox",
            "zzo",
            "zzop",
            "zzex",
            "zze",
            "zzep",
            "zzux",
            "zzu",
            "zzup",
            "zzurx",
            "zzur",
            "zzyt",
            "zzyx",
            "zzy",
            "zzyp",
            "zzyrx",
            "zzyr",
            "nzit",
            "nzix",
            "nzi",
            "nzip",
            "nziex",
            "nzie",
            "nziep",
            "nzat",
            "nzax",
            "nza",
            "nzap",
            "nzuox",
            "nzuo",
            "nzox",
            "nzop",
            "nzex",
            "nze",
            "nzux",
            "nzu"
        ],
        [
            "nzup",
            "nzurx",
            "nzur",
            "nzyt",
            "nzyx",
            "nzy",
            "nzyp",
            "nzyrx",
            "nzyr",
            "sit",
            "six",
            "si",
            "sip",
            "siex",
            "sie",
            "siep",
            "sat",
            "sax",
            "sa",
            "sap",
            "suox",
            "suo",
            "suop",
            "sot",
            "sox",
            "so",
            "sop",
            "sex",
            "se",
            "sep",
            "sut",
            "sux",
            "su",
            "sup",
            "surx",
            "sur",
            "syt",
            "syx",
            "sy",
            "syp",
            "syrx",
            "syr",
            "ssit",
            "ssix",
            "ssi",
            "ssip",
            "ssiex",
            "ssie",
            "ssiep",
            "ssat",
            "ssax",
            "ssa",
            "ssap",
            "ssot",
            "ssox",
            "sso",
            "ssop",
            "ssex",
            "sse",
            "ssep",
            "ssut",
            "ssux",
            "ssu",
            "ssup",
            "ssyt",
            "ssyx",
            "ssy",
            "ssyp",
            "ssyrx",
            "ssyr",
            "zhat",
            "zhax",
            "zha",
            "zhap",
            "zhuox",
            "zhuo",
            "zhuop",
            "zhot",
            "zhox",
            "zho",
            "zhop",
            "zhet",
            "zhex",
            "zhe",
            "zhep",
            "zhut",
            "zhux",
            "zhu",
            "zhup",
            "zhurx",
            "zhur",
            "zhyt",
            "zhyx",
            "zhy",
            "zhyp",
            "zhyrx",
            "zhyr",
            "chat",
            "chax",
            "cha",
            "chap",
            "chuot",
            "chuox",
            "chuo",
            "chuop",
            "chot",
            "chox",
            "cho",
            "chop",
            "chet",
            "chex",
            "che",
            "chep",
            "chux",
            "chu",
            "chup",
            "churx",
            "chur",
            "chyt",
            "chyx",
            "chy",
            "chyp",
            "chyrx",
            "chyr",
            "rrax",
            "rra",
            "rruox",
            "rruo",
            "rrot",
            "rrox",
            "rro",
            "rrop",
            "rret",
            "rrex",
            "rre",
            "rrep",
            "rrut",
            "rrux",
            "rru",
            "rrup",
            "rrurx",
            "rrur",
            "rryt",
            "rryx",
            "rry",
            "rryp",
            "rryrx",
            "rryr",
            "nrat",
            "nrax",
            "nra",
            "nrap",
            "nrox",
            "nro",
            "nrop",
            "nret",
            "nrex",
            "nre",
            "nrep",
            "nrut",
            "nrux",
            "nru",
            "nrup",
            "nrurx",
            "nrur",
            "nryt",
            "nryx",
            "nry",
            "nryp",
            "nryrx",
            "nryr",
            "shat",
            "shax",
            "sha",
            "shap",
            "shuox",
            "shuo",
            "shuop",
            "shot",
            "shox",
            "sho",
            "shop",
            "shet",
            "shex",
            "she",
            "shep",
            "shut",
            "shux",
            "shu",
            "shup",
            "shurx",
            "shur",
            "shyt",
            "shyx",
            "shy",
            "shyp",
            "shyrx",
            "shyr",
            "rat",
            "rax",
            "ra",
            "rap",
            "ruox",
            "ruo",
            "ruop",
            "rot",
            "rox",
            "ro",
            "rop",
            "rex",
            "re",
            "rep",
            "rut",
            "rux",
            "ru",
            "rup",
            "rurx",
            "rur",
            "ryt",
            "ryx",
            "ry",
            "ryp",
            "ryrx",
            "ryr",
            "jit",
            "jix",
            "ji",
            "jip",
            "jiet",
            "jiex",
            "jie",
            "jiep",
            "juot",
            "juox",
            "juo",
            "juop",
            "jot",
            "jox",
            "jo",
            "jop",
            "jut",
            "jux",
            "ju",
            "jup",
            "jurx",
            "jur",
            "jyt",
            "jyx",
            "jy",
            "jyp",
            "jyrx",
            "jyr",
            "qit",
            "qix",
            "qi",
            "qip"
        ],
        [
            "qiet",
            "qiex",
            "qie",
            "qiep",
            "quot",
            "quox",
            "quo",
            "quop",
            "qot",
            "qox",
            "qo",
            "qop",
            "qut",
            "qux",
            "qu",
            "qup",
            "qurx",
            "qur",
            "qyt",
            "qyx",
            "qy",
            "qyp",
            "qyrx",
            "qyr",
            "jjit",
            "jjix",
            "jji",
            "jjip",
            "jjiet",
            "jjiex",
            "jjie",
            "jjiep",
            "jjuox",
            "jjuo",
            "jjuop",
            "jjot",
            "jjox",
            "jjo",
            "jjop",
            "jjut",
            "jjux",
            "jju",
            "jjup",
            "jjurx",
            "jjur",
            "jjyt",
            "jjyx",
            "jjy",
            "jjyp",
            "njit",
            "njix",
            "nji",
            "njip",
            "njiet",
            "njiex",
            "njie",
            "njiep",
            "njuox",
            "njuo",
            "njot",
            "njox",
            "njo",
            "njop",
            "njux",
            "nju",
            "njup",
            "njurx",
            "njur",
            "njyt",
            "njyx",
            "njy",
            "njyp",
            "njyrx",
            "njyr",
            "nyit",
            "nyix",
            "nyi",
            "nyip",
            "nyiet",
            "nyiex",
            "nyie",
            "nyiep",
            "nyuox",
            "nyuo",
            "nyuop",
            "nyot",
            "nyox",
            "nyo",
            "nyop",
            "nyut",
            "nyux",
            "nyu",
            "nyup",
            "xit",
            "xix",
            "xi",
            "xip",
            "xiet",
            "xiex",
            "xie",
            "xiep",
            "xuox",
            "xuo",
            "xot",
            "xox",
            "xo",
            "xop",
            "xyt",
            "xyx",
            "xy",
            "xyp",
            "xyrx",
            "xyr",
            "yit",
            "yix",
            "yi",
            "yip",
            "yiet",
            "yiex",
            "yie",
            "yiep",
            "yuot",
            "yuox",
            "yuo",
            "yuop",
            "yot",
            "yox",
            "yo",
            "yop",
            "yut",
            "yux",
            "yu",
            "yup",
            "yurx",
            "yur",
            "yyt",
            "yyx",
            "yy",
            "yyp",
            "yyrx",
            "yyr",
            ,
            ,
            ,
            "Qot",
            "Li",
            "Kit",
            "Nyip",
            "Cyp",
            "Ssi",
            "Ggop",
            "Gep",
            "Mi",
            "Hxit",
            "Lyr",
            "Bbut",
            "Mop",
            "Yo",
            "Put",
            "Hxuo",
            "Tat",
            "Ga",
            ,
            ,
            "Ddur",
            "Bur",
            "Gguo",
            "Nyop",
            "Tu",
            "Op",
            "Jjut",
            "Zot",
            "Pyt",
            "Hmo",
            "Yit",
            "Vur",
            "Shy",
            "Vep",
            "Za",
            "Jo",
            ,
            "Jjy",
            "Got",
            "Jjie",
            "Wo",
            "Du",
            "Shur",
            "Lie",
            "Cy",
            "Cuop",
            "Cip",
            "Hxop",
            "Shat",
            ,
            "Shop",
            "Che",
            "Zziet",
            ,
            "Ke"
        ],
        [],
        [],
        [
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "A",
            "a",
            "A",
            "a",
            "HENG",
            "heng",
            "TZ",
            "tz",
            "3",
            "3",
            "4",
            "4",
            "4",
            "4",
            "F",
            "S",
            "AA",
            "aa",
            "AO",
            "ao",
            "AU",
            "au",
            "AV",
            "av",
            "AV-",
            "av-",
            "AY",
            "ay",
            "C",
            "c",
            "K",
            "k",
            "K",
            "k",
            "K",
            "k",
            "L",
            "l",
            "L",
            "l",
            "O",
            "o",
            "O",
            "o",
            "OO",
            "oo",
            "P",
            "p",
            "P",
            "p",
            "P",
            "p",
            "Q",
            "q",
            "Q",
            "q",
            "R",
            "r",
            "R",
            "r",
            "V",
            "v",
            "VY",
            "vy",
            "Z",
            "z",
            "TH",
            "th",
            "TH",
            "th",
            "Y",
            "y",
            "ET",
            "et",
            "IS",
            "is",
            "CON",
            "con",
            "US",
            "us",
            "dum",
            "lum",
            "num",
            "rum",
            "RUM",
            "tum",
            "um",
            "D",
            "d",
            "F",
            "f",
            "G",
            "G",
            "g",
            "L",
            "l",
            "R",
            "r",
            "S",
            "s",
            "T",
            "t",
            "^",
            ":",
            "=",
            "'",
            "'",
            "H",
            "l",
            ".",
            "N",
            "n",
            "C",
            "c",
            "c",
            "h",
            "B",
            "b",
            "F",
            "f",
            "AE",
            "ae",
            "OE",
            "oe",
            "UE",
            "ue",
            "G",
            "g",
            "K",
            "k",
            "N",
            "n",
            "R",
            "r",
            "S",
            "s",
            "H",
            "E",
            "G",
            "L",
            "I",
            "Q",
            "K",
            "T",
            "J",
            "CHI",
            "B",
            "b",
            "O",
            "o",
            "U",
            "u",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "I",
            "H",
            "oe",
            "M",
            "F",
            "P",
            "M",
            "I",
            "M1"
        ],
        [],
        [],
        [],
        [],
        [
            "ga",
            "gag",
            "gagg",
            "gags",
            "gan",
            "ganj",
            "ganh",
            "gad",
            "gal",
            "galg",
            "galm",
            "galb",
            "gals",
            "galt",
            "galp",
            "galh",
            "gam",
            "gab",
            "gabs",
            "gas",
            "gass",
            "gang",
            "gaj",
            "gac",
            "gak",
            "gat",
            "gap",
            "gah",
            "gae",
            "gaeg",
            "gaegg",
            "gaegs",
            "gaen",
            "gaenj",
            "gaenh",
            "gaed",
            "gael",
            "gaelg",
            "gaelm",
            "gaelb",
            "gaels",
            "gaelt",
            "gaelp",
            "gaelh",
            "gaem",
            "gaeb",
            "gaebs",
            "gaes",
            "gaess",
            "gaeng",
            "gaej",
            "gaec",
            "gaek",
            "gaet",
            "gaep",
            "gaeh",
            "gya",
            "gyag",
            "gyagg",
            "gyags",
            "gyan",
            "gyanj",
            "gyanh",
            "gyad",
            "gyal",
            "gyalg",
            "gyalm",
            "gyalb",
            "gyals",
            "gyalt",
            "gyalp",
            "gyalh",
            "gyam",
            "gyab",
            "gyabs",
            "gyas",
            "gyass",
            "gyang",
            "gyaj",
            "gyac",
            "gyak",
            "gyat",
            "gyap",
            "gyah",
            "gyae",
            "gyaeg",
            "gyaegg",
            "gyaegs",
            "gyaen",
            "gyaenj",
            "gyaenh",
            "gyaed",
            "gyael",
            "gyaelg",
            "gyaelm",
            "gyaelb",
            "gyaels",
            "gyaelt",
            "gyaelp",
            "gyaelh",
            "gyaem",
            "gyaeb",
            "gyaebs",
            "gyaes",
            "gyaess",
            "gyaeng",
            "gyaej",
            "gyaec",
            "gyaek",
            "gyaet",
            "gyaep",
            "gyaeh",
            "geo",
            "geog",
            "geogg",
            "geogs",
            "geon",
            "geonj",
            "geonh",
            "geod",
            "geol",
            "geolg",
            "geolm",
            "geolb",
            "geols",
            "geolt",
            "geolp",
            "geolh",
            "geom",
            "geob",
            "geobs",
            "geos",
            "geoss",
            "geong",
            "geoj",
            "geoc",
            "geok",
            "geot",
            "geop",
            "geoh",
            "ge",
            "geg",
            "gegg",
            "gegs",
            "gen",
            "genj",
            "genh",
            "ged",
            "gel",
            "gelg",
            "gelm",
            "gelb",
            "gels",
            "gelt",
            "gelp",
            "gelh",
            "gem",
            "geb",
            "gebs",
            "ges",
            "gess",
            "geng",
            "gej",
            "gec",
            "gek",
            "get",
            "gep",
            "geh",
            "gyeo",
            "gyeog",
            "gyeogg",
            "gyeogs",
            "gyeon",
            "gyeonj",
            "gyeonh",
            "gyeod",
            "gyeol",
            "gyeolg",
            "gyeolm",
            "gyeolb",
            "gyeols",
            "gyeolt",
            "gyeolp",
            "gyeolh",
            "gyeom",
            "gyeob",
            "gyeobs",
            "gyeos",
            "gyeoss",
            "gyeong",
            "gyeoj",
            "gyeoc",
            "gyeok",
            "gyeot",
            "gyeop",
            "gyeoh",
            "gye",
            "gyeg",
            "gyegg",
            "gyegs",
            "gyen",
            "gyenj",
            "gyenh",
            "gyed",
            "gyel",
            "gyelg",
            "gyelm",
            "gyelb",
            "gyels",
            "gyelt",
            "gyelp",
            "gyelh",
            "gyem",
            "gyeb",
            "gyebs",
            "gyes",
            "gyess",
            "gyeng",
            "gyej",
            "gyec",
            "gyek",
            "gyet",
            "gyep",
            "gyeh",
            "go",
            "gog",
            "gogg",
            "gogs",
            "gon",
            "gonj",
            "gonh",
            "god",
            "gol",
            "golg",
            "golm",
            "golb",
            "gols",
            "golt",
            "golp",
            "golh",
            "gom",
            "gob",
            "gobs",
            "gos",
            "goss",
            "gong",
            "goj",
            "goc",
            "gok",
            "got",
            "gop",
            "goh",
            "gwa",
            "gwag",
            "gwagg",
            "gwags"
        ],
        [
            "gwan",
            "gwanj",
            "gwanh",
            "gwad",
            "gwal",
            "gwalg",
            "gwalm",
            "gwalb",
            "gwals",
            "gwalt",
            "gwalp",
            "gwalh",
            "gwam",
            "gwab",
            "gwabs",
            "gwas",
            "gwass",
            "gwang",
            "gwaj",
            "gwac",
            "gwak",
            "gwat",
            "gwap",
            "gwah",
            "gwae",
            "gwaeg",
            "gwaegg",
            "gwaegs",
            "gwaen",
            "gwaenj",
            "gwaenh",
            "gwaed",
            "gwael",
            "gwaelg",
            "gwaelm",
            "gwaelb",
            "gwaels",
            "gwaelt",
            "gwaelp",
            "gwaelh",
            "gwaem",
            "gwaeb",
            "gwaebs",
            "gwaes",
            "gwaess",
            "gwaeng",
            "gwaej",
            "gwaec",
            "gwaek",
            "gwaet",
            "gwaep",
            "gwaeh",
            "goe",
            "goeg",
            "goegg",
            "goegs",
            "goen",
            "goenj",
            "goenh",
            "goed",
            "goel",
            "goelg",
            "goelm",
            "goelb",
            "goels",
            "goelt",
            "goelp",
            "goelh",
            "goem",
            "goeb",
            "goebs",
            "goes",
            "goess",
            "goeng",
            "goej",
            "goec",
            "goek",
            "goet",
            "goep",
            "goeh",
            "gyo",
            "gyog",
            "gyogg",
            "gyogs",
            "gyon",
            "gyonj",
            "gyonh",
            "gyod",
            "gyol",
            "gyolg",
            "gyolm",
            "gyolb",
            "gyols",
            "gyolt",
            "gyolp",
            "gyolh",
            "gyom",
            "gyob",
            "gyobs",
            "gyos",
            "gyoss",
            "gyong",
            "gyoj",
            "gyoc",
            "gyok",
            "gyot",
            "gyop",
            "gyoh",
            "gu",
            "gug",
            "gugg",
            "gugs",
            "gun",
            "gunj",
            "gunh",
            "gud",
            "gul",
            "gulg",
            "gulm",
            "gulb",
            "guls",
            "gult",
            "gulp",
            "gulh",
            "gum",
            "gub",
            "gubs",
            "gus",
            "guss",
            "gung",
            "guj",
            "guc",
            "guk",
            "gut",
            "gup",
            "guh",
            "gweo",
            "gweog",
            "gweogg",
            "gweogs",
            "gweon",
            "gweonj",
            "gweonh",
            "gweod",
            "gweol",
            "gweolg",
            "gweolm",
            "gweolb",
            "gweols",
            "gweolt",
            "gweolp",
            "gweolh",
            "gweom",
            "gweob",
            "gweobs",
            "gweos",
            "gweoss",
            "gweong",
            "gweoj",
            "gweoc",
            "gweok",
            "gweot",
            "gweop",
            "gweoh",
            "gwe",
            "gweg",
            "gwegg",
            "gwegs",
            "gwen",
            "gwenj",
            "gwenh",
            "gwed",
            "gwel",
            "gwelg",
            "gwelm",
            "gwelb",
            "gwels",
            "gwelt",
            "gwelp",
            "gwelh",
            "gwem",
            "gweb",
            "gwebs",
            "gwes",
            "gwess",
            "gweng",
            "gwej",
            "gwec",
            "gwek",
            "gwet",
            "gwep",
            "gweh",
            "gwi",
            "gwig",
            "gwigg",
            "gwigs",
            "gwin",
            "gwinj",
            "gwinh",
            "gwid",
            "gwil",
            "gwilg",
            "gwilm",
            "gwilb",
            "gwils",
            "gwilt",
            "gwilp",
            "gwilh",
            "gwim",
            "gwib",
            "gwibs",
            "gwis",
            "gwiss",
            "gwing",
            "gwij",
            "gwic",
            "gwik",
            "gwit",
            "gwip",
            "gwih",
            "gyu",
            "gyug",
            "gyugg",
            "gyugs",
            "gyun",
            "gyunj",
            "gyunh",
            "gyud",
            "gyul",
            "gyulg",
            "gyulm",
            "gyulb",
            "gyuls",
            "gyult",
            "gyulp",
            "gyulh",
            "gyum",
            "gyub",
            "gyubs",
            "gyus",
            "gyuss",
            "gyung",
            "gyuj",
            "gyuc",
            "gyuk",
            "gyut",
            "gyup",
            "gyuh",
            "geu",
            "geug",
            "geugg",
            "geugs",
            "geun",
            "geunj",
            "geunh",
            "geud"
        ],
        [
            "geul",
            "geulg",
            "geulm",
            "geulb",
            "geuls",
            "geult",
            "geulp",
            "geulh",
            "geum",
            "geub",
            "geubs",
            "geus",
            "geuss",
            "geung",
            "geuj",
            "geuc",
            "geuk",
            "geut",
            "geup",
            "geuh",
            "gyi",
            "gyig",
            "gyigg",
            "gyigs",
            "gyin",
            "gyinj",
            "gyinh",
            "gyid",
            "gyil",
            "gyilg",
            "gyilm",
            "gyilb",
            "gyils",
            "gyilt",
            "gyilp",
            "gyilh",
            "gyim",
            "gyib",
            "gyibs",
            "gyis",
            "gyiss",
            "gying",
            "gyij",
            "gyic",
            "gyik",
            "gyit",
            "gyip",
            "gyih",
            "gi",
            "gig",
            "gigg",
            "gigs",
            "gin",
            "ginj",
            "ginh",
            "gid",
            "gil",
            "gilg",
            "gilm",
            "gilb",
            "gils",
            "gilt",
            "gilp",
            "gilh",
            "gim",
            "gib",
            "gibs",
            "gis",
            "giss",
            "ging",
            "gij",
            "gic",
            "gik",
            "git",
            "gip",
            "gih",
            "gga",
            "ggag",
            "ggagg",
            "ggags",
            "ggan",
            "gganj",
            "gganh",
            "ggad",
            "ggal",
            "ggalg",
            "ggalm",
            "ggalb",
            "ggals",
            "ggalt",
            "ggalp",
            "ggalh",
            "ggam",
            "ggab",
            "ggabs",
            "ggas",
            "ggass",
            "ggang",
            "ggaj",
            "ggac",
            "ggak",
            "ggat",
            "ggap",
            "ggah",
            "ggae",
            "ggaeg",
            "ggaegg",
            "ggaegs",
            "ggaen",
            "ggaenj",
            "ggaenh",
            "ggaed",
            "ggael",
            "ggaelg",
            "ggaelm",
            "ggaelb",
            "ggaels",
            "ggaelt",
            "ggaelp",
            "ggaelh",
            "ggaem",
            "ggaeb",
            "ggaebs",
            "ggaes",
            "ggaess",
            "ggaeng",
            "ggaej",
            "ggaec",
            "ggaek",
            "ggaet",
            "ggaep",
            "ggaeh",
            "ggya",
            "ggyag",
            "ggyagg",
            "ggyags",
            "ggyan",
            "ggyanj",
            "ggyanh",
            "ggyad",
            "ggyal",
            "ggyalg",
            "ggyalm",
            "ggyalb",
            "ggyals",
            "ggyalt",
            "ggyalp",
            "ggyalh",
            "ggyam",
            "ggyab",
            "ggyabs",
            "ggyas",
            "ggyass",
            "ggyang",
            "ggyaj",
            "ggyac",
            "ggyak",
            "ggyat",
            "ggyap",
            "ggyah",
            "ggyae",
            "ggyaeg",
            "ggyaegg",
            "ggyaegs",
            "ggyaen",
            "ggyaenj",
            "ggyaenh",
            "ggyaed",
            "ggyael",
            "ggyaelg",
            "ggyaelm",
            "ggyaelb",
            "ggyaels",
            "ggyaelt",
            "ggyaelp",
            "ggyaelh",
            "ggyaem",
            "ggyaeb",
            "ggyaebs",
            "ggyaes",
            "ggyaess",
            "ggyaeng",
            "ggyaej",
            "ggyaec",
            "ggyaek",
            "ggyaet",
            "ggyaep",
            "ggyaeh",
            "ggeo",
            "ggeog",
            "ggeogg",
            "ggeogs",
            "ggeon",
            "ggeonj",
            "ggeonh",
            "ggeod",
            "ggeol",
            "ggeolg",
            "ggeolm",
            "ggeolb",
            "ggeols",
            "ggeolt",
            "ggeolp",
            "ggeolh",
            "ggeom",
            "ggeob",
            "ggeobs",
            "ggeos",
            "ggeoss",
            "ggeong",
            "ggeoj",
            "ggeoc",
            "ggeok",
            "ggeot",
            "ggeop",
            "ggeoh",
            "gge",
            "ggeg",
            "ggegg",
            "ggegs",
            "ggen",
            "ggenj",
            "ggenh",
            "gged",
            "ggel",
            "ggelg",
            "ggelm",
            "ggelb",
            "ggels",
            "ggelt",
            "ggelp",
            "ggelh",
            "ggem",
            "ggeb",
            "ggebs",
            "gges",
            "ggess",
            "ggeng",
            "ggej",
            "ggec",
            "ggek",
            "gget",
            "ggep",
            "ggeh",
            "ggyeo",
            "ggyeog",
            "ggyeogg",
            "ggyeogs",
            "ggyeon",
            "ggyeonj",
            "ggyeonh",
            "ggyeod",
            "ggyeol",
            "ggyeolg",
            "ggyeolm",
            "ggyeolb"
        ],
        [
            "ggyeols",
            "ggyeolt",
            "ggyeolp",
            "ggyeolh",
            "ggyeom",
            "ggyeob",
            "ggyeobs",
            "ggyeos",
            "ggyeoss",
            "ggyeong",
            "ggyeoj",
            "ggyeoc",
            "ggyeok",
            "ggyeot",
            "ggyeop",
            "ggyeoh",
            "ggye",
            "ggyeg",
            "ggyegg",
            "ggyegs",
            "ggyen",
            "ggyenj",
            "ggyenh",
            "ggyed",
            "ggyel",
            "ggyelg",
            "ggyelm",
            "ggyelb",
            "ggyels",
            "ggyelt",
            "ggyelp",
            "ggyelh",
            "ggyem",
            "ggyeb",
            "ggyebs",
            "ggyes",
            "ggyess",
            "ggyeng",
            "ggyej",
            "ggyec",
            "ggyek",
            "ggyet",
            "ggyep",
            "ggyeh",
            "ggo",
            "ggog",
            "ggogg",
            "ggogs",
            "ggon",
            "ggonj",
            "ggonh",
            "ggod",
            "ggol",
            "ggolg",
            "ggolm",
            "ggolb",
            "ggols",
            "ggolt",
            "ggolp",
            "ggolh",
            "ggom",
            "ggob",
            "ggobs",
            "ggos",
            "ggoss",
            "ggong",
            "ggoj",
            "ggoc",
            "ggok",
            "ggot",
            "ggop",
            "ggoh",
            "ggwa",
            "ggwag",
            "ggwagg",
            "ggwags",
            "ggwan",
            "ggwanj",
            "ggwanh",
            "ggwad",
            "ggwal",
            "ggwalg",
            "ggwalm",
            "ggwalb",
            "ggwals",
            "ggwalt",
            "ggwalp",
            "ggwalh",
            "ggwam",
            "ggwab",
            "ggwabs",
            "ggwas",
            "ggwass",
            "ggwang",
            "ggwaj",
            "ggwac",
            "ggwak",
            "ggwat",
            "ggwap",
            "ggwah",
            "ggwae",
            "ggwaeg",
            "ggwaegg",
            "ggwaegs",
            "ggwaen",
            "ggwaenj",
            "ggwaenh",
            "ggwaed",
            "ggwael",
            "ggwaelg",
            "ggwaelm",
            "ggwaelb",
            "ggwaels",
            "ggwaelt",
            "ggwaelp",
            "ggwaelh",
            "ggwaem",
            "ggwaeb",
            "ggwaebs",
            "ggwaes",
            "ggwaess",
            "ggwaeng",
            "ggwaej",
            "ggwaec",
            "ggwaek",
            "ggwaet",
            "ggwaep",
            "ggwaeh",
            "ggoe",
            "ggoeg",
            "ggoegg",
            "ggoegs",
            "ggoen",
            "ggoenj",
            "ggoenh",
            "ggoed",
            "ggoel",
            "ggoelg",
            "ggoelm",
            "ggoelb",
            "ggoels",
            "ggoelt",
            "ggoelp",
            "ggoelh",
            "ggoem",
            "ggoeb",
            "ggoebs",
            "ggoes",
            "ggoess",
            "ggoeng",
            "ggoej",
            "ggoec",
            "ggoek",
            "ggoet",
            "ggoep",
            "ggoeh",
            "ggyo",
            "ggyog",
            "ggyogg",
            "ggyogs",
            "ggyon",
            "ggyonj",
            "ggyonh",
            "ggyod",
            "ggyol",
            "ggyolg",
            "ggyolm",
            "ggyolb",
            "ggyols",
            "ggyolt",
            "ggyolp",
            "ggyolh",
            "ggyom",
            "ggyob",
            "ggyobs",
            "ggyos",
            "ggyoss",
            "ggyong",
            "ggyoj",
            "ggyoc",
            "ggyok",
            "ggyot",
            "ggyop",
            "ggyoh",
            "ggu",
            "ggug",
            "ggugg",
            "ggugs",
            "ggun",
            "ggunj",
            "ggunh",
            "ggud",
            "ggul",
            "ggulg",
            "ggulm",
            "ggulb",
            "gguls",
            "ggult",
            "ggulp",
            "ggulh",
            "ggum",
            "ggub",
            "ggubs",
            "ggus",
            "gguss",
            "ggung",
            "gguj",
            "gguc",
            "gguk",
            "ggut",
            "ggup",
            "gguh",
            "ggweo",
            "ggweog",
            "ggweogg",
            "ggweogs",
            "ggweon",
            "ggweonj",
            "ggweonh",
            "ggweod",
            "ggweol",
            "ggweolg",
            "ggweolm",
            "ggweolb",
            "ggweols",
            "ggweolt",
            "ggweolp",
            "ggweolh",
            "ggweom",
            "ggweob",
            "ggweobs",
            "ggweos",
            "ggweoss",
            "ggweong",
            "ggweoj",
            "ggweoc",
            "ggweok",
            "ggweot",
            "ggweop",
            "ggweoh",
            "ggwe",
            "ggweg",
            "ggwegg",
            "ggwegs",
            "ggwen",
            "ggwenj",
            "ggwenh",
            "ggwed",
            "ggwel",
            "ggwelg",
            "ggwelm",
            "ggwelb",
            "ggwels",
            "ggwelt",
            "ggwelp",
            "ggwelh"
        ],
        [
            "ggwem",
            "ggweb",
            "ggwebs",
            "ggwes",
            "ggwess",
            "ggweng",
            "ggwej",
            "ggwec",
            "ggwek",
            "ggwet",
            "ggwep",
            "ggweh",
            "ggwi",
            "ggwig",
            "ggwigg",
            "ggwigs",
            "ggwin",
            "ggwinj",
            "ggwinh",
            "ggwid",
            "ggwil",
            "ggwilg",
            "ggwilm",
            "ggwilb",
            "ggwils",
            "ggwilt",
            "ggwilp",
            "ggwilh",
            "ggwim",
            "ggwib",
            "ggwibs",
            "ggwis",
            "ggwiss",
            "ggwing",
            "ggwij",
            "ggwic",
            "ggwik",
            "ggwit",
            "ggwip",
            "ggwih",
            "ggyu",
            "ggyug",
            "ggyugg",
            "ggyugs",
            "ggyun",
            "ggyunj",
            "ggyunh",
            "ggyud",
            "ggyul",
            "ggyulg",
            "ggyulm",
            "ggyulb",
            "ggyuls",
            "ggyult",
            "ggyulp",
            "ggyulh",
            "ggyum",
            "ggyub",
            "ggyubs",
            "ggyus",
            "ggyuss",
            "ggyung",
            "ggyuj",
            "ggyuc",
            "ggyuk",
            "ggyut",
            "ggyup",
            "ggyuh",
            "ggeu",
            "ggeug",
            "ggeugg",
            "ggeugs",
            "ggeun",
            "ggeunj",
            "ggeunh",
            "ggeud",
            "ggeul",
            "ggeulg",
            "ggeulm",
            "ggeulb",
            "ggeuls",
            "ggeult",
            "ggeulp",
            "ggeulh",
            "ggeum",
            "ggeub",
            "ggeubs",
            "ggeus",
            "ggeuss",
            "ggeung",
            "ggeuj",
            "ggeuc",
            "ggeuk",
            "ggeut",
            "ggeup",
            "ggeuh",
            "ggyi",
            "ggyig",
            "ggyigg",
            "ggyigs",
            "ggyin",
            "ggyinj",
            "ggyinh",
            "ggyid",
            "ggyil",
            "ggyilg",
            "ggyilm",
            "ggyilb",
            "ggyils",
            "ggyilt",
            "ggyilp",
            "ggyilh",
            "ggyim",
            "ggyib",
            "ggyibs",
            "ggyis",
            "ggyiss",
            "ggying",
            "ggyij",
            "ggyic",
            "ggyik",
            "ggyit",
            "ggyip",
            "ggyih",
            "ggi",
            "ggig",
            "ggigg",
            "ggigs",
            "ggin",
            "gginj",
            "gginh",
            "ggid",
            "ggil",
            "ggilg",
            "ggilm",
            "ggilb",
            "ggils",
            "ggilt",
            "ggilp",
            "ggilh",
            "ggim",
            "ggib",
            "ggibs",
            "ggis",
            "ggiss",
            "gging",
            "ggij",
            "ggic",
            "ggik",
            "ggit",
            "ggip",
            "ggih",
            "na",
            "nag",
            "nagg",
            "nags",
            "nan",
            "nanj",
            "nanh",
            "nad",
            "nal",
            "nalg",
            "nalm",
            "nalb",
            "nals",
            "nalt",
            "nalp",
            "nalh",
            "nam",
            "nab",
            "nabs",
            "nas",
            "nass",
            "nang",
            "naj",
            "nac",
            "nak",
            "nat",
            "nap",
            "nah",
            "nae",
            "naeg",
            "naegg",
            "naegs",
            "naen",
            "naenj",
            "naenh",
            "naed",
            "nael",
            "naelg",
            "naelm",
            "naelb",
            "naels",
            "naelt",
            "naelp",
            "naelh",
            "naem",
            "naeb",
            "naebs",
            "naes",
            "naess",
            "naeng",
            "naej",
            "naec",
            "naek",
            "naet",
            "naep",
            "naeh",
            "nya",
            "nyag",
            "nyagg",
            "nyags",
            "nyan",
            "nyanj",
            "nyanh",
            "nyad",
            "nyal",
            "nyalg",
            "nyalm",
            "nyalb",
            "nyals",
            "nyalt",
            "nyalp",
            "nyalh",
            "nyam",
            "nyab",
            "nyabs",
            "nyas",
            "nyass",
            "nyang",
            "nyaj",
            "nyac",
            "nyak",
            "nyat",
            "nyap",
            "nyah",
            "nyae",
            "nyaeg",
            "nyaegg",
            "nyaegs",
            "nyaen",
            "nyaenj",
            "nyaenh",
            "nyaed",
            "nyael",
            "nyaelg",
            "nyaelm",
            "nyaelb",
            "nyaels",
            "nyaelt",
            "nyaelp",
            "nyaelh",
            "nyaem",
            "nyaeb",
            "nyaebs",
            "nyaes"
        ],
        [
            "nyaess",
            "nyaeng",
            "nyaej",
            "nyaec",
            "nyaek",
            "nyaet",
            "nyaep",
            "nyaeh",
            "neo",
            "neog",
            "neogg",
            "neogs",
            "neon",
            "neonj",
            "neonh",
            "neod",
            "neol",
            "neolg",
            "neolm",
            "neolb",
            "neols",
            "neolt",
            "neolp",
            "neolh",
            "neom",
            "neob",
            "neobs",
            "neos",
            "neoss",
            "neong",
            "neoj",
            "neoc",
            "neok",
            "neot",
            "neop",
            "neoh",
            "ne",
            "neg",
            "negg",
            "negs",
            "nen",
            "nenj",
            "nenh",
            "ned",
            "nel",
            "nelg",
            "nelm",
            "nelb",
            "nels",
            "nelt",
            "nelp",
            "nelh",
            "nem",
            "neb",
            "nebs",
            "nes",
            "ness",
            "neng",
            "nej",
            "nec",
            "nek",
            "net",
            "nep",
            "neh",
            "nyeo",
            "nyeog",
            "nyeogg",
            "nyeogs",
            "nyeon",
            "nyeonj",
            "nyeonh",
            "nyeod",
            "nyeol",
            "nyeolg",
            "nyeolm",
            "nyeolb",
            "nyeols",
            "nyeolt",
            "nyeolp",
            "nyeolh",
            "nyeom",
            "nyeob",
            "nyeobs",
            "nyeos",
            "nyeoss",
            "nyeong",
            "nyeoj",
            "nyeoc",
            "nyeok",
            "nyeot",
            "nyeop",
            "nyeoh",
            "nye",
            "nyeg",
            "nyegg",
            "nyegs",
            "nyen",
            "nyenj",
            "nyenh",
            "nyed",
            "nyel",
            "nyelg",
            "nyelm",
            "nyelb",
            "nyels",
            "nyelt",
            "nyelp",
            "nyelh",
            "nyem",
            "nyeb",
            "nyebs",
            "nyes",
            "nyess",
            "nyeng",
            "nyej",
            "nyec",
            "nyek",
            "nyet",
            "nyep",
            "nyeh",
            "no",
            "nog",
            "nogg",
            "nogs",
            "non",
            "nonj",
            "nonh",
            "nod",
            "nol",
            "nolg",
            "nolm",
            "nolb",
            "nols",
            "nolt",
            "nolp",
            "nolh",
            "nom",
            "nob",
            "nobs",
            "nos",
            "noss",
            "nong",
            "noj",
            "noc",
            "nok",
            "not",
            "nop",
            "noh",
            "nwa",
            "nwag",
            "nwagg",
            "nwags",
            "nwan",
            "nwanj",
            "nwanh",
            "nwad",
            "nwal",
            "nwalg",
            "nwalm",
            "nwalb",
            "nwals",
            "nwalt",
            "nwalp",
            "nwalh",
            "nwam",
            "nwab",
            "nwabs",
            "nwas",
            "nwass",
            "nwang",
            "nwaj",
            "nwac",
            "nwak",
            "nwat",
            "nwap",
            "nwah",
            "nwae",
            "nwaeg",
            "nwaegg",
            "nwaegs",
            "nwaen",
            "nwaenj",
            "nwaenh",
            "nwaed",
            "nwael",
            "nwaelg",
            "nwaelm",
            "nwaelb",
            "nwaels",
            "nwaelt",
            "nwaelp",
            "nwaelh",
            "nwaem",
            "nwaeb",
            "nwaebs",
            "nwaes",
            "nwaess",
            "nwaeng",
            "nwaej",
            "nwaec",
            "nwaek",
            "nwaet",
            "nwaep",
            "nwaeh",
            "noe",
            "noeg",
            "noegg",
            "noegs",
            "noen",
            "noenj",
            "noenh",
            "noed",
            "noel",
            "noelg",
            "noelm",
            "noelb",
            "noels",
            "noelt",
            "noelp",
            "noelh",
            "noem",
            "noeb",
            "noebs",
            "noes",
            "noess",
            "noeng",
            "noej",
            "noec",
            "noek",
            "noet",
            "noep",
            "noeh",
            "nyo",
            "nyog",
            "nyogg",
            "nyogs",
            "nyon",
            "nyonj",
            "nyonh",
            "nyod",
            "nyol",
            "nyolg",
            "nyolm",
            "nyolb",
            "nyols",
            "nyolt",
            "nyolp",
            "nyolh",
            "nyom",
            "nyob",
            "nyobs",
            "nyos",
            "nyoss",
            "nyong",
            "nyoj",
            "nyoc"
        ],
        [
            "nyok",
            "nyot",
            "nyop",
            "nyoh",
            "nu",
            "nug",
            "nugg",
            "nugs",
            "nun",
            "nunj",
            "nunh",
            "nud",
            "nul",
            "nulg",
            "nulm",
            "nulb",
            "nuls",
            "nult",
            "nulp",
            "nulh",
            "num",
            "nub",
            "nubs",
            "nus",
            "nuss",
            "nung",
            "nuj",
            "nuc",
            "nuk",
            "nut",
            "nup",
            "nuh",
            "nweo",
            "nweog",
            "nweogg",
            "nweogs",
            "nweon",
            "nweonj",
            "nweonh",
            "nweod",
            "nweol",
            "nweolg",
            "nweolm",
            "nweolb",
            "nweols",
            "nweolt",
            "nweolp",
            "nweolh",
            "nweom",
            "nweob",
            "nweobs",
            "nweos",
            "nweoss",
            "nweong",
            "nweoj",
            "nweoc",
            "nweok",
            "nweot",
            "nweop",
            "nweoh",
            "nwe",
            "nweg",
            "nwegg",
            "nwegs",
            "nwen",
            "nwenj",
            "nwenh",
            "nwed",
            "nwel",
            "nwelg",
            "nwelm",
            "nwelb",
            "nwels",
            "nwelt",
            "nwelp",
            "nwelh",
            "nwem",
            "nweb",
            "nwebs",
            "nwes",
            "nwess",
            "nweng",
            "nwej",
            "nwec",
            "nwek",
            "nwet",
            "nwep",
            "nweh",
            "nwi",
            "nwig",
            "nwigg",
            "nwigs",
            "nwin",
            "nwinj",
            "nwinh",
            "nwid",
            "nwil",
            "nwilg",
            "nwilm",
            "nwilb",
            "nwils",
            "nwilt",
            "nwilp",
            "nwilh",
            "nwim",
            "nwib",
            "nwibs",
            "nwis",
            "nwiss",
            "nwing",
            "nwij",
            "nwic",
            "nwik",
            "nwit",
            "nwip",
            "nwih",
            "nyu",
            "nyug",
            "nyugg",
            "nyugs",
            "nyun",
            "nyunj",
            "nyunh",
            "nyud",
            "nyul",
            "nyulg",
            "nyulm",
            "nyulb",
            "nyuls",
            "nyult",
            "nyulp",
            "nyulh",
            "nyum",
            "nyub",
            "nyubs",
            "nyus",
            "nyuss",
            "nyung",
            "nyuj",
            "nyuc",
            "nyuk",
            "nyut",
            "nyup",
            "nyuh",
            "neu",
            "neug",
            "neugg",
            "neugs",
            "neun",
            "neunj",
            "neunh",
            "neud",
            "neul",
            "neulg",
            "neulm",
            "neulb",
            "neuls",
            "neult",
            "neulp",
            "neulh",
            "neum",
            "neub",
            "neubs",
            "neus",
            "neuss",
            "neung",
            "neuj",
            "neuc",
            "neuk",
            "neut",
            "neup",
            "neuh",
            "nyi",
            "nyig",
            "nyigg",
            "nyigs",
            "nyin",
            "nyinj",
            "nyinh",
            "nyid",
            "nyil",
            "nyilg",
            "nyilm",
            "nyilb",
            "nyils",
            "nyilt",
            "nyilp",
            "nyilh",
            "nyim",
            "nyib",
            "nyibs",
            "nyis",
            "nyiss",
            "nying",
            "nyij",
            "nyic",
            "nyik",
            "nyit",
            "nyip",
            "nyih",
            "ni",
            "nig",
            "nigg",
            "nigs",
            "nin",
            "ninj",
            "ninh",
            "nid",
            "nil",
            "nilg",
            "nilm",
            "nilb",
            "nils",
            "nilt",
            "nilp",
            "nilh",
            "nim",
            "nib",
            "nibs",
            "nis",
            "niss",
            "ning",
            "nij",
            "nic",
            "nik",
            "nit",
            "nip",
            "nih",
            "da",
            "dag",
            "dagg",
            "dags",
            "dan",
            "danj",
            "danh",
            "dad",
            "dal",
            "dalg",
            "dalm",
            "dalb",
            "dals",
            "dalt",
            "dalp",
            "dalh",
            "dam",
            "dab",
            "dabs",
            "das",
            "dass",
            "dang",
            "daj",
            "dac",
            "dak",
            "dat",
            "dap",
            "dah"
        ],
        [
            "dae",
            "daeg",
            "daegg",
            "daegs",
            "daen",
            "daenj",
            "daenh",
            "daed",
            "dael",
            "daelg",
            "daelm",
            "daelb",
            "daels",
            "daelt",
            "daelp",
            "daelh",
            "daem",
            "daeb",
            "daebs",
            "daes",
            "daess",
            "daeng",
            "daej",
            "daec",
            "daek",
            "daet",
            "daep",
            "daeh",
            "dya",
            "dyag",
            "dyagg",
            "dyags",
            "dyan",
            "dyanj",
            "dyanh",
            "dyad",
            "dyal",
            "dyalg",
            "dyalm",
            "dyalb",
            "dyals",
            "dyalt",
            "dyalp",
            "dyalh",
            "dyam",
            "dyab",
            "dyabs",
            "dyas",
            "dyass",
            "dyang",
            "dyaj",
            "dyac",
            "dyak",
            "dyat",
            "dyap",
            "dyah",
            "dyae",
            "dyaeg",
            "dyaegg",
            "dyaegs",
            "dyaen",
            "dyaenj",
            "dyaenh",
            "dyaed",
            "dyael",
            "dyaelg",
            "dyaelm",
            "dyaelb",
            "dyaels",
            "dyaelt",
            "dyaelp",
            "dyaelh",
            "dyaem",
            "dyaeb",
            "dyaebs",
            "dyaes",
            "dyaess",
            "dyaeng",
            "dyaej",
            "dyaec",
            "dyaek",
            "dyaet",
            "dyaep",
            "dyaeh",
            "deo",
            "deog",
            "deogg",
            "deogs",
            "deon",
            "deonj",
            "deonh",
            "deod",
            "deol",
            "deolg",
            "deolm",
            "deolb",
            "deols",
            "deolt",
            "deolp",
            "deolh",
            "deom",
            "deob",
            "deobs",
            "deos",
            "deoss",
            "deong",
            "deoj",
            "deoc",
            "deok",
            "deot",
            "deop",
            "deoh",
            "de",
            "deg",
            "degg",
            "degs",
            "den",
            "denj",
            "denh",
            "ded",
            "del",
            "delg",
            "delm",
            "delb",
            "dels",
            "delt",
            "delp",
            "delh",
            "dem",
            "deb",
            "debs",
            "des",
            "dess",
            "deng",
            "dej",
            "dec",
            "dek",
            "det",
            "dep",
            "deh",
            "dyeo",
            "dyeog",
            "dyeogg",
            "dyeogs",
            "dyeon",
            "dyeonj",
            "dyeonh",
            "dyeod",
            "dyeol",
            "dyeolg",
            "dyeolm",
            "dyeolb",
            "dyeols",
            "dyeolt",
            "dyeolp",
            "dyeolh",
            "dyeom",
            "dyeob",
            "dyeobs",
            "dyeos",
            "dyeoss",
            "dyeong",
            "dyeoj",
            "dyeoc",
            "dyeok",
            "dyeot",
            "dyeop",
            "dyeoh",
            "dye",
            "dyeg",
            "dyegg",
            "dyegs",
            "dyen",
            "dyenj",
            "dyenh",
            "dyed",
            "dyel",
            "dyelg",
            "dyelm",
            "dyelb",
            "dyels",
            "dyelt",
            "dyelp",
            "dyelh",
            "dyem",
            "dyeb",
            "dyebs",
            "dyes",
            "dyess",
            "dyeng",
            "dyej",
            "dyec",
            "dyek",
            "dyet",
            "dyep",
            "dyeh",
            "do",
            "dog",
            "dogg",
            "dogs",
            "don",
            "donj",
            "donh",
            "dod",
            "dol",
            "dolg",
            "dolm",
            "dolb",
            "dols",
            "dolt",
            "dolp",
            "dolh",
            "dom",
            "dob",
            "dobs",
            "dos",
            "doss",
            "dong",
            "doj",
            "doc",
            "dok",
            "dot",
            "dop",
            "doh",
            "dwa",
            "dwag",
            "dwagg",
            "dwags",
            "dwan",
            "dwanj",
            "dwanh",
            "dwad",
            "dwal",
            "dwalg",
            "dwalm",
            "dwalb",
            "dwals",
            "dwalt",
            "dwalp",
            "dwalh",
            "dwam",
            "dwab",
            "dwabs",
            "dwas",
            "dwass",
            "dwang",
            "dwaj",
            "dwac",
            "dwak",
            "dwat",
            "dwap",
            "dwah",
            "dwae",
            "dwaeg",
            "dwaegg",
            "dwaegs"
        ],
        [
            "dwaen",
            "dwaenj",
            "dwaenh",
            "dwaed",
            "dwael",
            "dwaelg",
            "dwaelm",
            "dwaelb",
            "dwaels",
            "dwaelt",
            "dwaelp",
            "dwaelh",
            "dwaem",
            "dwaeb",
            "dwaebs",
            "dwaes",
            "dwaess",
            "dwaeng",
            "dwaej",
            "dwaec",
            "dwaek",
            "dwaet",
            "dwaep",
            "dwaeh",
            "doe",
            "doeg",
            "doegg",
            "doegs",
            "doen",
            "doenj",
            "doenh",
            "doed",
            "doel",
            "doelg",
            "doelm",
            "doelb",
            "doels",
            "doelt",
            "doelp",
            "doelh",
            "doem",
            "doeb",
            "doebs",
            "does",
            "doess",
            "doeng",
            "doej",
            "doec",
            "doek",
            "doet",
            "doep",
            "doeh",
            "dyo",
            "dyog",
            "dyogg",
            "dyogs",
            "dyon",
            "dyonj",
            "dyonh",
            "dyod",
            "dyol",
            "dyolg",
            "dyolm",
            "dyolb",
            "dyols",
            "dyolt",
            "dyolp",
            "dyolh",
            "dyom",
            "dyob",
            "dyobs",
            "dyos",
            "dyoss",
            "dyong",
            "dyoj",
            "dyoc",
            "dyok",
            "dyot",
            "dyop",
            "dyoh",
            "du",
            "dug",
            "dugg",
            "dugs",
            "dun",
            "dunj",
            "dunh",
            "dud",
            "dul",
            "dulg",
            "dulm",
            "dulb",
            "duls",
            "dult",
            "dulp",
            "dulh",
            "dum",
            "dub",
            "dubs",
            "dus",
            "duss",
            "dung",
            "duj",
            "duc",
            "duk",
            "dut",
            "dup",
            "duh",
            "dweo",
            "dweog",
            "dweogg",
            "dweogs",
            "dweon",
            "dweonj",
            "dweonh",
            "dweod",
            "dweol",
            "dweolg",
            "dweolm",
            "dweolb",
            "dweols",
            "dweolt",
            "dweolp",
            "dweolh",
            "dweom",
            "dweob",
            "dweobs",
            "dweos",
            "dweoss",
            "dweong",
            "dweoj",
            "dweoc",
            "dweok",
            "dweot",
            "dweop",
            "dweoh",
            "dwe",
            "dweg",
            "dwegg",
            "dwegs",
            "dwen",
            "dwenj",
            "dwenh",
            "dwed",
            "dwel",
            "dwelg",
            "dwelm",
            "dwelb",
            "dwels",
            "dwelt",
            "dwelp",
            "dwelh",
            "dwem",
            "dweb",
            "dwebs",
            "dwes",
            "dwess",
            "dweng",
            "dwej",
            "dwec",
            "dwek",
            "dwet",
            "dwep",
            "dweh",
            "dwi",
            "dwig",
            "dwigg",
            "dwigs",
            "dwin",
            "dwinj",
            "dwinh",
            "dwid",
            "dwil",
            "dwilg",
            "dwilm",
            "dwilb",
            "dwils",
            "dwilt",
            "dwilp",
            "dwilh",
            "dwim",
            "dwib",
            "dwibs",
            "dwis",
            "dwiss",
            "dwing",
            "dwij",
            "dwic",
            "dwik",
            "dwit",
            "dwip",
            "dwih",
            "dyu",
            "dyug",
            "dyugg",
            "dyugs",
            "dyun",
            "dyunj",
            "dyunh",
            "dyud",
            "dyul",
            "dyulg",
            "dyulm",
            "dyulb",
            "dyuls",
            "dyult",
            "dyulp",
            "dyulh",
            "dyum",
            "dyub",
            "dyubs",
            "dyus",
            "dyuss",
            "dyung",
            "dyuj",
            "dyuc",
            "dyuk",
            "dyut",
            "dyup",
            "dyuh",
            "deu",
            "deug",
            "deugg",
            "deugs",
            "deun",
            "deunj",
            "deunh",
            "deud",
            "deul",
            "deulg",
            "deulm",
            "deulb",
            "deuls",
            "deult",
            "deulp",
            "deulh",
            "deum",
            "deub",
            "deubs",
            "deus",
            "deuss",
            "deung",
            "deuj",
            "deuc",
            "deuk",
            "deut",
            "deup",
            "deuh",
            "dyi",
            "dyig",
            "dyigg",
            "dyigs",
            "dyin",
            "dyinj",
            "dyinh",
            "dyid"
        ],
        [
            "dyil",
            "dyilg",
            "dyilm",
            "dyilb",
            "dyils",
            "dyilt",
            "dyilp",
            "dyilh",
            "dyim",
            "dyib",
            "dyibs",
            "dyis",
            "dyiss",
            "dying",
            "dyij",
            "dyic",
            "dyik",
            "dyit",
            "dyip",
            "dyih",
            "di",
            "dig",
            "digg",
            "digs",
            "din",
            "dinj",
            "dinh",
            "did",
            "dil",
            "dilg",
            "dilm",
            "dilb",
            "dils",
            "dilt",
            "dilp",
            "dilh",
            "dim",
            "dib",
            "dibs",
            "dis",
            "diss",
            "ding",
            "dij",
            "dic",
            "dik",
            "dit",
            "dip",
            "dih",
            "dda",
            "ddag",
            "ddagg",
            "ddags",
            "ddan",
            "ddanj",
            "ddanh",
            "ddad",
            "ddal",
            "ddalg",
            "ddalm",
            "ddalb",
            "ddals",
            "ddalt",
            "ddalp",
            "ddalh",
            "ddam",
            "ddab",
            "ddabs",
            "ddas",
            "ddass",
            "ddang",
            "ddaj",
            "ddac",
            "ddak",
            "ddat",
            "ddap",
            "ddah",
            "ddae",
            "ddaeg",
            "ddaegg",
            "ddaegs",
            "ddaen",
            "ddaenj",
            "ddaenh",
            "ddaed",
            "ddael",
            "ddaelg",
            "ddaelm",
            "ddaelb",
            "ddaels",
            "ddaelt",
            "ddaelp",
            "ddaelh",
            "ddaem",
            "ddaeb",
            "ddaebs",
            "ddaes",
            "ddaess",
            "ddaeng",
            "ddaej",
            "ddaec",
            "ddaek",
            "ddaet",
            "ddaep",
            "ddaeh",
            "ddya",
            "ddyag",
            "ddyagg",
            "ddyags",
            "ddyan",
            "ddyanj",
            "ddyanh",
            "ddyad",
            "ddyal",
            "ddyalg",
            "ddyalm",
            "ddyalb",
            "ddyals",
            "ddyalt",
            "ddyalp",
            "ddyalh",
            "ddyam",
            "ddyab",
            "ddyabs",
            "ddyas",
            "ddyass",
            "ddyang",
            "ddyaj",
            "ddyac",
            "ddyak",
            "ddyat",
            "ddyap",
            "ddyah",
            "ddyae",
            "ddyaeg",
            "ddyaegg",
            "ddyaegs",
            "ddyaen",
            "ddyaenj",
            "ddyaenh",
            "ddyaed",
            "ddyael",
            "ddyaelg",
            "ddyaelm",
            "ddyaelb",
            "ddyaels",
            "ddyaelt",
            "ddyaelp",
            "ddyaelh",
            "ddyaem",
            "ddyaeb",
            "ddyaebs",
            "ddyaes",
            "ddyaess",
            "ddyaeng",
            "ddyaej",
            "ddyaec",
            "ddyaek",
            "ddyaet",
            "ddyaep",
            "ddyaeh",
            "ddeo",
            "ddeog",
            "ddeogg",
            "ddeogs",
            "ddeon",
            "ddeonj",
            "ddeonh",
            "ddeod",
            "ddeol",
            "ddeolg",
            "ddeolm",
            "ddeolb",
            "ddeols",
            "ddeolt",
            "ddeolp",
            "ddeolh",
            "ddeom",
            "ddeob",
            "ddeobs",
            "ddeos",
            "ddeoss",
            "ddeong",
            "ddeoj",
            "ddeoc",
            "ddeok",
            "ddeot",
            "ddeop",
            "ddeoh",
            "dde",
            "ddeg",
            "ddegg",
            "ddegs",
            "dden",
            "ddenj",
            "ddenh",
            "dded",
            "ddel",
            "ddelg",
            "ddelm",
            "ddelb",
            "ddels",
            "ddelt",
            "ddelp",
            "ddelh",
            "ddem",
            "ddeb",
            "ddebs",
            "ddes",
            "ddess",
            "ddeng",
            "ddej",
            "ddec",
            "ddek",
            "ddet",
            "ddep",
            "ddeh",
            "ddyeo",
            "ddyeog",
            "ddyeogg",
            "ddyeogs",
            "ddyeon",
            "ddyeonj",
            "ddyeonh",
            "ddyeod",
            "ddyeol",
            "ddyeolg",
            "ddyeolm",
            "ddyeolb",
            "ddyeols",
            "ddyeolt",
            "ddyeolp",
            "ddyeolh",
            "ddyeom",
            "ddyeob",
            "ddyeobs",
            "ddyeos",
            "ddyeoss",
            "ddyeong",
            "ddyeoj",
            "ddyeoc",
            "ddyeok",
            "ddyeot",
            "ddyeop",
            "ddyeoh",
            "ddye",
            "ddyeg",
            "ddyegg",
            "ddyegs",
            "ddyen",
            "ddyenj",
            "ddyenh",
            "ddyed",
            "ddyel",
            "ddyelg",
            "ddyelm",
            "ddyelb"
        ],
        [
            "ddyels",
            "ddyelt",
            "ddyelp",
            "ddyelh",
            "ddyem",
            "ddyeb",
            "ddyebs",
            "ddyes",
            "ddyess",
            "ddyeng",
            "ddyej",
            "ddyec",
            "ddyek",
            "ddyet",
            "ddyep",
            "ddyeh",
            "ddo",
            "ddog",
            "ddogg",
            "ddogs",
            "ddon",
            "ddonj",
            "ddonh",
            "ddod",
            "ddol",
            "ddolg",
            "ddolm",
            "ddolb",
            "ddols",
            "ddolt",
            "ddolp",
            "ddolh",
            "ddom",
            "ddob",
            "ddobs",
            "ddos",
            "ddoss",
            "ddong",
            "ddoj",
            "ddoc",
            "ddok",
            "ddot",
            "ddop",
            "ddoh",
            "ddwa",
            "ddwag",
            "ddwagg",
            "ddwags",
            "ddwan",
            "ddwanj",
            "ddwanh",
            "ddwad",
            "ddwal",
            "ddwalg",
            "ddwalm",
            "ddwalb",
            "ddwals",
            "ddwalt",
            "ddwalp",
            "ddwalh",
            "ddwam",
            "ddwab",
            "ddwabs",
            "ddwas",
            "ddwass",
            "ddwang",
            "ddwaj",
            "ddwac",
            "ddwak",
            "ddwat",
            "ddwap",
            "ddwah",
            "ddwae",
            "ddwaeg",
            "ddwaegg",
            "ddwaegs",
            "ddwaen",
            "ddwaenj",
            "ddwaenh",
            "ddwaed",
            "ddwael",
            "ddwaelg",
            "ddwaelm",
            "ddwaelb",
            "ddwaels",
            "ddwaelt",
            "ddwaelp",
            "ddwaelh",
            "ddwaem",
            "ddwaeb",
            "ddwaebs",
            "ddwaes",
            "ddwaess",
            "ddwaeng",
            "ddwaej",
            "ddwaec",
            "ddwaek",
            "ddwaet",
            "ddwaep",
            "ddwaeh",
            "ddoe",
            "ddoeg",
            "ddoegg",
            "ddoegs",
            "ddoen",
            "ddoenj",
            "ddoenh",
            "ddoed",
            "ddoel",
            "ddoelg",
            "ddoelm",
            "ddoelb",
            "ddoels",
            "ddoelt",
            "ddoelp",
            "ddoelh",
            "ddoem",
            "ddoeb",
            "ddoebs",
            "ddoes",
            "ddoess",
            "ddoeng",
            "ddoej",
            "ddoec",
            "ddoek",
            "ddoet",
            "ddoep",
            "ddoeh",
            "ddyo",
            "ddyog",
            "ddyogg",
            "ddyogs",
            "ddyon",
            "ddyonj",
            "ddyonh",
            "ddyod",
            "ddyol",
            "ddyolg",
            "ddyolm",
            "ddyolb",
            "ddyols",
            "ddyolt",
            "ddyolp",
            "ddyolh",
            "ddyom",
            "ddyob",
            "ddyobs",
            "ddyos",
            "ddyoss",
            "ddyong",
            "ddyoj",
            "ddyoc",
            "ddyok",
            "ddyot",
            "ddyop",
            "ddyoh",
            "ddu",
            "ddug",
            "ddugg",
            "ddugs",
            "ddun",
            "ddunj",
            "ddunh",
            "ddud",
            "ddul",
            "ddulg",
            "ddulm",
            "ddulb",
            "dduls",
            "ddult",
            "ddulp",
            "ddulh",
            "ddum",
            "ddub",
            "ddubs",
            "ddus",
            "dduss",
            "ddung",
            "dduj",
            "dduc",
            "dduk",
            "ddut",
            "ddup",
            "dduh",
            "ddweo",
            "ddweog",
            "ddweogg",
            "ddweogs",
            "ddweon",
            "ddweonj",
            "ddweonh",
            "ddweod",
            "ddweol",
            "ddweolg",
            "ddweolm",
            "ddweolb",
            "ddweols",
            "ddweolt",
            "ddweolp",
            "ddweolh",
            "ddweom",
            "ddweob",
            "ddweobs",
            "ddweos",
            "ddweoss",
            "ddweong",
            "ddweoj",
            "ddweoc",
            "ddweok",
            "ddweot",
            "ddweop",
            "ddweoh",
            "ddwe",
            "ddweg",
            "ddwegg",
            "ddwegs",
            "ddwen",
            "ddwenj",
            "ddwenh",
            "ddwed",
            "ddwel",
            "ddwelg",
            "ddwelm",
            "ddwelb",
            "ddwels",
            "ddwelt",
            "ddwelp",
            "ddwelh",
            "ddwem",
            "ddweb",
            "ddwebs",
            "ddwes",
            "ddwess",
            "ddweng",
            "ddwej",
            "ddwec",
            "ddwek",
            "ddwet",
            "ddwep",
            "ddweh",
            "ddwi",
            "ddwig",
            "ddwigg",
            "ddwigs",
            "ddwin",
            "ddwinj",
            "ddwinh",
            "ddwid",
            "ddwil",
            "ddwilg",
            "ddwilm",
            "ddwilb",
            "ddwils",
            "ddwilt",
            "ddwilp",
            "ddwilh"
        ],
        [
            "ddwim",
            "ddwib",
            "ddwibs",
            "ddwis",
            "ddwiss",
            "ddwing",
            "ddwij",
            "ddwic",
            "ddwik",
            "ddwit",
            "ddwip",
            "ddwih",
            "ddyu",
            "ddyug",
            "ddyugg",
            "ddyugs",
            "ddyun",
            "ddyunj",
            "ddyunh",
            "ddyud",
            "ddyul",
            "ddyulg",
            "ddyulm",
            "ddyulb",
            "ddyuls",
            "ddyult",
            "ddyulp",
            "ddyulh",
            "ddyum",
            "ddyub",
            "ddyubs",
            "ddyus",
            "ddyuss",
            "ddyung",
            "ddyuj",
            "ddyuc",
            "ddyuk",
            "ddyut",
            "ddyup",
            "ddyuh",
            "ddeu",
            "ddeug",
            "ddeugg",
            "ddeugs",
            "ddeun",
            "ddeunj",
            "ddeunh",
            "ddeud",
            "ddeul",
            "ddeulg",
            "ddeulm",
            "ddeulb",
            "ddeuls",
            "ddeult",
            "ddeulp",
            "ddeulh",
            "ddeum",
            "ddeub",
            "ddeubs",
            "ddeus",
            "ddeuss",
            "ddeung",
            "ddeuj",
            "ddeuc",
            "ddeuk",
            "ddeut",
            "ddeup",
            "ddeuh",
            "ddyi",
            "ddyig",
            "ddyigg",
            "ddyigs",
            "ddyin",
            "ddyinj",
            "ddyinh",
            "ddyid",
            "ddyil",
            "ddyilg",
            "ddyilm",
            "ddyilb",
            "ddyils",
            "ddyilt",
            "ddyilp",
            "ddyilh",
            "ddyim",
            "ddyib",
            "ddyibs",
            "ddyis",
            "ddyiss",
            "ddying",
            "ddyij",
            "ddyic",
            "ddyik",
            "ddyit",
            "ddyip",
            "ddyih",
            "ddi",
            "ddig",
            "ddigg",
            "ddigs",
            "ddin",
            "ddinj",
            "ddinh",
            "ddid",
            "ddil",
            "ddilg",
            "ddilm",
            "ddilb",
            "ddils",
            "ddilt",
            "ddilp",
            "ddilh",
            "ddim",
            "ddib",
            "ddibs",
            "ddis",
            "ddiss",
            "dding",
            "ddij",
            "ddic",
            "ddik",
            "ddit",
            "ddip",
            "ddih",
            "ra",
            "rag",
            "ragg",
            "rags",
            "ran",
            "ranj",
            "ranh",
            "rad",
            "ral",
            "ralg",
            "ralm",
            "ralb",
            "rals",
            "ralt",
            "ralp",
            "ralh",
            "ram",
            "rab",
            "rabs",
            "ras",
            "rass",
            "rang",
            "raj",
            "rac",
            "rak",
            "rat",
            "rap",
            "rah",
            "rae",
            "raeg",
            "raegg",
            "raegs",
            "raen",
            "raenj",
            "raenh",
            "raed",
            "rael",
            "raelg",
            "raelm",
            "raelb",
            "raels",
            "raelt",
            "raelp",
            "raelh",
            "raem",
            "raeb",
            "raebs",
            "raes",
            "raess",
            "raeng",
            "raej",
            "raec",
            "raek",
            "raet",
            "raep",
            "raeh",
            "rya",
            "ryag",
            "ryagg",
            "ryags",
            "ryan",
            "ryanj",
            "ryanh",
            "ryad",
            "ryal",
            "ryalg",
            "ryalm",
            "ryalb",
            "ryals",
            "ryalt",
            "ryalp",
            "ryalh",
            "ryam",
            "ryab",
            "ryabs",
            "ryas",
            "ryass",
            "ryang",
            "ryaj",
            "ryac",
            "ryak",
            "ryat",
            "ryap",
            "ryah",
            "ryae",
            "ryaeg",
            "ryaegg",
            "ryaegs",
            "ryaen",
            "ryaenj",
            "ryaenh",
            "ryaed",
            "ryael",
            "ryaelg",
            "ryaelm",
            "ryaelb",
            "ryaels",
            "ryaelt",
            "ryaelp",
            "ryaelh",
            "ryaem",
            "ryaeb",
            "ryaebs",
            "ryaes",
            "ryaess",
            "ryaeng",
            "ryaej",
            "ryaec",
            "ryaek",
            "ryaet",
            "ryaep",
            "ryaeh",
            "reo",
            "reog",
            "reogg",
            "reogs",
            "reon",
            "reonj",
            "reonh",
            "reod",
            "reol",
            "reolg",
            "reolm",
            "reolb",
            "reols",
            "reolt",
            "reolp",
            "reolh",
            "reom",
            "reob",
            "reobs",
            "reos"
        ],
        [
            "reoss",
            "reong",
            "reoj",
            "reoc",
            "reok",
            "reot",
            "reop",
            "reoh",
            "re",
            "reg",
            "regg",
            "regs",
            "ren",
            "renj",
            "renh",
            "red",
            "rel",
            "relg",
            "relm",
            "relb",
            "rels",
            "relt",
            "relp",
            "relh",
            "rem",
            "reb",
            "rebs",
            "res",
            "ress",
            "reng",
            "rej",
            "rec",
            "rek",
            "ret",
            "rep",
            "reh",
            "ryeo",
            "ryeog",
            "ryeogg",
            "ryeogs",
            "ryeon",
            "ryeonj",
            "ryeonh",
            "ryeod",
            "ryeol",
            "ryeolg",
            "ryeolm",
            "ryeolb",
            "ryeols",
            "ryeolt",
            "ryeolp",
            "ryeolh",
            "ryeom",
            "ryeob",
            "ryeobs",
            "ryeos",
            "ryeoss",
            "ryeong",
            "ryeoj",
            "ryeoc",
            "ryeok",
            "ryeot",
            "ryeop",
            "ryeoh",
            "rye",
            "ryeg",
            "ryegg",
            "ryegs",
            "ryen",
            "ryenj",
            "ryenh",
            "ryed",
            "ryel",
            "ryelg",
            "ryelm",
            "ryelb",
            "ryels",
            "ryelt",
            "ryelp",
            "ryelh",
            "ryem",
            "ryeb",
            "ryebs",
            "ryes",
            "ryess",
            "ryeng",
            "ryej",
            "ryec",
            "ryek",
            "ryet",
            "ryep",
            "ryeh",
            "ro",
            "rog",
            "rogg",
            "rogs",
            "ron",
            "ronj",
            "ronh",
            "rod",
            "rol",
            "rolg",
            "rolm",
            "rolb",
            "rols",
            "rolt",
            "rolp",
            "rolh",
            "rom",
            "rob",
            "robs",
            "ros",
            "ross",
            "rong",
            "roj",
            "roc",
            "rok",
            "rot",
            "rop",
            "roh",
            "rwa",
            "rwag",
            "rwagg",
            "rwags",
            "rwan",
            "rwanj",
            "rwanh",
            "rwad",
            "rwal",
            "rwalg",
            "rwalm",
            "rwalb",
            "rwals",
            "rwalt",
            "rwalp",
            "rwalh",
            "rwam",
            "rwab",
            "rwabs",
            "rwas",
            "rwass",
            "rwang",
            "rwaj",
            "rwac",
            "rwak",
            "rwat",
            "rwap",
            "rwah",
            "rwae",
            "rwaeg",
            "rwaegg",
            "rwaegs",
            "rwaen",
            "rwaenj",
            "rwaenh",
            "rwaed",
            "rwael",
            "rwaelg",
            "rwaelm",
            "rwaelb",
            "rwaels",
            "rwaelt",
            "rwaelp",
            "rwaelh",
            "rwaem",
            "rwaeb",
            "rwaebs",
            "rwaes",
            "rwaess",
            "rwaeng",
            "rwaej",
            "rwaec",
            "rwaek",
            "rwaet",
            "rwaep",
            "rwaeh",
            "roe",
            "roeg",
            "roegg",
            "roegs",
            "roen",
            "roenj",
            "roenh",
            "roed",
            "roel",
            "roelg",
            "roelm",
            "roelb",
            "roels",
            "roelt",
            "roelp",
            "roelh",
            "roem",
            "roeb",
            "roebs",
            "roes",
            "roess",
            "roeng",
            "roej",
            "roec",
            "roek",
            "roet",
            "roep",
            "roeh",
            "ryo",
            "ryog",
            "ryogg",
            "ryogs",
            "ryon",
            "ryonj",
            "ryonh",
            "ryod",
            "ryol",
            "ryolg",
            "ryolm",
            "ryolb",
            "ryols",
            "ryolt",
            "ryolp",
            "ryolh",
            "ryom",
            "ryob",
            "ryobs",
            "ryos",
            "ryoss",
            "ryong",
            "ryoj",
            "ryoc",
            "ryok",
            "ryot",
            "ryop",
            "ryoh",
            "ru",
            "rug",
            "rugg",
            "rugs",
            "run",
            "runj",
            "runh",
            "rud",
            "rul",
            "rulg",
            "rulm",
            "rulb",
            "ruls",
            "rult",
            "rulp",
            "rulh",
            "rum",
            "rub",
            "rubs",
            "rus",
            "russ",
            "rung",
            "ruj",
            "ruc"
        ],
        [
            "ruk",
            "rut",
            "rup",
            "ruh",
            "rweo",
            "rweog",
            "rweogg",
            "rweogs",
            "rweon",
            "rweonj",
            "rweonh",
            "rweod",
            "rweol",
            "rweolg",
            "rweolm",
            "rweolb",
            "rweols",
            "rweolt",
            "rweolp",
            "rweolh",
            "rweom",
            "rweob",
            "rweobs",
            "rweos",
            "rweoss",
            "rweong",
            "rweoj",
            "rweoc",
            "rweok",
            "rweot",
            "rweop",
            "rweoh",
            "rwe",
            "rweg",
            "rwegg",
            "rwegs",
            "rwen",
            "rwenj",
            "rwenh",
            "rwed",
            "rwel",
            "rwelg",
            "rwelm",
            "rwelb",
            "rwels",
            "rwelt",
            "rwelp",
            "rwelh",
            "rwem",
            "rweb",
            "rwebs",
            "rwes",
            "rwess",
            "rweng",
            "rwej",
            "rwec",
            "rwek",
            "rwet",
            "rwep",
            "rweh",
            "rwi",
            "rwig",
            "rwigg",
            "rwigs",
            "rwin",
            "rwinj",
            "rwinh",
            "rwid",
            "rwil",
            "rwilg",
            "rwilm",
            "rwilb",
            "rwils",
            "rwilt",
            "rwilp",
            "rwilh",
            "rwim",
            "rwib",
            "rwibs",
            "rwis",
            "rwiss",
            "rwing",
            "rwij",
            "rwic",
            "rwik",
            "rwit",
            "rwip",
            "rwih",
            "ryu",
            "ryug",
            "ryugg",
            "ryugs",
            "ryun",
            "ryunj",
            "ryunh",
            "ryud",
            "ryul",
            "ryulg",
            "ryulm",
            "ryulb",
            "ryuls",
            "ryult",
            "ryulp",
            "ryulh",
            "ryum",
            "ryub",
            "ryubs",
            "ryus",
            "ryuss",
            "ryung",
            "ryuj",
            "ryuc",
            "ryuk",
            "ryut",
            "ryup",
            "ryuh",
            "reu",
            "reug",
            "reugg",
            "reugs",
            "reun",
            "reunj",
            "reunh",
            "reud",
            "reul",
            "reulg",
            "reulm",
            "reulb",
            "reuls",
            "reult",
            "reulp",
            "reulh",
            "reum",
            "reub",
            "reubs",
            "reus",
            "reuss",
            "reung",
            "reuj",
            "reuc",
            "reuk",
            "reut",
            "reup",
            "reuh",
            "ryi",
            "ryig",
            "ryigg",
            "ryigs",
            "ryin",
            "ryinj",
            "ryinh",
            "ryid",
            "ryil",
            "ryilg",
            "ryilm",
            "ryilb",
            "ryils",
            "ryilt",
            "ryilp",
            "ryilh",
            "ryim",
            "ryib",
            "ryibs",
            "ryis",
            "ryiss",
            "rying",
            "ryij",
            "ryic",
            "ryik",
            "ryit",
            "ryip",
            "ryih",
            "ri",
            "rig",
            "rigg",
            "rigs",
            "rin",
            "rinj",
            "rinh",
            "rid",
            "ril",
            "rilg",
            "rilm",
            "rilb",
            "rils",
            "rilt",
            "rilp",
            "rilh",
            "rim",
            "rib",
            "ribs",
            "ris",
            "riss",
            "ring",
            "rij",
            "ric",
            "rik",
            "rit",
            "rip",
            "rih",
            "ma",
            "mag",
            "magg",
            "mags",
            "man",
            "manj",
            "manh",
            "mad",
            "mal",
            "malg",
            "malm",
            "malb",
            "mals",
            "malt",
            "malp",
            "malh",
            "mam",
            "mab",
            "mabs",
            "mas",
            "mass",
            "mang",
            "maj",
            "mac",
            "mak",
            "mat",
            "map",
            "mah",
            "mae",
            "maeg",
            "maegg",
            "maegs",
            "maen",
            "maenj",
            "maenh",
            "maed",
            "mael",
            "maelg",
            "maelm",
            "maelb",
            "maels",
            "maelt",
            "maelp",
            "maelh",
            "maem",
            "maeb",
            "maebs",
            "maes",
            "maess",
            "maeng",
            "maej",
            "maec",
            "maek",
            "maet",
            "maep",
            "maeh"
        ],
        [
            "mya",
            "myag",
            "myagg",
            "myags",
            "myan",
            "myanj",
            "myanh",
            "myad",
            "myal",
            "myalg",
            "myalm",
            "myalb",
            "myals",
            "myalt",
            "myalp",
            "myalh",
            "myam",
            "myab",
            "myabs",
            "myas",
            "myass",
            "myang",
            "myaj",
            "myac",
            "myak",
            "myat",
            "myap",
            "myah",
            "myae",
            "myaeg",
            "myaegg",
            "myaegs",
            "myaen",
            "myaenj",
            "myaenh",
            "myaed",
            "myael",
            "myaelg",
            "myaelm",
            "myaelb",
            "myaels",
            "myaelt",
            "myaelp",
            "myaelh",
            "myaem",
            "myaeb",
            "myaebs",
            "myaes",
            "myaess",
            "myaeng",
            "myaej",
            "myaec",
            "myaek",
            "myaet",
            "myaep",
            "myaeh",
            "meo",
            "meog",
            "meogg",
            "meogs",
            "meon",
            "meonj",
            "meonh",
            "meod",
            "meol",
            "meolg",
            "meolm",
            "meolb",
            "meols",
            "meolt",
            "meolp",
            "meolh",
            "meom",
            "meob",
            "meobs",
            "meos",
            "meoss",
            "meong",
            "meoj",
            "meoc",
            "meok",
            "meot",
            "meop",
            "meoh",
            "me",
            "meg",
            "megg",
            "megs",
            "men",
            "menj",
            "menh",
            "med",
            "mel",
            "melg",
            "melm",
            "melb",
            "mels",
            "melt",
            "melp",
            "melh",
            "mem",
            "meb",
            "mebs",
            "mes",
            "mess",
            "meng",
            "mej",
            "mec",
            "mek",
            "met",
            "mep",
            "meh",
            "myeo",
            "myeog",
            "myeogg",
            "myeogs",
            "myeon",
            "myeonj",
            "myeonh",
            "myeod",
            "myeol",
            "myeolg",
            "myeolm",
            "myeolb",
            "myeols",
            "myeolt",
            "myeolp",
            "myeolh",
            "myeom",
            "myeob",
            "myeobs",
            "myeos",
            "myeoss",
            "myeong",
            "myeoj",
            "myeoc",
            "myeok",
            "myeot",
            "myeop",
            "myeoh",
            "mye",
            "myeg",
            "myegg",
            "myegs",
            "myen",
            "myenj",
            "myenh",
            "myed",
            "myel",
            "myelg",
            "myelm",
            "myelb",
            "myels",
            "myelt",
            "myelp",
            "myelh",
            "myem",
            "myeb",
            "myebs",
            "myes",
            "myess",
            "myeng",
            "myej",
            "myec",
            "myek",
            "myet",
            "myep",
            "myeh",
            "mo",
            "mog",
            "mogg",
            "mogs",
            "mon",
            "monj",
            "monh",
            "mod",
            "mol",
            "molg",
            "molm",
            "molb",
            "mols",
            "molt",
            "molp",
            "molh",
            "mom",
            "mob",
            "mobs",
            "mos",
            "moss",
            "mong",
            "moj",
            "moc",
            "mok",
            "mot",
            "mop",
            "moh",
            "mwa",
            "mwag",
            "mwagg",
            "mwags",
            "mwan",
            "mwanj",
            "mwanh",
            "mwad",
            "mwal",
            "mwalg",
            "mwalm",
            "mwalb",
            "mwals",
            "mwalt",
            "mwalp",
            "mwalh",
            "mwam",
            "mwab",
            "mwabs",
            "mwas",
            "mwass",
            "mwang",
            "mwaj",
            "mwac",
            "mwak",
            "mwat",
            "mwap",
            "mwah",
            "mwae",
            "mwaeg",
            "mwaegg",
            "mwaegs",
            "mwaen",
            "mwaenj",
            "mwaenh",
            "mwaed",
            "mwael",
            "mwaelg",
            "mwaelm",
            "mwaelb",
            "mwaels",
            "mwaelt",
            "mwaelp",
            "mwaelh",
            "mwaem",
            "mwaeb",
            "mwaebs",
            "mwaes",
            "mwaess",
            "mwaeng",
            "mwaej",
            "mwaec",
            "mwaek",
            "mwaet",
            "mwaep",
            "mwaeh",
            "moe",
            "moeg",
            "moegg",
            "moegs"
        ],
        [
            "moen",
            "moenj",
            "moenh",
            "moed",
            "moel",
            "moelg",
            "moelm",
            "moelb",
            "moels",
            "moelt",
            "moelp",
            "moelh",
            "moem",
            "moeb",
            "moebs",
            "moes",
            "moess",
            "moeng",
            "moej",
            "moec",
            "moek",
            "moet",
            "moep",
            "moeh",
            "myo",
            "myog",
            "myogg",
            "myogs",
            "myon",
            "myonj",
            "myonh",
            "myod",
            "myol",
            "myolg",
            "myolm",
            "myolb",
            "myols",
            "myolt",
            "myolp",
            "myolh",
            "myom",
            "myob",
            "myobs",
            "myos",
            "myoss",
            "myong",
            "myoj",
            "myoc",
            "myok",
            "myot",
            "myop",
            "myoh",
            "mu",
            "mug",
            "mugg",
            "mugs",
            "mun",
            "munj",
            "munh",
            "mud",
            "mul",
            "mulg",
            "mulm",
            "mulb",
            "muls",
            "mult",
            "mulp",
            "mulh",
            "mum",
            "mub",
            "mubs",
            "mus",
            "muss",
            "mung",
            "muj",
            "muc",
            "muk",
            "mut",
            "mup",
            "muh",
            "mweo",
            "mweog",
            "mweogg",
            "mweogs",
            "mweon",
            "mweonj",
            "mweonh",
            "mweod",
            "mweol",
            "mweolg",
            "mweolm",
            "mweolb",
            "mweols",
            "mweolt",
            "mweolp",
            "mweolh",
            "mweom",
            "mweob",
            "mweobs",
            "mweos",
            "mweoss",
            "mweong",
            "mweoj",
            "mweoc",
            "mweok",
            "mweot",
            "mweop",
            "mweoh",
            "mwe",
            "mweg",
            "mwegg",
            "mwegs",
            "mwen",
            "mwenj",
            "mwenh",
            "mwed",
            "mwel",
            "mwelg",
            "mwelm",
            "mwelb",
            "mwels",
            "mwelt",
            "mwelp",
            "mwelh",
            "mwem",
            "mweb",
            "mwebs",
            "mwes",
            "mwess",
            "mweng",
            "mwej",
            "mwec",
            "mwek",
            "mwet",
            "mwep",
            "mweh",
            "mwi",
            "mwig",
            "mwigg",
            "mwigs",
            "mwin",
            "mwinj",
            "mwinh",
            "mwid",
            "mwil",
            "mwilg",
            "mwilm",
            "mwilb",
            "mwils",
            "mwilt",
            "mwilp",
            "mwilh",
            "mwim",
            "mwib",
            "mwibs",
            "mwis",
            "mwiss",
            "mwing",
            "mwij",
            "mwic",
            "mwik",
            "mwit",
            "mwip",
            "mwih",
            "myu",
            "myug",
            "myugg",
            "myugs",
            "myun",
            "myunj",
            "myunh",
            "myud",
            "myul",
            "myulg",
            "myulm",
            "myulb",
            "myuls",
            "myult",
            "myulp",
            "myulh",
            "myum",
            "myub",
            "myubs",
            "myus",
            "myuss",
            "myung",
            "myuj",
            "myuc",
            "myuk",
            "myut",
            "myup",
            "myuh",
            "meu",
            "meug",
            "meugg",
            "meugs",
            "meun",
            "meunj",
            "meunh",
            "meud",
            "meul",
            "meulg",
            "meulm",
            "meulb",
            "meuls",
            "meult",
            "meulp",
            "meulh",
            "meum",
            "meub",
            "meubs",
            "meus",
            "meuss",
            "meung",
            "meuj",
            "meuc",
            "meuk",
            "meut",
            "meup",
            "meuh",
            "myi",
            "myig",
            "myigg",
            "myigs",
            "myin",
            "myinj",
            "myinh",
            "myid",
            "myil",
            "myilg",
            "myilm",
            "myilb",
            "myils",
            "myilt",
            "myilp",
            "myilh",
            "myim",
            "myib",
            "myibs",
            "myis",
            "myiss",
            "mying",
            "myij",
            "myic",
            "myik",
            "myit",
            "myip",
            "myih",
            "mi",
            "mig",
            "migg",
            "migs",
            "min",
            "minj",
            "minh",
            "mid"
        ],
        [
            "mil",
            "milg",
            "milm",
            "milb",
            "mils",
            "milt",
            "milp",
            "milh",
            "mim",
            "mib",
            "mibs",
            "mis",
            "miss",
            "ming",
            "mij",
            "mic",
            "mik",
            "mit",
            "mip",
            "mih",
            "ba",
            "bag",
            "bagg",
            "bags",
            "ban",
            "banj",
            "banh",
            "bad",
            "bal",
            "balg",
            "balm",
            "balb",
            "bals",
            "balt",
            "balp",
            "balh",
            "bam",
            "bab",
            "babs",
            "bas",
            "bass",
            "bang",
            "baj",
            "bac",
            "bak",
            "bat",
            "bap",
            "bah",
            "bae",
            "baeg",
            "baegg",
            "baegs",
            "baen",
            "baenj",
            "baenh",
            "baed",
            "bael",
            "baelg",
            "baelm",
            "baelb",
            "baels",
            "baelt",
            "baelp",
            "baelh",
            "baem",
            "baeb",
            "baebs",
            "baes",
            "baess",
            "baeng",
            "baej",
            "baec",
            "baek",
            "baet",
            "baep",
            "baeh",
            "bya",
            "byag",
            "byagg",
            "byags",
            "byan",
            "byanj",
            "byanh",
            "byad",
            "byal",
            "byalg",
            "byalm",
            "byalb",
            "byals",
            "byalt",
            "byalp",
            "byalh",
            "byam",
            "byab",
            "byabs",
            "byas",
            "byass",
            "byang",
            "byaj",
            "byac",
            "byak",
            "byat",
            "byap",
            "byah",
            "byae",
            "byaeg",
            "byaegg",
            "byaegs",
            "byaen",
            "byaenj",
            "byaenh",
            "byaed",
            "byael",
            "byaelg",
            "byaelm",
            "byaelb",
            "byaels",
            "byaelt",
            "byaelp",
            "byaelh",
            "byaem",
            "byaeb",
            "byaebs",
            "byaes",
            "byaess",
            "byaeng",
            "byaej",
            "byaec",
            "byaek",
            "byaet",
            "byaep",
            "byaeh",
            "beo",
            "beog",
            "beogg",
            "beogs",
            "beon",
            "beonj",
            "beonh",
            "beod",
            "beol",
            "beolg",
            "beolm",
            "beolb",
            "beols",
            "beolt",
            "beolp",
            "beolh",
            "beom",
            "beob",
            "beobs",
            "beos",
            "beoss",
            "beong",
            "beoj",
            "beoc",
            "beok",
            "beot",
            "beop",
            "beoh",
            "be",
            "beg",
            "begg",
            "begs",
            "ben",
            "benj",
            "benh",
            "bed",
            "bel",
            "belg",
            "belm",
            "belb",
            "bels",
            "belt",
            "belp",
            "belh",
            "bem",
            "beb",
            "bebs",
            "bes",
            "bess",
            "beng",
            "bej",
            "bec",
            "bek",
            "bet",
            "bep",
            "beh",
            "byeo",
            "byeog",
            "byeogg",
            "byeogs",
            "byeon",
            "byeonj",
            "byeonh",
            "byeod",
            "byeol",
            "byeolg",
            "byeolm",
            "byeolb",
            "byeols",
            "byeolt",
            "byeolp",
            "byeolh",
            "byeom",
            "byeob",
            "byeobs",
            "byeos",
            "byeoss",
            "byeong",
            "byeoj",
            "byeoc",
            "byeok",
            "byeot",
            "byeop",
            "byeoh",
            "bye",
            "byeg",
            "byegg",
            "byegs",
            "byen",
            "byenj",
            "byenh",
            "byed",
            "byel",
            "byelg",
            "byelm",
            "byelb",
            "byels",
            "byelt",
            "byelp",
            "byelh",
            "byem",
            "byeb",
            "byebs",
            "byes",
            "byess",
            "byeng",
            "byej",
            "byec",
            "byek",
            "byet",
            "byep",
            "byeh",
            "bo",
            "bog",
            "bogg",
            "bogs",
            "bon",
            "bonj",
            "bonh",
            "bod",
            "bol",
            "bolg",
            "bolm",
            "bolb"
        ],
        [
            "bols",
            "bolt",
            "bolp",
            "bolh",
            "bom",
            "bob",
            "bobs",
            "bos",
            "boss",
            "bong",
            "boj",
            "boc",
            "bok",
            "bot",
            "bop",
            "boh",
            "bwa",
            "bwag",
            "bwagg",
            "bwags",
            "bwan",
            "bwanj",
            "bwanh",
            "bwad",
            "bwal",
            "bwalg",
            "bwalm",
            "bwalb",
            "bwals",
            "bwalt",
            "bwalp",
            "bwalh",
            "bwam",
            "bwab",
            "bwabs",
            "bwas",
            "bwass",
            "bwang",
            "bwaj",
            "bwac",
            "bwak",
            "bwat",
            "bwap",
            "bwah",
            "bwae",
            "bwaeg",
            "bwaegg",
            "bwaegs",
            "bwaen",
            "bwaenj",
            "bwaenh",
            "bwaed",
            "bwael",
            "bwaelg",
            "bwaelm",
            "bwaelb",
            "bwaels",
            "bwaelt",
            "bwaelp",
            "bwaelh",
            "bwaem",
            "bwaeb",
            "bwaebs",
            "bwaes",
            "bwaess",
            "bwaeng",
            "bwaej",
            "bwaec",
            "bwaek",
            "bwaet",
            "bwaep",
            "bwaeh",
            "boe",
            "boeg",
            "boegg",
            "boegs",
            "boen",
            "boenj",
            "boenh",
            "boed",
            "boel",
            "boelg",
            "boelm",
            "boelb",
            "boels",
            "boelt",
            "boelp",
            "boelh",
            "boem",
            "boeb",
            "boebs",
            "boes",
            "boess",
            "boeng",
            "boej",
            "boec",
            "boek",
            "boet",
            "boep",
            "boeh",
            "byo",
            "byog",
            "byogg",
            "byogs",
            "byon",
            "byonj",
            "byonh",
            "byod",
            "byol",
            "byolg",
            "byolm",
            "byolb",
            "byols",
            "byolt",
            "byolp",
            "byolh",
            "byom",
            "byob",
            "byobs",
            "byos",
            "byoss",
            "byong",
            "byoj",
            "byoc",
            "byok",
            "byot",
            "byop",
            "byoh",
            "bu",
            "bug",
            "bugg",
            "bugs",
            "bun",
            "bunj",
            "bunh",
            "bud",
            "bul",
            "bulg",
            "bulm",
            "bulb",
            "buls",
            "bult",
            "bulp",
            "bulh",
            "bum",
            "bub",
            "bubs",
            "bus",
            "buss",
            "bung",
            "buj",
            "buc",
            "buk",
            "but",
            "bup",
            "buh",
            "bweo",
            "bweog",
            "bweogg",
            "bweogs",
            "bweon",
            "bweonj",
            "bweonh",
            "bweod",
            "bweol",
            "bweolg",
            "bweolm",
            "bweolb",
            "bweols",
            "bweolt",
            "bweolp",
            "bweolh",
            "bweom",
            "bweob",
            "bweobs",
            "bweos",
            "bweoss",
            "bweong",
            "bweoj",
            "bweoc",
            "bweok",
            "bweot",
            "bweop",
            "bweoh",
            "bwe",
            "bweg",
            "bwegg",
            "bwegs",
            "bwen",
            "bwenj",
            "bwenh",
            "bwed",
            "bwel",
            "bwelg",
            "bwelm",
            "bwelb",
            "bwels",
            "bwelt",
            "bwelp",
            "bwelh",
            "bwem",
            "bweb",
            "bwebs",
            "bwes",
            "bwess",
            "bweng",
            "bwej",
            "bwec",
            "bwek",
            "bwet",
            "bwep",
            "bweh",
            "bwi",
            "bwig",
            "bwigg",
            "bwigs",
            "bwin",
            "bwinj",
            "bwinh",
            "bwid",
            "bwil",
            "bwilg",
            "bwilm",
            "bwilb",
            "bwils",
            "bwilt",
            "bwilp",
            "bwilh",
            "bwim",
            "bwib",
            "bwibs",
            "bwis",
            "bwiss",
            "bwing",
            "bwij",
            "bwic",
            "bwik",
            "bwit",
            "bwip",
            "bwih",
            "byu",
            "byug",
            "byugg",
            "byugs",
            "byun",
            "byunj",
            "byunh",
            "byud",
            "byul",
            "byulg",
            "byulm",
            "byulb",
            "byuls",
            "byult",
            "byulp",
            "byulh"
        ],
        [
            "byum",
            "byub",
            "byubs",
            "byus",
            "byuss",
            "byung",
            "byuj",
            "byuc",
            "byuk",
            "byut",
            "byup",
            "byuh",
            "beu",
            "beug",
            "beugg",
            "beugs",
            "beun",
            "beunj",
            "beunh",
            "beud",
            "beul",
            "beulg",
            "beulm",
            "beulb",
            "beuls",
            "beult",
            "beulp",
            "beulh",
            "beum",
            "beub",
            "beubs",
            "beus",
            "beuss",
            "beung",
            "beuj",
            "beuc",
            "beuk",
            "beut",
            "beup",
            "beuh",
            "byi",
            "byig",
            "byigg",
            "byigs",
            "byin",
            "byinj",
            "byinh",
            "byid",
            "byil",
            "byilg",
            "byilm",
            "byilb",
            "byils",
            "byilt",
            "byilp",
            "byilh",
            "byim",
            "byib",
            "byibs",
            "byis",
            "byiss",
            "bying",
            "byij",
            "byic",
            "byik",
            "byit",
            "byip",
            "byih",
            "bi",
            "big",
            "bigg",
            "bigs",
            "bin",
            "binj",
            "binh",
            "bid",
            "bil",
            "bilg",
            "bilm",
            "bilb",
            "bils",
            "bilt",
            "bilp",
            "bilh",
            "bim",
            "bib",
            "bibs",
            "bis",
            "biss",
            "bing",
            "bij",
            "bic",
            "bik",
            "bit",
            "bip",
            "bih",
            "bba",
            "bbag",
            "bbagg",
            "bbags",
            "bban",
            "bbanj",
            "bbanh",
            "bbad",
            "bbal",
            "bbalg",
            "bbalm",
            "bbalb",
            "bbals",
            "bbalt",
            "bbalp",
            "bbalh",
            "bbam",
            "bbab",
            "bbabs",
            "bbas",
            "bbass",
            "bbang",
            "bbaj",
            "bbac",
            "bbak",
            "bbat",
            "bbap",
            "bbah",
            "bbae",
            "bbaeg",
            "bbaegg",
            "bbaegs",
            "bbaen",
            "bbaenj",
            "bbaenh",
            "bbaed",
            "bbael",
            "bbaelg",
            "bbaelm",
            "bbaelb",
            "bbaels",
            "bbaelt",
            "bbaelp",
            "bbaelh",
            "bbaem",
            "bbaeb",
            "bbaebs",
            "bbaes",
            "bbaess",
            "bbaeng",
            "bbaej",
            "bbaec",
            "bbaek",
            "bbaet",
            "bbaep",
            "bbaeh",
            "bbya",
            "bbyag",
            "bbyagg",
            "bbyags",
            "bbyan",
            "bbyanj",
            "bbyanh",
            "bbyad",
            "bbyal",
            "bbyalg",
            "bbyalm",
            "bbyalb",
            "bbyals",
            "bbyalt",
            "bbyalp",
            "bbyalh",
            "bbyam",
            "bbyab",
            "bbyabs",
            "bbyas",
            "bbyass",
            "bbyang",
            "bbyaj",
            "bbyac",
            "bbyak",
            "bbyat",
            "bbyap",
            "bbyah",
            "bbyae",
            "bbyaeg",
            "bbyaegg",
            "bbyaegs",
            "bbyaen",
            "bbyaenj",
            "bbyaenh",
            "bbyaed",
            "bbyael",
            "bbyaelg",
            "bbyaelm",
            "bbyaelb",
            "bbyaels",
            "bbyaelt",
            "bbyaelp",
            "bbyaelh",
            "bbyaem",
            "bbyaeb",
            "bbyaebs",
            "bbyaes",
            "bbyaess",
            "bbyaeng",
            "bbyaej",
            "bbyaec",
            "bbyaek",
            "bbyaet",
            "bbyaep",
            "bbyaeh",
            "bbeo",
            "bbeog",
            "bbeogg",
            "bbeogs",
            "bbeon",
            "bbeonj",
            "bbeonh",
            "bbeod",
            "bbeol",
            "bbeolg",
            "bbeolm",
            "bbeolb",
            "bbeols",
            "bbeolt",
            "bbeolp",
            "bbeolh",
            "bbeom",
            "bbeob",
            "bbeobs",
            "bbeos",
            "bbeoss",
            "bbeong",
            "bbeoj",
            "bbeoc",
            "bbeok",
            "bbeot",
            "bbeop",
            "bbeoh",
            "bbe",
            "bbeg",
            "bbegg",
            "bbegs",
            "bben",
            "bbenj",
            "bbenh",
            "bbed",
            "bbel",
            "bbelg",
            "bbelm",
            "bbelb",
            "bbels",
            "bbelt",
            "bbelp",
            "bbelh",
            "bbem",
            "bbeb",
            "bbebs",
            "bbes"
        ],
        [
            "bbess",
            "bbeng",
            "bbej",
            "bbec",
            "bbek",
            "bbet",
            "bbep",
            "bbeh",
            "bbyeo",
            "bbyeog",
            "bbyeogg",
            "bbyeogs",
            "bbyeon",
            "bbyeonj",
            "bbyeonh",
            "bbyeod",
            "bbyeol",
            "bbyeolg",
            "bbyeolm",
            "bbyeolb",
            "bbyeols",
            "bbyeolt",
            "bbyeolp",
            "bbyeolh",
            "bbyeom",
            "bbyeob",
            "bbyeobs",
            "bbyeos",
            "bbyeoss",
            "bbyeong",
            "bbyeoj",
            "bbyeoc",
            "bbyeok",
            "bbyeot",
            "bbyeop",
            "bbyeoh",
            "bbye",
            "bbyeg",
            "bbyegg",
            "bbyegs",
            "bbyen",
            "bbyenj",
            "bbyenh",
            "bbyed",
            "bbyel",
            "bbyelg",
            "bbyelm",
            "bbyelb",
            "bbyels",
            "bbyelt",
            "bbyelp",
            "bbyelh",
            "bbyem",
            "bbyeb",
            "bbyebs",
            "bbyes",
            "bbyess",
            "bbyeng",
            "bbyej",
            "bbyec",
            "bbyek",
            "bbyet",
            "bbyep",
            "bbyeh",
            "bbo",
            "bbog",
            "bbogg",
            "bbogs",
            "bbon",
            "bbonj",
            "bbonh",
            "bbod",
            "bbol",
            "bbolg",
            "bbolm",
            "bbolb",
            "bbols",
            "bbolt",
            "bbolp",
            "bbolh",
            "bbom",
            "bbob",
            "bbobs",
            "bbos",
            "bboss",
            "bbong",
            "bboj",
            "bboc",
            "bbok",
            "bbot",
            "bbop",
            "bboh",
            "bbwa",
            "bbwag",
            "bbwagg",
            "bbwags",
            "bbwan",
            "bbwanj",
            "bbwanh",
            "bbwad",
            "bbwal",
            "bbwalg",
            "bbwalm",
            "bbwalb",
            "bbwals",
            "bbwalt",
            "bbwalp",
            "bbwalh",
            "bbwam",
            "bbwab",
            "bbwabs",
            "bbwas",
            "bbwass",
            "bbwang",
            "bbwaj",
            "bbwac",
            "bbwak",
            "bbwat",
            "bbwap",
            "bbwah",
            "bbwae",
            "bbwaeg",
            "bbwaegg",
            "bbwaegs",
            "bbwaen",
            "bbwaenj",
            "bbwaenh",
            "bbwaed",
            "bbwael",
            "bbwaelg",
            "bbwaelm",
            "bbwaelb",
            "bbwaels",
            "bbwaelt",
            "bbwaelp",
            "bbwaelh",
            "bbwaem",
            "bbwaeb",
            "bbwaebs",
            "bbwaes",
            "bbwaess",
            "bbwaeng",
            "bbwaej",
            "bbwaec",
            "bbwaek",
            "bbwaet",
            "bbwaep",
            "bbwaeh",
            "bboe",
            "bboeg",
            "bboegg",
            "bboegs",
            "bboen",
            "bboenj",
            "bboenh",
            "bboed",
            "bboel",
            "bboelg",
            "bboelm",
            "bboelb",
            "bboels",
            "bboelt",
            "bboelp",
            "bboelh",
            "bboem",
            "bboeb",
            "bboebs",
            "bboes",
            "bboess",
            "bboeng",
            "bboej",
            "bboec",
            "bboek",
            "bboet",
            "bboep",
            "bboeh",
            "bbyo",
            "bbyog",
            "bbyogg",
            "bbyogs",
            "bbyon",
            "bbyonj",
            "bbyonh",
            "bbyod",
            "bbyol",
            "bbyolg",
            "bbyolm",
            "bbyolb",
            "bbyols",
            "bbyolt",
            "bbyolp",
            "bbyolh",
            "bbyom",
            "bbyob",
            "bbyobs",
            "bbyos",
            "bbyoss",
            "bbyong",
            "bbyoj",
            "bbyoc",
            "bbyok",
            "bbyot",
            "bbyop",
            "bbyoh",
            "bbu",
            "bbug",
            "bbugg",
            "bbugs",
            "bbun",
            "bbunj",
            "bbunh",
            "bbud",
            "bbul",
            "bbulg",
            "bbulm",
            "bbulb",
            "bbuls",
            "bbult",
            "bbulp",
            "bbulh",
            "bbum",
            "bbub",
            "bbubs",
            "bbus",
            "bbuss",
            "bbung",
            "bbuj",
            "bbuc",
            "bbuk",
            "bbut",
            "bbup",
            "bbuh",
            "bbweo",
            "bbweog",
            "bbweogg",
            "bbweogs",
            "bbweon",
            "bbweonj",
            "bbweonh",
            "bbweod",
            "bbweol",
            "bbweolg",
            "bbweolm",
            "bbweolb",
            "bbweols",
            "bbweolt",
            "bbweolp",
            "bbweolh",
            "bbweom",
            "bbweob",
            "bbweobs",
            "bbweos",
            "bbweoss",
            "bbweong",
            "bbweoj",
            "bbweoc"
        ],
        [
            "bbweok",
            "bbweot",
            "bbweop",
            "bbweoh",
            "bbwe",
            "bbweg",
            "bbwegg",
            "bbwegs",
            "bbwen",
            "bbwenj",
            "bbwenh",
            "bbwed",
            "bbwel",
            "bbwelg",
            "bbwelm",
            "bbwelb",
            "bbwels",
            "bbwelt",
            "bbwelp",
            "bbwelh",
            "bbwem",
            "bbweb",
            "bbwebs",
            "bbwes",
            "bbwess",
            "bbweng",
            "bbwej",
            "bbwec",
            "bbwek",
            "bbwet",
            "bbwep",
            "bbweh",
            "bbwi",
            "bbwig",
            "bbwigg",
            "bbwigs",
            "bbwin",
            "bbwinj",
            "bbwinh",
            "bbwid",
            "bbwil",
            "bbwilg",
            "bbwilm",
            "bbwilb",
            "bbwils",
            "bbwilt",
            "bbwilp",
            "bbwilh",
            "bbwim",
            "bbwib",
            "bbwibs",
            "bbwis",
            "bbwiss",
            "bbwing",
            "bbwij",
            "bbwic",
            "bbwik",
            "bbwit",
            "bbwip",
            "bbwih",
            "bbyu",
            "bbyug",
            "bbyugg",
            "bbyugs",
            "bbyun",
            "bbyunj",
            "bbyunh",
            "bbyud",
            "bbyul",
            "bbyulg",
            "bbyulm",
            "bbyulb",
            "bbyuls",
            "bbyult",
            "bbyulp",
            "bbyulh",
            "bbyum",
            "bbyub",
            "bbyubs",
            "bbyus",
            "bbyuss",
            "bbyung",
            "bbyuj",
            "bbyuc",
            "bbyuk",
            "bbyut",
            "bbyup",
            "bbyuh",
            "bbeu",
            "bbeug",
            "bbeugg",
            "bbeugs",
            "bbeun",
            "bbeunj",
            "bbeunh",
            "bbeud",
            "bbeul",
            "bbeulg",
            "bbeulm",
            "bbeulb",
            "bbeuls",
            "bbeult",
            "bbeulp",
            "bbeulh",
            "bbeum",
            "bbeub",
            "bbeubs",
            "bbeus",
            "bbeuss",
            "bbeung",
            "bbeuj",
            "bbeuc",
            "bbeuk",
            "bbeut",
            "bbeup",
            "bbeuh",
            "bbyi",
            "bbyig",
            "bbyigg",
            "bbyigs",
            "bbyin",
            "bbyinj",
            "bbyinh",
            "bbyid",
            "bbyil",
            "bbyilg",
            "bbyilm",
            "bbyilb",
            "bbyils",
            "bbyilt",
            "bbyilp",
            "bbyilh",
            "bbyim",
            "bbyib",
            "bbyibs",
            "bbyis",
            "bbyiss",
            "bbying",
            "bbyij",
            "bbyic",
            "bbyik",
            "bbyit",
            "bbyip",
            "bbyih",
            "bbi",
            "bbig",
            "bbigg",
            "bbigs",
            "bbin",
            "bbinj",
            "bbinh",
            "bbid",
            "bbil",
            "bbilg",
            "bbilm",
            "bbilb",
            "bbils",
            "bbilt",
            "bbilp",
            "bbilh",
            "bbim",
            "bbib",
            "bbibs",
            "bbis",
            "bbiss",
            "bbing",
            "bbij",
            "bbic",
            "bbik",
            "bbit",
            "bbip",
            "bbih",
            "sa",
            "sag",
            "sagg",
            "sags",
            "san",
            "sanj",
            "sanh",
            "sad",
            "sal",
            "salg",
            "salm",
            "salb",
            "sals",
            "salt",
            "salp",
            "salh",
            "sam",
            "sab",
            "sabs",
            "sas",
            "sass",
            "sang",
            "saj",
            "sac",
            "sak",
            "sat",
            "sap",
            "sah",
            "sae",
            "saeg",
            "saegg",
            "saegs",
            "saen",
            "saenj",
            "saenh",
            "saed",
            "sael",
            "saelg",
            "saelm",
            "saelb",
            "saels",
            "saelt",
            "saelp",
            "saelh",
            "saem",
            "saeb",
            "saebs",
            "saes",
            "saess",
            "saeng",
            "saej",
            "saec",
            "saek",
            "saet",
            "saep",
            "saeh",
            "sya",
            "syag",
            "syagg",
            "syags",
            "syan",
            "syanj",
            "syanh",
            "syad",
            "syal",
            "syalg",
            "syalm",
            "syalb",
            "syals",
            "syalt",
            "syalp",
            "syalh",
            "syam",
            "syab",
            "syabs",
            "syas",
            "syass",
            "syang",
            "syaj",
            "syac",
            "syak",
            "syat",
            "syap",
            "syah"
        ],
        [
            "syae",
            "syaeg",
            "syaegg",
            "syaegs",
            "syaen",
            "syaenj",
            "syaenh",
            "syaed",
            "syael",
            "syaelg",
            "syaelm",
            "syaelb",
            "syaels",
            "syaelt",
            "syaelp",
            "syaelh",
            "syaem",
            "syaeb",
            "syaebs",
            "syaes",
            "syaess",
            "syaeng",
            "syaej",
            "syaec",
            "syaek",
            "syaet",
            "syaep",
            "syaeh",
            "seo",
            "seog",
            "seogg",
            "seogs",
            "seon",
            "seonj",
            "seonh",
            "seod",
            "seol",
            "seolg",
            "seolm",
            "seolb",
            "seols",
            "seolt",
            "seolp",
            "seolh",
            "seom",
            "seob",
            "seobs",
            "seos",
            "seoss",
            "seong",
            "seoj",
            "seoc",
            "seok",
            "seot",
            "seop",
            "seoh",
            "se",
            "seg",
            "segg",
            "segs",
            "sen",
            "senj",
            "senh",
            "sed",
            "sel",
            "selg",
            "selm",
            "selb",
            "sels",
            "selt",
            "selp",
            "selh",
            "sem",
            "seb",
            "sebs",
            "ses",
            "sess",
            "seng",
            "sej",
            "sec",
            "sek",
            "set",
            "sep",
            "seh",
            "syeo",
            "syeog",
            "syeogg",
            "syeogs",
            "syeon",
            "syeonj",
            "syeonh",
            "syeod",
            "syeol",
            "syeolg",
            "syeolm",
            "syeolb",
            "syeols",
            "syeolt",
            "syeolp",
            "syeolh",
            "syeom",
            "syeob",
            "syeobs",
            "syeos",
            "syeoss",
            "syeong",
            "syeoj",
            "syeoc",
            "syeok",
            "syeot",
            "syeop",
            "syeoh",
            "sye",
            "syeg",
            "syegg",
            "syegs",
            "syen",
            "syenj",
            "syenh",
            "syed",
            "syel",
            "syelg",
            "syelm",
            "syelb",
            "syels",
            "syelt",
            "syelp",
            "syelh",
            "syem",
            "syeb",
            "syebs",
            "syes",
            "syess",
            "syeng",
            "syej",
            "syec",
            "syek",
            "syet",
            "syep",
            "syeh",
            "so",
            "sog",
            "sogg",
            "sogs",
            "son",
            "sonj",
            "sonh",
            "sod",
            "sol",
            "solg",
            "solm",
            "solb",
            "sols",
            "solt",
            "solp",
            "solh",
            "som",
            "sob",
            "sobs",
            "sos",
            "soss",
            "song",
            "soj",
            "soc",
            "sok",
            "sot",
            "sop",
            "soh",
            "swa",
            "swag",
            "swagg",
            "swags",
            "swan",
            "swanj",
            "swanh",
            "swad",
            "swal",
            "swalg",
            "swalm",
            "swalb",
            "swals",
            "swalt",
            "swalp",
            "swalh",
            "swam",
            "swab",
            "swabs",
            "swas",
            "swass",
            "swang",
            "swaj",
            "swac",
            "swak",
            "swat",
            "swap",
            "swah",
            "swae",
            "swaeg",
            "swaegg",
            "swaegs",
            "swaen",
            "swaenj",
            "swaenh",
            "swaed",
            "swael",
            "swaelg",
            "swaelm",
            "swaelb",
            "swaels",
            "swaelt",
            "swaelp",
            "swaelh",
            "swaem",
            "swaeb",
            "swaebs",
            "swaes",
            "swaess",
            "swaeng",
            "swaej",
            "swaec",
            "swaek",
            "swaet",
            "swaep",
            "swaeh",
            "soe",
            "soeg",
            "soegg",
            "soegs",
            "soen",
            "soenj",
            "soenh",
            "soed",
            "soel",
            "soelg",
            "soelm",
            "soelb",
            "soels",
            "soelt",
            "soelp",
            "soelh",
            "soem",
            "soeb",
            "soebs",
            "soes",
            "soess",
            "soeng",
            "soej",
            "soec",
            "soek",
            "soet",
            "soep",
            "soeh",
            "syo",
            "syog",
            "syogg",
            "syogs"
        ],
        [
            "syon",
            "syonj",
            "syonh",
            "syod",
            "syol",
            "syolg",
            "syolm",
            "syolb",
            "syols",
            "syolt",
            "syolp",
            "syolh",
            "syom",
            "syob",
            "syobs",
            "syos",
            "syoss",
            "syong",
            "syoj",
            "syoc",
            "syok",
            "syot",
            "syop",
            "syoh",
            "su",
            "sug",
            "sugg",
            "sugs",
            "sun",
            "sunj",
            "sunh",
            "sud",
            "sul",
            "sulg",
            "sulm",
            "sulb",
            "suls",
            "sult",
            "sulp",
            "sulh",
            "sum",
            "sub",
            "subs",
            "sus",
            "suss",
            "sung",
            "suj",
            "suc",
            "suk",
            "sut",
            "sup",
            "suh",
            "sweo",
            "sweog",
            "sweogg",
            "sweogs",
            "sweon",
            "sweonj",
            "sweonh",
            "sweod",
            "sweol",
            "sweolg",
            "sweolm",
            "sweolb",
            "sweols",
            "sweolt",
            "sweolp",
            "sweolh",
            "sweom",
            "sweob",
            "sweobs",
            "sweos",
            "sweoss",
            "sweong",
            "sweoj",
            "sweoc",
            "sweok",
            "sweot",
            "sweop",
            "sweoh",
            "swe",
            "sweg",
            "swegg",
            "swegs",
            "swen",
            "swenj",
            "swenh",
            "swed",
            "swel",
            "swelg",
            "swelm",
            "swelb",
            "swels",
            "swelt",
            "swelp",
            "swelh",
            "swem",
            "sweb",
            "swebs",
            "swes",
            "swess",
            "sweng",
            "swej",
            "swec",
            "swek",
            "swet",
            "swep",
            "sweh",
            "swi",
            "swig",
            "swigg",
            "swigs",
            "swin",
            "swinj",
            "swinh",
            "swid",
            "swil",
            "swilg",
            "swilm",
            "swilb",
            "swils",
            "swilt",
            "swilp",
            "swilh",
            "swim",
            "swib",
            "swibs",
            "swis",
            "swiss",
            "swing",
            "swij",
            "swic",
            "swik",
            "swit",
            "swip",
            "swih",
            "syu",
            "syug",
            "syugg",
            "syugs",
            "syun",
            "syunj",
            "syunh",
            "syud",
            "syul",
            "syulg",
            "syulm",
            "syulb",
            "syuls",
            "syult",
            "syulp",
            "syulh",
            "syum",
            "syub",
            "syubs",
            "syus",
            "syuss",
            "syung",
            "syuj",
            "syuc",
            "syuk",
            "syut",
            "syup",
            "syuh",
            "seu",
            "seug",
            "seugg",
            "seugs",
            "seun",
            "seunj",
            "seunh",
            "seud",
            "seul",
            "seulg",
            "seulm",
            "seulb",
            "seuls",
            "seult",
            "seulp",
            "seulh",
            "seum",
            "seub",
            "seubs",
            "seus",
            "seuss",
            "seung",
            "seuj",
            "seuc",
            "seuk",
            "seut",
            "seup",
            "seuh",
            "syi",
            "syig",
            "syigg",
            "syigs",
            "syin",
            "syinj",
            "syinh",
            "syid",
            "syil",
            "syilg",
            "syilm",
            "syilb",
            "syils",
            "syilt",
            "syilp",
            "syilh",
            "syim",
            "syib",
            "syibs",
            "syis",
            "syiss",
            "sying",
            "syij",
            "syic",
            "syik",
            "syit",
            "syip",
            "syih",
            "si",
            "sig",
            "sigg",
            "sigs",
            "sin",
            "sinj",
            "sinh",
            "sid",
            "sil",
            "silg",
            "silm",
            "silb",
            "sils",
            "silt",
            "silp",
            "silh",
            "sim",
            "sib",
            "sibs",
            "sis",
            "siss",
            "sing",
            "sij",
            "sic",
            "sik",
            "sit",
            "sip",
            "sih",
            "ssa",
            "ssag",
            "ssagg",
            "ssags",
            "ssan",
            "ssanj",
            "ssanh",
            "ssad"
        ],
        [
            "ssal",
            "ssalg",
            "ssalm",
            "ssalb",
            "ssals",
            "ssalt",
            "ssalp",
            "ssalh",
            "ssam",
            "ssab",
            "ssabs",
            "ssas",
            "ssass",
            "ssang",
            "ssaj",
            "ssac",
            "ssak",
            "ssat",
            "ssap",
            "ssah",
            "ssae",
            "ssaeg",
            "ssaegg",
            "ssaegs",
            "ssaen",
            "ssaenj",
            "ssaenh",
            "ssaed",
            "ssael",
            "ssaelg",
            "ssaelm",
            "ssaelb",
            "ssaels",
            "ssaelt",
            "ssaelp",
            "ssaelh",
            "ssaem",
            "ssaeb",
            "ssaebs",
            "ssaes",
            "ssaess",
            "ssaeng",
            "ssaej",
            "ssaec",
            "ssaek",
            "ssaet",
            "ssaep",
            "ssaeh",
            "ssya",
            "ssyag",
            "ssyagg",
            "ssyags",
            "ssyan",
            "ssyanj",
            "ssyanh",
            "ssyad",
            "ssyal",
            "ssyalg",
            "ssyalm",
            "ssyalb",
            "ssyals",
            "ssyalt",
            "ssyalp",
            "ssyalh",
            "ssyam",
            "ssyab",
            "ssyabs",
            "ssyas",
            "ssyass",
            "ssyang",
            "ssyaj",
            "ssyac",
            "ssyak",
            "ssyat",
            "ssyap",
            "ssyah",
            "ssyae",
            "ssyaeg",
            "ssyaegg",
            "ssyaegs",
            "ssyaen",
            "ssyaenj",
            "ssyaenh",
            "ssyaed",
            "ssyael",
            "ssyaelg",
            "ssyaelm",
            "ssyaelb",
            "ssyaels",
            "ssyaelt",
            "ssyaelp",
            "ssyaelh",
            "ssyaem",
            "ssyaeb",
            "ssyaebs",
            "ssyaes",
            "ssyaess",
            "ssyaeng",
            "ssyaej",
            "ssyaec",
            "ssyaek",
            "ssyaet",
            "ssyaep",
            "ssyaeh",
            "sseo",
            "sseog",
            "sseogg",
            "sseogs",
            "sseon",
            "sseonj",
            "sseonh",
            "sseod",
            "sseol",
            "sseolg",
            "sseolm",
            "sseolb",
            "sseols",
            "sseolt",
            "sseolp",
            "sseolh",
            "sseom",
            "sseob",
            "sseobs",
            "sseos",
            "sseoss",
            "sseong",
            "sseoj",
            "sseoc",
            "sseok",
            "sseot",
            "sseop",
            "sseoh",
            "sse",
            "sseg",
            "ssegg",
            "ssegs",
            "ssen",
            "ssenj",
            "ssenh",
            "ssed",
            "ssel",
            "sselg",
            "sselm",
            "sselb",
            "ssels",
            "sselt",
            "sselp",
            "sselh",
            "ssem",
            "sseb",
            "ssebs",
            "sses",
            "ssess",
            "sseng",
            "ssej",
            "ssec",
            "ssek",
            "sset",
            "ssep",
            "sseh",
            "ssyeo",
            "ssyeog",
            "ssyeogg",
            "ssyeogs",
            "ssyeon",
            "ssyeonj",
            "ssyeonh",
            "ssyeod",
            "ssyeol",
            "ssyeolg",
            "ssyeolm",
            "ssyeolb",
            "ssyeols",
            "ssyeolt",
            "ssyeolp",
            "ssyeolh",
            "ssyeom",
            "ssyeob",
            "ssyeobs",
            "ssyeos",
            "ssyeoss",
            "ssyeong",
            "ssyeoj",
            "ssyeoc",
            "ssyeok",
            "ssyeot",
            "ssyeop",
            "ssyeoh",
            "ssye",
            "ssyeg",
            "ssyegg",
            "ssyegs",
            "ssyen",
            "ssyenj",
            "ssyenh",
            "ssyed",
            "ssyel",
            "ssyelg",
            "ssyelm",
            "ssyelb",
            "ssyels",
            "ssyelt",
            "ssyelp",
            "ssyelh",
            "ssyem",
            "ssyeb",
            "ssyebs",
            "ssyes",
            "ssyess",
            "ssyeng",
            "ssyej",
            "ssyec",
            "ssyek",
            "ssyet",
            "ssyep",
            "ssyeh",
            "sso",
            "ssog",
            "ssogg",
            "ssogs",
            "sson",
            "ssonj",
            "ssonh",
            "ssod",
            "ssol",
            "ssolg",
            "ssolm",
            "ssolb",
            "ssols",
            "ssolt",
            "ssolp",
            "ssolh",
            "ssom",
            "ssob",
            "ssobs",
            "ssos",
            "ssoss",
            "ssong",
            "ssoj",
            "ssoc",
            "ssok",
            "ssot",
            "ssop",
            "ssoh",
            "sswa",
            "sswag",
            "sswagg",
            "sswags",
            "sswan",
            "sswanj",
            "sswanh",
            "sswad",
            "sswal",
            "sswalg",
            "sswalm",
            "sswalb"
        ],
        [
            "sswals",
            "sswalt",
            "sswalp",
            "sswalh",
            "sswam",
            "sswab",
            "sswabs",
            "sswas",
            "sswass",
            "sswang",
            "sswaj",
            "sswac",
            "sswak",
            "sswat",
            "sswap",
            "sswah",
            "sswae",
            "sswaeg",
            "sswaegg",
            "sswaegs",
            "sswaen",
            "sswaenj",
            "sswaenh",
            "sswaed",
            "sswael",
            "sswaelg",
            "sswaelm",
            "sswaelb",
            "sswaels",
            "sswaelt",
            "sswaelp",
            "sswaelh",
            "sswaem",
            "sswaeb",
            "sswaebs",
            "sswaes",
            "sswaess",
            "sswaeng",
            "sswaej",
            "sswaec",
            "sswaek",
            "sswaet",
            "sswaep",
            "sswaeh",
            "ssoe",
            "ssoeg",
            "ssoegg",
            "ssoegs",
            "ssoen",
            "ssoenj",
            "ssoenh",
            "ssoed",
            "ssoel",
            "ssoelg",
            "ssoelm",
            "ssoelb",
            "ssoels",
            "ssoelt",
            "ssoelp",
            "ssoelh",
            "ssoem",
            "ssoeb",
            "ssoebs",
            "ssoes",
            "ssoess",
            "ssoeng",
            "ssoej",
            "ssoec",
            "ssoek",
            "ssoet",
            "ssoep",
            "ssoeh",
            "ssyo",
            "ssyog",
            "ssyogg",
            "ssyogs",
            "ssyon",
            "ssyonj",
            "ssyonh",
            "ssyod",
            "ssyol",
            "ssyolg",
            "ssyolm",
            "ssyolb",
            "ssyols",
            "ssyolt",
            "ssyolp",
            "ssyolh",
            "ssyom",
            "ssyob",
            "ssyobs",
            "ssyos",
            "ssyoss",
            "ssyong",
            "ssyoj",
            "ssyoc",
            "ssyok",
            "ssyot",
            "ssyop",
            "ssyoh",
            "ssu",
            "ssug",
            "ssugg",
            "ssugs",
            "ssun",
            "ssunj",
            "ssunh",
            "ssud",
            "ssul",
            "ssulg",
            "ssulm",
            "ssulb",
            "ssuls",
            "ssult",
            "ssulp",
            "ssulh",
            "ssum",
            "ssub",
            "ssubs",
            "ssus",
            "ssuss",
            "ssung",
            "ssuj",
            "ssuc",
            "ssuk",
            "ssut",
            "ssup",
            "ssuh",
            "ssweo",
            "ssweog",
            "ssweogg",
            "ssweogs",
            "ssweon",
            "ssweonj",
            "ssweonh",
            "ssweod",
            "ssweol",
            "ssweolg",
            "ssweolm",
            "ssweolb",
            "ssweols",
            "ssweolt",
            "ssweolp",
            "ssweolh",
            "ssweom",
            "ssweob",
            "ssweobs",
            "ssweos",
            "ssweoss",
            "ssweong",
            "ssweoj",
            "ssweoc",
            "ssweok",
            "ssweot",
            "ssweop",
            "ssweoh",
            "sswe",
            "ssweg",
            "sswegg",
            "sswegs",
            "sswen",
            "sswenj",
            "sswenh",
            "sswed",
            "sswel",
            "sswelg",
            "sswelm",
            "sswelb",
            "sswels",
            "sswelt",
            "sswelp",
            "sswelh",
            "sswem",
            "ssweb",
            "sswebs",
            "sswes",
            "sswess",
            "ssweng",
            "sswej",
            "sswec",
            "sswek",
            "sswet",
            "sswep",
            "ssweh",
            "sswi",
            "sswig",
            "sswigg",
            "sswigs",
            "sswin",
            "sswinj",
            "sswinh",
            "sswid",
            "sswil",
            "sswilg",
            "sswilm",
            "sswilb",
            "sswils",
            "sswilt",
            "sswilp",
            "sswilh",
            "sswim",
            "sswib",
            "sswibs",
            "sswis",
            "sswiss",
            "sswing",
            "sswij",
            "sswic",
            "sswik",
            "sswit",
            "sswip",
            "sswih",
            "ssyu",
            "ssyug",
            "ssyugg",
            "ssyugs",
            "ssyun",
            "ssyunj",
            "ssyunh",
            "ssyud",
            "ssyul",
            "ssyulg",
            "ssyulm",
            "ssyulb",
            "ssyuls",
            "ssyult",
            "ssyulp",
            "ssyulh",
            "ssyum",
            "ssyub",
            "ssyubs",
            "ssyus",
            "ssyuss",
            "ssyung",
            "ssyuj",
            "ssyuc",
            "ssyuk",
            "ssyut",
            "ssyup",
            "ssyuh",
            "sseu",
            "sseug",
            "sseugg",
            "sseugs",
            "sseun",
            "sseunj",
            "sseunh",
            "sseud",
            "sseul",
            "sseulg",
            "sseulm",
            "sseulb",
            "sseuls",
            "sseult",
            "sseulp",
            "sseulh"
        ],
        [
            "sseum",
            "sseub",
            "sseubs",
            "sseus",
            "sseuss",
            "sseung",
            "sseuj",
            "sseuc",
            "sseuk",
            "sseut",
            "sseup",
            "sseuh",
            "ssyi",
            "ssyig",
            "ssyigg",
            "ssyigs",
            "ssyin",
            "ssyinj",
            "ssyinh",
            "ssyid",
            "ssyil",
            "ssyilg",
            "ssyilm",
            "ssyilb",
            "ssyils",
            "ssyilt",
            "ssyilp",
            "ssyilh",
            "ssyim",
            "ssyib",
            "ssyibs",
            "ssyis",
            "ssyiss",
            "ssying",
            "ssyij",
            "ssyic",
            "ssyik",
            "ssyit",
            "ssyip",
            "ssyih",
            "ssi",
            "ssig",
            "ssigg",
            "ssigs",
            "ssin",
            "ssinj",
            "ssinh",
            "ssid",
            "ssil",
            "ssilg",
            "ssilm",
            "ssilb",
            "ssils",
            "ssilt",
            "ssilp",
            "ssilh",
            "ssim",
            "ssib",
            "ssibs",
            "ssis",
            "ssiss",
            "ssing",
            "ssij",
            "ssic",
            "ssik",
            "ssit",
            "ssip",
            "ssih",
            "a",
            "ag",
            "agg",
            "ags",
            "an",
            "anj",
            "anh",
            "ad",
            "al",
            "alg",
            "alm",
            "alb",
            "als",
            "alt",
            "alp",
            "alh",
            "am",
            "ab",
            "abs",
            "as",
            "ass",
            "ang",
            "aj",
            "ac",
            "ak",
            "at",
            "ap",
            "ah",
            "ae",
            "aeg",
            "aegg",
            "aegs",
            "aen",
            "aenj",
            "aenh",
            "aed",
            "ael",
            "aelg",
            "aelm",
            "aelb",
            "aels",
            "aelt",
            "aelp",
            "aelh",
            "aem",
            "aeb",
            "aebs",
            "aes",
            "aess",
            "aeng",
            "aej",
            "aec",
            "aek",
            "aet",
            "aep",
            "aeh",
            "ya",
            "yag",
            "yagg",
            "yags",
            "yan",
            "yanj",
            "yanh",
            "yad",
            "yal",
            "yalg",
            "yalm",
            "yalb",
            "yals",
            "yalt",
            "yalp",
            "yalh",
            "yam",
            "yab",
            "yabs",
            "yas",
            "yass",
            "yang",
            "yaj",
            "yac",
            "yak",
            "yat",
            "yap",
            "yah",
            "yae",
            "yaeg",
            "yaegg",
            "yaegs",
            "yaen",
            "yaenj",
            "yaenh",
            "yaed",
            "yael",
            "yaelg",
            "yaelm",
            "yaelb",
            "yaels",
            "yaelt",
            "yaelp",
            "yaelh",
            "yaem",
            "yaeb",
            "yaebs",
            "yaes",
            "yaess",
            "yaeng",
            "yaej",
            "yaec",
            "yaek",
            "yaet",
            "yaep",
            "yaeh",
            "eo",
            "eog",
            "eogg",
            "eogs",
            "eon",
            "eonj",
            "eonh",
            "eod",
            "eol",
            "eolg",
            "eolm",
            "eolb",
            "eols",
            "eolt",
            "eolp",
            "eolh",
            "eom",
            "eob",
            "eobs",
            "eos",
            "eoss",
            "eong",
            "eoj",
            "eoc",
            "eok",
            "eot",
            "eop",
            "eoh",
            "e",
            "eg",
            "egg",
            "egs",
            "en",
            "enj",
            "enh",
            "ed",
            "el",
            "elg",
            "elm",
            "elb",
            "els",
            "elt",
            "elp",
            "elh",
            "em",
            "eb",
            "ebs",
            "es",
            "ess",
            "eng",
            "ej",
            "ec",
            "ek",
            "et",
            "ep",
            "eh",
            "yeo",
            "yeog",
            "yeogg",
            "yeogs",
            "yeon",
            "yeonj",
            "yeonh",
            "yeod",
            "yeol",
            "yeolg",
            "yeolm",
            "yeolb",
            "yeols",
            "yeolt",
            "yeolp",
            "yeolh",
            "yeom",
            "yeob",
            "yeobs",
            "yeos"
        ],
        [
            "yeoss",
            "yeong",
            "yeoj",
            "yeoc",
            "yeok",
            "yeot",
            "yeop",
            "yeoh",
            "ye",
            "yeg",
            "yegg",
            "yegs",
            "yen",
            "yenj",
            "yenh",
            "yed",
            "yel",
            "yelg",
            "yelm",
            "yelb",
            "yels",
            "yelt",
            "yelp",
            "yelh",
            "yem",
            "yeb",
            "yebs",
            "yes",
            "yess",
            "yeng",
            "yej",
            "yec",
            "yek",
            "yet",
            "yep",
            "yeh",
            "o",
            "og",
            "ogg",
            "ogs",
            "on",
            "onj",
            "onh",
            "od",
            "ol",
            "olg",
            "olm",
            "olb",
            "ols",
            "olt",
            "olp",
            "olh",
            "om",
            "ob",
            "obs",
            "os",
            "oss",
            "ong",
            "oj",
            "oc",
            "ok",
            "ot",
            "op",
            "oh",
            "wa",
            "wag",
            "wagg",
            "wags",
            "wan",
            "wanj",
            "wanh",
            "wad",
            "wal",
            "walg",
            "walm",
            "walb",
            "wals",
            "walt",
            "walp",
            "walh",
            "wam",
            "wab",
            "wabs",
            "was",
            "wass",
            "wang",
            "waj",
            "wac",
            "wak",
            "wat",
            "wap",
            "wah",
            "wae",
            "waeg",
            "waegg",
            "waegs",
            "waen",
            "waenj",
            "waenh",
            "waed",
            "wael",
            "waelg",
            "waelm",
            "waelb",
            "waels",
            "waelt",
            "waelp",
            "waelh",
            "waem",
            "waeb",
            "waebs",
            "waes",
            "waess",
            "waeng",
            "waej",
            "waec",
            "waek",
            "waet",
            "waep",
            "waeh",
            "oe",
            "oeg",
            "oegg",
            "oegs",
            "oen",
            "oenj",
            "oenh",
            "oed",
            "oel",
            "oelg",
            "oelm",
            "oelb",
            "oels",
            "oelt",
            "oelp",
            "oelh",
            "oem",
            "oeb",
            "oebs",
            "oes",
            "oess",
            "oeng",
            "oej",
            "oec",
            "oek",
            "oet",
            "oep",
            "oeh",
            "yo",
            "yog",
            "yogg",
            "yogs",
            "yon",
            "yonj",
            "yonh",
            "yod",
            "yol",
            "yolg",
            "yolm",
            "yolb",
            "yols",
            "yolt",
            "yolp",
            "yolh",
            "yom",
            "yob",
            "yobs",
            "yos",
            "yoss",
            "yong",
            "yoj",
            "yoc",
            "yok",
            "yot",
            "yop",
            "yoh",
            "u",
            "ug",
            "ugg",
            "ugs",
            "un",
            "unj",
            "unh",
            "ud",
            "ul",
            "ulg",
            "ulm",
            "ulb",
            "uls",
            "ult",
            "ulp",
            "ulh",
            "um",
            "ub",
            "ubs",
            "us",
            "uss",
            "ung",
            "uj",
            "uc",
            "uk",
            "ut",
            "up",
            "uh",
            "weo",
            "weog",
            "weogg",
            "weogs",
            "weon",
            "weonj",
            "weonh",
            "weod",
            "weol",
            "weolg",
            "weolm",
            "weolb",
            "weols",
            "weolt",
            "weolp",
            "weolh",
            "weom",
            "weob",
            "weobs",
            "weos",
            "weoss",
            "weong",
            "weoj",
            "weoc",
            "weok",
            "weot",
            "weop",
            "weoh",
            "we",
            "weg",
            "wegg",
            "wegs",
            "wen",
            "wenj",
            "wenh",
            "wed",
            "wel",
            "welg",
            "welm",
            "welb",
            "wels",
            "welt",
            "welp",
            "welh",
            "wem",
            "web",
            "webs",
            "wes",
            "wess",
            "weng",
            "wej",
            "wec"
        ],
        [
            "wek",
            "wet",
            "wep",
            "weh",
            "wi",
            "wig",
            "wigg",
            "wigs",
            "win",
            "winj",
            "winh",
            "wid",
            "wil",
            "wilg",
            "wilm",
            "wilb",
            "wils",
            "wilt",
            "wilp",
            "wilh",
            "wim",
            "wib",
            "wibs",
            "wis",
            "wiss",
            "wing",
            "wij",
            "wic",
            "wik",
            "wit",
            "wip",
            "wih",
            "yu",
            "yug",
            "yugg",
            "yugs",
            "yun",
            "yunj",
            "yunh",
            "yud",
            "yul",
            "yulg",
            "yulm",
            "yulb",
            "yuls",
            "yult",
            "yulp",
            "yulh",
            "yum",
            "yub",
            "yubs",
            "yus",
            "yuss",
            "yung",
            "yuj",
            "yuc",
            "yuk",
            "yut",
            "yup",
            "yuh",
            "eu",
            "eug",
            "eugg",
            "eugs",
            "eun",
            "eunj",
            "eunh",
            "eud",
            "eul",
            "eulg",
            "eulm",
            "eulb",
            "euls",
            "eult",
            "eulp",
            "eulh",
            "eum",
            "eub",
            "eubs",
            "eus",
            "euss",
            "eung",
            "euj",
            "euc",
            "euk",
            "eut",
            "eup",
            "euh",
            "yi",
            "yig",
            "yigg",
            "yigs",
            "yin",
            "yinj",
            "yinh",
            "yid",
            "yil",
            "yilg",
            "yilm",
            "yilb",
            "yils",
            "yilt",
            "yilp",
            "yilh",
            "yim",
            "yib",
            "yibs",
            "yis",
            "yiss",
            "ying",
            "yij",
            "yic",
            "yik",
            "yit",
            "yip",
            "yih",
            "i",
            "ig",
            "igg",
            "igs",
            "in",
            "inj",
            "inh",
            "id",
            "il",
            "ilg",
            "ilm",
            "ilb",
            "ils",
            "ilt",
            "ilp",
            "ilh",
            "im",
            "ib",
            "ibs",
            "is",
            "iss",
            "ing",
            "ij",
            "ic",
            "ik",
            "it",
            "ip",
            "ih",
            "ja",
            "jag",
            "jagg",
            "jags",
            "jan",
            "janj",
            "janh",
            "jad",
            "jal",
            "jalg",
            "jalm",
            "jalb",
            "jals",
            "jalt",
            "jalp",
            "jalh",
            "jam",
            "jab",
            "jabs",
            "jas",
            "jass",
            "jang",
            "jaj",
            "jac",
            "jak",
            "jat",
            "jap",
            "jah",
            "jae",
            "jaeg",
            "jaegg",
            "jaegs",
            "jaen",
            "jaenj",
            "jaenh",
            "jaed",
            "jael",
            "jaelg",
            "jaelm",
            "jaelb",
            "jaels",
            "jaelt",
            "jaelp",
            "jaelh",
            "jaem",
            "jaeb",
            "jaebs",
            "jaes",
            "jaess",
            "jaeng",
            "jaej",
            "jaec",
            "jaek",
            "jaet",
            "jaep",
            "jaeh",
            "jya",
            "jyag",
            "jyagg",
            "jyags",
            "jyan",
            "jyanj",
            "jyanh",
            "jyad",
            "jyal",
            "jyalg",
            "jyalm",
            "jyalb",
            "jyals",
            "jyalt",
            "jyalp",
            "jyalh",
            "jyam",
            "jyab",
            "jyabs",
            "jyas",
            "jyass",
            "jyang",
            "jyaj",
            "jyac",
            "jyak",
            "jyat",
            "jyap",
            "jyah",
            "jyae",
            "jyaeg",
            "jyaegg",
            "jyaegs",
            "jyaen",
            "jyaenj",
            "jyaenh",
            "jyaed",
            "jyael",
            "jyaelg",
            "jyaelm",
            "jyaelb",
            "jyaels",
            "jyaelt",
            "jyaelp",
            "jyaelh",
            "jyaem",
            "jyaeb",
            "jyaebs",
            "jyaes",
            "jyaess",
            "jyaeng",
            "jyaej",
            "jyaec",
            "jyaek",
            "jyaet",
            "jyaep",
            "jyaeh"
        ],
        [
            "jeo",
            "jeog",
            "jeogg",
            "jeogs",
            "jeon",
            "jeonj",
            "jeonh",
            "jeod",
            "jeol",
            "jeolg",
            "jeolm",
            "jeolb",
            "jeols",
            "jeolt",
            "jeolp",
            "jeolh",
            "jeom",
            "jeob",
            "jeobs",
            "jeos",
            "jeoss",
            "jeong",
            "jeoj",
            "jeoc",
            "jeok",
            "jeot",
            "jeop",
            "jeoh",
            "je",
            "jeg",
            "jegg",
            "jegs",
            "jen",
            "jenj",
            "jenh",
            "jed",
            "jel",
            "jelg",
            "jelm",
            "jelb",
            "jels",
            "jelt",
            "jelp",
            "jelh",
            "jem",
            "jeb",
            "jebs",
            "jes",
            "jess",
            "jeng",
            "jej",
            "jec",
            "jek",
            "jet",
            "jep",
            "jeh",
            "jyeo",
            "jyeog",
            "jyeogg",
            "jyeogs",
            "jyeon",
            "jyeonj",
            "jyeonh",
            "jyeod",
            "jyeol",
            "jyeolg",
            "jyeolm",
            "jyeolb",
            "jyeols",
            "jyeolt",
            "jyeolp",
            "jyeolh",
            "jyeom",
            "jyeob",
            "jyeobs",
            "jyeos",
            "jyeoss",
            "jyeong",
            "jyeoj",
            "jyeoc",
            "jyeok",
            "jyeot",
            "jyeop",
            "jyeoh",
            "jye",
            "jyeg",
            "jyegg",
            "jyegs",
            "jyen",
            "jyenj",
            "jyenh",
            "jyed",
            "jyel",
            "jyelg",
            "jyelm",
            "jyelb",
            "jyels",
            "jyelt",
            "jyelp",
            "jyelh",
            "jyem",
            "jyeb",
            "jyebs",
            "jyes",
            "jyess",
            "jyeng",
            "jyej",
            "jyec",
            "jyek",
            "jyet",
            "jyep",
            "jyeh",
            "jo",
            "jog",
            "jogg",
            "jogs",
            "jon",
            "jonj",
            "jonh",
            "jod",
            "jol",
            "jolg",
            "jolm",
            "jolb",
            "jols",
            "jolt",
            "jolp",
            "jolh",
            "jom",
            "job",
            "jobs",
            "jos",
            "joss",
            "jong",
            "joj",
            "joc",
            "jok",
            "jot",
            "jop",
            "joh",
            "jwa",
            "jwag",
            "jwagg",
            "jwags",
            "jwan",
            "jwanj",
            "jwanh",
            "jwad",
            "jwal",
            "jwalg",
            "jwalm",
            "jwalb",
            "jwals",
            "jwalt",
            "jwalp",
            "jwalh",
            "jwam",
            "jwab",
            "jwabs",
            "jwas",
            "jwass",
            "jwang",
            "jwaj",
            "jwac",
            "jwak",
            "jwat",
            "jwap",
            "jwah",
            "jwae",
            "jwaeg",
            "jwaegg",
            "jwaegs",
            "jwaen",
            "jwaenj",
            "jwaenh",
            "jwaed",
            "jwael",
            "jwaelg",
            "jwaelm",
            "jwaelb",
            "jwaels",
            "jwaelt",
            "jwaelp",
            "jwaelh",
            "jwaem",
            "jwaeb",
            "jwaebs",
            "jwaes",
            "jwaess",
            "jwaeng",
            "jwaej",
            "jwaec",
            "jwaek",
            "jwaet",
            "jwaep",
            "jwaeh",
            "joe",
            "joeg",
            "joegg",
            "joegs",
            "joen",
            "joenj",
            "joenh",
            "joed",
            "joel",
            "joelg",
            "joelm",
            "joelb",
            "joels",
            "joelt",
            "joelp",
            "joelh",
            "joem",
            "joeb",
            "joebs",
            "joes",
            "joess",
            "joeng",
            "joej",
            "joec",
            "joek",
            "joet",
            "joep",
            "joeh",
            "jyo",
            "jyog",
            "jyogg",
            "jyogs",
            "jyon",
            "jyonj",
            "jyonh",
            "jyod",
            "jyol",
            "jyolg",
            "jyolm",
            "jyolb",
            "jyols",
            "jyolt",
            "jyolp",
            "jyolh",
            "jyom",
            "jyob",
            "jyobs",
            "jyos",
            "jyoss",
            "jyong",
            "jyoj",
            "jyoc",
            "jyok",
            "jyot",
            "jyop",
            "jyoh",
            "ju",
            "jug",
            "jugg",
            "jugs"
        ],
        [
            "jun",
            "junj",
            "junh",
            "jud",
            "jul",
            "julg",
            "julm",
            "julb",
            "juls",
            "jult",
            "julp",
            "julh",
            "jum",
            "jub",
            "jubs",
            "jus",
            "juss",
            "jung",
            "juj",
            "juc",
            "juk",
            "jut",
            "jup",
            "juh",
            "jweo",
            "jweog",
            "jweogg",
            "jweogs",
            "jweon",
            "jweonj",
            "jweonh",
            "jweod",
            "jweol",
            "jweolg",
            "jweolm",
            "jweolb",
            "jweols",
            "jweolt",
            "jweolp",
            "jweolh",
            "jweom",
            "jweob",
            "jweobs",
            "jweos",
            "jweoss",
            "jweong",
            "jweoj",
            "jweoc",
            "jweok",
            "jweot",
            "jweop",
            "jweoh",
            "jwe",
            "jweg",
            "jwegg",
            "jwegs",
            "jwen",
            "jwenj",
            "jwenh",
            "jwed",
            "jwel",
            "jwelg",
            "jwelm",
            "jwelb",
            "jwels",
            "jwelt",
            "jwelp",
            "jwelh",
            "jwem",
            "jweb",
            "jwebs",
            "jwes",
            "jwess",
            "jweng",
            "jwej",
            "jwec",
            "jwek",
            "jwet",
            "jwep",
            "jweh",
            "jwi",
            "jwig",
            "jwigg",
            "jwigs",
            "jwin",
            "jwinj",
            "jwinh",
            "jwid",
            "jwil",
            "jwilg",
            "jwilm",
            "jwilb",
            "jwils",
            "jwilt",
            "jwilp",
            "jwilh",
            "jwim",
            "jwib",
            "jwibs",
            "jwis",
            "jwiss",
            "jwing",
            "jwij",
            "jwic",
            "jwik",
            "jwit",
            "jwip",
            "jwih",
            "jyu",
            "jyug",
            "jyugg",
            "jyugs",
            "jyun",
            "jyunj",
            "jyunh",
            "jyud",
            "jyul",
            "jyulg",
            "jyulm",
            "jyulb",
            "jyuls",
            "jyult",
            "jyulp",
            "jyulh",
            "jyum",
            "jyub",
            "jyubs",
            "jyus",
            "jyuss",
            "jyung",
            "jyuj",
            "jyuc",
            "jyuk",
            "jyut",
            "jyup",
            "jyuh",
            "jeu",
            "jeug",
            "jeugg",
            "jeugs",
            "jeun",
            "jeunj",
            "jeunh",
            "jeud",
            "jeul",
            "jeulg",
            "jeulm",
            "jeulb",
            "jeuls",
            "jeult",
            "jeulp",
            "jeulh",
            "jeum",
            "jeub",
            "jeubs",
            "jeus",
            "jeuss",
            "jeung",
            "jeuj",
            "jeuc",
            "jeuk",
            "jeut",
            "jeup",
            "jeuh",
            "jyi",
            "jyig",
            "jyigg",
            "jyigs",
            "jyin",
            "jyinj",
            "jyinh",
            "jyid",
            "jyil",
            "jyilg",
            "jyilm",
            "jyilb",
            "jyils",
            "jyilt",
            "jyilp",
            "jyilh",
            "jyim",
            "jyib",
            "jyibs",
            "jyis",
            "jyiss",
            "jying",
            "jyij",
            "jyic",
            "jyik",
            "jyit",
            "jyip",
            "jyih",
            "ji",
            "jig",
            "jigg",
            "jigs",
            "jin",
            "jinj",
            "jinh",
            "jid",
            "jil",
            "jilg",
            "jilm",
            "jilb",
            "jils",
            "jilt",
            "jilp",
            "jilh",
            "jim",
            "jib",
            "jibs",
            "jis",
            "jiss",
            "jing",
            "jij",
            "jic",
            "jik",
            "jit",
            "jip",
            "jih",
            "jja",
            "jjag",
            "jjagg",
            "jjags",
            "jjan",
            "jjanj",
            "jjanh",
            "jjad",
            "jjal",
            "jjalg",
            "jjalm",
            "jjalb",
            "jjals",
            "jjalt",
            "jjalp",
            "jjalh",
            "jjam",
            "jjab",
            "jjabs",
            "jjas",
            "jjass",
            "jjang",
            "jjaj",
            "jjac",
            "jjak",
            "jjat",
            "jjap",
            "jjah",
            "jjae",
            "jjaeg",
            "jjaegg",
            "jjaegs",
            "jjaen",
            "jjaenj",
            "jjaenh",
            "jjaed"
        ],
        [
            "jjael",
            "jjaelg",
            "jjaelm",
            "jjaelb",
            "jjaels",
            "jjaelt",
            "jjaelp",
            "jjaelh",
            "jjaem",
            "jjaeb",
            "jjaebs",
            "jjaes",
            "jjaess",
            "jjaeng",
            "jjaej",
            "jjaec",
            "jjaek",
            "jjaet",
            "jjaep",
            "jjaeh",
            "jjya",
            "jjyag",
            "jjyagg",
            "jjyags",
            "jjyan",
            "jjyanj",
            "jjyanh",
            "jjyad",
            "jjyal",
            "jjyalg",
            "jjyalm",
            "jjyalb",
            "jjyals",
            "jjyalt",
            "jjyalp",
            "jjyalh",
            "jjyam",
            "jjyab",
            "jjyabs",
            "jjyas",
            "jjyass",
            "jjyang",
            "jjyaj",
            "jjyac",
            "jjyak",
            "jjyat",
            "jjyap",
            "jjyah",
            "jjyae",
            "jjyaeg",
            "jjyaegg",
            "jjyaegs",
            "jjyaen",
            "jjyaenj",
            "jjyaenh",
            "jjyaed",
            "jjyael",
            "jjyaelg",
            "jjyaelm",
            "jjyaelb",
            "jjyaels",
            "jjyaelt",
            "jjyaelp",
            "jjyaelh",
            "jjyaem",
            "jjyaeb",
            "jjyaebs",
            "jjyaes",
            "jjyaess",
            "jjyaeng",
            "jjyaej",
            "jjyaec",
            "jjyaek",
            "jjyaet",
            "jjyaep",
            "jjyaeh",
            "jjeo",
            "jjeog",
            "jjeogg",
            "jjeogs",
            "jjeon",
            "jjeonj",
            "jjeonh",
            "jjeod",
            "jjeol",
            "jjeolg",
            "jjeolm",
            "jjeolb",
            "jjeols",
            "jjeolt",
            "jjeolp",
            "jjeolh",
            "jjeom",
            "jjeob",
            "jjeobs",
            "jjeos",
            "jjeoss",
            "jjeong",
            "jjeoj",
            "jjeoc",
            "jjeok",
            "jjeot",
            "jjeop",
            "jjeoh",
            "jje",
            "jjeg",
            "jjegg",
            "jjegs",
            "jjen",
            "jjenj",
            "jjenh",
            "jjed",
            "jjel",
            "jjelg",
            "jjelm",
            "jjelb",
            "jjels",
            "jjelt",
            "jjelp",
            "jjelh",
            "jjem",
            "jjeb",
            "jjebs",
            "jjes",
            "jjess",
            "jjeng",
            "jjej",
            "jjec",
            "jjek",
            "jjet",
            "jjep",
            "jjeh",
            "jjyeo",
            "jjyeog",
            "jjyeogg",
            "jjyeogs",
            "jjyeon",
            "jjyeonj",
            "jjyeonh",
            "jjyeod",
            "jjyeol",
            "jjyeolg",
            "jjyeolm",
            "jjyeolb",
            "jjyeols",
            "jjyeolt",
            "jjyeolp",
            "jjyeolh",
            "jjyeom",
            "jjyeob",
            "jjyeobs",
            "jjyeos",
            "jjyeoss",
            "jjyeong",
            "jjyeoj",
            "jjyeoc",
            "jjyeok",
            "jjyeot",
            "jjyeop",
            "jjyeoh",
            "jjye",
            "jjyeg",
            "jjyegg",
            "jjyegs",
            "jjyen",
            "jjyenj",
            "jjyenh",
            "jjyed",
            "jjyel",
            "jjyelg",
            "jjyelm",
            "jjyelb",
            "jjyels",
            "jjyelt",
            "jjyelp",
            "jjyelh",
            "jjyem",
            "jjyeb",
            "jjyebs",
            "jjyes",
            "jjyess",
            "jjyeng",
            "jjyej",
            "jjyec",
            "jjyek",
            "jjyet",
            "jjyep",
            "jjyeh",
            "jjo",
            "jjog",
            "jjogg",
            "jjogs",
            "jjon",
            "jjonj",
            "jjonh",
            "jjod",
            "jjol",
            "jjolg",
            "jjolm",
            "jjolb",
            "jjols",
            "jjolt",
            "jjolp",
            "jjolh",
            "jjom",
            "jjob",
            "jjobs",
            "jjos",
            "jjoss",
            "jjong",
            "jjoj",
            "jjoc",
            "jjok",
            "jjot",
            "jjop",
            "jjoh",
            "jjwa",
            "jjwag",
            "jjwagg",
            "jjwags",
            "jjwan",
            "jjwanj",
            "jjwanh",
            "jjwad",
            "jjwal",
            "jjwalg",
            "jjwalm",
            "jjwalb",
            "jjwals",
            "jjwalt",
            "jjwalp",
            "jjwalh",
            "jjwam",
            "jjwab",
            "jjwabs",
            "jjwas",
            "jjwass",
            "jjwang",
            "jjwaj",
            "jjwac",
            "jjwak",
            "jjwat",
            "jjwap",
            "jjwah",
            "jjwae",
            "jjwaeg",
            "jjwaegg",
            "jjwaegs",
            "jjwaen",
            "jjwaenj",
            "jjwaenh",
            "jjwaed",
            "jjwael",
            "jjwaelg",
            "jjwaelm",
            "jjwaelb"
        ],
        [
            "jjwaels",
            "jjwaelt",
            "jjwaelp",
            "jjwaelh",
            "jjwaem",
            "jjwaeb",
            "jjwaebs",
            "jjwaes",
            "jjwaess",
            "jjwaeng",
            "jjwaej",
            "jjwaec",
            "jjwaek",
            "jjwaet",
            "jjwaep",
            "jjwaeh",
            "jjoe",
            "jjoeg",
            "jjoegg",
            "jjoegs",
            "jjoen",
            "jjoenj",
            "jjoenh",
            "jjoed",
            "jjoel",
            "jjoelg",
            "jjoelm",
            "jjoelb",
            "jjoels",
            "jjoelt",
            "jjoelp",
            "jjoelh",
            "jjoem",
            "jjoeb",
            "jjoebs",
            "jjoes",
            "jjoess",
            "jjoeng",
            "jjoej",
            "jjoec",
            "jjoek",
            "jjoet",
            "jjoep",
            "jjoeh",
            "jjyo",
            "jjyog",
            "jjyogg",
            "jjyogs",
            "jjyon",
            "jjyonj",
            "jjyonh",
            "jjyod",
            "jjyol",
            "jjyolg",
            "jjyolm",
            "jjyolb",
            "jjyols",
            "jjyolt",
            "jjyolp",
            "jjyolh",
            "jjyom",
            "jjyob",
            "jjyobs",
            "jjyos",
            "jjyoss",
            "jjyong",
            "jjyoj",
            "jjyoc",
            "jjyok",
            "jjyot",
            "jjyop",
            "jjyoh",
            "jju",
            "jjug",
            "jjugg",
            "jjugs",
            "jjun",
            "jjunj",
            "jjunh",
            "jjud",
            "jjul",
            "jjulg",
            "jjulm",
            "jjulb",
            "jjuls",
            "jjult",
            "jjulp",
            "jjulh",
            "jjum",
            "jjub",
            "jjubs",
            "jjus",
            "jjuss",
            "jjung",
            "jjuj",
            "jjuc",
            "jjuk",
            "jjut",
            "jjup",
            "jjuh",
            "jjweo",
            "jjweog",
            "jjweogg",
            "jjweogs",
            "jjweon",
            "jjweonj",
            "jjweonh",
            "jjweod",
            "jjweol",
            "jjweolg",
            "jjweolm",
            "jjweolb",
            "jjweols",
            "jjweolt",
            "jjweolp",
            "jjweolh",
            "jjweom",
            "jjweob",
            "jjweobs",
            "jjweos",
            "jjweoss",
            "jjweong",
            "jjweoj",
            "jjweoc",
            "jjweok",
            "jjweot",
            "jjweop",
            "jjweoh",
            "jjwe",
            "jjweg",
            "jjwegg",
            "jjwegs",
            "jjwen",
            "jjwenj",
            "jjwenh",
            "jjwed",
            "jjwel",
            "jjwelg",
            "jjwelm",
            "jjwelb",
            "jjwels",
            "jjwelt",
            "jjwelp",
            "jjwelh",
            "jjwem",
            "jjweb",
            "jjwebs",
            "jjwes",
            "jjwess",
            "jjweng",
            "jjwej",
            "jjwec",
            "jjwek",
            "jjwet",
            "jjwep",
            "jjweh",
            "jjwi",
            "jjwig",
            "jjwigg",
            "jjwigs",
            "jjwin",
            "jjwinj",
            "jjwinh",
            "jjwid",
            "jjwil",
            "jjwilg",
            "jjwilm",
            "jjwilb",
            "jjwils",
            "jjwilt",
            "jjwilp",
            "jjwilh",
            "jjwim",
            "jjwib",
            "jjwibs",
            "jjwis",
            "jjwiss",
            "jjwing",
            "jjwij",
            "jjwic",
            "jjwik",
            "jjwit",
            "jjwip",
            "jjwih",
            "jjyu",
            "jjyug",
            "jjyugg",
            "jjyugs",
            "jjyun",
            "jjyunj",
            "jjyunh",
            "jjyud",
            "jjyul",
            "jjyulg",
            "jjyulm",
            "jjyulb",
            "jjyuls",
            "jjyult",
            "jjyulp",
            "jjyulh",
            "jjyum",
            "jjyub",
            "jjyubs",
            "jjyus",
            "jjyuss",
            "jjyung",
            "jjyuj",
            "jjyuc",
            "jjyuk",
            "jjyut",
            "jjyup",
            "jjyuh",
            "jjeu",
            "jjeug",
            "jjeugg",
            "jjeugs",
            "jjeun",
            "jjeunj",
            "jjeunh",
            "jjeud",
            "jjeul",
            "jjeulg",
            "jjeulm",
            "jjeulb",
            "jjeuls",
            "jjeult",
            "jjeulp",
            "jjeulh",
            "jjeum",
            "jjeub",
            "jjeubs",
            "jjeus",
            "jjeuss",
            "jjeung",
            "jjeuj",
            "jjeuc",
            "jjeuk",
            "jjeut",
            "jjeup",
            "jjeuh",
            "jjyi",
            "jjyig",
            "jjyigg",
            "jjyigs",
            "jjyin",
            "jjyinj",
            "jjyinh",
            "jjyid",
            "jjyil",
            "jjyilg",
            "jjyilm",
            "jjyilb",
            "jjyils",
            "jjyilt",
            "jjyilp",
            "jjyilh"
        ],
        [
            "jjyim",
            "jjyib",
            "jjyibs",
            "jjyis",
            "jjyiss",
            "jjying",
            "jjyij",
            "jjyic",
            "jjyik",
            "jjyit",
            "jjyip",
            "jjyih",
            "jji",
            "jjig",
            "jjigg",
            "jjigs",
            "jjin",
            "jjinj",
            "jjinh",
            "jjid",
            "jjil",
            "jjilg",
            "jjilm",
            "jjilb",
            "jjils",
            "jjilt",
            "jjilp",
            "jjilh",
            "jjim",
            "jjib",
            "jjibs",
            "jjis",
            "jjiss",
            "jjing",
            "jjij",
            "jjic",
            "jjik",
            "jjit",
            "jjip",
            "jjih",
            "ca",
            "cag",
            "cagg",
            "cags",
            "can",
            "canj",
            "canh",
            "cad",
            "cal",
            "calg",
            "calm",
            "calb",
            "cals",
            "calt",
            "calp",
            "calh",
            "cam",
            "cab",
            "cabs",
            "cas",
            "cass",
            "cang",
            "caj",
            "cac",
            "cak",
            "cat",
            "cap",
            "cah",
            "cae",
            "caeg",
            "caegg",
            "caegs",
            "caen",
            "caenj",
            "caenh",
            "caed",
            "cael",
            "caelg",
            "caelm",
            "caelb",
            "caels",
            "caelt",
            "caelp",
            "caelh",
            "caem",
            "caeb",
            "caebs",
            "caes",
            "caess",
            "caeng",
            "caej",
            "caec",
            "caek",
            "caet",
            "caep",
            "caeh",
            "cya",
            "cyag",
            "cyagg",
            "cyags",
            "cyan",
            "cyanj",
            "cyanh",
            "cyad",
            "cyal",
            "cyalg",
            "cyalm",
            "cyalb",
            "cyals",
            "cyalt",
            "cyalp",
            "cyalh",
            "cyam",
            "cyab",
            "cyabs",
            "cyas",
            "cyass",
            "cyang",
            "cyaj",
            "cyac",
            "cyak",
            "cyat",
            "cyap",
            "cyah",
            "cyae",
            "cyaeg",
            "cyaegg",
            "cyaegs",
            "cyaen",
            "cyaenj",
            "cyaenh",
            "cyaed",
            "cyael",
            "cyaelg",
            "cyaelm",
            "cyaelb",
            "cyaels",
            "cyaelt",
            "cyaelp",
            "cyaelh",
            "cyaem",
            "cyaeb",
            "cyaebs",
            "cyaes",
            "cyaess",
            "cyaeng",
            "cyaej",
            "cyaec",
            "cyaek",
            "cyaet",
            "cyaep",
            "cyaeh",
            "ceo",
            "ceog",
            "ceogg",
            "ceogs",
            "ceon",
            "ceonj",
            "ceonh",
            "ceod",
            "ceol",
            "ceolg",
            "ceolm",
            "ceolb",
            "ceols",
            "ceolt",
            "ceolp",
            "ceolh",
            "ceom",
            "ceob",
            "ceobs",
            "ceos",
            "ceoss",
            "ceong",
            "ceoj",
            "ceoc",
            "ceok",
            "ceot",
            "ceop",
            "ceoh",
            "ce",
            "ceg",
            "cegg",
            "cegs",
            "cen",
            "cenj",
            "cenh",
            "ced",
            "cel",
            "celg",
            "celm",
            "celb",
            "cels",
            "celt",
            "celp",
            "celh",
            "cem",
            "ceb",
            "cebs",
            "ces",
            "cess",
            "ceng",
            "cej",
            "cec",
            "cek",
            "cet",
            "cep",
            "ceh",
            "cyeo",
            "cyeog",
            "cyeogg",
            "cyeogs",
            "cyeon",
            "cyeonj",
            "cyeonh",
            "cyeod",
            "cyeol",
            "cyeolg",
            "cyeolm",
            "cyeolb",
            "cyeols",
            "cyeolt",
            "cyeolp",
            "cyeolh",
            "cyeom",
            "cyeob",
            "cyeobs",
            "cyeos",
            "cyeoss",
            "cyeong",
            "cyeoj",
            "cyeoc",
            "cyeok",
            "cyeot",
            "cyeop",
            "cyeoh",
            "cye",
            "cyeg",
            "cyegg",
            "cyegs",
            "cyen",
            "cyenj",
            "cyenh",
            "cyed",
            "cyel",
            "cyelg",
            "cyelm",
            "cyelb",
            "cyels",
            "cyelt",
            "cyelp",
            "cyelh",
            "cyem",
            "cyeb",
            "cyebs",
            "cyes"
        ],
        [
            "cyess",
            "cyeng",
            "cyej",
            "cyec",
            "cyek",
            "cyet",
            "cyep",
            "cyeh",
            "co",
            "cog",
            "cogg",
            "cogs",
            "con",
            "conj",
            "conh",
            "cod",
            "col",
            "colg",
            "colm",
            "colb",
            "cols",
            "colt",
            "colp",
            "colh",
            "com",
            "cob",
            "cobs",
            "cos",
            "coss",
            "cong",
            "coj",
            "coc",
            "cok",
            "cot",
            "cop",
            "coh",
            "cwa",
            "cwag",
            "cwagg",
            "cwags",
            "cwan",
            "cwanj",
            "cwanh",
            "cwad",
            "cwal",
            "cwalg",
            "cwalm",
            "cwalb",
            "cwals",
            "cwalt",
            "cwalp",
            "cwalh",
            "cwam",
            "cwab",
            "cwabs",
            "cwas",
            "cwass",
            "cwang",
            "cwaj",
            "cwac",
            "cwak",
            "cwat",
            "cwap",
            "cwah",
            "cwae",
            "cwaeg",
            "cwaegg",
            "cwaegs",
            "cwaen",
            "cwaenj",
            "cwaenh",
            "cwaed",
            "cwael",
            "cwaelg",
            "cwaelm",
            "cwaelb",
            "cwaels",
            "cwaelt",
            "cwaelp",
            "cwaelh",
            "cwaem",
            "cwaeb",
            "cwaebs",
            "cwaes",
            "cwaess",
            "cwaeng",
            "cwaej",
            "cwaec",
            "cwaek",
            "cwaet",
            "cwaep",
            "cwaeh",
            "coe",
            "coeg",
            "coegg",
            "coegs",
            "coen",
            "coenj",
            "coenh",
            "coed",
            "coel",
            "coelg",
            "coelm",
            "coelb",
            "coels",
            "coelt",
            "coelp",
            "coelh",
            "coem",
            "coeb",
            "coebs",
            "coes",
            "coess",
            "coeng",
            "coej",
            "coec",
            "coek",
            "coet",
            "coep",
            "coeh",
            "cyo",
            "cyog",
            "cyogg",
            "cyogs",
            "cyon",
            "cyonj",
            "cyonh",
            "cyod",
            "cyol",
            "cyolg",
            "cyolm",
            "cyolb",
            "cyols",
            "cyolt",
            "cyolp",
            "cyolh",
            "cyom",
            "cyob",
            "cyobs",
            "cyos",
            "cyoss",
            "cyong",
            "cyoj",
            "cyoc",
            "cyok",
            "cyot",
            "cyop",
            "cyoh",
            "cu",
            "cug",
            "cugg",
            "cugs",
            "cun",
            "cunj",
            "cunh",
            "cud",
            "cul",
            "culg",
            "culm",
            "culb",
            "culs",
            "cult",
            "culp",
            "culh",
            "cum",
            "cub",
            "cubs",
            "cus",
            "cuss",
            "cung",
            "cuj",
            "cuc",
            "cuk",
            "cut",
            "cup",
            "cuh",
            "cweo",
            "cweog",
            "cweogg",
            "cweogs",
            "cweon",
            "cweonj",
            "cweonh",
            "cweod",
            "cweol",
            "cweolg",
            "cweolm",
            "cweolb",
            "cweols",
            "cweolt",
            "cweolp",
            "cweolh",
            "cweom",
            "cweob",
            "cweobs",
            "cweos",
            "cweoss",
            "cweong",
            "cweoj",
            "cweoc",
            "cweok",
            "cweot",
            "cweop",
            "cweoh",
            "cwe",
            "cweg",
            "cwegg",
            "cwegs",
            "cwen",
            "cwenj",
            "cwenh",
            "cwed",
            "cwel",
            "cwelg",
            "cwelm",
            "cwelb",
            "cwels",
            "cwelt",
            "cwelp",
            "cwelh",
            "cwem",
            "cweb",
            "cwebs",
            "cwes",
            "cwess",
            "cweng",
            "cwej",
            "cwec",
            "cwek",
            "cwet",
            "cwep",
            "cweh",
            "cwi",
            "cwig",
            "cwigg",
            "cwigs",
            "cwin",
            "cwinj",
            "cwinh",
            "cwid",
            "cwil",
            "cwilg",
            "cwilm",
            "cwilb",
            "cwils",
            "cwilt",
            "cwilp",
            "cwilh",
            "cwim",
            "cwib",
            "cwibs",
            "cwis",
            "cwiss",
            "cwing",
            "cwij",
            "cwic"
        ],
        [
            "cwik",
            "cwit",
            "cwip",
            "cwih",
            "cyu",
            "cyug",
            "cyugg",
            "cyugs",
            "cyun",
            "cyunj",
            "cyunh",
            "cyud",
            "cyul",
            "cyulg",
            "cyulm",
            "cyulb",
            "cyuls",
            "cyult",
            "cyulp",
            "cyulh",
            "cyum",
            "cyub",
            "cyubs",
            "cyus",
            "cyuss",
            "cyung",
            "cyuj",
            "cyuc",
            "cyuk",
            "cyut",
            "cyup",
            "cyuh",
            "ceu",
            "ceug",
            "ceugg",
            "ceugs",
            "ceun",
            "ceunj",
            "ceunh",
            "ceud",
            "ceul",
            "ceulg",
            "ceulm",
            "ceulb",
            "ceuls",
            "ceult",
            "ceulp",
            "ceulh",
            "ceum",
            "ceub",
            "ceubs",
            "ceus",
            "ceuss",
            "ceung",
            "ceuj",
            "ceuc",
            "ceuk",
            "ceut",
            "ceup",
            "ceuh",
            "cyi",
            "cyig",
            "cyigg",
            "cyigs",
            "cyin",
            "cyinj",
            "cyinh",
            "cyid",
            "cyil",
            "cyilg",
            "cyilm",
            "cyilb",
            "cyils",
            "cyilt",
            "cyilp",
            "cyilh",
            "cyim",
            "cyib",
            "cyibs",
            "cyis",
            "cyiss",
            "cying",
            "cyij",
            "cyic",
            "cyik",
            "cyit",
            "cyip",
            "cyih",
            "ci",
            "cig",
            "cigg",
            "cigs",
            "cin",
            "cinj",
            "cinh",
            "cid",
            "cil",
            "cilg",
            "cilm",
            "cilb",
            "cils",
            "cilt",
            "cilp",
            "cilh",
            "cim",
            "cib",
            "cibs",
            "cis",
            "ciss",
            "cing",
            "cij",
            "cic",
            "cik",
            "cit",
            "cip",
            "cih",
            "ka",
            "kag",
            "kagg",
            "kags",
            "kan",
            "kanj",
            "kanh",
            "kad",
            "kal",
            "kalg",
            "kalm",
            "kalb",
            "kals",
            "kalt",
            "kalp",
            "kalh",
            "kam",
            "kab",
            "kabs",
            "kas",
            "kass",
            "kang",
            "kaj",
            "kac",
            "kak",
            "kat",
            "kap",
            "kah",
            "kae",
            "kaeg",
            "kaegg",
            "kaegs",
            "kaen",
            "kaenj",
            "kaenh",
            "kaed",
            "kael",
            "kaelg",
            "kaelm",
            "kaelb",
            "kaels",
            "kaelt",
            "kaelp",
            "kaelh",
            "kaem",
            "kaeb",
            "kaebs",
            "kaes",
            "kaess",
            "kaeng",
            "kaej",
            "kaec",
            "kaek",
            "kaet",
            "kaep",
            "kaeh",
            "kya",
            "kyag",
            "kyagg",
            "kyags",
            "kyan",
            "kyanj",
            "kyanh",
            "kyad",
            "kyal",
            "kyalg",
            "kyalm",
            "kyalb",
            "kyals",
            "kyalt",
            "kyalp",
            "kyalh",
            "kyam",
            "kyab",
            "kyabs",
            "kyas",
            "kyass",
            "kyang",
            "kyaj",
            "kyac",
            "kyak",
            "kyat",
            "kyap",
            "kyah",
            "kyae",
            "kyaeg",
            "kyaegg",
            "kyaegs",
            "kyaen",
            "kyaenj",
            "kyaenh",
            "kyaed",
            "kyael",
            "kyaelg",
            "kyaelm",
            "kyaelb",
            "kyaels",
            "kyaelt",
            "kyaelp",
            "kyaelh",
            "kyaem",
            "kyaeb",
            "kyaebs",
            "kyaes",
            "kyaess",
            "kyaeng",
            "kyaej",
            "kyaec",
            "kyaek",
            "kyaet",
            "kyaep",
            "kyaeh",
            "keo",
            "keog",
            "keogg",
            "keogs",
            "keon",
            "keonj",
            "keonh",
            "keod",
            "keol",
            "keolg",
            "keolm",
            "keolb",
            "keols",
            "keolt",
            "keolp",
            "keolh",
            "keom",
            "keob",
            "keobs",
            "keos",
            "keoss",
            "keong",
            "keoj",
            "keoc",
            "keok",
            "keot",
            "keop",
            "keoh"
        ],
        [
            "ke",
            "keg",
            "kegg",
            "kegs",
            "ken",
            "kenj",
            "kenh",
            "ked",
            "kel",
            "kelg",
            "kelm",
            "kelb",
            "kels",
            "kelt",
            "kelp",
            "kelh",
            "kem",
            "keb",
            "kebs",
            "kes",
            "kess",
            "keng",
            "kej",
            "kec",
            "kek",
            "ket",
            "kep",
            "keh",
            "kyeo",
            "kyeog",
            "kyeogg",
            "kyeogs",
            "kyeon",
            "kyeonj",
            "kyeonh",
            "kyeod",
            "kyeol",
            "kyeolg",
            "kyeolm",
            "kyeolb",
            "kyeols",
            "kyeolt",
            "kyeolp",
            "kyeolh",
            "kyeom",
            "kyeob",
            "kyeobs",
            "kyeos",
            "kyeoss",
            "kyeong",
            "kyeoj",
            "kyeoc",
            "kyeok",
            "kyeot",
            "kyeop",
            "kyeoh",
            "kye",
            "kyeg",
            "kyegg",
            "kyegs",
            "kyen",
            "kyenj",
            "kyenh",
            "kyed",
            "kyel",
            "kyelg",
            "kyelm",
            "kyelb",
            "kyels",
            "kyelt",
            "kyelp",
            "kyelh",
            "kyem",
            "kyeb",
            "kyebs",
            "kyes",
            "kyess",
            "kyeng",
            "kyej",
            "kyec",
            "kyek",
            "kyet",
            "kyep",
            "kyeh",
            "ko",
            "kog",
            "kogg",
            "kogs",
            "kon",
            "konj",
            "konh",
            "kod",
            "kol",
            "kolg",
            "kolm",
            "kolb",
            "kols",
            "kolt",
            "kolp",
            "kolh",
            "kom",
            "kob",
            "kobs",
            "kos",
            "koss",
            "kong",
            "koj",
            "koc",
            "kok",
            "kot",
            "kop",
            "koh",
            "kwa",
            "kwag",
            "kwagg",
            "kwags",
            "kwan",
            "kwanj",
            "kwanh",
            "kwad",
            "kwal",
            "kwalg",
            "kwalm",
            "kwalb",
            "kwals",
            "kwalt",
            "kwalp",
            "kwalh",
            "kwam",
            "kwab",
            "kwabs",
            "kwas",
            "kwass",
            "kwang",
            "kwaj",
            "kwac",
            "kwak",
            "kwat",
            "kwap",
            "kwah",
            "kwae",
            "kwaeg",
            "kwaegg",
            "kwaegs",
            "kwaen",
            "kwaenj",
            "kwaenh",
            "kwaed",
            "kwael",
            "kwaelg",
            "kwaelm",
            "kwaelb",
            "kwaels",
            "kwaelt",
            "kwaelp",
            "kwaelh",
            "kwaem",
            "kwaeb",
            "kwaebs",
            "kwaes",
            "kwaess",
            "kwaeng",
            "kwaej",
            "kwaec",
            "kwaek",
            "kwaet",
            "kwaep",
            "kwaeh",
            "koe",
            "koeg",
            "koegg",
            "koegs",
            "koen",
            "koenj",
            "koenh",
            "koed",
            "koel",
            "koelg",
            "koelm",
            "koelb",
            "koels",
            "koelt",
            "koelp",
            "koelh",
            "koem",
            "koeb",
            "koebs",
            "koes",
            "koess",
            "koeng",
            "koej",
            "koec",
            "koek",
            "koet",
            "koep",
            "koeh",
            "kyo",
            "kyog",
            "kyogg",
            "kyogs",
            "kyon",
            "kyonj",
            "kyonh",
            "kyod",
            "kyol",
            "kyolg",
            "kyolm",
            "kyolb",
            "kyols",
            "kyolt",
            "kyolp",
            "kyolh",
            "kyom",
            "kyob",
            "kyobs",
            "kyos",
            "kyoss",
            "kyong",
            "kyoj",
            "kyoc",
            "kyok",
            "kyot",
            "kyop",
            "kyoh",
            "ku",
            "kug",
            "kugg",
            "kugs",
            "kun",
            "kunj",
            "kunh",
            "kud",
            "kul",
            "kulg",
            "kulm",
            "kulb",
            "kuls",
            "kult",
            "kulp",
            "kulh",
            "kum",
            "kub",
            "kubs",
            "kus",
            "kuss",
            "kung",
            "kuj",
            "kuc",
            "kuk",
            "kut",
            "kup",
            "kuh",
            "kweo",
            "kweog",
            "kweogg",
            "kweogs"
        ],
        [
            "kweon",
            "kweonj",
            "kweonh",
            "kweod",
            "kweol",
            "kweolg",
            "kweolm",
            "kweolb",
            "kweols",
            "kweolt",
            "kweolp",
            "kweolh",
            "kweom",
            "kweob",
            "kweobs",
            "kweos",
            "kweoss",
            "kweong",
            "kweoj",
            "kweoc",
            "kweok",
            "kweot",
            "kweop",
            "kweoh",
            "kwe",
            "kweg",
            "kwegg",
            "kwegs",
            "kwen",
            "kwenj",
            "kwenh",
            "kwed",
            "kwel",
            "kwelg",
            "kwelm",
            "kwelb",
            "kwels",
            "kwelt",
            "kwelp",
            "kwelh",
            "kwem",
            "kweb",
            "kwebs",
            "kwes",
            "kwess",
            "kweng",
            "kwej",
            "kwec",
            "kwek",
            "kwet",
            "kwep",
            "kweh",
            "kwi",
            "kwig",
            "kwigg",
            "kwigs",
            "kwin",
            "kwinj",
            "kwinh",
            "kwid",
            "kwil",
            "kwilg",
            "kwilm",
            "kwilb",
            "kwils",
            "kwilt",
            "kwilp",
            "kwilh",
            "kwim",
            "kwib",
            "kwibs",
            "kwis",
            "kwiss",
            "kwing",
            "kwij",
            "kwic",
            "kwik",
            "kwit",
            "kwip",
            "kwih",
            "kyu",
            "kyug",
            "kyugg",
            "kyugs",
            "kyun",
            "kyunj",
            "kyunh",
            "kyud",
            "kyul",
            "kyulg",
            "kyulm",
            "kyulb",
            "kyuls",
            "kyult",
            "kyulp",
            "kyulh",
            "kyum",
            "kyub",
            "kyubs",
            "kyus",
            "kyuss",
            "kyung",
            "kyuj",
            "kyuc",
            "kyuk",
            "kyut",
            "kyup",
            "kyuh",
            "keu",
            "keug",
            "keugg",
            "keugs",
            "keun",
            "keunj",
            "keunh",
            "keud",
            "keul",
            "keulg",
            "keulm",
            "keulb",
            "keuls",
            "keult",
            "keulp",
            "keulh",
            "keum",
            "keub",
            "keubs",
            "keus",
            "keuss",
            "keung",
            "keuj",
            "keuc",
            "keuk",
            "keut",
            "keup",
            "keuh",
            "kyi",
            "kyig",
            "kyigg",
            "kyigs",
            "kyin",
            "kyinj",
            "kyinh",
            "kyid",
            "kyil",
            "kyilg",
            "kyilm",
            "kyilb",
            "kyils",
            "kyilt",
            "kyilp",
            "kyilh",
            "kyim",
            "kyib",
            "kyibs",
            "kyis",
            "kyiss",
            "kying",
            "kyij",
            "kyic",
            "kyik",
            "kyit",
            "kyip",
            "kyih",
            "ki",
            "kig",
            "kigg",
            "kigs",
            "kin",
            "kinj",
            "kinh",
            "kid",
            "kil",
            "kilg",
            "kilm",
            "kilb",
            "kils",
            "kilt",
            "kilp",
            "kilh",
            "kim",
            "kib",
            "kibs",
            "kis",
            "kiss",
            "king",
            "kij",
            "kic",
            "kik",
            "kit",
            "kip",
            "kih",
            "ta",
            "tag",
            "tagg",
            "tags",
            "tan",
            "tanj",
            "tanh",
            "tad",
            "tal",
            "talg",
            "talm",
            "talb",
            "tals",
            "talt",
            "talp",
            "talh",
            "tam",
            "tab",
            "tabs",
            "tas",
            "tass",
            "tang",
            "taj",
            "tac",
            "tak",
            "tat",
            "tap",
            "tah",
            "tae",
            "taeg",
            "taegg",
            "taegs",
            "taen",
            "taenj",
            "taenh",
            "taed",
            "tael",
            "taelg",
            "taelm",
            "taelb",
            "taels",
            "taelt",
            "taelp",
            "taelh",
            "taem",
            "taeb",
            "taebs",
            "taes",
            "taess",
            "taeng",
            "taej",
            "taec",
            "taek",
            "taet",
            "taep",
            "taeh",
            "tya",
            "tyag",
            "tyagg",
            "tyags",
            "tyan",
            "tyanj",
            "tyanh",
            "tyad"
        ],
        [
            "tyal",
            "tyalg",
            "tyalm",
            "tyalb",
            "tyals",
            "tyalt",
            "tyalp",
            "tyalh",
            "tyam",
            "tyab",
            "tyabs",
            "tyas",
            "tyass",
            "tyang",
            "tyaj",
            "tyac",
            "tyak",
            "tyat",
            "tyap",
            "tyah",
            "tyae",
            "tyaeg",
            "tyaegg",
            "tyaegs",
            "tyaen",
            "tyaenj",
            "tyaenh",
            "tyaed",
            "tyael",
            "tyaelg",
            "tyaelm",
            "tyaelb",
            "tyaels",
            "tyaelt",
            "tyaelp",
            "tyaelh",
            "tyaem",
            "tyaeb",
            "tyaebs",
            "tyaes",
            "tyaess",
            "tyaeng",
            "tyaej",
            "tyaec",
            "tyaek",
            "tyaet",
            "tyaep",
            "tyaeh",
            "teo",
            "teog",
            "teogg",
            "teogs",
            "teon",
            "teonj",
            "teonh",
            "teod",
            "teol",
            "teolg",
            "teolm",
            "teolb",
            "teols",
            "teolt",
            "teolp",
            "teolh",
            "teom",
            "teob",
            "teobs",
            "teos",
            "teoss",
            "teong",
            "teoj",
            "teoc",
            "teok",
            "teot",
            "teop",
            "teoh",
            "te",
            "teg",
            "tegg",
            "tegs",
            "ten",
            "tenj",
            "tenh",
            "ted",
            "tel",
            "telg",
            "telm",
            "telb",
            "tels",
            "telt",
            "telp",
            "telh",
            "tem",
            "teb",
            "tebs",
            "tes",
            "tess",
            "teng",
            "tej",
            "tec",
            "tek",
            "tet",
            "tep",
            "teh",
            "tyeo",
            "tyeog",
            "tyeogg",
            "tyeogs",
            "tyeon",
            "tyeonj",
            "tyeonh",
            "tyeod",
            "tyeol",
            "tyeolg",
            "tyeolm",
            "tyeolb",
            "tyeols",
            "tyeolt",
            "tyeolp",
            "tyeolh",
            "tyeom",
            "tyeob",
            "tyeobs",
            "tyeos",
            "tyeoss",
            "tyeong",
            "tyeoj",
            "tyeoc",
            "tyeok",
            "tyeot",
            "tyeop",
            "tyeoh",
            "tye",
            "tyeg",
            "tyegg",
            "tyegs",
            "tyen",
            "tyenj",
            "tyenh",
            "tyed",
            "tyel",
            "tyelg",
            "tyelm",
            "tyelb",
            "tyels",
            "tyelt",
            "tyelp",
            "tyelh",
            "tyem",
            "tyeb",
            "tyebs",
            "tyes",
            "tyess",
            "tyeng",
            "tyej",
            "tyec",
            "tyek",
            "tyet",
            "tyep",
            "tyeh",
            "to",
            "tog",
            "togg",
            "togs",
            "ton",
            "tonj",
            "tonh",
            "tod",
            "tol",
            "tolg",
            "tolm",
            "tolb",
            "tols",
            "tolt",
            "tolp",
            "tolh",
            "tom",
            "tob",
            "tobs",
            "tos",
            "toss",
            "tong",
            "toj",
            "toc",
            "tok",
            "tot",
            "top",
            "toh",
            "twa",
            "twag",
            "twagg",
            "twags",
            "twan",
            "twanj",
            "twanh",
            "twad",
            "twal",
            "twalg",
            "twalm",
            "twalb",
            "twals",
            "twalt",
            "twalp",
            "twalh",
            "twam",
            "twab",
            "twabs",
            "twas",
            "twass",
            "twang",
            "twaj",
            "twac",
            "twak",
            "twat",
            "twap",
            "twah",
            "twae",
            "twaeg",
            "twaegg",
            "twaegs",
            "twaen",
            "twaenj",
            "twaenh",
            "twaed",
            "twael",
            "twaelg",
            "twaelm",
            "twaelb",
            "twaels",
            "twaelt",
            "twaelp",
            "twaelh",
            "twaem",
            "twaeb",
            "twaebs",
            "twaes",
            "twaess",
            "twaeng",
            "twaej",
            "twaec",
            "twaek",
            "twaet",
            "twaep",
            "twaeh",
            "toe",
            "toeg",
            "toegg",
            "toegs",
            "toen",
            "toenj",
            "toenh",
            "toed",
            "toel",
            "toelg",
            "toelm",
            "toelb"
        ],
        [
            "toels",
            "toelt",
            "toelp",
            "toelh",
            "toem",
            "toeb",
            "toebs",
            "toes",
            "toess",
            "toeng",
            "toej",
            "toec",
            "toek",
            "toet",
            "toep",
            "toeh",
            "tyo",
            "tyog",
            "tyogg",
            "tyogs",
            "tyon",
            "tyonj",
            "tyonh",
            "tyod",
            "tyol",
            "tyolg",
            "tyolm",
            "tyolb",
            "tyols",
            "tyolt",
            "tyolp",
            "tyolh",
            "tyom",
            "tyob",
            "tyobs",
            "tyos",
            "tyoss",
            "tyong",
            "tyoj",
            "tyoc",
            "tyok",
            "tyot",
            "tyop",
            "tyoh",
            "tu",
            "tug",
            "tugg",
            "tugs",
            "tun",
            "tunj",
            "tunh",
            "tud",
            "tul",
            "tulg",
            "tulm",
            "tulb",
            "tuls",
            "tult",
            "tulp",
            "tulh",
            "tum",
            "tub",
            "tubs",
            "tus",
            "tuss",
            "tung",
            "tuj",
            "tuc",
            "tuk",
            "tut",
            "tup",
            "tuh",
            "tweo",
            "tweog",
            "tweogg",
            "tweogs",
            "tweon",
            "tweonj",
            "tweonh",
            "tweod",
            "tweol",
            "tweolg",
            "tweolm",
            "tweolb",
            "tweols",
            "tweolt",
            "tweolp",
            "tweolh",
            "tweom",
            "tweob",
            "tweobs",
            "tweos",
            "tweoss",
            "tweong",
            "tweoj",
            "tweoc",
            "tweok",
            "tweot",
            "tweop",
            "tweoh",
            "twe",
            "tweg",
            "twegg",
            "twegs",
            "twen",
            "twenj",
            "twenh",
            "twed",
            "twel",
            "twelg",
            "twelm",
            "twelb",
            "twels",
            "twelt",
            "twelp",
            "twelh",
            "twem",
            "tweb",
            "twebs",
            "twes",
            "twess",
            "tweng",
            "twej",
            "twec",
            "twek",
            "twet",
            "twep",
            "tweh",
            "twi",
            "twig",
            "twigg",
            "twigs",
            "twin",
            "twinj",
            "twinh",
            "twid",
            "twil",
            "twilg",
            "twilm",
            "twilb",
            "twils",
            "twilt",
            "twilp",
            "twilh",
            "twim",
            "twib",
            "twibs",
            "twis",
            "twiss",
            "twing",
            "twij",
            "twic",
            "twik",
            "twit",
            "twip",
            "twih",
            "tyu",
            "tyug",
            "tyugg",
            "tyugs",
            "tyun",
            "tyunj",
            "tyunh",
            "tyud",
            "tyul",
            "tyulg",
            "tyulm",
            "tyulb",
            "tyuls",
            "tyult",
            "tyulp",
            "tyulh",
            "tyum",
            "tyub",
            "tyubs",
            "tyus",
            "tyuss",
            "tyung",
            "tyuj",
            "tyuc",
            "tyuk",
            "tyut",
            "tyup",
            "tyuh",
            "teu",
            "teug",
            "teugg",
            "teugs",
            "teun",
            "teunj",
            "teunh",
            "teud",
            "teul",
            "teulg",
            "teulm",
            "teulb",
            "teuls",
            "teult",
            "teulp",
            "teulh",
            "teum",
            "teub",
            "teubs",
            "teus",
            "teuss",
            "teung",
            "teuj",
            "teuc",
            "teuk",
            "teut",
            "teup",
            "teuh",
            "tyi",
            "tyig",
            "tyigg",
            "tyigs",
            "tyin",
            "tyinj",
            "tyinh",
            "tyid",
            "tyil",
            "tyilg",
            "tyilm",
            "tyilb",
            "tyils",
            "tyilt",
            "tyilp",
            "tyilh",
            "tyim",
            "tyib",
            "tyibs",
            "tyis",
            "tyiss",
            "tying",
            "tyij",
            "tyic",
            "tyik",
            "tyit",
            "tyip",
            "tyih",
            "ti",
            "tig",
            "tigg",
            "tigs",
            "tin",
            "tinj",
            "tinh",
            "tid",
            "til",
            "tilg",
            "tilm",
            "tilb",
            "tils",
            "tilt",
            "tilp",
            "tilh"
        ],
        [
            "tim",
            "tib",
            "tibs",
            "tis",
            "tiss",
            "ting",
            "tij",
            "tic",
            "tik",
            "tit",
            "tip",
            "tih",
            "pa",
            "pag",
            "pagg",
            "pags",
            "pan",
            "panj",
            "panh",
            "pad",
            "pal",
            "palg",
            "palm",
            "palb",
            "pals",
            "palt",
            "palp",
            "palh",
            "pam",
            "pab",
            "pabs",
            "pas",
            "pass",
            "pang",
            "paj",
            "pac",
            "pak",
            "pat",
            "pap",
            "pah",
            "pae",
            "paeg",
            "paegg",
            "paegs",
            "paen",
            "paenj",
            "paenh",
            "paed",
            "pael",
            "paelg",
            "paelm",
            "paelb",
            "paels",
            "paelt",
            "paelp",
            "paelh",
            "paem",
            "paeb",
            "paebs",
            "paes",
            "paess",
            "paeng",
            "paej",
            "paec",
            "paek",
            "paet",
            "paep",
            "paeh",
            "pya",
            "pyag",
            "pyagg",
            "pyags",
            "pyan",
            "pyanj",
            "pyanh",
            "pyad",
            "pyal",
            "pyalg",
            "pyalm",
            "pyalb",
            "pyals",
            "pyalt",
            "pyalp",
            "pyalh",
            "pyam",
            "pyab",
            "pyabs",
            "pyas",
            "pyass",
            "pyang",
            "pyaj",
            "pyac",
            "pyak",
            "pyat",
            "pyap",
            "pyah",
            "pyae",
            "pyaeg",
            "pyaegg",
            "pyaegs",
            "pyaen",
            "pyaenj",
            "pyaenh",
            "pyaed",
            "pyael",
            "pyaelg",
            "pyaelm",
            "pyaelb",
            "pyaels",
            "pyaelt",
            "pyaelp",
            "pyaelh",
            "pyaem",
            "pyaeb",
            "pyaebs",
            "pyaes",
            "pyaess",
            "pyaeng",
            "pyaej",
            "pyaec",
            "pyaek",
            "pyaet",
            "pyaep",
            "pyaeh",
            "peo",
            "peog",
            "peogg",
            "peogs",
            "peon",
            "peonj",
            "peonh",
            "peod",
            "peol",
            "peolg",
            "peolm",
            "peolb",
            "peols",
            "peolt",
            "peolp",
            "peolh",
            "peom",
            "peob",
            "peobs",
            "peos",
            "peoss",
            "peong",
            "peoj",
            "peoc",
            "peok",
            "peot",
            "peop",
            "peoh",
            "pe",
            "peg",
            "pegg",
            "pegs",
            "pen",
            "penj",
            "penh",
            "ped",
            "pel",
            "pelg",
            "pelm",
            "pelb",
            "pels",
            "pelt",
            "pelp",
            "pelh",
            "pem",
            "peb",
            "pebs",
            "pes",
            "pess",
            "peng",
            "pej",
            "pec",
            "pek",
            "pet",
            "pep",
            "peh",
            "pyeo",
            "pyeog",
            "pyeogg",
            "pyeogs",
            "pyeon",
            "pyeonj",
            "pyeonh",
            "pyeod",
            "pyeol",
            "pyeolg",
            "pyeolm",
            "pyeolb",
            "pyeols",
            "pyeolt",
            "pyeolp",
            "pyeolh",
            "pyeom",
            "pyeob",
            "pyeobs",
            "pyeos",
            "pyeoss",
            "pyeong",
            "pyeoj",
            "pyeoc",
            "pyeok",
            "pyeot",
            "pyeop",
            "pyeoh",
            "pye",
            "pyeg",
            "pyegg",
            "pyegs",
            "pyen",
            "pyenj",
            "pyenh",
            "pyed",
            "pyel",
            "pyelg",
            "pyelm",
            "pyelb",
            "pyels",
            "pyelt",
            "pyelp",
            "pyelh",
            "pyem",
            "pyeb",
            "pyebs",
            "pyes",
            "pyess",
            "pyeng",
            "pyej",
            "pyec",
            "pyek",
            "pyet",
            "pyep",
            "pyeh",
            "po",
            "pog",
            "pogg",
            "pogs",
            "pon",
            "ponj",
            "ponh",
            "pod",
            "pol",
            "polg",
            "polm",
            "polb",
            "pols",
            "polt",
            "polp",
            "polh",
            "pom",
            "pob",
            "pobs",
            "pos"
        ],
        [
            "poss",
            "pong",
            "poj",
            "poc",
            "pok",
            "pot",
            "pop",
            "poh",
            "pwa",
            "pwag",
            "pwagg",
            "pwags",
            "pwan",
            "pwanj",
            "pwanh",
            "pwad",
            "pwal",
            "pwalg",
            "pwalm",
            "pwalb",
            "pwals",
            "pwalt",
            "pwalp",
            "pwalh",
            "pwam",
            "pwab",
            "pwabs",
            "pwas",
            "pwass",
            "pwang",
            "pwaj",
            "pwac",
            "pwak",
            "pwat",
            "pwap",
            "pwah",
            "pwae",
            "pwaeg",
            "pwaegg",
            "pwaegs",
            "pwaen",
            "pwaenj",
            "pwaenh",
            "pwaed",
            "pwael",
            "pwaelg",
            "pwaelm",
            "pwaelb",
            "pwaels",
            "pwaelt",
            "pwaelp",
            "pwaelh",
            "pwaem",
            "pwaeb",
            "pwaebs",
            "pwaes",
            "pwaess",
            "pwaeng",
            "pwaej",
            "pwaec",
            "pwaek",
            "pwaet",
            "pwaep",
            "pwaeh",
            "poe",
            "poeg",
            "poegg",
            "poegs",
            "poen",
            "poenj",
            "poenh",
            "poed",
            "poel",
            "poelg",
            "poelm",
            "poelb",
            "poels",
            "poelt",
            "poelp",
            "poelh",
            "poem",
            "poeb",
            "poebs",
            "poes",
            "poess",
            "poeng",
            "poej",
            "poec",
            "poek",
            "poet",
            "poep",
            "poeh",
            "pyo",
            "pyog",
            "pyogg",
            "pyogs",
            "pyon",
            "pyonj",
            "pyonh",
            "pyod",
            "pyol",
            "pyolg",
            "pyolm",
            "pyolb",
            "pyols",
            "pyolt",
            "pyolp",
            "pyolh",
            "pyom",
            "pyob",
            "pyobs",
            "pyos",
            "pyoss",
            "pyong",
            "pyoj",
            "pyoc",
            "pyok",
            "pyot",
            "pyop",
            "pyoh",
            "pu",
            "pug",
            "pugg",
            "pugs",
            "pun",
            "punj",
            "punh",
            "pud",
            "pul",
            "pulg",
            "pulm",
            "pulb",
            "puls",
            "pult",
            "pulp",
            "pulh",
            "pum",
            "pub",
            "pubs",
            "pus",
            "puss",
            "pung",
            "puj",
            "puc",
            "puk",
            "put",
            "pup",
            "puh",
            "pweo",
            "pweog",
            "pweogg",
            "pweogs",
            "pweon",
            "pweonj",
            "pweonh",
            "pweod",
            "pweol",
            "pweolg",
            "pweolm",
            "pweolb",
            "pweols",
            "pweolt",
            "pweolp",
            "pweolh",
            "pweom",
            "pweob",
            "pweobs",
            "pweos",
            "pweoss",
            "pweong",
            "pweoj",
            "pweoc",
            "pweok",
            "pweot",
            "pweop",
            "pweoh",
            "pwe",
            "pweg",
            "pwegg",
            "pwegs",
            "pwen",
            "pwenj",
            "pwenh",
            "pwed",
            "pwel",
            "pwelg",
            "pwelm",
            "pwelb",
            "pwels",
            "pwelt",
            "pwelp",
            "pwelh",
            "pwem",
            "pweb",
            "pwebs",
            "pwes",
            "pwess",
            "pweng",
            "pwej",
            "pwec",
            "pwek",
            "pwet",
            "pwep",
            "pweh",
            "pwi",
            "pwig",
            "pwigg",
            "pwigs",
            "pwin",
            "pwinj",
            "pwinh",
            "pwid",
            "pwil",
            "pwilg",
            "pwilm",
            "pwilb",
            "pwils",
            "pwilt",
            "pwilp",
            "pwilh",
            "pwim",
            "pwib",
            "pwibs",
            "pwis",
            "pwiss",
            "pwing",
            "pwij",
            "pwic",
            "pwik",
            "pwit",
            "pwip",
            "pwih",
            "pyu",
            "pyug",
            "pyugg",
            "pyugs",
            "pyun",
            "pyunj",
            "pyunh",
            "pyud",
            "pyul",
            "pyulg",
            "pyulm",
            "pyulb",
            "pyuls",
            "pyult",
            "pyulp",
            "pyulh",
            "pyum",
            "pyub",
            "pyubs",
            "pyus",
            "pyuss",
            "pyung",
            "pyuj",
            "pyuc"
        ],
        [
            "pyuk",
            "pyut",
            "pyup",
            "pyuh",
            "peu",
            "peug",
            "peugg",
            "peugs",
            "peun",
            "peunj",
            "peunh",
            "peud",
            "peul",
            "peulg",
            "peulm",
            "peulb",
            "peuls",
            "peult",
            "peulp",
            "peulh",
            "peum",
            "peub",
            "peubs",
            "peus",
            "peuss",
            "peung",
            "peuj",
            "peuc",
            "peuk",
            "peut",
            "peup",
            "peuh",
            "pyi",
            "pyig",
            "pyigg",
            "pyigs",
            "pyin",
            "pyinj",
            "pyinh",
            "pyid",
            "pyil",
            "pyilg",
            "pyilm",
            "pyilb",
            "pyils",
            "pyilt",
            "pyilp",
            "pyilh",
            "pyim",
            "pyib",
            "pyibs",
            "pyis",
            "pyiss",
            "pying",
            "pyij",
            "pyic",
            "pyik",
            "pyit",
            "pyip",
            "pyih",
            "pi",
            "pig",
            "pigg",
            "pigs",
            "pin",
            "pinj",
            "pinh",
            "pid",
            "pil",
            "pilg",
            "pilm",
            "pilb",
            "pils",
            "pilt",
            "pilp",
            "pilh",
            "pim",
            "pib",
            "pibs",
            "pis",
            "piss",
            "ping",
            "pij",
            "pic",
            "pik",
            "pit",
            "pip",
            "pih",
            "ha",
            "hag",
            "hagg",
            "hags",
            "han",
            "hanj",
            "hanh",
            "had",
            "hal",
            "halg",
            "halm",
            "halb",
            "hals",
            "halt",
            "halp",
            "halh",
            "ham",
            "hab",
            "habs",
            "has",
            "hass",
            "hang",
            "haj",
            "hac",
            "hak",
            "hat",
            "hap",
            "hah",
            "hae",
            "haeg",
            "haegg",
            "haegs",
            "haen",
            "haenj",
            "haenh",
            "haed",
            "hael",
            "haelg",
            "haelm",
            "haelb",
            "haels",
            "haelt",
            "haelp",
            "haelh",
            "haem",
            "haeb",
            "haebs",
            "haes",
            "haess",
            "haeng",
            "haej",
            "haec",
            "haek",
            "haet",
            "haep",
            "haeh",
            "hya",
            "hyag",
            "hyagg",
            "hyags",
            "hyan",
            "hyanj",
            "hyanh",
            "hyad",
            "hyal",
            "hyalg",
            "hyalm",
            "hyalb",
            "hyals",
            "hyalt",
            "hyalp",
            "hyalh",
            "hyam",
            "hyab",
            "hyabs",
            "hyas",
            "hyass",
            "hyang",
            "hyaj",
            "hyac",
            "hyak",
            "hyat",
            "hyap",
            "hyah",
            "hyae",
            "hyaeg",
            "hyaegg",
            "hyaegs",
            "hyaen",
            "hyaenj",
            "hyaenh",
            "hyaed",
            "hyael",
            "hyaelg",
            "hyaelm",
            "hyaelb",
            "hyaels",
            "hyaelt",
            "hyaelp",
            "hyaelh",
            "hyaem",
            "hyaeb",
            "hyaebs",
            "hyaes",
            "hyaess",
            "hyaeng",
            "hyaej",
            "hyaec",
            "hyaek",
            "hyaet",
            "hyaep",
            "hyaeh",
            "heo",
            "heog",
            "heogg",
            "heogs",
            "heon",
            "heonj",
            "heonh",
            "heod",
            "heol",
            "heolg",
            "heolm",
            "heolb",
            "heols",
            "heolt",
            "heolp",
            "heolh",
            "heom",
            "heob",
            "heobs",
            "heos",
            "heoss",
            "heong",
            "heoj",
            "heoc",
            "heok",
            "heot",
            "heop",
            "heoh",
            "he",
            "heg",
            "hegg",
            "hegs",
            "hen",
            "henj",
            "henh",
            "hed",
            "hel",
            "helg",
            "helm",
            "helb",
            "hels",
            "helt",
            "help",
            "helh",
            "hem",
            "heb",
            "hebs",
            "hes",
            "hess",
            "heng",
            "hej",
            "hec",
            "hek",
            "het",
            "hep",
            "heh"
        ],
        [
            "hyeo",
            "hyeog",
            "hyeogg",
            "hyeogs",
            "hyeon",
            "hyeonj",
            "hyeonh",
            "hyeod",
            "hyeol",
            "hyeolg",
            "hyeolm",
            "hyeolb",
            "hyeols",
            "hyeolt",
            "hyeolp",
            "hyeolh",
            "hyeom",
            "hyeob",
            "hyeobs",
            "hyeos",
            "hyeoss",
            "hyeong",
            "hyeoj",
            "hyeoc",
            "hyeok",
            "hyeot",
            "hyeop",
            "hyeoh",
            "hye",
            "hyeg",
            "hyegg",
            "hyegs",
            "hyen",
            "hyenj",
            "hyenh",
            "hyed",
            "hyel",
            "hyelg",
            "hyelm",
            "hyelb",
            "hyels",
            "hyelt",
            "hyelp",
            "hyelh",
            "hyem",
            "hyeb",
            "hyebs",
            "hyes",
            "hyess",
            "hyeng",
            "hyej",
            "hyec",
            "hyek",
            "hyet",
            "hyep",
            "hyeh",
            "ho",
            "hog",
            "hogg",
            "hogs",
            "hon",
            "honj",
            "honh",
            "hod",
            "hol",
            "holg",
            "holm",
            "holb",
            "hols",
            "holt",
            "holp",
            "holh",
            "hom",
            "hob",
            "hobs",
            "hos",
            "hoss",
            "hong",
            "hoj",
            "hoc",
            "hok",
            "hot",
            "hop",
            "hoh",
            "hwa",
            "hwag",
            "hwagg",
            "hwags",
            "hwan",
            "hwanj",
            "hwanh",
            "hwad",
            "hwal",
            "hwalg",
            "hwalm",
            "hwalb",
            "hwals",
            "hwalt",
            "hwalp",
            "hwalh",
            "hwam",
            "hwab",
            "hwabs",
            "hwas",
            "hwass",
            "hwang",
            "hwaj",
            "hwac",
            "hwak",
            "hwat",
            "hwap",
            "hwah",
            "hwae",
            "hwaeg",
            "hwaegg",
            "hwaegs",
            "hwaen",
            "hwaenj",
            "hwaenh",
            "hwaed",
            "hwael",
            "hwaelg",
            "hwaelm",
            "hwaelb",
            "hwaels",
            "hwaelt",
            "hwaelp",
            "hwaelh",
            "hwaem",
            "hwaeb",
            "hwaebs",
            "hwaes",
            "hwaess",
            "hwaeng",
            "hwaej",
            "hwaec",
            "hwaek",
            "hwaet",
            "hwaep",
            "hwaeh",
            "hoe",
            "hoeg",
            "hoegg",
            "hoegs",
            "hoen",
            "hoenj",
            "hoenh",
            "hoed",
            "hoel",
            "hoelg",
            "hoelm",
            "hoelb",
            "hoels",
            "hoelt",
            "hoelp",
            "hoelh",
            "hoem",
            "hoeb",
            "hoebs",
            "hoes",
            "hoess",
            "hoeng",
            "hoej",
            "hoec",
            "hoek",
            "hoet",
            "hoep",
            "hoeh",
            "hyo",
            "hyog",
            "hyogg",
            "hyogs",
            "hyon",
            "hyonj",
            "hyonh",
            "hyod",
            "hyol",
            "hyolg",
            "hyolm",
            "hyolb",
            "hyols",
            "hyolt",
            "hyolp",
            "hyolh",
            "hyom",
            "hyob",
            "hyobs",
            "hyos",
            "hyoss",
            "hyong",
            "hyoj",
            "hyoc",
            "hyok",
            "hyot",
            "hyop",
            "hyoh",
            "hu",
            "hug",
            "hugg",
            "hugs",
            "hun",
            "hunj",
            "hunh",
            "hud",
            "hul",
            "hulg",
            "hulm",
            "hulb",
            "huls",
            "hult",
            "hulp",
            "hulh",
            "hum",
            "hub",
            "hubs",
            "hus",
            "huss",
            "hung",
            "huj",
            "huc",
            "huk",
            "hut",
            "hup",
            "huh",
            "hweo",
            "hweog",
            "hweogg",
            "hweogs",
            "hweon",
            "hweonj",
            "hweonh",
            "hweod",
            "hweol",
            "hweolg",
            "hweolm",
            "hweolb",
            "hweols",
            "hweolt",
            "hweolp",
            "hweolh",
            "hweom",
            "hweob",
            "hweobs",
            "hweos",
            "hweoss",
            "hweong",
            "hweoj",
            "hweoc",
            "hweok",
            "hweot",
            "hweop",
            "hweoh",
            "hwe",
            "hweg",
            "hwegg",
            "hwegs"
        ],
        [
            "hwen",
            "hwenj",
            "hwenh",
            "hwed",
            "hwel",
            "hwelg",
            "hwelm",
            "hwelb",
            "hwels",
            "hwelt",
            "hwelp",
            "hwelh",
            "hwem",
            "hweb",
            "hwebs",
            "hwes",
            "hwess",
            "hweng",
            "hwej",
            "hwec",
            "hwek",
            "hwet",
            "hwep",
            "hweh",
            "hwi",
            "hwig",
            "hwigg",
            "hwigs",
            "hwin",
            "hwinj",
            "hwinh",
            "hwid",
            "hwil",
            "hwilg",
            "hwilm",
            "hwilb",
            "hwils",
            "hwilt",
            "hwilp",
            "hwilh",
            "hwim",
            "hwib",
            "hwibs",
            "hwis",
            "hwiss",
            "hwing",
            "hwij",
            "hwic",
            "hwik",
            "hwit",
            "hwip",
            "hwih",
            "hyu",
            "hyug",
            "hyugg",
            "hyugs",
            "hyun",
            "hyunj",
            "hyunh",
            "hyud",
            "hyul",
            "hyulg",
            "hyulm",
            "hyulb",
            "hyuls",
            "hyult",
            "hyulp",
            "hyulh",
            "hyum",
            "hyub",
            "hyubs",
            "hyus",
            "hyuss",
            "hyung",
            "hyuj",
            "hyuc",
            "hyuk",
            "hyut",
            "hyup",
            "hyuh",
            "heu",
            "heug",
            "heugg",
            "heugs",
            "heun",
            "heunj",
            "heunh",
            "heud",
            "heul",
            "heulg",
            "heulm",
            "heulb",
            "heuls",
            "heult",
            "heulp",
            "heulh",
            "heum",
            "heub",
            "heubs",
            "heus",
            "heuss",
            "heung",
            "heuj",
            "heuc",
            "heuk",
            "heut",
            "heup",
            "heuh",
            "hyi",
            "hyig",
            "hyigg",
            "hyigs",
            "hyin",
            "hyinj",
            "hyinh",
            "hyid",
            "hyil",
            "hyilg",
            "hyilm",
            "hyilb",
            "hyils",
            "hyilt",
            "hyilp",
            "hyilh",
            "hyim",
            "hyib",
            "hyibs",
            "hyis",
            "hyiss",
            "hying",
            "hyij",
            "hyic",
            "hyik",
            "hyit",
            "hyip",
            "hyih",
            "hi",
            "hig",
            "higg",
            "higs",
            "hin",
            "hinj",
            "hinh",
            "hid",
            "hil",
            "hilg",
            "hilm",
            "hilb",
            "hils",
            "hilt",
            "hilp",
            "hilh",
            "him",
            "hib",
            "hibs",
            "his",
            "hiss",
            "hing",
            "hij",
            "hic",
            "hik",
            "hit",
            "hip",
            "hih"
        ],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [
            "Kay",
            "Kayng",
            "Ke",
            "Ko",
            "Kol",
            "Koc",
            "Kwi",
            "Kwi",
            "Kyun",
            "Kul",
            "Kum",
            "Na",
            "Na",
            "Na",
            "La",
            "Na",
            "Na",
            "Na",
            "Na",
            "Na",
            "Nak",
            "Nak",
            "Nak",
            "Nak",
            "Nak",
            "Nak",
            "Nak",
            "Nan",
            "Nan",
            "Nan",
            "Nan",
            "Nan",
            "Nan",
            "Nam",
            "Nam",
            "Nam",
            "Nam",
            "Nap",
            "Nap",
            "Nap",
            "Nang",
            "Nang",
            "Nang",
            "Nang",
            "Nang",
            "Nay",
            "Nayng",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "Nok",
            "Nok",
            "Nok",
            "Nok",
            "Nok",
            "Nok",
            "Non",
            "Nong",
            "Nong",
            "Nong",
            "Nong",
            "Noy",
            "Noy",
            "Noy",
            "Noy",
            "Nwu",
            "Nwu",
            "Nwu",
            "Nwu",
            "Nwu",
            "Nwu",
            "Nwu",
            "Nwu",
            "Nuk",
            "Nuk",
            "Num",
            "Nung",
            "Nung",
            "Nung",
            "Nung",
            "Nung",
            "Twu",
            "La",
            "Lak",
            "Lak",
            "Lan",
            "Lyeng",
            "Lo",
            "Lyul",
            "Li",
            "Pey",
            "Pen",
            "Pyen",
            "Pwu",
            "Pwul",
            "Pi",
            "Sak",
            "Sak",
            "Sam",
            "Sayk",
            "Sayng",
            "Sep",
            "Sey",
            "Sway",
            "Sin",
            "Sim",
            "Sip",
            "Ya",
            "Yak",
            "Yak",
            "Yang",
            "Yang",
            "Yang",
            "Yang",
            "Yang",
            "Yang",
            "Yang",
            "Yang",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Ye",
            "Yek",
            "Yek",
            "Yek",
            "Yek",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yen",
            "Yel",
            "Yel",
            "Yel",
            "Yel",
            "Yel",
            "Yel",
            "Yem",
            "Yem",
            "Yem",
            "Yem",
            "Yem",
            "Yep",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yeng",
            "Yey",
            "Yey",
            "Yey",
            "Yey",
            "O",
            "Yo",
            "Yo",
            "Yo",
            "Yo",
            "Yo",
            "Yo",
            "Yo",
            "Yo",
            "Yo",
            "Yo",
            "Yong",
            "Wun",
            "Wen",
            "Yu",
            "Yu",
            "Yu",
            "Yu",
            "Yu",
            "Yu",
            "Yu",
            "Yu",
            "Yu",
            "Yu",
            "Yuk",
            "Yuk",
            "Yuk",
            "Yun",
            "Yun",
            "Yun",
            "Yun",
            "Yul",
            "Yul",
            "Yul",
            "Yul",
            "Yung",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "I",
            "Ik",
            "Ik",
            "In",
            "In",
            "In",
            "In",
            "In",
            "In",
            "In",
            "Im",
            "Im",
            "Im",
            "Ip",
            "Ip",
            "Ip",
            "Cang",
            "Cek",
            "Ci",
            "Cip",
            "Cha",
            "Chek"
        ],
        [
            "Chey",
            "Thak",
            "Thak",
            "Thang",
            "Thayk",
            "Thong",
            "Pho",
            "Phok",
            "Hang",
            "Hang",
            "Hyen",
            "Hwak",
            "Wu",
            "Huo",
            ,
            ,
            "Zhong",
            ,
            "Qing",
            ,
            ,
            "Xi",
            "Zhu",
            "Yi",
            "Li",
            "Shen",
            "Xiang",
            "Fu",
            "Jing",
            "Jing",
            "Yu",
            ,
            "Hagi",
            ,
            "Zhu",
            ,
            ,
            "Yi",
            "Du",
            ,
            ,
            ,
            "Fan",
            "Si",
            "Guan"
        ],
        [
            "ff",
            "fi",
            "fl",
            "ffi",
            "ffl",
            "st",
            "st",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "mn",
            "me",
            "mi",
            "vn",
            "mkh",
            ,
            ,
            ,
            ,
            ,
            "yi",
            ,
            "ay",
            "`",
            ,
            "d",
            "h",
            "k",
            "l",
            "m",
            "m",
            "t",
            "+",
            "sh",
            "s",
            "sh",
            "s",
            "a",
            "a",
            ,
            "b",
            "g",
            "d",
            "h",
            "v",
            "z",
            ,
            "t",
            "y",
            "k",
            "k",
            "l",
            ,
            "l",
            ,
            "n",
            "n",
            ,
            "p",
            "p",
            ,
            "ts",
            "ts",
            "r",
            "sh",
            "t",
            "vo",
            "b",
            "k",
            "p",
            "l"
        ],
        [],
        [],
        [
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "~",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "..",
            "--",
            "-",
            "_",
            "_",
            "(",
            ") ",
            "{",
            "} ",
            "[",
            "] ",
            "[(",
            ")] ",
            "<<",
            ">> ",
            "<",
            "> ",
            "[",
            "] ",
            "{",
            "}",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ",",
            ",",
            ".",
            ,
            ";",
            ":",
            "?",
            "!",
            "-",
            "(",
            ")",
            "{",
            "}",
            "{",
            "}",
            "#",
            "&",
            "*",
            "+",
            "-",
            "<",
            ">",
            "=",
            ,
            "\\",
            "$",
            "%",
            "@"
        ],
        [
            ,
            "!",
            '"',
            "#",
            "$",
            "%",
            "&",
            "'",
            "(",
            ")",
            "*",
            "+",
            ",",
            "-",
            ".",
            "/",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            ":",
            ";",
            "<",
            "=",
            ">",
            "?",
            "@",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "[",
            "\\",
            "]",
            "^",
            "_",
            "`",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "{",
            "|",
            "}",
            "~",
            ,
            ,
            ".",
            "[",
            "]",
            ",",
            "*",
            "wo",
            "a",
            "i",
            "u",
            "e",
            "o",
            "ya",
            "yu",
            "yo",
            "tu",
            "+",
            "a",
            "i",
            "u",
            "e",
            "o",
            "ka",
            "ki",
            "ku",
            "ke",
            "ko",
            "sa",
            "si",
            "su",
            "se",
            "so",
            "ta",
            "ti",
            "tu",
            "te",
            "to",
            "na",
            "ni",
            "nu",
            "ne",
            "no",
            "ha",
            "hi",
            "hu",
            "he",
            "ho",
            "ma",
            "mi",
            "mu",
            "me",
            "mo",
            "ya",
            "yu",
            "yo",
            "ra",
            "ri",
            "ru",
            "re",
            "ro",
            "wa",
            "n",
            ":",
            ";",
            ,
            "g",
            "gg",
            "gs",
            "n",
            "nj",
            "nh",
            "d",
            "dd",
            "r",
            "lg",
            "lm",
            "lb",
            "ls",
            "lt",
            "lp",
            "rh",
            "m",
            "b",
            "bb",
            "bs",
            "s",
            "ss",
            ,
            "j",
            "jj",
            "c",
            "k",
            "t",
            "p",
            "h",
            ,
            ,
            ,
            "a",
            "ae",
            "ya",
            "yae",
            "eo",
            "e",
            ,
            ,
            "yeo",
            "ye",
            "o",
            "wa",
            "wae",
            "oe",
            ,
            ,
            "yo",
            "u",
            "weo",
            "we",
            "wi",
            "yu",
            ,
            ,
            "eu",
            "yi",
            "i",
            ,
            ,
            ,
            "/C",
            "PS",
            "!",
            "-",
            "|",
            "Y=",
            "W=",
            ,
            "|",
            "-",
            "|",
            "-",
            "|",
            "#",
            "O",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "{",
            "|",
            "}"
        ]
    ], Ti = {
    }, Qi = 0; Qi < Hi.length; Qi++)for(var Bi = 0; Bi < Hi[Qi].length; Bi++){
        var Mi = Hi[Qi][Bi];
        if ("string" == typeof Mi && Mi.length) {
            var Gi = String.fromCharCode((Qi << 8) + Bi);
            Ti[Gi] = Mi;
        }
    }
    Hi = void 0;
    var Fi = function(n1, a1) {
        var i1 = [][n1];
        return !!i1 && o(function() {
            i1.call(null, a1 || function() {
                throw 1;
            }, 1);
        });
    }, Pi = va.forEach, Ni = Fi("forEach"), Wi = oi("forEach"), Ki = Ni && Wi ? [].forEach : function(n1) {
        return Pi(this, n1, arguments.length > 1 ? arguments[1] : void 0);
    };
    Qn({
        target: "Array",
        proto: !0,
        forced: [].forEach != Ki
    }, {
        forEach: Ki
    });
    var fi = dn.indexOf, xi = [].indexOf, Ri = !!xi && 1 / [
        1
    ].indexOf(1, -0) < 0, Ei = Fi("indexOf"), Ai = oi("indexOf", {
        ACCESSORS: !0,
        1: 0
    });
    Qn({
        target: "Array",
        proto: !0,
        forced: Ri || !Ei || !Ai
    }, {
        indexOf: function(n1) {
            return Ri ? xi.apply(this, arguments) || 0 : fi(this, n1, arguments.length > 1 ? arguments[1] : void 0);
        }
    });
    var vi = [].join, zi = d != Object, Oi = Fi("join", ",");
    Qn({
        target: "Array",
        proto: !0,
        forced: zi || !Oi
    }, {
        join: function(n1) {
            return vi.call(p(this), (void 0) === n1 ? "," : n1);
        }
    });
    var Ii = function(n1, a1, i1) {
        var e3 = Y(a1);
        e3 in n1 ? H.f(n1, e3, l(0, i1)) : n1[e3] = i1;
    }, Ui = ri("slice"), qi = oi("slice", {
        ACCESSORS: !0,
        0: 0,
        1: 2
    }), _i = En("species"), Vi = [].slice, $i = Math.max;
    Qn({
        target: "Array",
        proto: !0,
        forced: !Ui || !qi
    }, {
        slice: function(n1, a1) {
            var i1, e3, u1, o1 = p(this), g2 = yn(o1.length), h1 = tn(n1, g2), s3 = tn((void 0) === a1 ? g2 : a1, g2);
            if (fa(o1) && ("function" != typeof (i1 = o1.constructor) || i1 !== Array && !fa(i1.prototype) ? r(i1) && null === (i1 = i1[_i]) && (i1 = void 0) : i1 = void 0, i1 === Array || (void 0) === i1)) return Vi.call(o1, h1, s3);
            for(e3 = new ((void 0) === i1 ? Array : i1)($i(s3 - h1, 0)), u1 = 0; h1 < s3; h1++, u1++)h1 in o1 && Ii(e3, u1, o1[h1]);
            return e3.length = u1, e3;
        }
    });
    var ne = [], ae = ne.sort, ie = o(function() {
        ne.sort(void 0);
    }), ee = o(function() {
        ne.sort(null);
    }), ue = Fi("sort");
    Qn({
        target: "Array",
        proto: !0,
        forced: ie || !ee || !ue
    }, {
        sort: function(n1) {
            return (void 0) === n1 ? ae.call(Mn(this)) : ae.call(Mn(this), Ka(n1));
        }
    });
    for(var oe in {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
    }){
        var ge = u[oe], he = ge && ge.prototype;
        if (he && he.forEach !== Ki) try {
            T(he, "forEach", Ki);
        } catch (n1) {
            he.forEach = Ki;
        }
    }
    function se(n1) {
        return (n1 || "").replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    }
    function ye(n1) {
        return /[\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u3005\u3007\u3021-\u3029\u3038-\u303B\u3400-\u4DBF\u4E00-\u9FFC\uF900-\uFA6D\uFA70-\uFAD9]|\uD81B[\uDFF0\uDFF1]|[\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A]/.test(n1);
    }
    function le(n1) {
        return /[\s!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDFFF]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/.test(n1);
    }
    function be(n1) {
        switch(!0){
            case n1 instanceof Array:
                for(var a1 = [], i1 = 0; i1 < n1.length; i1++)a1[i1] = be(n1[i1]);
                return a1;
            case n1 instanceof Date:
                return new Date(n1.valueOf());
            case n1 instanceof RegExp:
                return new RegExp(n1.source, n1.flags);
            case n1 instanceof Object:
                var e3 = {
                };
                for(var u1 in n1)Object.prototype.hasOwnProperty.call(n1, u1) && (e3[u1] = be(n1[u1]));
                return e3;
            default:
                return n1;
        }
    }
    function te(n1, a1) {
        if (0 === a1.length) return !1;
        var i1 = Math.floor(a1.length / 2);
        switch((function(n2, a2) {
            switch(!0){
                case n2 < a2[0]:
                    return -1;
                case n2 > a2[1]:
                    return 1;
            }
            return 0;
        })(n1, a1[i1])){
            case -1:
                return te(n1, a1.slice(0, i1));
            case 1:
                return te(n1, a1.slice(i1 + 1));
        }
        return !0;
    }
    function we(n1, a1, i1, e3) {
        (void 0) === e3 && (e3 = []);
        for(var u1 = e3.length ? RegExp(e3.map(se).join("|"), "g") : null, o1 = RegExp(a1.source, a1.flags.replace("g", "") + "g"), g2 = "", h1 = 0;;){
            var s3 = o1.exec(n1), y2 = "", l2 = 0;
            if (!s3) {
                g2 += n1.substring(h1, n1.length);
                break;
            }
            for(;;){
                var b3 = u1 ? u1.exec(s3[0]) : null;
                if (!b3) {
                    y2 += s3[0].length > l2 ? i1 : "";
                    break;
                }
                y2 += b3.index > l2 ? i1 : "", y2 += b3[0], l2 = u1.lastIndex;
            }
            g2 += n1.substring(h1, s3.index) + y2, h1 = o1.lastIndex;
        }
        return g2;
    }
    var de = {
        ignore: [],
        replace: [],
        replaceAfter: [],
        trim: !1,
        unknown: "",
        fixChineseSpacing: !0
    }, je = function() {
        function n1(n2, a1) {
            (void 0) === n2 && (n2 = be(de)), (void 0) === a1 && (a1 = Ti), this.confOptions = n2, this.map = a1;
        }
        var a1 = n1.prototype;
        return a1.config = function(n2, a2) {
            return (void 0) === a2 && (a2 = !1), a2 && (this.confOptions = {
            }), n2 && "object" == typeof n2 && (this.confOptions = be(n2)), this.confOptions;
        }, a1.codeMapReplace = function(n2, a2, i1) {
            var e3 = this;
            (void 0) === a2 && (a2 = []);
            for(var u1 = 0, o1 = "", g2 = i1.fixChineseSpacing && ye(n2), h1 = !1, s4 = 0; s4 < n2.length; s4++){
                var y3 = /[\uD800-\uDBFF]/.test(n2[s4]) && /[\uDC00-\uDFFF]/.test(n2[s4 + 1]) ? n2[s4] + n2[s4 + 1] : n2[s4], l3 = void 0, b4 = !1;
                switch(!0){
                    case te(u1, a2):
                    case 2 === y3.length && te(u1 + 1, a2):
                        l3 = y3, a2.find((function(n3) {
                            return Na(this, e3), n3[1] >= u1 && n3[0] === u1;
                        }).bind(this)) || (b4 = !0);
                        break;
                    default:
                        l3 = this.map[y3] || i1.unknown || "";
                }
                g2 && (!h1 || b4 || le(l3) || (l3 = " " + l3), h1 = !!l3 && ye(y3)), o1 += l3, u1 += y3.length, s4 += y3.length - 1;
            }
            return o1;
        }, a1.formatReplaceOption = function(n2) {
            if (n2 instanceof Array) return be(n2);
            var a2 = [];
            for(var i1 in n2)Object.prototype.hasOwnProperty.call(n2, i1) && a2.push([
                i1,
                n2[i1]
            ]);
            return a2;
        }, a1.replaceString = function(n2, a2, i1) {
            (void 0) === i1 && (i1 = []);
            for(var e3 = be(a2), u1 = n2, o1 = 0; o1 < e3.length; o1++){
                var g2 = e3[o1];
                switch(!0){
                    case g2[0] instanceof RegExp:
                        g2[0] = RegExp(g2[0].source, g2[0].flags.replace("g", "") + "g");
                        break;
                    case "string" == typeof g2[0] && g2[0].length > 0:
                        g2[0] = RegExp(se(g2[0]), "g");
                        break;
                    default:
                        g2[0] = /[^\s\S]/;
                }
                u1 = we(u1, g2[0], g2[1], i1);
            }
            return u1;
        }, a1.setData = function(n2, a2) {
            if ((void 0) === a2 && (a2 = !1), a2 && (this.map = be(Ti)), n2 && "object" == typeof n2 && Object.keys(n2).length) for(var i1 in this.map = be(this.map), n2)Object.prototype.hasOwnProperty.call(n2, i1) && i1.length < 3 && i1 <= "􏿿" && (this.map[i1] = n2[i1]);
            return this.map;
        }, a1.transliterate = function(n2, a2) {
            a2 = "object" == typeof a2 ? a2 : {
            };
            var i1 = be(Object.assign(Object.assign({
            }, this.options), a2)), e3 = "string" == typeof n2 ? n2 : String(n2), u1 = this.formatReplaceOption(i1.replace);
            u1.length && (e3 = this.replaceString(e3, u1, i1.ignore));
            var o1 = i1.ignore && i1.ignore.length > 0 ? function(n3, a3) {
                for(var i2 = this, e4 = [], u2 = 0; u2 < a3.length; u2++)for(var o2 = a3[u2], g3 = -1; (g3 = n3.indexOf(o2, g3 + 1)) > -1;)e4.push([
                    g3,
                    g3 + o2.length - 1
                ]);
                var h1, s4 = e4.sort((function(n4, a4) {
                    return Na(this, i2), n4[0] - a4[0] || n4[1] - a4[1];
                }).bind(this));
                return e4 = [], s4.forEach((function(n4) {
                    return Na(this, i2), !h1 || n4[0] > h1[1] + 1 ? e4.push(h1 = n4) : n4[1] > h1[1] && (h1[1] = n4[1]);
                }).bind(this)), e4;
            }(e3, i1.ignore) : [];
            e3 = this.codeMapReplace(e3, o1, i1), i1.trim && (e3 = e3.trim());
            var g3 = this.formatReplaceOption(i1.replaceAfter);
            return g3.length && (e3 = this.replaceString(e3, g3)), e3;
        }, Pa(n1, [
            {
                key: "options",
                get: function() {
                    return be(Object.assign(Object.assign({
                    }, de), this.confOptions));
                }
            }
        ]), n1;
    }(), pe = Object.assign(Object.assign({
    }, be(de)), {
        allowedChars: "a-zA-Z0-9-_.~",
        lowercase: !0,
        separator: "-",
        uppercase: !1,
        fixChineseSpacing: !0
    }), re = function(n1) {
        var a1, i1;
        function e3() {
            return n1.apply(this, arguments) || this;
        }
        i1 = n1, (a1 = e3).prototype = Object.create(i1.prototype), a1.prototype.constructor = a1, a1.__proto__ = i1;
        var u1 = e3.prototype;
        return u1.config = function(n2, a2) {
            return (void 0) === a2 && (a2 = !1), a2 && (this.confOptions = {
            }), n2 && "object" == typeof n2 && (this.confOptions = be(n2)), this.confOptions;
        }, u1.slugify = function(n2, a2) {
            a2 = "object" == typeof a2 ? a2 : {
            };
            var i2 = be(Object.assign(Object.assign({
            }, this.options), a2)), e4 = se(i2.separator), u2 = this.transliterate(n2, i2);
            return u2 = (u2 = we(u2, RegExp("[^" + i2.allowedChars + "]+", "g"), i2.separator, i2.ignore)).replace(RegExp("^" + e4 + "+|" + e4 + "$", "g"), ""), i2.lowercase && (u2 = u2.toLowerCase()), i2.uppercase && (u2 = u2.toUpperCase()), u2;
        }, Pa(e3, [
            {
                key: "options",
                get: function() {
                    return be(Object.assign(Object.assign({
                    }, pe), this.confOptions));
                }
            }
        ]), e3;
    }(je), Ye = new je, me = Ye.transliterate.bind(Ye);
    me.config = Ye.config.bind(Ye), me.setData = Ye.setData.bind(Ye);
    var ce = new re, Ze = ce.slugify.bind(ce);
    Ze.config = ce.config.bind(ce), Ze.setData = ce.setData.bind(ce), n.slugify = Ze, n.transl = me, n.transliterate = me, Object.defineProperty(n, "__esModule", {
        value: !0
    });
}); //# sourceMappingURL=bundle.umd.min.js.map

},{}],"9YS9I":[function(require,module,exports) {
"use strict";
/**
 * @module placeSelect.ts
 * @description генерирует разметку для выбора места получения и возврата авто
*/ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.selectPlace = exports.placeOptions = void 0;
var sharedActions_1 = require("../shared/sharedActions");
var shared = __importStar(require("../shared/sharedData"));
var jquery_1 = __importDefault(require("jquery"));
function placeOptions(state) {
    var resStr = '';
    state.getPlacesForReceiveAndReturnCars().places.forEach(function(place) {
        return resStr += sharedActions_1.option(place.title + " + " + place.delivery_cost + " \u20BD");
    });
    jquery_1.default("#" + shared.domElementId.returnPlaceSelectId).html(resStr);
    jquery_1.default("#" + shared.domElementId.receivePlaceSelectId).html(resStr);
    return resStr;
}
exports.placeOptions = placeOptions;
var selectPlace = function(state) {
    jquery_1.default("#" + shared.domElementId.receivePlaceSelectId).on('change', function() {
        var _a;
        var txt = (_a = jquery_1.default("#" + shared.domElementId.receivePlaceSelectId).val()) === null || _a === void 0 ? void 0 : _a.toString().trim().split(' + ')[0];
        var customInx = state.getPlacesForReceiveAndReturnCars().places.findIndex(function(item) {
            return item.title.match(/ДРУГОЕ/);
        });
        if (txt === state.getPlacesForReceiveAndReturnCars().places[customInx].title) {
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceInputId).removeClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceId).removeClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceId).removeClass('customPlace-wrap-start');
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceId).addClass('customPlace-visible');
        } else {
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceInputId).addClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceId).addClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceId).addClass('customPlace-wrap-start');
            jquery_1.default("#" + shared.domElementId.receiveCustomPlaceId).removeClass('customPlace-visible');
        }
    });
    jquery_1.default("#" + shared.domElementId.returnPlaceSelectId).on('change', function() {
        var _a;
        var txt = (_a = jquery_1.default("#" + shared.domElementId.returnPlaceSelectId).val()) === null || _a === void 0 ? void 0 : _a.toString().trim().split(' + ')[0];
        var customInx = state.getPlacesForReceiveAndReturnCars().places.findIndex(function(item) {
            return item.title.match(/ДРУГОЕ/);
        });
        if (txt === state.getPlacesForReceiveAndReturnCars().places[customInx].title) {
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceInputId).removeClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceId).removeClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceId).removeClass('customPlace-wrap-end');
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceId).addClass('customPlace-visible');
        } else {
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceInputId).addClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceId).addClass('customPlace-hidden');
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceId).addClass('customPlace-wrap-end');
            jquery_1.default("#" + shared.domElementId.returnCustomPlaceId).removeClass('customPlace-visible');
        }
    });
};
exports.selectPlace = selectPlace;

},{"../shared/sharedActions":"htU3t","../shared/sharedData":"iUwdp","jquery":"igaHu"}],"1v4sM":[function(require,module,exports) {
"use strict";
/**
 * @module customersPhone.ts
*/ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.customersPhoneValidateAndSave = void 0;
var jquery_1 = __importDefault(require("jquery"));
var sharedActions_1 = require("../shared/sharedActions");
var shared = __importStar(require("../shared/sharedData"));
/**
 * @description первый обязательный плюс и запрет на ввод других символов кроме чисел
*/ var customersPhoneValidateAndSave = function(state) {
    jquery_1.default("#" + shared.domElementId.customersPhoneId).on('focus', function() {
        var a = jquery_1.default("#" + shared.domElementId.customersPhoneId).val();
        if (a) jquery_1.default("#" + shared.domElementId.customersPhoneId).val(a);
        else jquery_1.default("#" + shared.domElementId.customersPhoneId).val('+7');
    });
    jquery_1.default("#" + shared.domElementId.customersPhoneId).on('input', function() {
        var _a;
        var a = '+' + ((_a = jquery_1.default("#" + shared.domElementId.customersPhoneId).val()) === null || _a === void 0 ? void 0 : _a.toString().replace(/[^\d]/g, ''));
        jquery_1.default("#" + shared.domElementId.customersPhoneId).val("" + a);
    });
    jquery_1.default("#" + shared.domElementId.customersPhoneId).on('focusout', function() {
        var _a;
        state.saveCustomersPhone((_a = jquery_1.default("#" + shared.domElementId.customersPhoneId).val()) === null || _a === void 0 ? void 0 : _a.toString());
        sharedActions_1.validateField(shared.domElementId.customersPhoneId, shared.domElementId.customersPhoneTextId);
    });
};
exports.customersPhoneValidateAndSave = customersPhoneValidateAndSave;

},{"jquery":"igaHu","../shared/sharedActions":"htU3t","../shared/sharedData":"iUwdp"}],"fBU2t":[function(require,module,exports) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.nameValidateAndSave = void 0;
/**
 * @module customersName.ts
*/ var jquery_1 = __importDefault(require("jquery"));
var sharedActions_1 = require("../shared/sharedActions");
var shared = __importStar(require("../shared/sharedData"));
/**
 * @description смысл преобразований имени в том, что недопускаются небуквенные символы и не пробелы
 * кроме того допускается только 2 слова, первый символ каждого слова преобразуется в верхний регистр
*/ var nameValidateAndSave = function(state) {
    jquery_1.default("#" + shared.domElementId.custonersNameId).on('input', function() {
        var _a;
        var a = (_a = jquery_1.default("#" + shared.domElementId.custonersNameId).val()) === null || _a === void 0 ? void 0 : _a.toString().replace(/[^А-я|\s|A-z]/g, '');
        a = a.split(' ').slice(0, 2).map(function(str) {
            return "" + String(str.charAt(0)).toUpperCase() + str.slice(1, str.length);
        }).join(' ');
        jquery_1.default("#" + shared.domElementId.custonersNameId).val(a);
    });
    jquery_1.default("#" + shared.domElementId.custonersNameId).on('focusout', function() {
        var _a;
        state.saveCustomersName((_a = jquery_1.default("#" + shared.domElementId.custonersNameId).val()) === null || _a === void 0 ? void 0 : _a.toString());
        sharedActions_1.validateField(shared.domElementId.custonersNameId, shared.domElementId.customersNameTextId);
    });
};
exports.nameValidateAndSave = nameValidateAndSave;

},{"jquery":"igaHu","../shared/sharedActions":"htU3t","../shared/sharedData":"iUwdp"}],"jZFUc":[function(require,module,exports) {
"use strict";
/**
 * @module carSelect.ts
*/ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.carSelect = void 0;
var jquery_1 = __importDefault(require("jquery"));
var sharedActions_1 = require("../shared/sharedActions");
var shared = __importStar(require("../shared/sharedData"));
var lodash_1 = __importDefault(require("lodash"));
var CalendarEnjection_1 = require("./CalendarEnjection");
var carSelect = function(state) {
    return __awaiter(void 0, void 0, void 0, function() {
        var addr, modelName, resStr, cars, modelArr, selArray;
        return __generator(this, function(_a) {
            addr = location.pathname;
            modelName = addr.replace(/.*\//g, '');
            resStr = '';
            cars = state.getAllCarsForRent().cars;
            modelArr = [];
            cars.forEach(function(car) {
                var c = sharedActions_1.formatCarModelFromBaseToSelect(car.model);
                modelArr.push(c.trim());
            });
            selArray = lodash_1.default.uniq(modelArr).map(function(item, inx) {
                var carName = '';
                if (item.match(/Mkpp/)) carName = item.replace('Mkpp', "МКПП");
                else if (item.match(/Akpp/)) carName = item.replace('Akpp', "АКПП");
                else carName = item;
                modelName = modelName.replace('mkpp', 'МКПП');
                modelName = modelName.replace('akpp', 'АКПП');
                return modelName ? sharedActions_1.option(carName, carName.toLowerCase().replace(/\s/g, '_'), '', false, sharedActions_1.formatCarModelFromHashToSelect(modelName)) : sharedActions_1.option(carName, carName.toLowerCase().replace(/\s/g, '_'));
            });
            resStr += selArray.join('\n');
            jquery_1.default("#" + shared.domElementId.carSelectId).html(resStr);
            if (modelName) jquery_1.default("#" + shared.domElementId.carSelectId).attr('disabled', 'disabled');
            jquery_1.default("#" + shared.domElementId.carSelectId).on('change', function() {
                return __awaiter(void 0, void 0, void 0, function() {
                    var stringValueFromSelect;
                    var _a1;
                    return __generator(this, function(_b) {
                        switch(_b.label){
                            case 0:
                                stringValueFromSelect = (_a1 = jquery_1.default("#" + shared.domElementId.carSelectId).val()) === null || _a1 === void 0 ? void 0 : _a1.toString();
                                stringValueFromSelect = stringValueFromSelect === null || stringValueFromSelect === void 0 ? void 0 : stringValueFromSelect.replace('МКПП', 'Mkpp');
                                stringValueFromSelect = stringValueFromSelect === null || stringValueFromSelect === void 0 ? void 0 : stringValueFromSelect.replace('АКПП', 'Akpp');
                                jquery_1.default("#" + shared.domElementId.bookModuleId).removeClass('carNotSelect');
                                if (state.isFirstDateOfRangeWasSelect()) state.dropFirstDateOfRange();
                                if (state.isSecondDateOfRangeWasSelect()) state.dropSecondDateOfRange();
                                return [
                                    4 /*yield*/ ,
                                    state.selectCar(stringValueFromSelect)
                                ];
                            case 1:
                                _b.sent();
                                return [
                                    4 /*yield*/ ,
                                    CalendarEnjection_1.CalendarEnjector(state)
                                ];
                            case 2:
                                _b.sent();
                                return [
                                    2 /*return*/ 
                                ];
                        }
                    });
                });
            });
            jquery_1.default("#" + shared.domElementId.carSelectId).trigger('change');
            return [
                2 /*return*/ 
            ];
        });
    });
};
exports.carSelect = carSelect;

},{"jquery":"igaHu","../shared/sharedActions":"htU3t","../shared/sharedData":"iUwdp","lodash":"f4H2C","./CalendarEnjection":"cn6bD"}],"f4H2C":[function(require,module,exports) {
var global = arguments[3];
(function() {
    /** Used as a safe reference for `undefined` in pre-ES5 environments. */ var undefined;
    /** Used as the semantic version number. */ var VERSION = '4.17.21';
    /** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
    /** Error message constants. */ var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.', FUNC_ERROR_TEXT = 'Expected a function', INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';
    /** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
    /** Used as the maximum memoize cache size. */ var MAX_MEMOIZE_SIZE = 500;
    /** Used as the internal argument placeholder. */ var PLACEHOLDER = '__lodash_placeholder__';
    /** Used to compose bitmasks for cloning. */ var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
    /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
    /** Used to compose bitmasks for function metadata. */ var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
    /** Used as default options for `_.truncate`. */ var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = '...';
    /** Used to detect hot functions by number of calls within a span of milliseconds. */ var HOT_COUNT = 800, HOT_SPAN = 16;
    /** Used to indicate the type of lazy iteratees. */ var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
    /** Used as references for various `Number` constants. */ var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, NAN = 0 / 0;
    /** Used as references for the maximum length and index of an array. */ var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
    /** Used to associate wrap methods with their bit flags. */ var wrapFlags = [
        [
            'ary',
            WRAP_ARY_FLAG
        ],
        [
            'bind',
            WRAP_BIND_FLAG
        ],
        [
            'bindKey',
            WRAP_BIND_KEY_FLAG
        ],
        [
            'curry',
            WRAP_CURRY_FLAG
        ],
        [
            'curryRight',
            WRAP_CURRY_RIGHT_FLAG
        ],
        [
            'flip',
            WRAP_FLIP_FLAG
        ],
        [
            'partial',
            WRAP_PARTIAL_FLAG
        ],
        [
            'partialRight',
            WRAP_PARTIAL_RIGHT_FLAG
        ],
        [
            'rearg',
            WRAP_REARG_FLAG
        ]
    ];
    /** `Object#toString` result references. */ var argsTag = '[object Arguments]', arrayTag = '[object Array]', asyncTag = '[object AsyncFunction]', boolTag = '[object Boolean]', dateTag = '[object Date]', domExcTag = '[object DOMException]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', nullTag = '[object Null]', objectTag = '[object Object]', promiseTag = '[object Promise]', proxyTag = '[object Proxy]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]', undefinedTag = '[object Undefined]', weakMapTag = '[object WeakMap]', weakSetTag = '[object WeakSet]';
    var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';
    /** Used to match empty string literals in compiled template source. */ var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    /** Used to match HTML entities and HTML characters. */ var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    /** Used to match template delimiters. */ var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
    /** Used to match property names within property paths. */ var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
    /** Used to match leading whitespace. */ var reTrimStart = /^\s+/;
    /** Used to match a single whitespace character. */ var reWhitespace = /\s/;
    /** Used to match wrap detail comments. */ var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
    /** Used to match words composed of alphanumeric characters. */ var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */ var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
    /** Used to match backslashes in property paths. */ var reEscapeChar = /\\(\\)?/g;
    /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */ var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    /** Used to match `RegExp` flags from their coerced string values. */ var reFlags = /\w*$/;
    /** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    /** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;
    /** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/;
    /** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;
    /** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/;
    /** Used to match Latin Unicode letters (excluding mathematical operators). */ var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    /** Used to ensure capturing order of template delimiters. */ var reNoMatch = /($^)/;
    /** Used to match unescaped characters in compiled string literals. */ var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    /** Used to compose unicode character classes. */ var rsAstralRange = '\\ud800-\\udfff', rsComboMarksRange = '\\u0300-\\u036f', reComboHalfMarksRange = '\\ufe20-\\ufe2f', rsComboSymbolsRange = '\\u20d0-\\u20ff', rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = '\\u2700-\\u27bf', rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff', rsMathOpRange = '\\xac\\xb1\\xd7\\xf7', rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf', rsPunctuationRange = '\\u2000-\\u206f', rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000', rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde', rsVarRange = '\\ufe0e\\ufe0f', rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    /** Used to compose unicode capture groups. */ var rsApos = "['\u2019]", rsAstral = '[' + rsAstralRange + ']', rsBreak = '[' + rsBreakRange + ']', rsCombo = '[' + rsComboRange + ']', rsDigits = '\\d+', rsDingbat = '[' + rsDingbatRange + ']', rsLower = '[' + rsLowerRange + ']', rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']', rsFitz = '\\ud83c[\\udffb-\\udfff]', rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')', rsNonAstral = '[^' + rsAstralRange + ']', rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}', rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]', rsUpper = '[' + rsUpperRange + ']', rsZWJ = '\\u200d';
    /** Used to compose unicode regexes. */ var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')', rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')', rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?', rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?', reOptMod = rsModifier + '?', rsOptVar = '[' + rsVarRange + ']?', rsOptJoin = '(?:' + rsZWJ + '(?:' + [
        rsNonAstral,
        rsRegional,
        rsSurrPair
    ].join('|') + ')' + rsOptVar + reOptMod + ')*', rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])', rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])', rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = '(?:' + [
        rsDingbat,
        rsRegional,
        rsSurrPair
    ].join('|') + ')' + rsSeq, rsSymbol = '(?:' + [
        rsNonAstral + rsCombo + '?',
        rsCombo,
        rsRegional,
        rsSurrPair,
        rsAstral
    ].join('|') + ')';
    /** Used to match apostrophes. */ var reApos = RegExp(rsApos, 'g');
    /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */ var reComboMark = RegExp(rsCombo, 'g');
    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */ var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
    /** Used to match complex or compound words. */ var reUnicodeWord = RegExp([
        rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [
            rsBreak,
            rsUpper,
            '$'
        ].join('|') + ')',
        rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [
            rsBreak,
            rsUpper + rsMiscLower,
            '$'
        ].join('|') + ')',
        rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
        rsUpper + '+' + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
    ].join('|'), 'g');
    /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */ var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
    /** Used to detect strings that need a more robust regexp to match words. */ var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    /** Used to assign default `context` object properties. */ var contextProps = [
        'Array',
        'Buffer',
        'DataView',
        'Date',
        'Error',
        'Float32Array',
        'Float64Array',
        'Function',
        'Int8Array',
        'Int16Array',
        'Int32Array',
        'Map',
        'Math',
        'Object',
        'Promise',
        'RegExp',
        'Set',
        'String',
        'Symbol',
        'TypeError',
        'Uint8Array',
        'Uint8ClampedArray',
        'Uint16Array',
        'Uint32Array',
        'WeakMap',
        '_',
        'clearTimeout',
        'isFinite',
        'parseInt',
        'setTimeout'
    ];
    /** Used to make template sourceURLs easier to identify. */ var templateCounter = -1;
    /** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {
    };
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    /** Used to identify `toStringTag` values supported by `_.clone`. */ var cloneableTags = {
    };
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    /** Used to map Latin Unicode letters to basic Latin letters. */ var deburredLetters = {
        // Latin-1 Supplement block.
        '\xc0': 'A',
        '\xc1': 'A',
        '\xc2': 'A',
        '\xc3': 'A',
        '\xc4': 'A',
        '\xc5': 'A',
        '\xe0': 'a',
        '\xe1': 'a',
        '\xe2': 'a',
        '\xe3': 'a',
        '\xe4': 'a',
        '\xe5': 'a',
        '\xc7': 'C',
        '\xe7': 'c',
        '\xd0': 'D',
        '\xf0': 'd',
        '\xc8': 'E',
        '\xc9': 'E',
        '\xca': 'E',
        '\xcb': 'E',
        '\xe8': 'e',
        '\xe9': 'e',
        '\xea': 'e',
        '\xeb': 'e',
        '\xcc': 'I',
        '\xcd': 'I',
        '\xce': 'I',
        '\xcf': 'I',
        '\xec': 'i',
        '\xed': 'i',
        '\xee': 'i',
        '\xef': 'i',
        '\xd1': 'N',
        '\xf1': 'n',
        '\xd2': 'O',
        '\xd3': 'O',
        '\xd4': 'O',
        '\xd5': 'O',
        '\xd6': 'O',
        '\xd8': 'O',
        '\xf2': 'o',
        '\xf3': 'o',
        '\xf4': 'o',
        '\xf5': 'o',
        '\xf6': 'o',
        '\xf8': 'o',
        '\xd9': 'U',
        '\xda': 'U',
        '\xdb': 'U',
        '\xdc': 'U',
        '\xf9': 'u',
        '\xfa': 'u',
        '\xfb': 'u',
        '\xfc': 'u',
        '\xdd': 'Y',
        '\xfd': 'y',
        '\xff': 'y',
        '\xc6': 'Ae',
        '\xe6': 'ae',
        '\xde': 'Th',
        '\xfe': 'th',
        '\xdf': 'ss',
        // Latin Extended-A block.
        '\u0100': 'A',
        '\u0102': 'A',
        '\u0104': 'A',
        '\u0101': 'a',
        '\u0103': 'a',
        '\u0105': 'a',
        '\u0106': 'C',
        '\u0108': 'C',
        '\u010a': 'C',
        '\u010c': 'C',
        '\u0107': 'c',
        '\u0109': 'c',
        '\u010b': 'c',
        '\u010d': 'c',
        '\u010e': 'D',
        '\u0110': 'D',
        '\u010f': 'd',
        '\u0111': 'd',
        '\u0112': 'E',
        '\u0114': 'E',
        '\u0116': 'E',
        '\u0118': 'E',
        '\u011a': 'E',
        '\u0113': 'e',
        '\u0115': 'e',
        '\u0117': 'e',
        '\u0119': 'e',
        '\u011b': 'e',
        '\u011c': 'G',
        '\u011e': 'G',
        '\u0120': 'G',
        '\u0122': 'G',
        '\u011d': 'g',
        '\u011f': 'g',
        '\u0121': 'g',
        '\u0123': 'g',
        '\u0124': 'H',
        '\u0126': 'H',
        '\u0125': 'h',
        '\u0127': 'h',
        '\u0128': 'I',
        '\u012a': 'I',
        '\u012c': 'I',
        '\u012e': 'I',
        '\u0130': 'I',
        '\u0129': 'i',
        '\u012b': 'i',
        '\u012d': 'i',
        '\u012f': 'i',
        '\u0131': 'i',
        '\u0134': 'J',
        '\u0135': 'j',
        '\u0136': 'K',
        '\u0137': 'k',
        '\u0138': 'k',
        '\u0139': 'L',
        '\u013b': 'L',
        '\u013d': 'L',
        '\u013f': 'L',
        '\u0141': 'L',
        '\u013a': 'l',
        '\u013c': 'l',
        '\u013e': 'l',
        '\u0140': 'l',
        '\u0142': 'l',
        '\u0143': 'N',
        '\u0145': 'N',
        '\u0147': 'N',
        '\u014a': 'N',
        '\u0144': 'n',
        '\u0146': 'n',
        '\u0148': 'n',
        '\u014b': 'n',
        '\u014c': 'O',
        '\u014e': 'O',
        '\u0150': 'O',
        '\u014d': 'o',
        '\u014f': 'o',
        '\u0151': 'o',
        '\u0154': 'R',
        '\u0156': 'R',
        '\u0158': 'R',
        '\u0155': 'r',
        '\u0157': 'r',
        '\u0159': 'r',
        '\u015a': 'S',
        '\u015c': 'S',
        '\u015e': 'S',
        '\u0160': 'S',
        '\u015b': 's',
        '\u015d': 's',
        '\u015f': 's',
        '\u0161': 's',
        '\u0162': 'T',
        '\u0164': 'T',
        '\u0166': 'T',
        '\u0163': 't',
        '\u0165': 't',
        '\u0167': 't',
        '\u0168': 'U',
        '\u016a': 'U',
        '\u016c': 'U',
        '\u016e': 'U',
        '\u0170': 'U',
        '\u0172': 'U',
        '\u0169': 'u',
        '\u016b': 'u',
        '\u016d': 'u',
        '\u016f': 'u',
        '\u0171': 'u',
        '\u0173': 'u',
        '\u0174': 'W',
        '\u0175': 'w',
        '\u0176': 'Y',
        '\u0177': 'y',
        '\u0178': 'Y',
        '\u0179': 'Z',
        '\u017b': 'Z',
        '\u017d': 'Z',
        '\u017a': 'z',
        '\u017c': 'z',
        '\u017e': 'z',
        '\u0132': 'IJ',
        '\u0133': 'ij',
        '\u0152': 'Oe',
        '\u0153': 'oe',
        '\u0149': "'n",
        '\u017f': 's'
    };
    /** Used to map characters to HTML entities. */ var htmlEscapes = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#39;'
    };
    /** Used to map HTML entities to characters. */ var htmlUnescapes = {
        '&amp;': '&',
        '&lt;': '<',
        '&gt;': '>',
        '&quot;': '"',
        '&#39;': "'"
    };
    /** Used to escape characters for inclusion in compiled string literals. */ var stringEscapes = {
        '\\': '\\',
        "'": "'",
        '\n': 'n',
        '\r': 'r',
        '\u2028': 'u2028',
        '\u2029': 'u2029'
    };
    /** Built-in method references without a dependency on `root`. */ var freeParseFloat = parseFloat, freeParseInt = parseInt;
    /** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
    /** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
    /** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
    /** Detect free variable `exports`. */ var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
    /** Detect free variable `module`. */ var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
    /** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
    /** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;
    /** Used to access faster Node.js helpers. */ var nodeUtil = function() {
        try {
            // Use `util.types` for Node.js 10+.
            var types = freeModule && freeModule.require && freeModule.require('util').types;
            if (types) return types;
            // Legacy `process.binding('util')` for Node.js < 10.
            return freeProcess && freeProcess.binding && freeProcess.binding('util');
        } catch (e) {
        }
    }();
    /* Node.js helper references. */ var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    /*--------------------------------------------------------------------------*/ /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */ function apply(func, thisArg, args) {
        switch(args.length){
            case 0:
                return func.call(thisArg);
            case 1:
                return func.call(thisArg, args[0]);
            case 2:
                return func.call(thisArg, args[0], args[1]);
            case 3:
                return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
    }
    /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */ function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while((++index) < length){
            var value = array[index];
            setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
    }
    /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */ function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while((++index) < length){
            if (iteratee(array[index], index, array) === false) break;
        }
        return array;
    }
    /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */ function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while(length--){
            if (iteratee(array[length], length, array) === false) break;
        }
        return array;
    }
    /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */ function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while((++index) < length){
            if (!predicate(array[index], index, array)) return false;
        }
        return true;
    }
    /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */ function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while((++index) < length){
            var value = array[index];
            if (predicate(value, index, array)) result[resIndex++] = value;
        }
        return result;
    }
    /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */ function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
    }
    /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */ function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while((++index) < length){
            if (comparator(value, array[index])) return true;
        }
        return false;
    }
    /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */ function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while((++index) < length)result[index] = iteratee(array[index], index, array);
        return result;
    }
    /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */ function arrayPush(array, values) {
        var index = -1, length = values.length, offset = array.length;
        while((++index) < length)array[offset + index] = values[index];
        return array;
    }
    /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */ function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) accumulator = array[++index];
        while((++index) < length)accumulator = iteratee(accumulator, array[index], index, array);
        return accumulator;
    }
    /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */ function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) accumulator = array[--length];
        while(length--)accumulator = iteratee(accumulator, array[length], length, array);
        return accumulator;
    }
    /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */ function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while((++index) < length){
            if (predicate(array[index], index, array)) return true;
        }
        return false;
    }
    /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */ var asciiSize = baseProperty('length');
    /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function asciiToArray(string) {
        return string.split('');
    }
    /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */ function asciiWords(string) {
        return string.match(reAsciiWord) || [];
    }
    /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */ function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection1) {
            if (predicate(value, key, collection1)) {
                result = key;
                return false;
            }
        });
        return result;
    }
    /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while(fromRight ? index-- : (++index) < length){
            if (predicate(array[index], index, array)) return index;
        }
        return -1;
    }
    /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while((++index) < length){
            if (comparator(array[index], value)) return index;
        }
        return -1;
    }
    /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */ function baseIsNaN(value) {
        return value !== value;
    }
    /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */ function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
    }
    /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */ function baseProperty(key) {
        return function(object) {
            return object == null ? undefined : object[key];
        };
    }
    /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */ function basePropertyOf(object) {
        return function(key) {
            return object == null ? undefined : object[key];
        };
    }
    /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */ function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection1) {
            accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection1);
        });
        return accumulator;
    }
    /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */ function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while(length--)array[length] = array[length].value;
        return array;
    }
    /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */ function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while((++index) < length){
            var current = iteratee(array[index]);
            if (current !== undefined) result = result === undefined ? current : result + current;
        }
        return result;
    }
    /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */ function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while((++index) < n)result[index] = iteratee(index);
        return result;
    }
    /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */ function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
            return [
                key,
                object[key]
            ];
        });
    }
    /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */ function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;
    }
    /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */ function baseUnary(func) {
        return function(value) {
            return func(value);
        };
    }
    /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */ function baseValues(object, props) {
        return arrayMap(props, function(key) {
            return object[key];
        });
    }
    /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */ function cacheHas(cache, key) {
        return cache.has(key);
    }
    /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */ function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while((++index) < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
        return index;
    }
    /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */ function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while((index--) && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
        return index;
    }
    /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */ function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while(length--)if (array[length] === placeholder) ++result;
        return result;
    }
    /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */ var deburrLetter = basePropertyOf(deburredLetters);
    /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */ var escapeHtmlChar = basePropertyOf(htmlEscapes);
    /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */ function escapeStringChar(chr) {
        return '\\' + stringEscapes[chr];
    }
    /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */ function getValue(object, key) {
        return object == null ? undefined : object[key];
    }
    /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */ function hasUnicode(string) {
        return reHasUnicode.test(string);
    }
    /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */ function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
    }
    /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */ function iteratorToArray(iterator) {
        var data, result = [];
        while(!(data = iterator.next()).done)result.push(data.value);
        return result;
    }
    /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */ function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
            result[++index] = [
                key,
                value
            ];
        });
        return result;
    }
    /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */ function overArg(func, transform) {
        return function(arg) {
            return func(transform(arg));
        };
    }
    /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */ function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while((++index) < length){
            var value = array[index];
            if (value === placeholder || value === PLACEHOLDER) {
                array[index] = PLACEHOLDER;
                result[resIndex++] = index;
            }
        }
        return result;
    }
    /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */ function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
            result[++index] = value;
        });
        return result;
    }
    /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */ function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
            result[++index] = [
                value,
                value
            ];
        });
        return result;
    }
    /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while((++index) < length){
            if (array[index] === value) return index;
        }
        return -1;
    }
    /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while(index--){
            if (array[index] === value) return index;
        }
        return index;
    }
    /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */ function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }
    /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */ function trimmedEndIndex(string) {
        var index = string.length;
        while((index--) && reWhitespace.test(string.charAt(index)));
        return index;
    }
    /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */ var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
    /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */ function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while(reUnicode.test(string))++result;
        return result;
    }
    /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function unicodeToArray(string) {
        return string.match(reUnicode) || [];
    }
    /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */ function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
    }
    /*--------------------------------------------------------------------------*/ /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */ var runInContext = function runInContext1(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        /** Built-in constructor references. */ var Array1 = context.Array, Date1 = context.Date, Error1 = context.Error, Function1 = context.Function, Math1 = context.Math, Object1 = context.Object, RegExp1 = context.RegExp, String1 = context.String, TypeError1 = context.TypeError;
        /** Used for built-in method references. */ var arrayProto = Array1.prototype, funcProto = Function1.prototype, objectProto = Object1.prototype;
        /** Used to detect overreaching core-js shims. */ var coreJsData = context['__core-js_shared__'];
        /** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
        /** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
        /** Used to generate unique IDs. */ var idCounter = 0;
        /** Used to detect methods masquerading as native. */ var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
            return uid ? 'Symbol(src)_1.' + uid : '';
        }();
        /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */ var nativeObjectToString = objectProto.toString;
        /** Used to infer the `Object` constructor. */ var objectCtorString = funcToString.call(Object1);
        /** Used to restore the original `_` reference in `_.noConflict`. */ var oldDash = root._;
        /** Used to detect if a method is native. */ var reIsNative = RegExp1('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
        /** Built-in value references. */ var Buffer = moduleExports ? context.Buffer : undefined, Symbol1 = context.Symbol, Uint8Array1 = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined, getPrototype = overArg(Object1.getPrototypeOf, Object1), objectCreate = Object1.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol1 ? Symbol1.isConcatSpreadable : undefined, symIterator = Symbol1 ? Symbol1.iterator : undefined, symToStringTag = Symbol1 ? Symbol1.toStringTag : undefined;
        var defineProperty = function() {
            try {
                var func = getNative(Object1, 'defineProperty');
                func({
                }, '', {
                });
                return func;
            } catch (e) {
            }
        }();
        /** Mocked built-ins. */ var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date1 && Date1.now !== root.Date.now && Date1.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeCeil = Math1.ceil, nativeFloor = Math1.floor, nativeGetSymbols = Object1.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object1.keys, Object1), nativeMax = Math1.max, nativeMin = Math1.min, nativeNow = Date1.now, nativeParseInt = context.parseInt, nativeRandom = Math1.random, nativeReverse = arrayProto.reverse;
        /* Built-in method references that are verified to be native. */ var DataView1 = getNative(context, 'DataView'), Map1 = getNative(context, 'Map'), Promise1 = getNative(context, 'Promise'), Set1 = getNative(context, 'Set'), WeakMap1 = getNative(context, 'WeakMap'), nativeCreate = getNative(Object1, 'create');
        /** Used to store function metadata. */ var metaMap = WeakMap1 && new WeakMap1;
        /** Used to lookup unminified function names. */ var realNames = {
        };
        /** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView1), mapCtorString = toSource(Map1), promiseCtorString = toSource(Promise1), setCtorString = toSource(Set1), weakMapCtorString = toSource(WeakMap1);
        /** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol1 ? Symbol1.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;
        /*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */ function lodash(value) {
            if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
                if (value instanceof LodashWrapper) return value;
                if (hasOwnProperty.call(value, '__wrapped__')) return wrapperClone(value);
            }
            return new LodashWrapper(value);
        }
        /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */ var baseCreate = function() {
            function object() {
            }
            return function(proto) {
                if (!isObject(proto)) return {
                };
                if (objectCreate) return objectCreate(proto);
                object.prototype = proto;
                var result = new object;
                object.prototype = undefined;
                return result;
            };
        }();
        /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */ function baseLodash() {
        // No operation performed.
        }
        /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */ function LodashWrapper(value, chainAll) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__chain__ = !!chainAll;
            this.__index__ = 0;
            this.__values__ = undefined;
        }
        /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */ lodash.templateSettings = {
            /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ 'escape': reEscape,
            /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ 'evaluate': reEvaluate,
            /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ 'interpolate': reInterpolate,
            /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */ 'variable': '',
            /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */ 'imports': {
                /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */ '_': lodash
            }
        };
        // Ensure wrappers are instances of `baseLodash`.
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        /*------------------------------------------------------------------------*/ /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */ function LazyWrapper(value) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__dir__ = 1;
            this.__filtered__ = false;
            this.__iteratees__ = [];
            this.__takeCount__ = MAX_ARRAY_LENGTH;
            this.__views__ = [];
        }
        /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */ function lazyClone() {
            var result = new LazyWrapper(this.__wrapped__);
            result.__actions__ = copyArray(this.__actions__);
            result.__dir__ = this.__dir__;
            result.__filtered__ = this.__filtered__;
            result.__iteratees__ = copyArray(this.__iteratees__);
            result.__takeCount__ = this.__takeCount__;
            result.__views__ = copyArray(this.__views__);
            return result;
        }
        /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */ function lazyReverse() {
            if (this.__filtered__) {
                var result = new LazyWrapper(this);
                result.__dir__ = -1;
                result.__filtered__ = true;
            } else {
                result = this.clone();
                result.__dir__ *= -1;
            }
            return result;
        }
        /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */ function lazyValue() {
            var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
            if (!isArr || !isRight && arrLength == length && takeCount == length) return baseWrapperValue(array, this.__actions__);
            var result = [];
            outer: while((length--) && resIndex < takeCount){
                index += dir;
                var iterIndex = -1, value = array[index];
                while((++iterIndex) < iterLength){
                    var data = iteratees[iterIndex], iteratee = data.iteratee, type = data.type, computed = iteratee(value);
                    if (type == LAZY_MAP_FLAG) value = computed;
                    else if (!computed) {
                        if (type == LAZY_FILTER_FLAG) continue outer;
                        else break outer;
                    }
                }
                result[resIndex++] = value;
            }
            return result;
        }
        // Ensure `LazyWrapper` is an instance of `baseLodash`.
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        /*------------------------------------------------------------------------*/ /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function Hash(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while((++index) < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */ function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {
            };
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
        }
        /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
                var result = data[key];
                return result === HASH_UNDEFINED ? undefined : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }
        /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
        }
        /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */ function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
            return this;
        }
        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype['delete'] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function ListCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while((++index) < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */ function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function listCacheDelete(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) return false;
            var lastIndex = data.length - 1;
            if (index == lastIndex) data.pop();
            else splice.call(data, index, 1);
            --this.size;
            return true;
        }
        /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function listCacheGet(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            return index < 0 ? undefined : data[index][1];
        }
        /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }
        /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */ function listCacheSet(key, value) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
                ++this.size;
                data.push([
                    key,
                    value
                ]);
            } else data[index][1] = value;
            return this;
        }
        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype['delete'] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function MapCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while((++index) < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */ function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
                'hash': new Hash,
                'map': new (Map1 || ListCache),
                'string': new Hash
            };
        }
        /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function mapCacheDelete(key) {
            var result = getMapData(this, key)['delete'](key);
            this.size -= result ? 1 : 0;
            return result;
        }
        /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function mapCacheGet(key) {
            return getMapData(this, key).get(key);
        }
        /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function mapCacheHas(key) {
            return getMapData(this, key).has(key);
        }
        /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */ function mapCacheSet(key, value) {
            var data = getMapData(this, key), size = data.size;
            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
        }
        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype['delete'] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        /*------------------------------------------------------------------------*/ /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */ function SetCache(values) {
            var index = -1, length = values == null ? 0 : values.length;
            this.__data__ = new MapCache;
            while((++index) < length)this.add(values[index]);
        }
        /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */ function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
        }
        /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */ function setCacheHas(value) {
            return this.__data__.has(value);
        }
        // Add methods to `SetCache`.
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        /*------------------------------------------------------------------------*/ /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
        }
        /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */ function stackClear() {
            this.__data__ = new ListCache;
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function stackDelete(key) {
            var data = this.__data__, result = data['delete'](key);
            this.size = data.size;
            return result;
        }
        /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function stackGet(key) {
            return this.__data__.get(key);
        }
        /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function stackHas(key) {
            return this.__data__.has(key);
        }
        /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */ function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
                var pairs = data.__data__;
                if (!Map1 || pairs.length < LARGE_ARRAY_SIZE - 1) {
                    pairs.push([
                        key,
                        value
                    ]);
                    this.size = ++data.size;
                    return this;
                }
                data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
        }
        // Add methods to `Stack`.
        Stack.prototype.clear = stackClear;
        Stack.prototype['delete'] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */ function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String1) : [], length = result.length;
            for(var key in value)if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
            (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
            isIndex(key, length)))) result.push(key);
            return result;
        }
        /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */ function arraySample(array) {
            var length = array.length;
            return length ? array[baseRandom(0, length - 1)] : undefined;
        }
        /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */ function arraySampleSize(array, n) {
            return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */ function arrayShuffle(array) {
            return shuffleSelf(copyArray(array));
        }
        /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function assignMergeValue(object, key, value) {
            if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
        }
        /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function assignValue(object, key, value) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
        }
        /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */ function assocIndexOf(array, key) {
            var length = array.length;
            while(length--){
                if (eq(array[length][0], key)) return length;
            }
            return -1;
        }
        /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */ function baseAggregator(collection, setter, iteratee, accumulator) {
            baseEach(collection, function(value, key, collection1) {
                setter(accumulator, value, iteratee(value), collection1);
            });
            return accumulator;
        }
        /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */ function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
        }
        /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */ function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
        }
        /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function baseAssignValue(object, key, value) {
            if (key == '__proto__' && defineProperty) defineProperty(object, key, {
                'configurable': true,
                'enumerable': true,
                'value': value,
                'writable': true
            });
            else object[key] = value;
        }
        /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */ function baseAt(object, paths) {
            var index = -1, length = paths.length, result = Array1(length), skip = object == null;
            while((++index) < length)result[index] = skip ? undefined : get(object, paths[index]);
            return result;
        }
        /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */ function baseClamp(number, lower, upper) {
            if (number === number) {
                if (upper !== undefined) number = number <= upper ? number : upper;
                if (lower !== undefined) number = number >= lower ? number : lower;
            }
            return number;
        }
        /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */ function baseClone(value, bitmask, customizer, key, object, stack) {
            var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
            if (customizer) result = object ? customizer(value, key, object, stack) : customizer(value);
            if (result !== undefined) return result;
            if (!isObject(value)) return value;
            var isArr = isArray(value);
            if (isArr) {
                result = initCloneArray(value);
                if (!isDeep) return copyArray(value, result);
            } else {
                var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
                if (isBuffer(value)) return cloneBuffer(value, isDeep);
                if (tag == objectTag || tag == argsTag || isFunc && !object) {
                    result = isFlat || isFunc ? {
                    } : initCloneObject(value);
                    if (!isDeep) return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                } else {
                    if (!cloneableTags[tag]) return object ? value : {
                    };
                    result = initCloneByTag(value, tag, isDeep);
                }
            }
            // Check for circular references and return its corresponding clone.
            stack || (stack = new Stack);
            var stacked = stack.get(value);
            if (stacked) return stacked;
            stack.set(value, result);
            if (isSet(value)) value.forEach(function(subValue) {
                result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
            else if (isMap(value)) value.forEach(function(subValue, key1) {
                result.set(key1, baseClone(subValue, bitmask, customizer, key1, value, stack));
            });
            var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
            var props = isArr ? undefined : keysFunc(value);
            arrayEach(props || value, function(subValue, key1) {
                if (props) {
                    key1 = subValue;
                    subValue = value[key1];
                }
                // Recursively populate clone (susceptible to call stack limits).
                assignValue(result, key1, baseClone(subValue, bitmask, customizer, key1, value, stack));
            });
            return result;
        }
        /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */ function baseConforms(source) {
            var props = keys(source);
            return function(object) {
                return baseConformsTo(object, source, props);
            };
        }
        /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */ function baseConformsTo(object, source, props) {
            var length = props.length;
            if (object == null) return !length;
            object = Object1(object);
            while(length--){
                var key = props[length], predicate = source[key], value = object[key];
                if (value === undefined && !(key in object) || !predicate(value)) return false;
            }
            return true;
        }
        /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */ function baseDelay(func, wait, args) {
            if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            return setTimeout(function() {
                func.apply(undefined, args);
            }, wait);
        }
        /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */ function baseDifference(array, values, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
            if (!length) return result;
            if (iteratee) values = arrayMap(values, baseUnary(iteratee));
            if (comparator) {
                includes = arrayIncludesWith;
                isCommon = false;
            } else if (values.length >= LARGE_ARRAY_SIZE) {
                includes = cacheHas;
                isCommon = false;
                values = new SetCache(values);
            }
            outer: while((++index) < length){
                var value = array[index], computed = iteratee == null ? value : iteratee(value);
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                    var valuesIndex = valuesLength;
                    while(valuesIndex--){
                        if (values[valuesIndex] === computed) continue outer;
                    }
                    result.push(value);
                } else if (!includes(values, computed, comparator)) result.push(value);
            }
            return result;
        }
        /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */ var baseEach = createBaseEach(baseForOwn);
        /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */ var baseEachRight = createBaseEach(baseForOwnRight, true);
        /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */ function baseEvery(collection, predicate) {
            var result = true;
            baseEach(collection, function(value, index, collection1) {
                result = !!predicate(value, index, collection1);
                return result;
            });
            return result;
        }
        /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */ function baseExtremum(array, iteratee, comparator) {
            var index = -1, length = array.length;
            while((++index) < length){
                var value = array[index], current = iteratee(value);
                if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) var computed = current, result = value;
            }
            return result;
        }
        /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */ function baseFill(array, value, start, end) {
            var length = array.length;
            start = toInteger(start);
            if (start < 0) start = -start > length ? 0 : length + start;
            end = end === undefined || end > length ? length : toInteger(end);
            if (end < 0) end += length;
            end = start > end ? 0 : toLength(end);
            while(start < end)array[start++] = value;
            return array;
        }
        /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */ function baseFilter(collection, predicate) {
            var result = [];
            baseEach(collection, function(value, index, collection1) {
                if (predicate(value, index, collection1)) result.push(value);
            });
            return result;
        }
        /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */ function baseFlatten(array, depth, predicate, isStrict, result) {
            var index = -1, length = array.length;
            predicate || (predicate = isFlattenable);
            result || (result = []);
            while((++index) < length){
                var value = array[index];
                if (depth > 0 && predicate(value)) {
                    if (depth > 1) // Recursively flatten arrays (susceptible to call stack limits).
                    baseFlatten(value, depth - 1, predicate, isStrict, result);
                    else arrayPush(result, value);
                } else if (!isStrict) result[result.length] = value;
            }
            return result;
        }
        /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */ var baseFor = createBaseFor();
        /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */ var baseForRight = createBaseFor(true);
        /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */ function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
        }
        /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */ function baseForOwnRight(object, iteratee) {
            return object && baseForRight(object, iteratee, keys);
        }
        /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */ function baseFunctions(object, props) {
            return arrayFilter(props, function(key) {
                return isFunction(object[key]);
            });
        }
        /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */ function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0, length = path.length;
            while(object != null && index < length)object = object[toKey(path[index++])];
            return index && index == length ? object : undefined;
        }
        /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }
        /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */ function baseGetTag(value) {
            if (value == null) return value === undefined ? undefinedTag : nullTag;
            return symToStringTag && symToStringTag in Object1(value) ? getRawTag(value) : objectToString(value);
        }
        /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */ function baseGt(value, other) {
            return value > other;
        }
        /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */ function baseHas(object, key) {
            return object != null && hasOwnProperty.call(object, key);
        }
        /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */ function baseHasIn(object, key) {
            return object != null && key in Object1(object);
        }
        /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */ function baseInRange(number, start, end) {
            return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */ function baseIntersection(arrays, iteratee, comparator) {
            var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array1(othLength), maxLength = Infinity, result = [];
            while(othIndex--){
                var array = arrays[othIndex];
                if (othIndex && iteratee) array = arrayMap(array, baseUnary(iteratee));
                maxLength = nativeMin(array.length, maxLength);
                caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
            }
            array = arrays[0];
            var index = -1, seen = caches[0];
            outer: while((++index) < length && result.length < maxLength){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
                    othIndex = othLength;
                    while(--othIndex){
                        var cache = caches[othIndex];
                        if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) continue outer;
                    }
                    if (seen) seen.push(computed);
                    result.push(value);
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */ function baseInverter(object, setter, iteratee, accumulator) {
            baseForOwn(object, function(value, key, object1) {
                setter(accumulator, iteratee(value), key, object1);
            });
            return accumulator;
        }
        /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */ function baseInvoke(object, path, args) {
            path = castPath(path, object);
            object = parent(object, path);
            var func = object == null ? object : object[toKey(last(path))];
            return func == null ? undefined : apply(func, object, args);
        }
        /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */ function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */ function baseIsArrayBuffer(value) {
            return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */ function baseIsDate(value) {
            return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */ function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) return true;
            if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) return false;
                objIsArr = true;
                objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
                stack || (stack = new Stack);
                return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'), othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
                if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                    stack || (stack = new Stack);
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                }
            }
            if (!isSameTag) return false;
            stack || (stack = new Stack);
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */ function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
        }
        /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */ function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (object == null) return !length;
            object = Object1(object);
            while(index--){
                var data = matchData[index];
                if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
            }
            while((++index) < length){
                data = matchData[index];
                var key = data[0], objValue = object[key], srcValue = data[1];
                if (noCustomizer && data[2]) {
                    if (objValue === undefined && !(key in object)) return false;
                } else {
                    var stack = new Stack;
                    if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
                    if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return false;
                }
            }
            return true;
        }
        /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */ function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) return false;
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
        }
        /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */ function baseIsRegExp(value) {
            return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */ function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
        }
        /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */ function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */ function baseIteratee(value) {
            // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
            // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
            if (typeof value == 'function') return value;
            if (value == null) return identity;
            if (typeof value == 'object') return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            return property(value);
        }
        /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function baseKeys(object) {
            if (!isPrototype(object)) return nativeKeys(object);
            var result = [];
            for(var key in Object1(object))if (hasOwnProperty.call(object, key) && key != 'constructor') result.push(key);
            return result;
        }
        /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function baseKeysIn(object) {
            if (!isObject(object)) return nativeKeysIn(object);
            var isProto = isPrototype(object), result = [];
            for(var key in object)if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) result.push(key);
            return result;
        }
        /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */ function baseLt(value, other) {
            return value < other;
        }
        /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */ function baseMap(collection, iteratee) {
            var index = -1, result = isArrayLike(collection) ? Array1(collection.length) : [];
            baseEach(collection, function(value, key, collection1) {
                result[++index] = iteratee(value, key, collection1);
            });
            return result;
        }
        /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */ function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            return function(object) {
                return object === source || baseIsMatch(object, source, matchData);
            };
        }
        /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */ function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
            return function(object) {
                var objValue = get(object, path);
                return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
        }
        /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */ function baseMerge(object, source, srcIndex, customizer, stack) {
            if (object === source) return;
            baseFor(source, function(srcValue, key) {
                stack || (stack = new Stack);
                if (isObject(srcValue)) baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
                else {
                    var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;
                    if (newValue === undefined) newValue = srcValue;
                    assignMergeValue(object, key, newValue);
                }
            }, keysIn);
        }
        /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */ function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
            var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
            if (stacked) {
                assignMergeValue(object, key, stacked);
                return;
            }
            var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
            var isCommon = newValue === undefined;
            if (isCommon) {
                var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
                newValue = srcValue;
                if (isArr || isBuff || isTyped) {
                    if (isArray(objValue)) newValue = objValue;
                    else if (isArrayLikeObject(objValue)) newValue = copyArray(objValue);
                    else if (isBuff) {
                        isCommon = false;
                        newValue = cloneBuffer(srcValue, true);
                    } else if (isTyped) {
                        isCommon = false;
                        newValue = cloneTypedArray(srcValue, true);
                    } else newValue = [];
                } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                    newValue = objValue;
                    if (isArguments(objValue)) newValue = toPlainObject(objValue);
                    else if (!isObject(objValue) || isFunction(objValue)) newValue = initCloneObject(srcValue);
                } else isCommon = false;
            }
            if (isCommon) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, newValue);
                mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
                stack['delete'](srcValue);
            }
            assignMergeValue(object, key, newValue);
        }
        /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */ function baseNth(array, n) {
            var length = array.length;
            if (!length) return;
            n += n < 0 ? length : 0;
            return isIndex(n, length) ? array[n] : undefined;
        }
        /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */ function baseOrderBy(collection, iteratees, orders) {
            if (iteratees.length) iteratees = arrayMap(iteratees, function(iteratee) {
                if (isArray(iteratee)) return function(value) {
                    return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
                };
                return iteratee;
            });
            else iteratees = [
                identity
            ];
            var index = -1;
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            var result = baseMap(collection, function(value, key, collection1) {
                var criteria = arrayMap(iteratees, function(iteratee) {
                    return iteratee(value);
                });
                return {
                    'criteria': criteria,
                    'index': ++index,
                    'value': value
                };
            });
            return baseSortBy(result, function(object, other) {
                return compareMultiple(object, other, orders);
            });
        }
        /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */ function basePick(object, paths) {
            return basePickBy(object, paths, function(value, path) {
                return hasIn(object, path);
            });
        }
        /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */ function basePickBy(object, paths, predicate) {
            var index = -1, length = paths.length, result = {
            };
            while((++index) < length){
                var path = paths[index], value = baseGet(object, path);
                if (predicate(value, path)) baseSet(result, castPath(path, object), value);
            }
            return result;
        }
        /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */ function basePropertyDeep(path) {
            return function(object) {
                return baseGet(object, path);
            };
        }
        /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */ function basePullAll(array, values, iteratee, comparator) {
            var indexOf = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values.length, seen = array;
            if (array === values) values = copyArray(values);
            if (iteratee) seen = arrayMap(array, baseUnary(iteratee));
            while((++index) < length){
                var fromIndex = 0, value = values[index], computed = iteratee ? iteratee(value) : value;
                while((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1){
                    if (seen !== array) splice.call(seen, fromIndex, 1);
                    splice.call(array, fromIndex, 1);
                }
            }
            return array;
        }
        /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */ function basePullAt(array, indexes) {
            var length = array ? indexes.length : 0, lastIndex = length - 1;
            while(length--){
                var index = indexes[length];
                if (length == lastIndex || index !== previous) {
                    var previous = index;
                    if (isIndex(index)) splice.call(array, index, 1);
                    else baseUnset(array, index);
                }
            }
            return array;
        }
        /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */ function baseRandom(lower, upper) {
            return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */ function baseRange(start, end, step, fromRight) {
            var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array1(length);
            while(length--){
                result[fromRight ? length : ++index] = start;
                start += step;
            }
            return result;
        }
        /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */ function baseRepeat(string, n) {
            var result = '';
            if (!string || n < 1 || n > MAX_SAFE_INTEGER) return result;
            // Leverage the exponentiation by squaring algorithm for a faster repeat.
            // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
            do {
                if (n % 2) result += string;
                n = nativeFloor(n / 2);
                if (n) string += string;
            }while (n)
            return result;
        }
        /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */ function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + '');
        }
        /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */ function baseSample(collection) {
            return arraySample(values(collection));
        }
        /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */ function baseSampleSize(collection, n) {
            var array = values(collection);
            return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */ function baseSet(object, path, value, customizer) {
            if (!isObject(object)) return object;
            path = castPath(path, object);
            var index = -1, length = path.length, lastIndex = length - 1, nested = object;
            while(nested != null && (++index) < length){
                var key = toKey(path[index]), newValue = value;
                if (key === '__proto__' || key === 'constructor' || key === 'prototype') return object;
                if (index != lastIndex) {
                    var objValue = nested[key];
                    newValue = customizer ? customizer(objValue, key, nested) : undefined;
                    if (newValue === undefined) newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {
                    };
                }
                assignValue(nested, key, newValue);
                nested = nested[key];
            }
            return object;
        }
        /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */ var baseSetData = !metaMap ? identity : function(func, data) {
            metaMap.set(func, data);
            return func;
        };
        /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */ var baseSetToString = !defineProperty ? identity : function(func, string) {
            return defineProperty(func, 'toString', {
                'configurable': true,
                'enumerable': false,
                'value': constant(string),
                'writable': true
            });
        };
        /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */ function baseShuffle(collection) {
            return shuffleSelf(values(collection));
        }
        /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */ function baseSlice(array, start, end) {
            var index = -1, length = array.length;
            if (start < 0) start = -start > length ? 0 : length + start;
            end = end > length ? length : end;
            if (end < 0) end += length;
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result = Array1(length);
            while((++index) < length)result[index] = array[index + start];
            return result;
        }
        /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */ function baseSome(collection, predicate) {
            var result;
            baseEach(collection, function(value, index, collection1) {
                result = predicate(value, index, collection1);
                return !result;
            });
            return !!result;
        }
        /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */ function baseSortedIndex(array, value, retHighest) {
            var low = 0, high = array == null ? low : array.length;
            if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
                while(low < high){
                    var mid = low + high >>> 1, computed = array[mid];
                    if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) low = mid + 1;
                    else high = mid;
                }
                return high;
            }
            return baseSortedIndexBy(array, value, identity, retHighest);
        }
        /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */ function baseSortedIndexBy(array, value, iteratee, retHighest) {
            var low = 0, high = array == null ? 0 : array.length;
            if (high === 0) return 0;
            value = iteratee(value);
            var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined;
            while(low < high){
                var mid = nativeFloor((low + high) / 2), computed = iteratee(array[mid]), othIsDefined = computed !== undefined, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
                if (valIsNaN) var setLow = retHighest || othIsReflexive;
                else if (valIsUndefined) setLow = othIsReflexive && (retHighest || othIsDefined);
                else if (valIsNull) setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
                else if (valIsSymbol) setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
                else if (othIsNull || othIsSymbol) setLow = false;
                else setLow = retHighest ? computed <= value : computed < value;
                if (setLow) low = mid + 1;
                else high = mid;
            }
            return nativeMin(high, MAX_ARRAY_INDEX);
        }
        /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */ function baseSortedUniq(array, iteratee) {
            var index = -1, length = array.length, resIndex = 0, result = [];
            while((++index) < length){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                if (!index || !eq(computed, seen)) {
                    var seen = computed;
                    result[resIndex++] = value === 0 ? 0 : value;
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */ function baseToNumber(value) {
            if (typeof value == 'number') return value;
            if (isSymbol(value)) return NAN;
            return +value;
        }
        /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */ function baseToString(value) {
            // Exit early for strings to avoid a performance hit in some environments.
            if (typeof value == 'string') return value;
            if (isArray(value)) // Recursively convert values (susceptible to call stack limits).
            return arrayMap(value, baseToString) + '';
            if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : '';
            var result = value + '';
            return result == '0' && 1 / value == -INFINITY ? '-0' : result;
        }
        /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */ function baseUniq(array, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
            if (comparator) {
                isCommon = false;
                includes = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
                var set = iteratee ? null : createSet(array);
                if (set) return setToArray(set);
                isCommon = false;
                includes = cacheHas;
                seen = new SetCache;
            } else seen = iteratee ? [] : result;
            outer: while((++index) < length){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                    var seenIndex = seen.length;
                    while(seenIndex--){
                        if (seen[seenIndex] === computed) continue outer;
                    }
                    if (iteratee) seen.push(computed);
                    result.push(value);
                } else if (!includes(seen, computed, comparator)) {
                    if (seen !== result) seen.push(computed);
                    result.push(value);
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */ function baseUnset(object, path) {
            path = castPath(path, object);
            object = parent(object, path);
            return object == null || delete object[toKey(last(path))];
        }
        /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */ function baseUpdate(object, path, updater, customizer) {
            return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */ function baseWhile(array, predicate, isDrop, fromRight) {
            var length = array.length, index = fromRight ? length : -1;
            while((fromRight ? index-- : (++index) < length) && predicate(array[index], index, array));
            return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */ function baseWrapperValue(value, actions) {
            var result = value;
            if (result instanceof LazyWrapper) result = result.value();
            return arrayReduce(actions, function(result1, action) {
                return action.func.apply(action.thisArg, arrayPush([
                    result1
                ], action.args));
            }, result);
        }
        /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */ function baseXor(arrays, iteratee, comparator) {
            var length = arrays.length;
            if (length < 2) return length ? baseUniq(arrays[0]) : [];
            var index = -1, result = Array1(length);
            while((++index) < length){
                var array = arrays[index], othIndex = -1;
                while((++othIndex) < length)if (othIndex != index) result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
            return baseUniq(baseFlatten(result, 1), iteratee, comparator);
        }
        /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */ function baseZipObject(props, values, assignFunc) {
            var index = -1, length = props.length, valsLength = values.length, result = {
            };
            while((++index) < length){
                var value = index < valsLength ? values[index] : undefined;
                assignFunc(result, props[index], value);
            }
            return result;
        }
        /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */ function castArrayLikeObject(value) {
            return isArrayLikeObject(value) ? value : [];
        }
        /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */ function castFunction(value) {
            return typeof value == 'function' ? value : identity;
        }
        /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */ function castPath(value, object) {
            if (isArray(value)) return value;
            return isKey(value, object) ? [
                value
            ] : stringToPath(toString(value));
        }
        /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */ var castRest = baseRest;
        /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */ function castSlice(array, start, end) {
            var length = array.length;
            end = end === undefined ? length : end;
            return !start && end >= length ? array : baseSlice(array, start, end);
        }
        /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */ var clearTimeout = ctxClearTimeout || function(id) {
            return root.clearTimeout(id);
        };
        /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */ function cloneBuffer(buffer, isDeep) {
            if (isDeep) return buffer.slice();
            var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
            buffer.copy(result);
            return result;
        }
        /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */ function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array1(result).set(new Uint8Array1(arrayBuffer));
            return result;
        }
        /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */ function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */ function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
        }
        /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */ function cloneSymbol(symbol) {
            return symbolValueOf ? Object1(symbolValueOf.call(symbol)) : {
            };
        }
        /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */ function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */ function compareAscending(value, other) {
            if (value !== other) {
                var valIsDefined = value !== undefined, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
                var othIsDefined = other !== undefined, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
                if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) return 1;
                if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) return -1;
            }
            return 0;
        }
        /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */ function compareMultiple(object, other, orders) {
            var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
            while((++index) < length){
                var result = compareAscending(objCriteria[index], othCriteria[index]);
                if (result) {
                    if (index >= ordersLength) return result;
                    var order = orders[index];
                    return result * (order == 'desc' ? -1 : 1);
                }
            }
            // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
            // that causes it, under certain circumstances, to provide the same value for
            // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
            // for more details.
            //
            // This also ensures a stable sort in V8 and other engines.
            // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
            return object.index - other.index;
        }
        /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */ function composeArgs(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array1(leftLength + rangeLength), isUncurried = !isCurried;
            while((++leftIndex) < leftLength)result[leftIndex] = partials[leftIndex];
            while((++argsIndex) < holdersLength)if (isUncurried || argsIndex < argsLength) result[holders[argsIndex]] = args[argsIndex];
            while(rangeLength--)result[leftIndex++] = args[argsIndex++];
            return result;
        }
        /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */ function composeArgsRight(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array1(rangeLength + rightLength), isUncurried = !isCurried;
            while((++argsIndex) < rangeLength)result[argsIndex] = args[argsIndex];
            var offset = argsIndex;
            while((++rightIndex) < rightLength)result[offset + rightIndex] = partials[rightIndex];
            while((++holdersIndex) < holdersLength)if (isUncurried || argsIndex < argsLength) result[offset + holders[holdersIndex]] = args[argsIndex++];
            return result;
        }
        /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */ function copyArray(source, array) {
            var index = -1, length = source.length;
            array || (array = Array1(length));
            while((++index) < length)array[index] = source[index];
            return array;
        }
        /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */ function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {
            });
            var index = -1, length = props.length;
            while((++index) < length){
                var key = props[index];
                var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
                if (newValue === undefined) newValue = source[key];
                if (isNew) baseAssignValue(object, key, newValue);
                else assignValue(object, key, newValue);
            }
            return object;
        }
        /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */ function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
        }
        /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */ function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
        }
        /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */ function createAggregator(setter, initializer) {
            return function(collection, iteratee) {
                var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {
                };
                return func(collection, setter, getIteratee(iteratee, 2), accumulator);
            };
        }
        /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */ function createAssigner(assigner) {
            return baseRest(function(object, sources) {
                var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;
                customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;
                if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                    customizer = length < 3 ? undefined : customizer;
                    length = 1;
                }
                object = Object1(object);
                while((++index) < length){
                    var source = sources[index];
                    if (source) assigner(object, source, index, customizer);
                }
                return object;
            });
        }
        /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */ function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
                if (collection == null) return collection;
                if (!isArrayLike(collection)) return eachFunc(collection, iteratee);
                var length = collection.length, index = fromRight ? length : -1, iterable = Object1(collection);
                while(fromRight ? index-- : (++index) < length){
                    if (iteratee(iterable[index], index, iterable) === false) break;
                }
                return collection;
            };
        }
        /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */ function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                var index = -1, iterable = Object1(object), props = keysFunc(object), length = props.length;
                while(length--){
                    var key = props[fromRight ? length : ++index];
                    if (iteratee(iterable[key], key, iterable) === false) break;
                }
                return object;
            };
        }
        /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createBind(func, bitmask, thisArg) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
                var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                return fn.apply(isBind ? thisArg : this, arguments);
            }
            return wrapper;
        }
        /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */ function createCaseFirst(methodName) {
            return function(string) {
                string = toString(string);
                var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
                var chr = strSymbols ? strSymbols[0] : string.charAt(0);
                var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
                return chr[methodName]() + trailing;
            };
        }
        /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */ function createCompounder(callback) {
            return function(string) {
                return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
            };
        }
        /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */ function createCtor(Ctor) {
            return function() {
                // Use a `switch` statement to work with class constructors. See
                // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
                // for more details.
                var args = arguments;
                switch(args.length){
                    case 0:
                        return new Ctor;
                    case 1:
                        return new Ctor(args[0]);
                    case 2:
                        return new Ctor(args[0], args[1]);
                    case 3:
                        return new Ctor(args[0], args[1], args[2]);
                    case 4:
                        return new Ctor(args[0], args[1], args[2], args[3]);
                    case 5:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                    case 6:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                    case 7:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
                }
                var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
                // Mimic the constructor's `return` behavior.
                // See https://es5.github.io/#x13.2.2 for more details.
                return isObject(result) ? result : thisBinding;
            };
        }
        /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createCurry(func, bitmask, arity) {
            var Ctor = createCtor(func);
            function wrapper() {
                var length = arguments.length, args = Array1(length), index = length, placeholder = getHolder(wrapper);
                while(index--)args[index] = arguments[index];
                var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
                length -= holders.length;
                if (length < arity) return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
                var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                return apply(fn, this, args);
            }
            return wrapper;
        }
        /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */ function createFind(findIndexFunc) {
            return function(collection, predicate, fromIndex) {
                var iterable = Object1(collection);
                if (!isArrayLike(collection)) {
                    var iteratee = getIteratee(predicate, 3);
                    collection = keys(collection);
                    predicate = function(key) {
                        return iteratee(iterable[key], key, iterable);
                    };
                }
                var index = findIndexFunc(collection, predicate, fromIndex);
                return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
            };
        }
        /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */ function createFlow(fromRight) {
            return flatRest(function(funcs) {
                var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
                if (fromRight) funcs.reverse();
                while(index--){
                    var func = funcs[index];
                    if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
                    if (prereq && !wrapper && getFuncName(func) == 'wrapper') var wrapper = new LodashWrapper([], true);
                }
                index = wrapper ? index : length;
                while((++index) < length){
                    func = funcs[index];
                    var funcName = getFuncName(func), data = funcName == 'wrapper' ? getData(func) : undefined;
                    if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
                    else wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                }
                return function() {
                    var args = arguments, value = args[0];
                    if (wrapper && args.length == 1 && isArray(value)) return wrapper.plant(value).value();
                    var index1 = 0, result = length ? funcs[index1].apply(this, args) : value;
                    while((++index1) < length)result = funcs[index1].call(this, result);
                    return result;
                };
            });
        }
        /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
            var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined : createCtor(func);
            function wrapper() {
                var length = arguments.length, args = Array1(length), index = length;
                while(index--)args[index] = arguments[index];
                if (isCurried) var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
                if (partials) args = composeArgs(args, partials, holders, isCurried);
                if (partialsRight) args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                length -= holdersCount;
                if (isCurried && length < arity) {
                    var newHolders = replaceHolders(args, placeholder);
                    return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
                }
                var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
                length = args.length;
                if (argPos) args = reorder(args, argPos);
                else if (isFlip && length > 1) args.reverse();
                if (isAry && ary < length) args.length = ary;
                if (this && this !== root && this instanceof wrapper) fn = Ctor || createCtor(fn);
                return fn.apply(thisBinding, args);
            }
            return wrapper;
        }
        /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */ function createInverter(setter, toIteratee) {
            return function(object, iteratee) {
                return baseInverter(object, setter, toIteratee(iteratee), {
                });
            };
        }
        /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */ function createMathOperation(operator, defaultValue) {
            return function(value, other) {
                var result;
                if (value === undefined && other === undefined) return defaultValue;
                if (value !== undefined) result = value;
                if (other !== undefined) {
                    if (result === undefined) return other;
                    if (typeof value == 'string' || typeof other == 'string') {
                        value = baseToString(value);
                        other = baseToString(other);
                    } else {
                        value = baseToNumber(value);
                        other = baseToNumber(other);
                    }
                    result = operator(value, other);
                }
                return result;
            };
        }
        /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */ function createOver(arrayFunc) {
            return flatRest(function(iteratees) {
                iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                return baseRest(function(args) {
                    var thisArg = this;
                    return arrayFunc(iteratees, function(iteratee) {
                        return apply(iteratee, thisArg, args);
                    });
                });
            });
        }
        /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */ function createPadding(length, chars) {
            chars = chars === undefined ? ' ' : baseToString(chars);
            var charsLength = chars.length;
            if (charsLength < 2) return charsLength ? baseRepeat(chars, length) : chars;
            var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
            return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
        }
        /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */ function createPartial(func, bitmask, thisArg, partials) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
                var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array1(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                while((++leftIndex) < leftLength)args[leftIndex] = partials[leftIndex];
                while(argsLength--)args[leftIndex++] = arguments[++argsIndex];
                return apply(fn, isBind ? thisArg : this, args);
            }
            return wrapper;
        }
        /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */ function createRange(fromRight) {
            return function(start, end, step) {
                if (step && typeof step != 'number' && isIterateeCall(start, end, step)) end = step = undefined;
                // Ensure the sign of `-0` is preserved.
                start = toFinite(start);
                if (end === undefined) {
                    end = start;
                    start = 0;
                } else end = toFinite(end);
                step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
                return baseRange(start, end, step, fromRight);
            };
        }
        /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */ function createRelationalOperation(operator) {
            return function(value, other) {
                if (!(typeof value == 'string' && typeof other == 'string')) {
                    value = toNumber(value);
                    other = toNumber(other);
                }
                return operator(value, other);
            };
        }
        /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
            var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined, newHoldersRight = isCurry ? undefined : holders, newPartials = isCurry ? partials : undefined, newPartialsRight = isCurry ? undefined : partials;
            bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
            bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
            if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
            var newData = [
                func,
                bitmask,
                thisArg,
                newPartials,
                newHolders,
                newPartialsRight,
                newHoldersRight,
                argPos,
                ary,
                arity
            ];
            var result = wrapFunc.apply(undefined, newData);
            if (isLaziable(func)) setData(result, newData);
            result.placeholder = placeholder;
            return setWrapToString(result, func, bitmask);
        }
        /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */ function createRound(methodName) {
            var func = Math1[methodName];
            return function(number, precision) {
                number = toNumber(number);
                precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
                if (precision && nativeIsFinite(number)) {
                    // Shift with exponential notation to avoid floating-point issues.
                    // See [MDN](https://mdn.io/round#Examples) for more details.
                    var pair = (toString(number) + 'e').split('e'), value = func(pair[0] + 'e' + (+pair[1] + precision));
                    pair = (toString(value) + 'e').split('e');
                    return +(pair[0] + 'e' + (+pair[1] - precision));
                }
                return func(number);
            };
        }
        /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */ var createSet = !(Set1 && 1 / setToArray(new Set1([
            ,
            -0
        ]))[1] == INFINITY) ? noop : function(values) {
            return new Set1(values);
        };
        /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */ function createToPairs(keysFunc) {
            return function(object) {
                var tag = getTag(object);
                if (tag == mapTag) return mapToArray(object);
                if (tag == setTag) return setToPairs(object);
                return baseToPairs(object, keysFunc(object));
            };
        }
        /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
            var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
            if (!isBindKey && typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            var length = partials ? partials.length : 0;
            if (!length) {
                bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
                partials = holders = undefined;
            }
            ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
            arity = arity === undefined ? arity : toInteger(arity);
            length -= holders ? holders.length : 0;
            if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
                var partialsRight = partials, holdersRight = holders;
                partials = holders = undefined;
            }
            var data = isBindKey ? undefined : getData(func);
            var newData = [
                func,
                bitmask,
                thisArg,
                partials,
                holders,
                partialsRight,
                holdersRight,
                argPos,
                ary,
                arity
            ];
            if (data) mergeData(newData, data);
            func = newData[0];
            bitmask = newData[1];
            thisArg = newData[2];
            partials = newData[3];
            holders = newData[4];
            arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
            if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
            if (!bitmask || bitmask == WRAP_BIND_FLAG) var result = createBind(func, bitmask, thisArg);
            else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) result = createCurry(func, bitmask, arity);
            else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) result = createPartial(func, bitmask, thisArg, partials);
            else result = createHybrid.apply(undefined, newData);
            var setter = data ? baseSetData : setData;
            return setWrapToString(setter(result, newData), func, bitmask);
        }
        /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */ function customDefaultsAssignIn(objValue, srcValue, key, object) {
            if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) return srcValue;
            return objValue;
        }
        /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */ function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
            if (isObject(objValue) && isObject(srcValue)) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, objValue);
                baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                stack['delete'](srcValue);
            }
            return objValue;
        }
        /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */ function customOmitClone(value) {
            return isPlainObject(value) ? undefined : value;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
            // Check that cyclic values are equal.
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
            var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
            stack.set(array, other);
            stack.set(other, array);
            // Ignore non-index properties.
            while((++index) < arrLength){
                var arrValue = array[index], othValue = other[index];
                if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                if (compared !== undefined) {
                    if (compared) continue;
                    result = false;
                    break;
                }
                // Recursively compare arrays (susceptible to call stack limits).
                if (seen) {
                    if (!arraySome(other, function(othValue1, othIndex) {
                        if (!cacheHas(seen, othIndex) && (arrValue === othValue1 || equalFunc(arrValue, othValue1, bitmask, customizer, stack))) return seen.push(othIndex);
                    })) {
                        result = false;
                        break;
                    }
                } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    result = false;
                    break;
                }
            }
            stack['delete'](array);
            stack['delete'](other);
            return result;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch(tag){
                case dataViewTag:
                    if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
                    object = object.buffer;
                    other = other.buffer;
                case arrayBufferTag:
                    if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array1(object), new Uint8Array1(other))) return false;
                    return true;
                case boolTag:
                case dateTag:
                case numberTag:
                    // Coerce booleans to `1` or `0` and dates to milliseconds.
                    // Invalid dates are coerced to `NaN`.
                    return eq(+object, +other);
                case errorTag:
                    return object.name == other.name && object.message == other.message;
                case regexpTag:
                case stringTag:
                    // Coerce regexes to strings and treat strings, primitives and objects,
                    // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                    // for more details.
                    return object == other + '';
                case mapTag:
                    var convert = mapToArray;
                case setTag:
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                    convert || (convert = setToArray);
                    if (object.size != other.size && !isPartial) return false;
                    // Assume cyclic values are equal.
                    var stacked = stack.get(object);
                    if (stacked) return stacked == other;
                    bitmask |= COMPARE_UNORDERED_FLAG;
                    // Recursively compare objects (susceptible to call stack limits).
                    stack.set(object, other);
                    var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                    stack['delete'](object);
                    return result;
                case symbolTag:
                    if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
            return false;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) return false;
            var index = objLength;
            while(index--){
                var key = objProps[index];
                if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
            }
            // Check that cyclic values are equal.
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) return objStacked == other && othStacked == object;
            var result = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while((++index) < objLength){
                key = objProps[index];
                var objValue = object[key], othValue = other[key];
                if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                // Recursively compare objects (susceptible to call stack limits).
                if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                    result = false;
                    break;
                }
                skipCtor || (skipCtor = key == 'constructor');
            }
            if (result && !skipCtor) {
                var objCtor = object.constructor, othCtor = other.constructor;
                // Non `Object` object instances with different constructors are not equal.
                if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) result = false;
            }
            stack['delete'](object);
            stack['delete'](other);
            return result;
        }
        /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */ function flatRest(func) {
            return setToString(overRest(func, undefined, flatten), func + '');
        }
        /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */ function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
        }
        /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */ function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */ var getData = !metaMap ? noop : function(func) {
            return metaMap.get(func);
        };
        /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */ function getFuncName(func) {
            var result = func.name + '', array = realNames[result], length = hasOwnProperty.call(realNames, result) ? array.length : 0;
            while(length--){
                var data = array[length], otherFunc = data.func;
                if (otherFunc == null || otherFunc == func) return data.name;
            }
            return result;
        }
        /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */ function getHolder(func) {
            var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
            return object.placeholder;
        }
        /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */ function getIteratee() {
            var result = lodash.iteratee || iteratee;
            result = result === iteratee ? baseIteratee : result;
            return arguments.length ? result(arguments[0], arguments[1]) : result;
        }
        /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */ function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
        }
        /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */ function getMatchData(object) {
            var result = keys(object), length = result.length;
            while(length--){
                var key = result[length], value = object[key];
                result[length] = [
                    key,
                    value,
                    isStrictComparable(value)
                ];
            }
            return result;
        }
        /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */ function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
        }
        /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */ function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
            try {
                value[symToStringTag] = undefined;
                var unmasked = true;
            } catch (e) {
            }
            var result = nativeObjectToString.call(value);
            if (unmasked) {
                if (isOwn) value[symToStringTag] = tag;
                else delete value[symToStringTag];
            }
            return result;
        }
        /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) return [];
            object = Object1(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
                return propertyIsEnumerable.call(object, symbol);
            });
        };
        /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */ var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
            var result = [];
            while(object){
                arrayPush(result, getSymbols(object));
                object = getPrototype(object);
            }
            return result;
        };
        /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */ var getTag = baseGetTag;
        // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
        if (DataView1 && getTag(new DataView1(new ArrayBuffer(1))) != dataViewTag || Map1 && getTag(new Map1) != mapTag || Promise1 && getTag(Promise1.resolve()) != promiseTag || Set1 && getTag(new Set1) != setTag || WeakMap1 && getTag(new WeakMap1) != weakMapTag) getTag = function(value) {
            var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : '';
            if (ctorString) switch(ctorString){
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
            return result;
        };
        /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */ function getView(start, end, transforms) {
            var index = -1, length = transforms.length;
            while((++index) < length){
                var data = transforms[index], size = data.size;
                switch(data.type){
                    case 'drop':
                        start += size;
                        break;
                    case 'dropRight':
                        end -= size;
                        break;
                    case 'take':
                        end = nativeMin(end, start + size);
                        break;
                    case 'takeRight':
                        start = nativeMax(start, end - size);
                        break;
                }
            }
            return {
                'start': start,
                'end': end
            };
        }
        /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */ function getWrapDetails(source) {
            var match = source.match(reWrapDetails);
            return match ? match[1].split(reSplitDetails) : [];
        }
        /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */ function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1, length = path.length, result = false;
            while((++index) < length){
                var key = toKey(path[index]);
                if (!(result = object != null && hasFunc(object, key))) break;
                object = object[key];
            }
            if (result || (++index) != length) return result;
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */ function initCloneArray(array) {
            var length = array.length, result = new array.constructor(length);
            // Add properties assigned by `RegExp#exec`.
            if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
                result.index = array.index;
                result.input = array.input;
            }
            return result;
        }
        /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */ function initCloneObject(object) {
            return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {
            };
        }
        /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */ function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch(tag){
                case arrayBufferTag:
                    return cloneArrayBuffer(object);
                case boolTag:
                case dateTag:
                    return new Ctor(+object);
                case dataViewTag:
                    return cloneDataView(object, isDeep);
                case float32Tag:
                case float64Tag:
                case int8Tag:
                case int16Tag:
                case int32Tag:
                case uint8Tag:
                case uint8ClampedTag:
                case uint16Tag:
                case uint32Tag:
                    return cloneTypedArray(object, isDeep);
                case mapTag:
                    return new Ctor;
                case numberTag:
                case stringTag:
                    return new Ctor(object);
                case regexpTag:
                    return cloneRegExp(object);
                case setTag:
                    return new Ctor;
                case symbolTag:
                    return cloneSymbol(object);
            }
        }
        /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */ function insertWrapDetails(source, details) {
            var length = details.length;
            if (!length) return source;
            var lastIndex = length - 1;
            details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
            details = details.join(length > 2 ? ', ' : ' ');
            return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
        }
        /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */ function isFlattenable(value) {
            return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */ function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
        }
        /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */ function isIterateeCall(value, index, object) {
            if (!isObject(object)) return false;
            var type = typeof index;
            if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) return eq(object[index], value);
            return false;
        }
        /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */ function isKey(value, object) {
            if (isArray(value)) return false;
            var type = typeof value;
            if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) return true;
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object1(object);
        }
        /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */ function isKeyable(value) {
            var type = typeof value;
            return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
        }
        /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */ function isLaziable(func) {
            var funcName = getFuncName(func), other = lodash[funcName];
            if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) return false;
            if (func === other) return true;
            var data = getData(other);
            return !!data && func === data[0];
        }
        /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */ function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
        }
        /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */ var isMaskable = coreJsData ? isFunction : stubFalse;
        /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */ function isPrototype(value) {
            var Ctor = value && value.constructor, proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
            return value === proto;
        }
        /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */ function isStrictComparable(value) {
            return value === value && !isObject(value);
        }
        /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */ function matchesStrictComparable(key, srcValue) {
            return function(object) {
                if (object == null) return false;
                return object[key] === srcValue && (srcValue !== undefined || key in Object1(object));
            };
        }
        /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */ function memoizeCapped(func) {
            var result = memoize(func, function(key) {
                if (cache.size === MAX_MEMOIZE_SIZE) cache.clear();
                return key;
            });
            var cache = result.cache;
            return result;
        }
        /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */ function mergeData(data, source) {
            var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
            var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
            // Exit early if metadata can't be merged.
            if (!(isCommon || isCombo)) return data;
            // Use source `thisArg` if available.
            if (srcBitmask & WRAP_BIND_FLAG) {
                data[2] = source[2];
                // Set when currying a bound function.
                newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
            }
            // Compose partial arguments.
            var value = source[3];
            if (value) {
                var partials = data[3];
                data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
            }
            // Compose partial right arguments.
            value = source[5];
            if (value) {
                partials = data[5];
                data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
            }
            // Use source `argPos` if available.
            value = source[7];
            if (value) data[7] = value;
            // Use source `ary` if it's smaller.
            if (srcBitmask & WRAP_ARY_FLAG) data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
            // Use source `arity` if one is not provided.
            if (data[9] == null) data[9] = source[9];
            // Use source `func` and merge bitmasks.
            data[0] = source[0];
            data[1] = newBitmask;
            return data;
        }
        /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function nativeKeysIn(object) {
            var result = [];
            if (object != null) for(var key in Object1(object))result.push(key);
            return result;
        }
        /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */ function objectToString(value) {
            return nativeObjectToString.call(value);
        }
        /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */ function overRest(func, start, transform) {
            start = nativeMax(start === undefined ? func.length - 1 : start, 0);
            return function() {
                var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array1(length);
                while((++index) < length)array[index] = args[start + index];
                index = -1;
                var otherArgs = Array1(start + 1);
                while((++index) < start)otherArgs[index] = args[index];
                otherArgs[start] = transform(array);
                return apply(func, this, otherArgs);
            };
        }
        /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */ function parent(object, path) {
            return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */ function reorder(array, indexes) {
            var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
            while(length--){
                var index = indexes[length];
                array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
            }
            return array;
        }
        /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */ function safeGet(object, key) {
            if (key === 'constructor' && typeof object[key] === 'function') return;
            if (key == '__proto__') return;
            return object[key];
        }
        /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */ var setData = shortOut(baseSetData);
        /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */ var setTimeout = ctxSetTimeout || function(func, wait) {
            return root.setTimeout(func, wait);
        };
        /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */ var setToString = shortOut(baseSetToString);
        /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */ function setWrapToString(wrapper, reference, bitmask) {
            var source = reference + '';
            return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */ function shortOut(func) {
            var count = 0, lastCalled = 0;
            return function() {
                var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
                lastCalled = stamp;
                if (remaining > 0) {
                    if ((++count) >= HOT_COUNT) return arguments[0];
                } else count = 0;
                return func.apply(undefined, arguments);
            };
        }
        /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */ function shuffleSelf(array, size) {
            var index = -1, length = array.length, lastIndex = length - 1;
            size = size === undefined ? length : size;
            while((++index) < size){
                var rand = baseRandom(index, lastIndex), value = array[rand];
                array[rand] = array[index];
                array[index] = value;
            }
            array.length = size;
            return array;
        }
        /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */ var stringToPath = memoizeCapped(function(string) {
            var result = [];
            if (string.charCodeAt(0) === 46 /* . */ ) result.push('');
            string.replace(rePropName, function(match, number, quote, subString) {
                result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
            });
            return result;
        });
        /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */ function toKey(value) {
            if (typeof value == 'string' || isSymbol(value)) return value;
            var result = value + '';
            return result == '0' && 1 / value == -INFINITY ? '-0' : result;
        }
        /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */ function toSource(func) {
            if (func != null) {
                try {
                    return funcToString.call(func);
                } catch (e) {
                }
                try {
                    return func + '';
                } catch (e) {
                }
            }
            return '';
        }
        /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */ function updateWrapDetails(details, bitmask) {
            arrayEach(wrapFlags, function(pair) {
                var value = '_.' + pair[0];
                if (bitmask & pair[1] && !arrayIncludes(details, value)) details.push(value);
            });
            return details.sort();
        }
        /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */ function wrapperClone(wrapper) {
            if (wrapper instanceof LazyWrapper) return wrapper.clone();
            var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
            result.__actions__ = copyArray(wrapper.__actions__);
            result.__index__ = wrapper.__index__;
            result.__values__ = wrapper.__values__;
            return result;
        }
        /*------------------------------------------------------------------------*/ /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */ function chunk(array, size, guard) {
            if (guard ? isIterateeCall(array, size, guard) : size === undefined) size = 1;
            else size = nativeMax(toInteger(size), 0);
            var length = array == null ? 0 : array.length;
            if (!length || size < 1) return [];
            var index = 0, resIndex = 0, result = Array1(nativeCeil(length / size));
            while(index < length)result[resIndex++] = baseSlice(array, index, index += size);
            return result;
        }
        /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */ function compact(array) {
            var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
            while((++index) < length){
                var value = array[index];
                if (value) result[resIndex++] = value;
            }
            return result;
        }
        /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */ function concat() {
            var length = arguments.length;
            if (!length) return [];
            var args = Array1(length - 1), array = arguments[0], index = length;
            while(index--)args[index - 1] = arguments[index];
            return arrayPush(isArray(array) ? copyArray(array) : [
                array
            ], baseFlatten(args, 1));
        }
        /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */ var difference = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
        });
        /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */ var differenceBy = baseRest(function(array, values) {
            var iteratee = last(values);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
        });
        /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */ var differenceWith = baseRest(function(array, values) {
            var comparator = last(values);
            if (isArrayLikeObject(comparator)) comparator = undefined;
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
        });
        /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */ function drop(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, n < 0 ? 0 : n, length);
        }
        /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */ function dropRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */ function dropRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */ function dropWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */ function fill(array, value, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
                start = 0;
                end = length;
            }
            return baseFill(array, value, start, end);
        }
        /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */ function findIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) index = nativeMax(length + index, 0);
            return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */ function findLastIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = length - 1;
            if (fromIndex !== undefined) {
                index = toInteger(fromIndex);
                index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */ function flatten(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, 1) : [];
        }
        /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */ function flattenDeep(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, INFINITY) : [];
        }
        /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */ function flattenDepth(array, depth) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(array, depth);
        }
        /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */ function fromPairs(pairs) {
            var index = -1, length = pairs == null ? 0 : pairs.length, result = {
            };
            while((++index) < length){
                var pair = pairs[index];
                result[pair[0]] = pair[1];
            }
            return result;
        }
        /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */ function head(array) {
            return array && array.length ? array[0] : undefined;
        }
        /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */ function indexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) index = nativeMax(length + index, 0);
            return baseIndexOf(array, value, index);
        }
        /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */ function initial(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 0, -1) : [];
        }
        /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */ var intersection = baseRest(function(arrays) {
            var mapped = arrayMap(arrays, castArrayLikeObject);
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */ var intersectionBy = baseRest(function(arrays) {
            var iteratee = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            if (iteratee === last(mapped)) iteratee = undefined;
            else mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
        });
        /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */ var intersectionWith = baseRest(function(arrays) {
            var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            comparator = typeof comparator == 'function' ? comparator : undefined;
            if (comparator) mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
        });
        /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */ function join(array, separator) {
            return array == null ? '' : nativeJoin.call(array, separator);
        }
        /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */ function last(array) {
            var length = array == null ? 0 : array.length;
            return length ? array[length - 1] : undefined;
        }
        /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */ function lastIndexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = length;
            if (fromIndex !== undefined) {
                index = toInteger(fromIndex);
                index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */ function nth(array, n) {
            return array && array.length ? baseNth(array, toInteger(n)) : undefined;
        }
        /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */ var pull = baseRest(pullAll);
        /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */ function pullAll(array, values) {
            return array && array.length && values && values.length ? basePullAll(array, values) : array;
        }
        /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */ function pullAllBy(array, values, iteratee) {
            return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
        }
        /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */ function pullAllWith(array, values, comparator) {
            return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
        }
        /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */ var pullAt = flatRest(function(array, indexes) {
            var length = array == null ? 0 : array.length, result = baseAt(array, indexes);
            basePullAt(array, arrayMap(indexes, function(index) {
                return isIndex(index, length) ? +index : index;
            }).sort(compareAscending));
            return result;
        });
        /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */ function remove(array, predicate) {
            var result = [];
            if (!(array && array.length)) return result;
            var index = -1, indexes = [], length = array.length;
            predicate = getIteratee(predicate, 3);
            while((++index) < length){
                var value = array[index];
                if (predicate(value, index, array)) {
                    result.push(value);
                    indexes.push(index);
                }
            }
            basePullAt(array, indexes);
            return result;
        }
        /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */ function reverse(array) {
            return array == null ? array : nativeReverse.call(array);
        }
        /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */ function slice(array, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
                start = 0;
                end = length;
            } else {
                start = start == null ? 0 : toInteger(start);
                end = end === undefined ? length : toInteger(end);
            }
            return baseSlice(array, start, end);
        }
        /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */ function sortedIndex(array, value) {
            return baseSortedIndex(array, value);
        }
        /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */ function sortedIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
        }
        /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */ function sortedIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
                var index = baseSortedIndex(array, value);
                if (index < length && eq(array[index], value)) return index;
            }
            return -1;
        }
        /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */ function sortedLastIndex(array, value) {
            return baseSortedIndex(array, value, true);
        }
        /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */ function sortedLastIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
        }
        /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */ function sortedLastIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
                var index = baseSortedIndex(array, value, true) - 1;
                if (eq(array[index], value)) return index;
            }
            return -1;
        }
        /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */ function sortedUniq(array) {
            return array && array.length ? baseSortedUniq(array) : [];
        }
        /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */ function sortedUniqBy(array, iteratee) {
            return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
        }
        /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */ function tail(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 1, length) : [];
        }
        /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */ function take(array, n, guard) {
            if (!(array && array.length)) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */ function takeRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, n < 0 ? 0 : n, length);
        }
        /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */ function takeRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */ function takeWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */ var union = baseRest(function(arrays) {
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */ var unionBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
        });
        /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */ var unionWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == 'function' ? comparator : undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
        });
        /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */ function uniq(array) {
            return array && array.length ? baseUniq(array) : [];
        }
        /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */ function uniqBy(array, iteratee) {
            return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
        }
        /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */ function uniqWith(array, comparator) {
            comparator = typeof comparator == 'function' ? comparator : undefined;
            return array && array.length ? baseUniq(array, undefined, comparator) : [];
        }
        /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */ function unzip(array) {
            if (!(array && array.length)) return [];
            var length = 0;
            array = arrayFilter(array, function(group) {
                if (isArrayLikeObject(group)) {
                    length = nativeMax(group.length, length);
                    return true;
                }
            });
            return baseTimes(length, function(index) {
                return arrayMap(array, baseProperty(index));
            });
        }
        /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */ function unzipWith(array, iteratee) {
            if (!(array && array.length)) return [];
            var result = unzip(array);
            if (iteratee == null) return result;
            return arrayMap(result, function(group) {
                return apply(iteratee, undefined, group);
            });
        }
        /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */ var without = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, values) : [];
        });
        /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */ var xor = baseRest(function(arrays) {
            return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */ var xorBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
        });
        /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */ var xorWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == 'function' ? comparator : undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
        });
        /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */ var zip = baseRest(unzip);
        /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */ function zipObject(props, values) {
            return baseZipObject(props || [], values || [], assignValue);
        }
        /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */ function zipObjectDeep(props, values) {
            return baseZipObject(props || [], values || [], baseSet);
        }
        /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */ var zipWith = baseRest(function(arrays) {
            var length = arrays.length, iteratee = length > 1 ? arrays[length - 1] : undefined;
            iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
            return unzipWith(arrays, iteratee);
        });
        /*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */ function chain(value) {
            var result = lodash(value);
            result.__chain__ = true;
            return result;
        }
        /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */ function tap(value, interceptor) {
            interceptor(value);
            return value;
        }
        /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */ function thru(value, interceptor) {
            return interceptor(value);
        }
        /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */ var wrapperAt = flatRest(function(paths) {
            var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
                return baseAt(object, paths);
            };
            if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) return this.thru(interceptor);
            value = value.slice(start, +start + (length ? 1 : 0));
            value.__actions__.push({
                'func': thru,
                'args': [
                    interceptor
                ],
                'thisArg': undefined
            });
            return new LodashWrapper(value, this.__chain__).thru(function(array) {
                if (length && !array.length) array.push(undefined);
                return array;
            });
        });
        /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */ function wrapperChain() {
            return chain(this);
        }
        /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */ function wrapperCommit() {
            return new LodashWrapper(this.value(), this.__chain__);
        }
        /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */ function wrapperNext() {
            if (this.__values__ === undefined) this.__values__ = toArray(this.value());
            var done = this.__index__ >= this.__values__.length, value = done ? undefined : this.__values__[this.__index__++];
            return {
                'done': done,
                'value': value
            };
        }
        /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */ function wrapperToIterator() {
            return this;
        }
        /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */ function wrapperPlant(value) {
            var result, parent1 = this;
            while(parent1 instanceof baseLodash){
                var clone = wrapperClone(parent1);
                clone.__index__ = 0;
                clone.__values__ = undefined;
                if (result) previous.__wrapped__ = clone;
                else result = clone;
                var previous = clone;
                parent1 = parent1.__wrapped__;
            }
            previous.__wrapped__ = value;
            return result;
        }
        /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */ function wrapperReverse() {
            var value = this.__wrapped__;
            if (value instanceof LazyWrapper) {
                var wrapped = value;
                if (this.__actions__.length) wrapped = new LazyWrapper(this);
                wrapped = wrapped.reverse();
                wrapped.__actions__.push({
                    'func': thru,
                    'args': [
                        reverse
                    ],
                    'thisArg': undefined
                });
                return new LodashWrapper(wrapped, this.__chain__);
            }
            return this.thru(reverse);
        }
        /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */ function wrapperValue() {
            return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        /*------------------------------------------------------------------------*/ /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */ var countBy = createAggregator(function(result, value, key) {
            if (hasOwnProperty.call(result, key)) ++result[key];
            else baseAssignValue(result, key, 1);
        });
        /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */ function every(collection, predicate, guard) {
            var func = isArray(collection) ? arrayEvery : baseEvery;
            if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */ function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */ var find = createFind(findIndex);
        /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */ var findLast = createFind(findLastIndex);
        /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */ function flatMap(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), 1);
        }
        /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */ function flatMapDeep(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), INFINITY);
        }
        /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */ function flatMapDepth(collection, iteratee, depth) {
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(map(collection, iteratee), depth);
        }
        /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */ function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */ function forEachRight(collection, iteratee) {
            var func = isArray(collection) ? arrayEachRight : baseEachRight;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */ var groupBy = createAggregator(function(result, value, key) {
            if (hasOwnProperty.call(result, key)) result[key].push(value);
            else baseAssignValue(result, key, [
                value
            ]);
        });
        /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */ function includes(collection, value, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
            var length = collection.length;
            if (fromIndex < 0) fromIndex = nativeMax(length + fromIndex, 0);
            return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */ var invokeMap = baseRest(function(collection, path, args) {
            var index = -1, isFunc = typeof path == 'function', result = isArrayLike(collection) ? Array1(collection.length) : [];
            baseEach(collection, function(value) {
                result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
            });
            return result;
        });
        /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */ var keyBy = createAggregator(function(result, value, key) {
            baseAssignValue(result, key, value);
        });
        /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */ function map(collection, iteratee) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */ function orderBy(collection, iteratees, orders, guard) {
            if (collection == null) return [];
            if (!isArray(iteratees)) iteratees = iteratees == null ? [] : [
                iteratees
            ];
            orders = guard ? undefined : orders;
            if (!isArray(orders)) orders = orders == null ? [] : [
                orders
            ];
            return baseOrderBy(collection, iteratees, orders);
        }
        /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */ var partition = createAggregator(function(result, value, key) {
            result[key ? 0 : 1].push(value);
        }, function() {
            return [
                [],
                []
            ];
        });
        /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */ function reduce(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
        }
        /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */ function reduceRight(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
        }
        /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */ function reject(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, negate(getIteratee(predicate, 3)));
        }
        /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */ function sample(collection) {
            var func = isArray(collection) ? arraySample : baseSample;
            return func(collection);
        }
        /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */ function sampleSize(collection, n, guard) {
            if (guard ? isIterateeCall(collection, n, guard) : n === undefined) n = 1;
            else n = toInteger(n);
            var func = isArray(collection) ? arraySampleSize : baseSampleSize;
            return func(collection, n);
        }
        /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */ function shuffle(collection) {
            var func = isArray(collection) ? arrayShuffle : baseShuffle;
            return func(collection);
        }
        /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */ function size(collection) {
            if (collection == null) return 0;
            if (isArrayLike(collection)) return isString(collection) ? stringSize(collection) : collection.length;
            var tag = getTag(collection);
            if (tag == mapTag || tag == setTag) return collection.size;
            return baseKeys(collection).length;
        }
        /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */ function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome;
            if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */ var sortBy = baseRest(function(collection, iteratees) {
            if (collection == null) return [];
            var length = iteratees.length;
            if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) iteratees = [];
            else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) iteratees = [
                iteratees[0]
            ];
            return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        /*------------------------------------------------------------------------*/ /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */ var now = ctxNow || function() {
            return root.Date.now();
        };
        /*------------------------------------------------------------------------*/ /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */ function after(n, func) {
            if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
                if ((--n) < 1) return func.apply(this, arguments);
            };
        }
        /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */ function ary(func, n, guard) {
            n = guard ? undefined : n;
            n = func && n == null ? func.length : n;
            return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
        }
        /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */ function before(n, func) {
            var result;
            if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
                if ((--n) > 0) result = func.apply(this, arguments);
                if (n <= 1) func = undefined;
                return result;
            };
        }
        /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */ var bind = baseRest(function(func, thisArg, partials) {
            var bitmask = WRAP_BIND_FLAG;
            if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bind));
                bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(func, bitmask, thisArg, partials, holders);
        });
        /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */ var bindKey = baseRest(function(object, key, partials) {
            var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
            if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bindKey));
                bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(key, bitmask, object, partials, holders);
        });
        /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */ function curry(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curry.placeholder;
            return result;
        }
        /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */ function curryRight(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curryRight.placeholder;
            return result;
        }
        /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */ function debounce(func, wait, options) {
            var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
                leading = !!options.leading;
                maxing = 'maxWait' in options;
                maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                trailing = 'trailing' in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
                var args = lastArgs, thisArg = lastThis;
                lastArgs = lastThis = undefined;
                lastInvokeTime = time;
                result = func.apply(thisArg, args);
                return result;
            }
            function leadingEdge(time) {
                // Reset any `maxWait` timer.
                lastInvokeTime = time;
                // Start the timer for the trailing edge.
                timerId = setTimeout(timerExpired, wait);
                // Invoke the leading edge.
                return leading ? invokeFunc(time) : result;
            }
            function remainingWait(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                // Either this is the first call, activity has stopped and we're at the
                // trailing edge, the system time has gone backwards and we're treating
                // it as the trailing edge, or we've hit the `maxWait` limit.
                return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
                var time = now();
                if (shouldInvoke(time)) return trailingEdge(time);
                // Restart the timer.
                timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
                timerId = undefined;
                // Only invoke if we have `lastArgs` which means `func` has been
                // debounced at least once.
                if (trailing && lastArgs) return invokeFunc(time);
                lastArgs = lastThis = undefined;
                return result;
            }
            function cancel() {
                if (timerId !== undefined) clearTimeout(timerId);
                lastInvokeTime = 0;
                lastArgs = lastCallTime = lastThis = timerId = undefined;
            }
            function flush() {
                return timerId === undefined ? result : trailingEdge(now());
            }
            function debounced() {
                var time = now(), isInvoking = shouldInvoke(time);
                lastArgs = arguments;
                lastThis = this;
                lastCallTime = time;
                if (isInvoking) {
                    if (timerId === undefined) return leadingEdge(lastCallTime);
                    if (maxing) {
                        // Handle invocations in a tight loop.
                        clearTimeout(timerId);
                        timerId = setTimeout(timerExpired, wait);
                        return invokeFunc(lastCallTime);
                    }
                }
                if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
                return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
        }
        /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */ var defer = baseRest(function(func, args) {
            return baseDelay(func, 1, args);
        });
        /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */ var delay = baseRest(function(func, wait, args) {
            return baseDelay(func, toNumber(wait) || 0, args);
        });
        /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */ function flip(func) {
            return createWrap(func, WRAP_FLIP_FLAG);
        }
        /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */ function memoize(func, resolver) {
            if (typeof func != 'function' || resolver != null && typeof resolver != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            var memoized = function() {
                var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
                if (cache.has(key)) return cache.get(key);
                var result = func.apply(this, args);
                memoized.cache = cache.set(key, result) || cache;
                return result;
            };
            memoized.cache = new (memoize.Cache || MapCache);
            return memoized;
        }
        // Expose `MapCache`.
        memoize.Cache = MapCache;
        /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */ function negate(predicate) {
            if (typeof predicate != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            return function() {
                var args = arguments;
                switch(args.length){
                    case 0:
                        return !predicate.call(this);
                    case 1:
                        return !predicate.call(this, args[0]);
                    case 2:
                        return !predicate.call(this, args[0], args[1]);
                    case 3:
                        return !predicate.call(this, args[0], args[1], args[2]);
                }
                return !predicate.apply(this, args);
            };
        }
        /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */ function once(func) {
            return before(2, func);
        }
        /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */ var overArgs = castRest(function(func, transforms) {
            transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
            var funcsLength = transforms.length;
            return baseRest(function(args) {
                var index = -1, length = nativeMin(args.length, funcsLength);
                while((++index) < length)args[index] = transforms[index].call(this, args[index]);
                return apply(func, this, args);
            });
        });
        /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */ var partial = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partial));
            return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
        });
        /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */ var partialRight = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partialRight));
            return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
        });
        /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */ var rearg = flatRest(function(func, indexes) {
            return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
        });
        /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */ function rest(func, start) {
            if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            start = start === undefined ? start : toInteger(start);
            return baseRest(func, start);
        }
        /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */ function spread(func, start) {
            if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            start = start == null ? 0 : nativeMax(toInteger(start), 0);
            return baseRest(function(args) {
                var array = args[start], otherArgs = castSlice(args, 0, start);
                if (array) arrayPush(otherArgs, array);
                return apply(func, this, otherArgs);
            });
        }
        /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */ function throttle(func, wait, options) {
            var leading = true, trailing = true;
            if (typeof func != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
            if (isObject(options)) {
                leading = 'leading' in options ? !!options.leading : leading;
                trailing = 'trailing' in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
                'leading': leading,
                'maxWait': wait,
                'trailing': trailing
            });
        }
        /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */ function unary(func) {
            return ary(func, 1);
        }
        /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */ function wrap(value, wrapper) {
            return partial(castFunction(wrapper), value);
        }
        /*------------------------------------------------------------------------*/ /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */ function castArray() {
            if (!arguments.length) return [];
            var value = arguments[0];
            return isArray(value) ? value : [
                value
            ];
        }
        /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */ function clone(value) {
            return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */ function cloneWith(value, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */ function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */ function cloneDeepWith(value, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */ function conformsTo(object, source) {
            return source == null || baseConformsTo(object, source, keys(source));
        }
        /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */ function eq(value, other) {
            return value === other || value !== value && other !== other;
        }
        /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */ var gt = createRelationalOperation(baseGt);
        /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */ var gte = createRelationalOperation(function(value, other) {
            return value >= other;
        });
        /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */ var isArguments = baseIsArguments(function() {
            return arguments;
        }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
        };
        /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */ var isArray = Array1.isArray;
        /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */ var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */ function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
        }
        /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */ function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
        }
        /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */ function isBoolean(value) {
            return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */ var isBuffer = nativeIsBuffer || stubFalse;
        /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */ var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */ function isElement(value) {
            return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */ function isEmpty(value) {
            if (value == null) return true;
            if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) return !value.length;
            var tag = getTag(value);
            if (tag == mapTag || tag == setTag) return !value.size;
            if (isPrototype(value)) return !baseKeys(value).length;
            for(var key in value){
                if (hasOwnProperty.call(value, key)) return false;
            }
            return true;
        }
        /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */ function isEqual(value, other) {
            return baseIsEqual(value, other);
        }
        /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */ function isEqualWith(value, other, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            var result = customizer ? customizer(value, other) : undefined;
            return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
        }
        /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */ function isError(value) {
            if (!isObjectLike(value)) return false;
            var tag = baseGetTag(value);
            return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
        }
        /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */ function isFinite(value) {
            return typeof value == 'number' && nativeIsFinite(value);
        }
        /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */ function isFunction(value) {
            if (!isObject(value)) return false;
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */ function isInteger(value) {
            return typeof value == 'number' && value == toInteger(value);
        }
        /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */ function isLength(value) {
            return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */ function isObject(value) {
            var type = typeof value;
            return value != null && (type == 'object' || type == 'function');
        }
        /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */ function isObjectLike(value) {
            return value != null && typeof value == 'object';
        }
        /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */ var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */ function isMatch(object, source) {
            return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */ function isMatchWith(object, source, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */ function isNaN(value) {
            // An `NaN` primitive is the only value that is not equal to itself.
            // Perform the `toStringTag` check first to avoid errors with some
            // ActiveX objects in IE.
            return isNumber(value) && value != +value;
        }
        /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */ function isNative(value) {
            if (isMaskable(value)) throw new Error1(CORE_ERROR_TEXT);
            return baseIsNative(value);
        }
        /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */ function isNull(value) {
            return value === null;
        }
        /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */ function isNil(value) {
            return value == null;
        }
        /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */ function isNumber(value) {
            return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */ function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
            var proto = getPrototype(value);
            if (proto === null) return true;
            var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
            return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */ var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */ function isSafeInteger(value) {
            return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */ var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */ function isString(value) {
            return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */ function isSymbol(value) {
            return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */ function isUndefined(value) {
            return value === undefined;
        }
        /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */ function isWeakMap(value) {
            return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */ function isWeakSet(value) {
            return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */ var lt = createRelationalOperation(baseLt);
        /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */ var lte = createRelationalOperation(function(value, other) {
            return value <= other;
        });
        /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */ function toArray(value) {
            if (!value) return [];
            if (isArrayLike(value)) return isString(value) ? stringToArray(value) : copyArray(value);
            if (symIterator && value[symIterator]) return iteratorToArray(value[symIterator]());
            var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
            return func(value);
        }
        /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */ function toFinite(value) {
            if (!value) return value === 0 ? value : 0;
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
                var sign = value < 0 ? -1 : 1;
                return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
        }
        /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */ function toInteger(value) {
            var result = toFinite(value), remainder = result % 1;
            return result === result ? remainder ? result - remainder : result : 0;
        }
        /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */ function toLength(value) {
            return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */ function toNumber(value) {
            if (typeof value == 'number') return value;
            if (isSymbol(value)) return NAN;
            if (isObject(value)) {
                var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
                value = isObject(other) ? other + '' : other;
            }
            if (typeof value != 'string') return value === 0 ? value : +value;
            value = baseTrim(value);
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */ function toPlainObject(value) {
            return copyObject(value, keysIn(value));
        }
        /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */ function toSafeInteger(value) {
            return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */ function toString(value) {
            return value == null ? '' : baseToString(value);
        }
        /*------------------------------------------------------------------------*/ /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */ var assign = createAssigner(function(object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
                copyObject(source, keys(source), object);
                return;
            }
            for(var key in source)if (hasOwnProperty.call(source, key)) assignValue(object, key, source[key]);
        });
        /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */ var assignIn = createAssigner(function(object, source) {
            copyObject(source, keysIn(source), object);
        });
        /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keysIn(source), object, customizer);
        });
        /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keys(source), object, customizer);
        });
        /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */ var at = flatRest(baseAt);
        /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */ function create(prototype, properties) {
            var result = baseCreate(prototype);
            return properties == null ? result : baseAssign(result, properties);
        }
        /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var defaults = baseRest(function(object, sources) {
            object = Object1(object);
            var index = -1;
            var length = sources.length;
            var guard = length > 2 ? sources[2] : undefined;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) length = 1;
            while((++index) < length){
                var source = sources[index];
                var props = keysIn(source);
                var propsIndex = -1;
                var propsLength = props.length;
                while((++propsIndex) < propsLength){
                    var key = props[propsIndex];
                    var value = object[key];
                    if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) object[key] = source[key];
                }
            }
            return object;
        });
        /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */ var defaultsDeep = baseRest(function(args) {
            args.push(undefined, customDefaultsMerge);
            return apply(mergeWith, undefined, args);
        });
        /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */ function findKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */ function findLastKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */ function forIn(object, iteratee) {
            return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
        }
        /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */ function forInRight(object, iteratee) {
            return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
        }
        /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */ function forOwn(object, iteratee) {
            return object && baseForOwn(object, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */ function forOwnRight(object, iteratee) {
            return object && baseForOwnRight(object, getIteratee(iteratee, 3));
        }
        /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */ function functions(object) {
            return object == null ? [] : baseFunctions(object, keys(object));
        }
        /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */ function functionsIn(object) {
            return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */ function get(object, path, defaultValue) {
            var result = object == null ? undefined : baseGet(object, path);
            return result === undefined ? defaultValue : result;
        }
        /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */ function has(object, path) {
            return object != null && hasPath(object, path, baseHas);
        }
        /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */ function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
        }
        /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */ var invert = createInverter(function(result, value, key) {
            if (value != null && typeof value.toString != 'function') value = nativeObjectToString.call(value);
            result[value] = key;
        }, constant(identity));
        /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */ var invertBy = createInverter(function(result, value, key) {
            if (value != null && typeof value.toString != 'function') value = nativeObjectToString.call(value);
            if (hasOwnProperty.call(result, value)) result[value].push(key);
            else result[value] = [
                key
            ];
        }, getIteratee);
        /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */ var invoke = baseRest(baseInvoke);
        /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */ function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */ function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */ function mapKeys(object, iteratee) {
            var result = {
            };
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object1) {
                baseAssignValue(result, iteratee(value, key, object1), value);
            });
            return result;
        }
        /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */ function mapValues(object, iteratee) {
            var result = {
            };
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object1) {
                baseAssignValue(result, key, iteratee(value, key, object1));
            });
            return result;
        }
        /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */ var merge = createAssigner(function(object, source, srcIndex) {
            baseMerge(object, source, srcIndex);
        });
        /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */ var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
            baseMerge(object, source, srcIndex, customizer);
        });
        /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */ var omit = flatRest(function(object, paths) {
            var result = {
            };
            if (object == null) return result;
            var isDeep = false;
            paths = arrayMap(paths, function(path) {
                path = castPath(path, object);
                isDeep || (isDeep = path.length > 1);
                return path;
            });
            copyObject(object, getAllKeysIn(object), result);
            if (isDeep) result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
            var length = paths.length;
            while(length--)baseUnset(result, paths[length]);
            return result;
        });
        /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */ function omitBy(object, predicate) {
            return pickBy(object, negate(getIteratee(predicate)));
        }
        /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */ var pick = flatRest(function(object, paths) {
            return object == null ? {
            } : basePick(object, paths);
        });
        /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */ function pickBy(object, predicate) {
            if (object == null) return {
            };
            var props = arrayMap(getAllKeysIn(object), function(prop) {
                return [
                    prop
                ];
            });
            predicate = getIteratee(predicate);
            return basePickBy(object, props, function(value, path) {
                return predicate(value, path[0]);
            });
        }
        /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */ function result(object, path, defaultValue) {
            path = castPath(path, object);
            var index = -1, length = path.length;
            // Ensure the loop is entered when path is empty.
            if (!length) {
                length = 1;
                object = undefined;
            }
            while((++index) < length){
                var value = object == null ? undefined : object[toKey(path[index])];
                if (value === undefined) {
                    index = length;
                    value = defaultValue;
                }
                object = isFunction(value) ? value.call(object) : value;
            }
            return object;
        }
        /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */ function set(object, path, value) {
            return object == null ? object : baseSet(object, path, value);
        }
        /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */ function setWith(object, path, value, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return object == null ? object : baseSet(object, path, value, customizer);
        }
        /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */ var toPairs = createToPairs(keys);
        /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */ var toPairsIn = createToPairs(keysIn);
        /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */ function transform(object, iteratee, accumulator) {
            var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
            iteratee = getIteratee(iteratee, 4);
            if (accumulator == null) {
                var Ctor = object && object.constructor;
                if (isArrLike) accumulator = isArr ? new Ctor : [];
                else if (isObject(object)) accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {
                };
                else accumulator = {
                };
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object1) {
                return iteratee(accumulator, value, index, object1);
            });
            return accumulator;
        }
        /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */ function unset(object, path) {
            return object == null ? true : baseUnset(object, path);
        }
        /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */ function update(object, path, updater) {
            return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */ function updateWith(object, path, updater, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */ function values(object) {
            return object == null ? [] : baseValues(object, keys(object));
        }
        /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */ function valuesIn(object) {
            return object == null ? [] : baseValues(object, keysIn(object));
        }
        /*------------------------------------------------------------------------*/ /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */ function clamp(number, lower, upper) {
            if (upper === undefined) {
                upper = lower;
                lower = undefined;
            }
            if (upper !== undefined) {
                upper = toNumber(upper);
                upper = upper === upper ? upper : 0;
            }
            if (lower !== undefined) {
                lower = toNumber(lower);
                lower = lower === lower ? lower : 0;
            }
            return baseClamp(toNumber(number), lower, upper);
        }
        /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */ function inRange(number, start, end) {
            start = toFinite(start);
            if (end === undefined) {
                end = start;
                start = 0;
            } else end = toFinite(end);
            number = toNumber(number);
            return baseInRange(number, start, end);
        }
        /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */ function random(lower, upper, floating) {
            if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) upper = floating = undefined;
            if (floating === undefined) {
                if (typeof upper == 'boolean') {
                    floating = upper;
                    upper = undefined;
                } else if (typeof lower == 'boolean') {
                    floating = lower;
                    lower = undefined;
                }
            }
            if (lower === undefined && upper === undefined) {
                lower = 0;
                upper = 1;
            } else {
                lower = toFinite(lower);
                if (upper === undefined) {
                    upper = lower;
                    lower = 0;
                } else upper = toFinite(upper);
            }
            if (lower > upper) {
                var temp = lower;
                lower = upper;
                upper = temp;
            }
            if (floating || lower % 1 || upper % 1) {
                var rand = nativeRandom();
                return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
            }
            return baseRandom(lower, upper);
        }
        /*------------------------------------------------------------------------*/ /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */ var camelCase = createCompounder(function(result1, word, index) {
            word = word.toLowerCase();
            return result1 + (index ? capitalize(word) : word);
        });
        /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */ function capitalize(string) {
            return upperFirst(toString(string).toLowerCase());
        }
        /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */ function deburr(string) {
            string = toString(string);
            return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
        }
        /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */ function endsWith(string, target, position) {
            string = toString(string);
            target = baseToString(target);
            var length = string.length;
            position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
            var end = position;
            position -= target.length;
            return position >= 0 && string.slice(position, end) == target;
        }
        /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */ function escape(string) {
            string = toString(string);
            return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */ function escapeRegExp(string) {
            string = toString(string);
            return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
        }
        /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */ var kebabCase = createCompounder(function(result1, word, index) {
            return result1 + (index ? '-' : '') + word.toLowerCase();
        });
        /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */ var lowerCase = createCompounder(function(result1, word, index) {
            return result1 + (index ? ' ' : '') + word.toLowerCase();
        });
        /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */ var lowerFirst = createCaseFirst('toLowerCase');
        /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */ function pad(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            if (!length || strLength >= length) return string;
            var mid = (length - strLength) / 2;
            return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */ function padEnd(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */ function padStart(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */ function parseInt(string, radix, guard) {
            if (guard || radix == null) radix = 0;
            else if (radix) radix = +radix;
            return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
        }
        /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */ function repeat(string, n, guard) {
            if (guard ? isIterateeCall(string, n, guard) : n === undefined) n = 1;
            else n = toInteger(n);
            return baseRepeat(toString(string), n);
        }
        /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */ function replace() {
            var args = arguments, string = toString(args[0]);
            return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */ var snakeCase = createCompounder(function(result1, word, index) {
            return result1 + (index ? '_' : '') + word.toLowerCase();
        });
        /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */ function split(string, separator, limit) {
            if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) separator = limit = undefined;
            limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
            if (!limit) return [];
            string = toString(string);
            if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
                separator = baseToString(separator);
                if (!separator && hasUnicode(string)) return castSlice(stringToArray(string), 0, limit);
            }
            return string.split(separator, limit);
        }
        /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */ var startCase = createCompounder(function(result1, word, index) {
            return result1 + (index ? ' ' : '') + upperFirst(word);
        });
        /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */ function startsWith(string, target, position) {
            string = toString(string);
            position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
            target = baseToString(target);
            return string.slice(position, position + target.length) == target;
        }
        /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */ function template(string, options, guard) {
            // Based on John Resig's `tmpl` implementation
            // (http://ejohn.org/blog/javascript-micro-templating/)
            // and Laura Doktorova's doT.js (https://github.com/olado/doT).
            var settings = lodash.templateSettings;
            if (guard && isIterateeCall(string, options, guard)) options = undefined;
            string = toString(string);
            options = assignInWith({
            }, options, settings, customDefaultsAssignIn);
            var imports = assignInWith({
            }, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
            var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
            // Compile the regexp to match each delimiter.
            var reDelimiters = RegExp1((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
            // Use a sourceURL for easier debugging.
            // The sourceURL gets injected into the source that's eval-ed, so be careful
            // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
            // and escape the comment, thus injecting code that gets evaled.
            var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
            string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                interpolateValue || (interpolateValue = esTemplateValue);
                // Escape characters that can't be included in string literals.
                source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
                // Replace delimiters with snippets.
                if (escapeValue) {
                    isEscaping = true;
                    source += "' +\n__e(" + escapeValue + ") +\n'";
                }
                if (evaluateValue) {
                    isEvaluating = true;
                    source += "';\n" + evaluateValue + ";\n__p += '";
                }
                if (interpolateValue) source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
                index = offset + match.length;
                // The JS engine embedded in Adobe products needs `match` returned in
                // order to produce the correct `offset` value.
                return match;
            });
            source += "';\n";
            // If `variable` is not specified wrap a with-statement around the generated
            // code to add the data object to the top of the scope chain.
            var variable = hasOwnProperty.call(options, 'variable') && options.variable;
            if (!variable) source = 'with (obj) {\n' + source + '\n}\n';
            else if (reForbiddenIdentifierChars.test(variable)) throw new Error1(INVALID_TEMPL_VAR_ERROR_TEXT);
            // Cleanup code by stripping empty strings.
            source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
            // Frame code as the function body.
            source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
            var result1 = attempt(function() {
                return Function1(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
            });
            // Provide the compiled function's source by its `toString` method or
            // the `source` property as a convenience for inlining compiled templates.
            result1.source = source;
            if (isError(result1)) throw result1;
            return result1;
        }
        /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */ function toLower(value) {
            return toString(value).toLowerCase();
        }
        /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */ function toUpper(value) {
            return toString(value).toUpperCase();
        }
        /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */ function trim(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return baseTrim(string);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
            return castSlice(strSymbols, start, end).join('');
        }
        /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */ function trimEnd(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.slice(0, trimmedEndIndex(string) + 1);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
            return castSlice(strSymbols, 0, end).join('');
        }
        /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */ function trimStart(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.replace(reTrimStart, '');
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
            return castSlice(strSymbols, start).join('');
        }
        /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */ function truncate(string, options) {
            var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
            if (isObject(options)) {
                var separator = 'separator' in options ? options.separator : separator;
                length = 'length' in options ? toInteger(options.length) : length;
                omission = 'omission' in options ? baseToString(options.omission) : omission;
            }
            string = toString(string);
            var strLength = string.length;
            if (hasUnicode(string)) {
                var strSymbols = stringToArray(string);
                strLength = strSymbols.length;
            }
            if (length >= strLength) return string;
            var end = length - stringSize(omission);
            if (end < 1) return omission;
            var result1 = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);
            if (separator === undefined) return result1 + omission;
            if (strSymbols) end += result1.length - end;
            if (isRegExp(separator)) {
                if (string.slice(end).search(separator)) {
                    var match, substring = result1;
                    if (!separator.global) separator = RegExp1(separator.source, toString(reFlags.exec(separator)) + 'g');
                    separator.lastIndex = 0;
                    while(match = separator.exec(substring))var newEnd = match.index;
                    result1 = result1.slice(0, newEnd === undefined ? end : newEnd);
                }
            } else if (string.indexOf(baseToString(separator), end) != end) {
                var index = result1.lastIndexOf(separator);
                if (index > -1) result1 = result1.slice(0, index);
            }
            return result1 + omission;
        }
        /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */ function unescape(string) {
            string = toString(string);
            return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */ var upperCase = createCompounder(function(result1, word, index) {
            return result1 + (index ? ' ' : '') + word.toUpperCase();
        });
        /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */ var upperFirst = createCaseFirst('toUpperCase');
        /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */ function words(string, pattern, guard) {
            string = toString(string);
            pattern = guard ? undefined : pattern;
            if (pattern === undefined) return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
            return string.match(pattern) || [];
        }
        /*------------------------------------------------------------------------*/ /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */ var attempt = baseRest(function(func, args) {
            try {
                return apply(func, undefined, args);
            } catch (e) {
                return isError(e) ? e : new Error1(e);
            }
        });
        /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */ var bindAll = flatRest(function(object, methodNames) {
            arrayEach(methodNames, function(key) {
                key = toKey(key);
                baseAssignValue(object, key, bind(object[key], object));
            });
            return object;
        });
        /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */ function cond(pairs) {
            var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
            pairs = !length ? [] : arrayMap(pairs, function(pair) {
                if (typeof pair[1] != 'function') throw new TypeError1(FUNC_ERROR_TEXT);
                return [
                    toIteratee(pair[0]),
                    pair[1]
                ];
            });
            return baseRest(function(args) {
                var index = -1;
                while((++index) < length){
                    var pair = pairs[index];
                    if (apply(pair[0], this, args)) return apply(pair[1], this, args);
                }
            });
        }
        /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */ function conforms(source) {
            return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */ function constant(value) {
            return function() {
                return value;
            };
        }
        /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */ function defaultTo(value, defaultValue) {
            return value == null || value !== value ? defaultValue : value;
        }
        /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */ var flow = createFlow();
        /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */ var flowRight = createFlow(true);
        /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */ function identity(value) {
            return value;
        }
        /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */ function iteratee(func) {
            return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */ function matches(source) {
            return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */ function matchesProperty(path, srcValue) {
            return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */ var method = baseRest(function(path, args) {
            return function(object) {
                return baseInvoke(object, path, args);
            };
        });
        /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */ var methodOf = baseRest(function(object, args) {
            return function(path) {
                return baseInvoke(object, path, args);
            };
        });
        /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */ function mixin(object, source, options) {
            var props = keys(source), methodNames = baseFunctions(source, props);
            if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
                options = source;
                source = object;
                object = this;
                methodNames = baseFunctions(source, keys(source));
            }
            var chain1 = !(isObject(options) && 'chain' in options) || !!options.chain, isFunc = isFunction(object);
            arrayEach(methodNames, function(methodName) {
                var func = source[methodName];
                object[methodName] = func;
                if (isFunc) object.prototype[methodName] = function() {
                    var chainAll = this.__chain__;
                    if (chain1 || chainAll) {
                        var result1 = object(this.__wrapped__), actions = result1.__actions__ = copyArray(this.__actions__);
                        actions.push({
                            'func': func,
                            'args': arguments,
                            'thisArg': object
                        });
                        result1.__chain__ = chainAll;
                        return result1;
                    }
                    return func.apply(object, arrayPush([
                        this.value()
                    ], arguments));
                };
            });
            return object;
        }
        /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */ function noConflict() {
            if (root._ === this) root._ = oldDash;
            return this;
        }
        /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */ function noop() {
        // No operation performed.
        }
        /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */ function nthArg(n) {
            n = toInteger(n);
            return baseRest(function(args) {
                return baseNth(args, n);
            });
        }
        /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */ var over = createOver(arrayMap);
        /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */ var overEvery = createOver(arrayEvery);
        /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */ var overSome = createOver(arraySome);
        /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */ function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */ function propertyOf(object) {
            return function(path) {
                return object == null ? undefined : baseGet(object, path);
            };
        }
        /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */ var range = createRange();
        /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */ var rangeRight = createRange(true);
        /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */ function stubArray() {
            return [];
        }
        /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */ function stubFalse() {
            return false;
        }
        /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */ function stubObject() {
            return {
            };
        }
        /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */ function stubString() {
            return '';
        }
        /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */ function stubTrue() {
            return true;
        }
        /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */ function times(n, iteratee1) {
            n = toInteger(n);
            if (n < 1 || n > MAX_SAFE_INTEGER) return [];
            var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
            iteratee1 = getIteratee(iteratee1);
            n -= MAX_ARRAY_LENGTH;
            var result2 = baseTimes(length, iteratee1);
            while((++index) < n)iteratee1(index);
            return result2;
        }
        /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */ function toPath(value) {
            if (isArray(value)) return arrayMap(value, toKey);
            return isSymbol(value) ? [
                value
            ] : copyArray(stringToPath(toString(value)));
        }
        /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */ function uniqueId(prefix) {
            var id = ++idCounter;
            return toString(prefix) + id;
        }
        /*------------------------------------------------------------------------*/ /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */ var add = createMathOperation(function(augend, addend) {
            return augend + addend;
        }, 0);
        /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */ var ceil = createRound('ceil');
        /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */ var divide = createMathOperation(function(dividend, divisor) {
            return dividend / divisor;
        }, 1);
        /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */ var floor = createRound('floor');
        /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */ function max(array) {
            return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
        }
        /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */ function maxBy(array, iteratee1) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee1, 2), baseGt) : undefined;
        }
        /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */ function mean(array) {
            return baseMean(array, identity);
        }
        /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */ function meanBy(array, iteratee1) {
            return baseMean(array, getIteratee(iteratee1, 2));
        }
        /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */ function min(array) {
            return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
        }
        /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */ function minBy(array, iteratee1) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee1, 2), baseLt) : undefined;
        }
        /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */ var multiply = createMathOperation(function(multiplier, multiplicand) {
            return multiplier * multiplicand;
        }, 1);
        /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */ var round = createRound('round');
        /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */ var subtract = createMathOperation(function(minuend, subtrahend) {
            return minuend - subtrahend;
        }, 0);
        /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */ function sum(array) {
            return array && array.length ? baseSum(array, identity) : 0;
        }
        /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */ function sumBy(array, iteratee1) {
            return array && array.length ? baseSum(array, getIteratee(iteratee1, 2)) : 0;
        }
        /*------------------------------------------------------------------------*/ // Add methods that return wrapped values in chain sequences.
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        // Add aliases.
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        // Add methods to `lodash.prototype`.
        mixin(lodash, lodash);
        /*------------------------------------------------------------------------*/ // Add methods that return unwrapped values in chain sequences.
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext1;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        // Add aliases.
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
            var source = {
            };
            baseForOwn(lodash, function(func, methodName) {
                if (!hasOwnProperty.call(lodash.prototype, methodName)) source[methodName] = func;
            });
            return source;
        }(), {
            'chain': false
        });
        /*------------------------------------------------------------------------*/ /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */ lodash.VERSION = VERSION;
        // Assign default placeholders.
        arrayEach([
            'bind',
            'bindKey',
            'curry',
            'curryRight',
            'partial',
            'partialRight'
        ], function(methodName) {
            lodash[methodName].placeholder = lodash;
        });
        // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
        arrayEach([
            'drop',
            'take'
        ], function(methodName, index) {
            LazyWrapper.prototype[methodName] = function(n) {
                n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
                var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
                if (result2.__filtered__) result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
                else result2.__views__.push({
                    'size': nativeMin(n, MAX_ARRAY_LENGTH),
                    'type': methodName + (result2.__dir__ < 0 ? 'Right' : '')
                });
                return result2;
            };
            LazyWrapper.prototype[methodName + 'Right'] = function(n) {
                return this.reverse()[methodName](n).reverse();
            };
        });
        // Add `LazyWrapper` methods that accept an `iteratee` value.
        arrayEach([
            'filter',
            'map',
            'takeWhile'
        ], function(methodName, index) {
            var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
            LazyWrapper.prototype[methodName] = function(iteratee1) {
                var result2 = this.clone();
                result2.__iteratees__.push({
                    'iteratee': getIteratee(iteratee1, 3),
                    'type': type
                });
                result2.__filtered__ = result2.__filtered__ || isFilter;
                return result2;
            };
        });
        // Add `LazyWrapper` methods for `_.head` and `_.last`.
        arrayEach([
            'head',
            'last'
        ], function(methodName, index) {
            var takeName = 'take' + (index ? 'Right' : '');
            LazyWrapper.prototype[methodName] = function() {
                return this[takeName](1).value()[0];
            };
        });
        // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
        arrayEach([
            'initial',
            'tail'
        ], function(methodName, index) {
            var dropName = 'drop' + (index ? '' : 'Right');
            LazyWrapper.prototype[methodName] = function() {
                return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
            };
        });
        LazyWrapper.prototype.compact = function() {
            return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
            return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
            return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
            if (typeof path == 'function') return new LazyWrapper(this);
            return this.map(function(value) {
                return baseInvoke(value, path, args);
            });
        });
        LazyWrapper.prototype.reject = function(predicate) {
            return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
            start = toInteger(start);
            var result2 = this;
            if (result2.__filtered__ && (start > 0 || end < 0)) return new LazyWrapper(result2);
            if (start < 0) result2 = result2.takeRight(-start);
            else if (start) result2 = result2.drop(start);
            if (end !== undefined) {
                end = toInteger(end);
                result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
            }
            return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
            return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
            return this.take(MAX_ARRAY_LENGTH);
        };
        // Add `LazyWrapper` methods to `lodash.prototype`.
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
            if (!lodashFunc) return;
            lodash.prototype[methodName] = function() {
                var value = this.__wrapped__, args = isTaker ? [
                    1
                ] : arguments, isLazy = value instanceof LazyWrapper, iteratee1 = args[0], useLazy = isLazy || isArray(value);
                var interceptor = function(value1) {
                    var result2 = lodashFunc.apply(lodash, arrayPush([
                        value1
                    ], args));
                    return isTaker && chainAll ? result2[0] : result2;
                };
                if (useLazy && checkIteratee && typeof iteratee1 == 'function' && iteratee1.length != 1) // Avoid lazy use if the iteratee has a "length" value other than `1`.
                isLazy = useLazy = false;
                var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
                if (!retUnwrapped && useLazy) {
                    value = onlyLazy ? value : new LazyWrapper(this);
                    var result2 = func.apply(value, args);
                    result2.__actions__.push({
                        'func': thru,
                        'args': [
                            interceptor
                        ],
                        'thisArg': undefined
                    });
                    return new LodashWrapper(result2, chainAll);
                }
                if (isUnwrapped && onlyLazy) return func.apply(this, args);
                result2 = this.thru(interceptor);
                return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
            };
        });
        // Add `Array` methods to `lodash.prototype`.
        arrayEach([
            'pop',
            'push',
            'shift',
            'sort',
            'splice',
            'unshift'
        ], function(methodName) {
            var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru', retUnwrapped = /^(?:pop|shift)$/.test(methodName);
            lodash.prototype[methodName] = function() {
                var args = arguments;
                if (retUnwrapped && !this.__chain__) {
                    var value = this.value();
                    return func.apply(isArray(value) ? value : [], args);
                }
                return this[chainName](function(value) {
                    return func.apply(isArray(value) ? value : [], args);
                });
            };
        });
        // Map minified method names to their real names.
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var lodashFunc = lodash[methodName];
            if (lodashFunc) {
                var key = lodashFunc.name + '';
                if (!hasOwnProperty.call(realNames, key)) realNames[key] = [];
                realNames[key].push({
                    'name': methodName,
                    'func': lodashFunc
                });
            }
        });
        realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [
            {
                'name': 'wrapper',
                'func': undefined
            }
        ];
        // Add methods to `LazyWrapper`.
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        // Add chain sequence methods to the `lodash` wrapper.
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        // Add lazy aliases.
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) lodash.prototype[symIterator] = wrapperToIterator;
        return lodash;
    };
    /*--------------------------------------------------------------------------*/ // Export lodash.
    var _ = runInContext();
    // Some AMD build optimizers, like r.js, check for condition patterns like:
    if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
        // Expose Lodash on the global object to prevent errors when Lodash is
        // loaded by a script tag in the presence of an AMD loader.
        // See http://requirejs.org/docs/errors.html#mismatch for more details.
        // Use `_.noConflict` to remove Lodash from the global object.
        root._ = _;
        // Define as an anonymous module so, through path mapping, it can be
        // referenced as the "underscore" module.
        define(function() {
            return _;
        });
    } else if (freeModule) {
        // Export for Node.js.
        (freeModule.exports = _)._ = _;
        // Export for CommonJS support.
        freeExports._ = _;
    } else // Export to the global object.
    root._ = _;
}).call(this);

},{}],"cn6bD":[function(require,module,exports) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CalendarEnjector = void 0;
/**
 * @module CalendarEnjector.js
 * @author Chris Davies <https://github.com/chrisdavies>
 * @remarks кое-что правил wlr986 <wayloggerman@gmail.com>
*/ var Calendar_1 = require("./Calendar");
var shared = __importStar(require("../shared/sharedData"));
var jquery_1 = __importDefault(require("jquery"));
function CalendarEnjector(myState) {
    return __awaiter(this, void 0, void 0, function() {
        function showPicker() {
            container.classList.add('ex-inputs-picker-visible');
        }
        function hidePicker(e) {
            clearTimeout(previousTimeout);
            var related = jquery_1.default(e.relatedTarget);
            if (related && related.hasClass('dp-day') || related.hasClass('dp-next') || related.hasClass('dp-clear')) return;
            previousTimeout = setTimeout(function() {
                if (!root.contains(document.activeElement)) container.classList.remove('ex-inputs-picker-visible');
            }, 10);
        }
        var root, txtStart, txtEnd, container, previousTimeout;
        return __generator(this, function(_a) {
            root = document.querySelector('.ex-inputs');
            txtStart = root.querySelector('.ex-inputs-start');
            txtEnd = root.querySelector('.ex-inputs-end');
            container = root.querySelector('.ex-inputs-picker');
            // Inject DateRangePicker into our container
            Calendar_1.DateRangePicker(container, null, myState).on('statechange', function(_, rp) {
                var range = rp.state;
                /**
                 * @author wlr986
                 * @description saving time data when change date
                */ txtStart.value = range.start ? range.start.toLocaleDateString() : '';
                if (txtStart.value) txtEnd.value = range.end ? range.end.toLocaleDateString() : '';
                else txtEnd.value = '';
                var leftDateInsert = false;
                var rightDateInsert = false;
                if (txtStart.value) {
                    jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).attr('disabled', null);
                    jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).trigger('change');
                    leftDateInsert = true;
                // bidPreview(myState);
                } else jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).attr('disabled', true);
                if (txtEnd.value) {
                    jquery_1.default("#" + shared.domElementId.selectReturnTimeId).attr('disabled', null);
                    rightDateInsert = true;
                    // bidPreview(myState);
                    jquery_1.default("#" + shared.domElementId.returnPlaceSelectId).trigger('change');
                } else jquery_1.default("#" + shared.domElementId.selectReturnTimeId).attr('disabled', true);
            });
            // When the inputs gain focus, show the date range picker
            txtStart.addEventListener('focus', showPicker);
            txtEnd.addEventListener('focus', showPicker);
            jquery_1.default(document).on('click', hidePicker);
            jquery_1.default('.dr-cal-end').detach();
            jquery_1.default('.dp-next').css('visibility', 'visible');
            return [
                2 /*return*/ 
            ];
        });
    });
}
exports.CalendarEnjector = CalendarEnjector;

},{"./Calendar":"gSnLb","../shared/sharedData":"iUwdp","jquery":"igaHu"}],"gSnLb":[function(require,module,exports) {
"use strict";
/**
 * @module Calendar.js
 * @author Chris Davies <https://github.com/chrisdavies>
 * @remarks кое-что правил wlr986 <wayloggerman@gmail.com>
*/ var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DateRangePicker = void 0;
// import { firstDateIsSelect, secondDateIsSelect, firstDate, secondDate, isDateShouldBeDisabled, datePreview, hideCal, setFirstDate, dropFirstDate, setSecondDate, dropSecondDate } from './handlers'
// import { dataFromServer } from './state/dataFromServer'
var jquery_1 = __importDefault(require("jquery"));
var bidPreview_1 = require("./bidPreview");
var dateRangePicker = 0;
var myState;
var num = 0;
!function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define([
        "exports"
    ], e) : e(t.DateRangePicker = {
    });
}(this, function(t) {
    "use strict";
    function o2() {
        var t1 = new Date;
        return t1.setHours(0, 0, 0, 0), t1;
    }
    function h(t1, e) {
        return (t1 && t1.toDateString()) === (e && e.toDateString());
    }
    function v(t1, e, n) {
        var a = (t1 = new Date(t1)).getDate(), o1 = t1.getMonth() + e;
        return t1.setDate(1), t1.setMonth(n ? (12 + o1) % 12 : o1), t1.setDate(a), t1.getDate() < a && t1.setDate(0), t1;
    }
    function i(t1, e) {
        return (t1 = new Date(t1)).setFullYear(t1.getFullYear() + e), t1;
    }
    function r1(n) {
        return function(t1) {
            var e;
            return e = "string" == typeof t1 ? n(t1) : t1, (e = new Date(e)).setHours(0, 0, 0, 0), e;
        };
    }
    function l1(t1, e, n) {
        return t1 < e ? e : n < t1 ? n : t1;
    }
    function f1(t1, e) {
        var n = void 0;
        return function() {
            clearTimeout(n), n = setTimeout(e, t1);
        };
    }
    function p1() {
    }
    function g() {
        for(var t1 = arguments, e = t1[0], n = 1; n < t1.length; ++n){
            var a = t1[n] || {
            };
            for(var o1 in a)e[o1] = a[o1];
        }
        return e;
    }
    var s = {
        days: [
            "Вс",
            "Пн",
            "Вт",
            "Ср",
            "Чт",
            "Пт",
            "Сб"
        ],
        months: [
            "Январь",
            "Февраль",
            "Март",
            "Апрель",
            "Май",
            "Июнь",
            "Июль",
            "Август",
            "Сентябрь",
            "Октябрь",
            "Ноябрь",
            "Декабрь"
        ],
        today: "Сегодня",
        clear: "Очистить",
        close: "Закрыть"
    };
    function u(t1) {
        t1 = t1 || {
        };
        var n, a, e = r1((t1 = g({
            lang: s,
            mode: "dp-modal",
            hilightedDate: o2(),
            format: function(t2) {
                return t2.getMonth() + 1 + "/" + t2.getDate() + "/" + t2.getFullYear();
            },
            parse: function(t2) {
                var e1 = new Date(t2);
                return isNaN(e1) ? o2() : e1;
            },
            dateClass: function() {
            },
            inRange: function() {
                return !0;
            }
        }, t1)).parse);
        return t1.lang = g(s, t1.lang), t1.parse = e, t1.inRange = (a = (n = t1).inRange, function(t2, e1) {
            return a(t2, e1) && n.min <= t2 && n.max >= t2;
        }), t1.min = e(t1.min || i(o2(), -100)), t1.max = e(t1.max || i(o2(), 100)), t1.hilightedDate = t1.parse(t1.hilightedDate), t1;
    }
    var m = {
        left: 37,
        up: 38,
        right: 39,
        down: 40,
        enter: 13,
        esc: 27
    };
    function D(t1, e, n) {
        return e.addEventListener(t1, n, !0), function() {
            e.removeEventListener(t1, n, !0);
        };
    }
    var y = function() {
        var t1 = window.CustomEvent;
        "function" != typeof t1 && ((t1 = function(t2, e) {
            e = e || {
                bubbles: !1,
                cancelable: !1,
                detail: void 0
            };
            var n = document.createEvent("CustomEvent");
            return n.initCustomEvent(t2, e.bubbles, e.cancelable, e.detail), n;
        }).prototype = window.Event.prototype);
        return t1;
    }();
    var b = {
        day: {
            onKeyDown: function(t1, e) {
                var n = t1.keyCode, a = n === m.left ? -1 : n === m.right ? 1 : n === m.up ? -7 : n === m.down ? 7 : 0;
                n === m.esc ? e.close() : a && (t1.preventDefault(), e.setState({
                    hilightedDate: (o3 = e.state.hilightedDate, r2 = a, (o3 = new Date(o3)).setDate(o3.getDate() + r2), o3)
                }));
                var o3, r2;
            },
            onClick: {
                "dp-day": function(t1, e) {
                    t1.stopPropagation();
                    var dt = new Date(parseInt(t1.target.getAttribute("data-date")));
                    if (myState.isFirstDateOfRangeWasSelect()) {
                        var days = jquery_1.default(".dp-day").toArray();
                        days = days.filter(function(item) {
                            return jquery_1.default(item).hasClass('dr-in-range');
                        });
                        var bad = '';
                        days.forEach(function(item) {
                            var d = jquery_1.default(item).hasClass('dp-day-disabled');
                            if (d) bad = true;
                        });
                        if (bad) return;
                    }
                    e.setState({
                        selectedDate: dt
                    });
                    /**
                     * @author wlr986
                    */ if (myState.isFirstDateOfRangeWasSelect() && myState.isSecondDateOfRangeWasSelect()) {
                        myState.dropFirstDateOfRange();
                        myState.dropSecondDateOfRange();
                    }
                    if (myState.isFirstDateOfRangeWasSelect()) {
                        jquery_1.default('#dp-close-btn').html('Сохранить');
                        myState.setSecondDateOfRange(dt);
                        return;
                    }
                    myState.setFirstDateOfRange(dt);
                    if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) e.stopPropagation();
                },
                "dp-next": function(t1, e) {
                    var n = e.state.hilightedDate;
                    e.setState({
                        hilightedDate: v(n, 1)
                    });
                    t1.stopPropagation();
                },
                "dp-prev": function(t1, e) {
                    var n = e.state.hilightedDate;
                    e.setState({
                        hilightedDate: v(n, -1)
                    });
                    t1.stopPropagation();
                },
                "dp-today": function(t1, e) {
                    e.setState({
                        selectedDate: o2()
                    });
                },
                "dp-clear": function(t1, e) {
                    myState.dropFirstDateOfRange();
                    myState.dropSecondDateOfRange();
                    bidPreview_1.bidPreview(myState);
                    // dataFromServer.clickedCars = [];
                    e.setState({
                        selectedDate: null
                    });
                    t1.stopPropagation();
                },
                "dp-close": function(t1, e) {
                    e.close();
                },
                "dp-cal-month": function(t1, e) {
                    e.setState({
                        view: "month"
                    });
                    t1.stopPropagation();
                },
                "dp-cal-year": function(t1, e) {
                    e.setState({
                        view: "year"
                    });
                    t1.stopPropagation();
                }
            },
            render: function(r2) {
                console.log(321);
                var i1 = r2.opts, t1 = i1.lang, e = r2.state, n = t1.days, a = i1.dayOffset || 1, s1 = e.selectedDate, u1 = e.hilightedDate, d = u1.getMonth(), c = o2().getTime();
                var weekStr = "\n\t\t\t\t" + n.map(function(t2, e1) {
                    return "<span class=\"dp-col-header\"> " + n[(e1 + a) % n.length] + " </span>";
                }).join("") + "\n\t\t\t\t\t";
                var header = "\n\t\t\t\t\t<div class=\"dp-cal\"> \n\t\t\t\t\t<header class=\"dp-cal-header\"> \n\t\t\t\t\t\t<button tabindex=\"-1\" type=\"button\" class=\"dp-prev\">Prev</button> \n\t\t\t\t\t\t<button tabindex=\"-1\" type=\"button\" class=\"dp-cal-month\" id=\"dp-cal-month-text\">\n\t\t\t\t\t" + t1.months[d] + " </button>\n\t\t\t\t\t\t<button tabindex=\"-1\" type=\"button\" class=\"dp-cal-year\">\n\t\t\t\t\t " + u1.getFullYear() + " \n\t\t\t\t\t</button>\n\t\t\t\t\t\t<button tabindex=\"-1\" type=\"button\" class=\"dp-next\">Next</button>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<div class=\"dp-days\">\n\t\t\t\t\t";
                var select = '';
                var closeOrSaveName = myState.isFirstDateOfRangeWasSelect() && myState.isSecondDateOfRangeWasSelect() ? "Сохранить" : "Закрыть";
                var footer = "\n\t\t\t\t</div>\n\t\t\t\t<footer class=\"dp-cal-footer\">\n\t\t\t\t\n\t\t\t\t<button tabindex=\"-1\" type=\"button\" class=\"dp-clear\">  " + t1.clear + " </button>\n\t\t\t\t</script>\n\t\t\t\t<button onClick=\"\n\t\t\t\tdocument.querySelector('.ex-inputs-picker').classList.remove('ex-inputs-picker-visible');\" tabindex=\"-1\" type=\"button\" class=\"dp-close\" id=\"dp-close-btn\">" + closeOrSaveName + "</button>\n\n\t\t\t\t</footer>\n\t\t\t\t</div>";
                function resHTML(timestamp, e1, n1) {
                    var res = "";
                    var newDate = new Date(timestamp);
                    newDate.setDate(1);
                    newDate.setDate(1 - newDate.getDay() + e1);
                    e1 && newDate.getDate() === e1 + 1 && newDate.setDate(e1 - 6);
                    for(var r3 = 0; r3 < 42; ++r3){
                        var r_1 = n1(newDate);
                        res += r_1;
                        newDate.setDate(newDate.getDate() + 1);
                    }
                    return res;
                }
                /**
                 * @function
                 * @param {Date}
                 * @returns {HTMLButtonElement}
                 * @description смысл функции в том, что она принимает timestamp и возвращает разметку HTML кнопки с необходимыми стилями: пограничный день(pg-edge-day), текущий день (dp-day-today),
                 * неактивный день (dp-day-disabled), а также текущий и выбранный день (dp-current, dp-select)
                */ function dayHTML(t2) {
                    var currentMonth = d;
                    // e === true if currenthMonth не равен t.Month(). Смысл переменной в том, что она используется для установления класса пограничного дня
                    var onBorder = t2.getMonth() !== currentMonth; //Boolean
                    // var n = !i.inRange(t);//Boolean 
                    var shouldToDisabled = myState.isDateBusy(t2);
                    var attr = shouldToDisabled ? 'disabled' : '';
                    // Если а установлено, то дата помечается как сегодняшнее число
                    var isToday = shouldToDisabled ? false : t2.getTime() === c; //Boolean
                    //итоговая разметка кнопки
                    var res = "dp-day"; //String
                    var isCurrent = false; //shouldToDisabled ? false : (t.getTime() === c) && (d === new Date().getMonth() + 1)
                    var isSelected = false; //shouldToDisabled ? false : h(t, s);
                    res += onBorder ? " dp-edge-day" : "";
                    res += isCurrent ? " dp-current" : "";
                    res += isSelected ? " dp-selected" : "";
                    res += shouldToDisabled ? " dp-day-disabled" : "";
                    res += isToday ? " dp-day-today" : "";
                    return "\n\t\t\t\t\t<button " + attr + " tabindex=\"-1\" type=\"button\" class=\"" + (res += " " + i1.dateClass(t2, r2)) + "\" data-date=\" " + t2.getTime() + " \" id=\"day-" + t2.getDate() + " \"> " + t2.getDate() + " </button>\n\t\t\t\t\t";
                }
                var body = resHTML(u1, a, dayHTML);
                return header + select + weekStr + body + footer;
            }
        },
        year: {
            render: function(t1) {
                var e = t1.state, n = e.hilightedDate.getFullYear(), a = e.selectedDate.getFullYear();
                return '<div class="dp-years">' + (function(t2, e1) {
                    for(var n1 = "", a1 = t2.opts.max.getFullYear(); a1 >= t2.opts.min.getFullYear(); --a1)n1 += e1(a1);
                    return n1;
                })(t1, function(t2) {
                    var e1 = "dp-year";
                    return e1 += t2 === n ? " dp-current" : "", '<button tabindex="-1" type="button" class="' + (e1 += t2 === a ? " dp-selected" : "") + '" data-year="' + t2 + '">' + t2 + "</button>";
                }) + "</div>";
            },
            onKeyDown: function(t1, e) {
                var n = t1.keyCode, a = e.opts, o3 = n === m.left || n === m.up ? 1 : n === m.right || n === m.down ? -1 : 0;
                if (n === m.esc) e.setState({
                    view: "day"
                });
                else if (o3) {
                    t1.preventDefault();
                    var r2 = i(e.state.hilightedDate, o3);
                    e.setState({
                        hilightedDate: l1(r2, a.min, a.max)
                    });
                }
            },
            onClick: {
                "dp-year": function(t1, e) {
                    e.setState({
                        hilightedDate: (n = e.state.hilightedDate, a = parseInt(t1.target.getAttribute("data-year")), (n = new Date(n)).setFullYear(a), n),
                        view: "day"
                    });
                    var n, a;
                    t1.stopPropagation();
                }
            }
        },
        month: {
            onKeyDown: function(t1, e) {
                var n = t1.keyCode, a = n === m.left ? -1 : n === m.right ? 1 : n === m.up ? -3 : n === m.down ? 3 : 0;
                n === m.esc ? e.setState({
                    view: "day"
                }) : a && (t1.preventDefault(), e.setState({
                    hilightedDate: v(e.state.hilightedDate, a, !0)
                }));
            },
            onClick: {
                "dp-month": function(t1, e) {
                    e.setState({
                        hilightedDate: (n = e.state.hilightedDate, a = parseInt(t1.target.getAttribute("data-month")), v(n, a - n.getMonth())),
                        view: "day"
                    });
                    var n, a;
                    t1.stopPropagation();
                }
            },
            render: function(t1) {
                var e = t1.opts.lang.months, a = t1.state.hilightedDate.getMonth();
                return '<div class="dp-months">' + e.map(function(t2, e1) {
                    var n = "dp-month";
                    return '<button tabindex="-1" type="button" class="' + (n += a === e1 ? " dp-current" : "") + '" data-month="' + e1 + '">' + t2 + "</button>";
                }).join("") + "</div>";
            }
        }
    };
    function d(o3, r3, a) {
        var t1, i1, e, n, s1, u1, d1 = !1, c = {
            el: void 0,
            opts: a,
            shouldFocusOnBlur: !0,
            shouldFocusOnRender: !0,
            state: {
                get selectedDate () {
                    return i1;
                },
                //STATE
                set selectedDate (t2){
                    /**update input here !!!  */ t2 && !a.inRange(t2) || (t2 ? (i1 = new Date(t2), c.state.hilightedDate = i1) : i1 = t2);
                    c.updateInput(i1), r3("select"), c.close();
                },
                view: "day"
            },
            adjustPosition: p1,
            containerHTML: '<div class="dp"></div>',
            attachToDom: function() {
                document.body.appendChild(c.el);
            },
            updateInput: function(t2) {
                var e1 = new y("change", {
                    bubbles: !0
                });
                e1.simulated = !0, o3.value = t2 ? a.format(t2) : "", o3.dispatchEvent(e1);
            },
            computeSelectedDate: function() {
                return a.parse(o3.value);
            },
            currentView: function() {
                return b[c.state.view];
            },
            open: function() {
                var t2, e1, n1;
                d1 || (c.el || (c.el = (t2 = a, e1 = c.containerHTML, (n1 = document.createElement("div")).className = t2.mode, n1.innerHTML = e1, n1), (function(a1) {
                    var t3 = a1.el, e2 = t3.querySelector(".dp");
                    function n2(n3) {
                        n3.target.className.split(" ").forEach(function(t4) {
                            var e3 = a1.currentView().onClick[t4];
                            e3 && e3(n3, a1);
                        });
                    }
                    t3.ontouchstart = p1, D("blur", e2, f1(150, function() {
                        a1.hasFocus() || a1.close(!0);
                    })), D("keydown", t3, function(t4) {
                        t4.keyCode === m.enter ? n2(t4) : a1.currentView().onKeyDown(t4, a1);
                    }), D("mousedown", e2, function(t4) {
                        t4.target.focus && t4.target.focus(), document.activeElement !== t4.target && (t4.preventDefault(), w(a1));
                    }), D("click", t3, n2);
                })(c)), i1 = l1(c.computeSelectedDate(), a.min, a.max), c.state.hilightedDate = i1 || a.hilightedDate, c.state.view = "day", c.attachToDom(), c.render(), r3("open"));
            },
            isVisible: function() {
                return !!c.el && !!c.el.parentNode;
            },
            hasFocus: function() {
                var t2 = document.activeElement;
                return c.el && c.el.contains(t2) && t2.className.indexOf("dp-focuser") < 0;
            },
            shouldHide: function() {
                return c.isVisible();
            },
            close: function(t2) {
                var e1 = c.el;
                if (c.isVisible()) {
                    if (e1) {
                        var n1 = e1.parentNode;
                        n1 && n1.removeChild(e1);
                    }
                    var a1;
                    d1 = !0, t2 && c.shouldFocusOnBlur && (a1 = o3).focus() && !window.MSStream && a1.blur(), setTimeout(function() {
                        d1 = !1;
                    }, 100), r3("close");
                }
            },
            destroy: function() {
                c.close(), t1();
            },
            render: function() {
                if (c.el) {
                    var t2 = c.hasFocus(), e1 = c.currentView().render(c);
                    e1 && (c.el.firstChild.innerHTML = e1), c.adjustPosition(), (t2 || c.shouldFocusOnRender) && w(c);
                }
            },
            setState: function(t3) {
                for(var e2 in t3)c.state[e2] = t3[e2];
                r3("statechange"), c.render();
            }
        };
        return e = o3, n = c, s1 = f1(5, function() {
            n.shouldHide() ? n.close() : n.open();
        }), u1 = [
            D("blur", e, f1(150, function() {
                n.hasFocus() || n.close(!0);
            })),
            D("mousedown", e, function() {
                e === document.activeElement && s1();
            }),
            D("focus", e, s1),
            D("input", e, function(t3) {
                var e2 = n.opts.parse(t3.target.value);
                isNaN(e2) || n.setState({
                    hilightedDate: e2
                });
            })
        ], t1 = function() {
            u1.forEach(function(t3) {
                t3();
            });
        }, c;
    }
    function w(t1) {
        var e2 = t1.el.querySelector(".dp-current");
        return e2 && e2.focus();
    }
    function c1(S, t1, e2) {
        var x = d(S, t1, e2);
        return x.shouldFocusOnBlur = !1, Object.defineProperty(x, "shouldFocusOnRender", {
            get: function() {
                return S !== document.activeElement;
            }
        }), x.adjustPosition = function() {
            var t3, e3, n2, a2, o3, r3, i1, s1, u1, d1, c1, l1, f1, p1, h1, v1, g1, m1, D1, y1, b1, w1;
            c1 = x, l1 = S.getBoundingClientRect(), f1 = window, t3 = l1, e3 = f1, n2 = c1.el, a2 = e3.pageYOffset, o3 = a2 + t3.top, r3 = n2.offsetHeight, i1 = o3 + t3.height + 8, u1 = 0 < (s1 = o3 - r3 - 8) && i1 + r3 > a2 + e3.innerHeight, d1 = u1 ? s1 : i1, n2.classList && (n2.classList.toggle("dp-is-above", u1), n2.classList.toggle("dp-is-below", !u1)), n2.style.top = d1 + "px", p1 = l1, h1 = f1, v1 = c1.el, g1 = h1.pageXOffset, m1 = p1.left + g1, D1 = h1.innerWidth + g1, y1 = v1.offsetWidth, b1 = D1 - y1, w1 = D1 < m1 + y1 && 0 < b1 ? b1 : m1, v1.style.left = w1 + "px", c1.el.style.visibility = "";
        }, x;
    }
    function S(t1, e2, n2) {
        var a2, o3, r3, i1, s1;
        return t1 = t1 && t1.tagName ? t1 : document.querySelector(t1), "dp-modal" === n2.mode ? (o3 = d(a2 = t1, e2, n2), a2.readonly = !0, o3.containerHTML += '<a href="#" class="dp-focuser">.</a>', o3) : "dp-below" === n2.mode ? c1(t1, e2, n2) : "dp-permanent" === n2.mode ? ((s1 = d(r3 = t1, e2, i1 = n2)).close = p1, s1.destroy = p1, s1.updateInput = p1, s1.shouldFocusOnRender = i1.shouldFocusOnRender, s1.computeSelectedDate = function() {
            return i1.hilightedDate;
        }, s1.attachToDom = function() {
            r3.appendChild(s1.el);
        }, s1.open(), s1) : void 0;
    }
    function x() {
        var a2 = {
        };
        function n2(t1, e2) {
            (a2[t1] = a2[t1] || []).push(e2);
        }
        return {
            on: function(t1, e2) {
                return e2 ? n2(t1, e2) : (function(t3) {
                    for(var e3 in t3)n2(e3, t3[e3]);
                })(t1), this;
            },
            emit: function(e2, n3) {
                (a2[e2] || []).forEach(function(t1) {
                    t1(e2, n3);
                });
            },
            off: function(t1, e2) {
                return t1 ? a2[t1] = e2 ? (a2[t1] || []).filter(function(t3) {
                    return t3 !== e2;
                }) : [] : a2 = {
                }, this;
            }
        };
    }
    function F(t1, e2) {
        var n2 = x(), a2 = S(t1, function(t3) {
            n2.emit(t3, o3);
        }, u(e2)), o3 = {
            get state () {
                return a2.state;
            },
            on: n2.on,
            off: n2.off,
            setState: a2.setState,
            open: a2.open,
            close: a2.close,
            destroy: a2.destroy
        };
        return o3;
    }
    var e2 = F;
    function C(t1) {
        return 12 * t1.getYear() + t1.getMonth();
    }
    t.TinyDatePicker = e2, dateRangePicker = t.DateRangePicker = function(t1, e3, mstate) {
        myState = mstate;
        e3 = e3 || {
        };
        var o3, n2 = x(), a2 = (c2 = t1, "string" == typeof c2 && (c2 = document.querySelector(c2)), c2.innerHTML = '<div class="dr-cals"><div class="dr-cal-start"></div><div class="dr-cal-end"></div></div>', c2.querySelector(".dr-cals")), r3 = {
            start: void 0,
            end: void 0
        }, i1 = F(a2.querySelector(".dr-cal-start"), g({
        }, e3.startOpts, {
            mode: "dp-permanent",
            dateClass: p2
        })), s1 = F(a2.querySelector(".dr-cal-end"), g({
        }, e3.endOpts, {
            mode: "dp-permanent",
            hilightedDate: v(i1.state.hilightedDate, 1),
            dateClass: p2
        })), u1 = {
            statechange: function(t3, e4) {
                var n3, a3 = i1.state.hilightedDate, o4 = s1.state.hilightedDate;
                1 != (n3 = a3, C(o4) - C(n3)) && (e4 === i1 ? s1.setState({
                    hilightedDate: v(e4.state.hilightedDate, 1)
                }) : i1.setState({
                    hilightedDate: v(e4.state.hilightedDate, -1)
                }));
            },
            select: function(t3, e4) {
                var n3 = e4.state.selectedDate;
                !r3.start || r3.end ? l2({
                    start: n3,
                    end: void 0
                }) : l2({
                    start: n3 > r3.start ? r3.start : n3,
                    end: n3 > r3.start ? n3 : r3.start
                });
            }
        }, d1 = {
            state: r3,
            setState: l2,
            on: n2.on,
            off: n2.off
        };
        var c2;
        function l2(t3) {
            for(var e4 in t3)r3[e4] = t3[e4];
            n2.emit("statechange", d1), f2();
        }
        function f2() {
            i1.setState({
            }), s1.setState({
            });
        }
        function p2(t3) {
            var e4, n3, a3;
            return ((r3.end || o3) && r3.start && (e4 = t3, n3 = r3.end || o3, a3 = r3.start, e4 < a3 && n3 <= e4 || e4 <= n3 && a3 < e4) ? "dr-in-range " : "") + (h(t3, r3.start) || h(t3, r3.end) ? "dr-selected " : "");
        }
        a2.addEventListener("click", function(t3) {
            t3.target.classList.contains("dp-day");
        });
        a2.addEventListener("touchstart", function(t3) {
            if (t3.target.classList.contains("dp-day")) /iPhone|iPad|iPod/i.test(navigator.userAgent);
        });
        return i1.on(u1), s1.on(u1), a2.addEventListener("mouseover", function(t3) {
            t3.target.classList.contains("dp-day");
        }), d1;
    }, Object.defineProperty(t, "__esModule", {
        value: !0
    });
});
exports.DateRangePicker = dateRangePicker;

},{"jquery":"igaHu","./bidPreview":"1m9fP"}],"1m9fP":[function(require,module,exports) {
"use strict";
/**
 * @module bitText.ts
*/ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.onPreview = exports.bidPreview = void 0;
var jquery_1 = __importDefault(require("jquery"));
var shared = __importStar(require("../shared/sharedData"));
var sharedActions_1 = require("../shared/sharedActions");
var querySender_1 = require("../CORS/querySender");
function bidPreview(state) {
    var _a, _b, _c, _d, _e, _f;
    return __awaiter(this, void 0, void 0, function() {
        var carModel, leftDate, leftTime, leftPlace, rightDate, rightTime, rightPlace, placeBegin, placeEnd, deliveryCost, d1, d2, rentTime, bidRequest, bidCostStr, resCostStr, rentTime;
        return __generator(this, function(_g) {
            switch(_g.label){
                case 0:
                    carModel = state.getSelectedCarModelName();
                    carModel = carModel.replace('Mkpp', 'МКПП');
                    carModel = carModel.replace('Akpp', 'АКПП');
                    leftDate = (_a = jquery_1.default("#" + shared.domElementId.receiveDataId).val()) === null || _a === void 0 ? void 0 : _a.toString();
                    leftTime = (_b = jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).val()) === null || _b === void 0 ? void 0 : _b.toString();
                    leftPlace = (_c = jquery_1.default("#" + shared.domElementId.receivePlaceSelectId).val()) === null || _c === void 0 ? void 0 : _c.toString();
                    rightDate = (_d = jquery_1.default("#" + shared.domElementId.returnDataId).val()) === null || _d === void 0 ? void 0 : _d.toString();
                    rightTime = (_e = jquery_1.default("#" + shared.domElementId.selectReturnTimeId).val()) === null || _e === void 0 ? void 0 : _e.toString();
                    rightPlace = (_f = jquery_1.default("#" + shared.domElementId.returnPlaceSelectId).val()) === null || _f === void 0 ? void 0 : _f.toString();
                    placeBegin = state.getPlacesForReceiveAndReturnCars().places.filter(function(a) {
                        return a.title === (leftPlace === null || leftPlace === void 0 ? void 0 : leftPlace.split(' + ')[0]);
                    })[0];
                    placeEnd = state.getPlacesForReceiveAndReturnCars().places.filter(function(a) {
                        return a.title === (rightPlace === null || rightPlace === void 0 ? void 0 : rightPlace.split(' + ')[0]);
                    })[0];
                    deliveryCost = placeBegin.delivery_cost + placeEnd.delivery_cost;
                    if (carModel) jquery_1.default("#" + shared.domElementId.carNameId).html("\u0410\u0440\u0435\u043D\u0434\u0430: " + carModel);
                    if (leftPlace && rightPlace) {
                        if (deliveryCost > 0) jquery_1.default("#" + shared.domElementId.deliveryCostId).html(" + \u0434\u043E\u0441\u0442\u0430\u0432\u043A\u0430 \u0430\u0432\u0442\u043E " + deliveryCost + " \u20BD");
                        else jquery_1.default("#" + shared.domElementId.deliveryCostId).html('');
                    }
                    if (!(leftDate && leftTime && rightTime && rightDate)) return [
                        3 /*break*/ ,
                        2
                    ];
                    d1 = leftDate.split('.').reverse().join('-') + "T" + leftTime + "Z";
                    d2 = rightDate.split('.').reverse().join('-') + "T" + rightTime + "Z";
                    rentTime = "\u043D\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0441 " + sharedActions_1.translateDate(new Date(d1), new Date(d2), leftTime, rightTime);
                    jquery_1.default("#" + shared.domElementId.periodRentId).html(rentTime);
                    bidRequest = {
                        car_id: state.carIdForBidCost(),
                        begin: d1,
                        end: d2,
                        begin_place_id: placeBegin.place_id,
                        end_place_id: placeEnd.place_id,
                        services: []
                    };
                    return [
                        4 /*yield*/ ,
                        querySender_1.getCost(bidRequest).then(function(bidCost) {
                            var cost = bidCost.cost;
                            var deposit = bidCost.deposit;
                            if (deposit === null) deposit = 10000;
                            var bidCostStr1 = ", c\u0442\u043E\u0438\u043C\u043E\u0441\u0442\u044C \u0430\u0440\u0435\u043D\u0434\u044B " + (cost - deliveryCost) + " \u20BD + \u0437\u0430\u043B\u043E\u0433 " + deposit + " \u20BD (\u0432\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043C \u043F\u043E\u043B\u043D\u043E\u0441\u0442\u044C\u044E \u043F\u043E \u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044E \u0430\u0440\u0435\u043D\u0434\u044B)";
                            var resCostStr1 = "\u0418\u0442\u043E\u0433\u043E: " + (cost + deposit) + " \u20BD</span>";
                            jquery_1.default("#" + shared.domElementId.bidCostId).html(bidCostStr1);
                            jquery_1.default("#" + shared.domElementId.costResolutionId).html(resCostStr1);
                        })
                    ];
                case 1:
                    _g.sent();
                    return [
                        3 /*break*/ ,
                        3
                    ];
                case 2:
                    bidCostStr = '';
                    resCostStr = '';
                    rentTime = '';
                    jquery_1.default("#" + shared.domElementId.periodRentId).html(rentTime);
                    jquery_1.default("#" + shared.domElementId.bidCostId).html(bidCostStr);
                    jquery_1.default("#" + shared.domElementId.costResolutionId).html(resCostStr);
                    _g.label = 3;
                case 3:
                    return [
                        2 /*return*/ 
                    ];
            }
        });
    });
}
exports.bidPreview = bidPreview;
function onPreview(state) {
    var onChangeList = [
        "" + shared.domElementId.carSelectId,
        "" + shared.domElementId.selectReceiveTimeId,
        "" + shared.domElementId.selectReturnTimeId,
        "" + shared.domElementId.receivePlaceSelectId,
        "" + shared.domElementId.returnPlaceSelectId, 
    ];
    var onFocusList = [];
    onChangeList.forEach(function(id) {
        jquery_1.default("#" + id).on('change', function() {
            bidPreview(state);
        });
    });
    onFocusList.forEach(function(id) {
        jquery_1.default("#" + id).on('change', function() {
            bidPreview(state);
        });
    });
// $(`#${shared.domElementId.carSelectId}`).trigger('change');
}
exports.onPreview = onPreview;

},{"jquery":"igaHu","../shared/sharedData":"iUwdp","../shared/sharedActions":"htU3t","../CORS/querySender":"gaZqi"}],"7Hwd1":[function(require,module,exports) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createBid = void 0;
var shared = __importStar(require("../shared/sharedData"));
var jquery_1 = __importDefault(require("jquery"));
var querySender_1 = require("../CORS/querySender");
var sharedActions_1 = require("../shared/sharedActions");
function validateForm() {
    var validateArr = [];
    validateArr.push(sharedActions_1.validateChecker(shared.domElementId.ageAgree, shared.domElementId.proofOfAgeId));
    validateArr.push(sharedActions_1.validateChecker(shared.domElementId.policyAgree, shared.domElementId.proofOfPolicyId));
    validateArr.push(sharedActions_1.validateField(shared.domElementId.receiveDataId, shared.domElementId.receiveDateTextId));
    validateArr.push(sharedActions_1.validateField(shared.domElementId.returnDataId, shared.domElementId.returnDateTextId));
    validateArr.push(sharedActions_1.validateField(shared.domElementId.customersPhoneId, shared.domElementId.customersPhoneTextId));
    validateArr.push(sharedActions_1.validateField(shared.domElementId.custonersNameId, shared.domElementId.customersNameTextId));
    return validateArr.indexOf(false) >= 0 ? false : true;
}
function createBid(state) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
    return __awaiter(this, void 0, void 0, function() {
        var leftDate, leftTime, leftPlace, rightDate, rightTime, rightPlace, fio, phone, ageAgree, policyAgree, placeBegin, placeEnd, otherReceivePlace, otherReturnPlace, customPlace, fileArr, fArr, d1, d2, bidRequest, form_1, keys, vals_1, bid, thankStr_1, thankStr;
        return __generator(this, function(_l) {
            switch(_l.label){
                case 0:
                    leftDate = (_a = jquery_1.default("#" + shared.domElementId.receiveDataId).val()) === null || _a === void 0 ? void 0 : _a.toString();
                    leftTime = (_b = jquery_1.default("#" + shared.domElementId.selectReceiveTimeId).val()) === null || _b === void 0 ? void 0 : _b.toString();
                    leftPlace = (_c = jquery_1.default("#" + shared.domElementId.receivePlaceSelectId).val()) === null || _c === void 0 ? void 0 : _c.toString();
                    rightDate = (_d = jquery_1.default("#" + shared.domElementId.returnDataId).val()) === null || _d === void 0 ? void 0 : _d.toString();
                    rightTime = (_e = jquery_1.default("#" + shared.domElementId.selectReturnTimeId).val()) === null || _e === void 0 ? void 0 : _e.toString();
                    rightPlace = (_f = jquery_1.default("#" + shared.domElementId.returnPlaceSelectId).val()) === null || _f === void 0 ? void 0 : _f.toString();
                    fio = (_g = jquery_1.default("#" + shared.domElementId.custonersNameId).val()) === null || _g === void 0 ? void 0 : _g.toString();
                    phone = (_h = jquery_1.default("#" + shared.domElementId.customersPhoneId).val()) === null || _h === void 0 ? void 0 : _h.toString();
                    ageAgree = jquery_1.default("#" + shared.domElementId.ageAgree).is(':checked');
                    policyAgree = jquery_1.default("#" + shared.domElementId.policyAgree).is(':checked');
                    placeBegin = state.getPlacesForReceiveAndReturnCars().places.filter(function(a) {
                        return a.title === (leftPlace === null || leftPlace === void 0 ? void 0 : leftPlace.split(' + ')[0]);
                    })[0];
                    placeEnd = state.getPlacesForReceiveAndReturnCars().places.filter(function(a) {
                        return a.title === (rightPlace === null || rightPlace === void 0 ? void 0 : rightPlace.split(' + ')[0]);
                    })[0];
                    otherReceivePlace = (_j = jquery_1.default("#" + shared.domElementId.receiveCustomPlaceInputId).val()) === null || _j === void 0 ? void 0 : _j.toString();
                    otherReturnPlace = (_k = jquery_1.default("#" + shared.domElementId.returnCustomPlaceInputId).val()) === null || _k === void 0 ? void 0 : _k.toString();
                    customPlace = true;
                    if (placeBegin.place_id === 179) customPlace = sharedActions_1.validateField(shared.domElementId.receiveCustomPlaceInputId, shared.domElementId.receiveCustomTextId) ? true : false;
                    if (placeEnd.place_id === 179) customPlace = sharedActions_1.validateField(shared.domElementId.returnCustomPlaceInputId, shared.domElementId.returnCustomTextId) ? true : false;
                    if (!validateForm()) return [
                        2 /*return*/ 
                    ];
                    if (!customPlace) return [
                        2 /*return*/ 
                    ];
                    if (!(leftDate && leftTime && rightTime && rightDate && fio && phone && policyAgree && ageAgree && placeBegin && placeEnd)) return [
                        3 /*break*/ ,
                        2
                    ];
                    fileArr = '';
                    if (placeBegin.place_id === 179 && otherReceivePlace === '' || placeEnd.place_id === 179 && otherReturnPlace === '') return [
                        2 /*return*/ 
                    ];
                    else if (placeBegin.place_id === 179 && otherReceivePlace != '' || placeEnd.place_id === 179 && otherReturnPlace != '') {
                        fArr = [];
                        if (otherReturnPlace) fArr.push(otherReturnPlace);
                        if (otherReceivePlace) fArr.push(otherReceivePlace);
                        fileArr = new File(fArr, 'получение-возврат');
                    }
                    d1 = leftDate.split('.').reverse().join('-') + " " + leftTime + "Z";
                    d2 = rightDate.split('.').reverse().join('-') + " " + rightTime + "Z";
                    console.log(state.getMainCar());
                    bidRequest = {
                        car_id: state.getMainCar(),
                        begin: d1,
                        end: d2,
                        fio: fio,
                        phone: phone,
                        begin_place_id: placeBegin.place_id,
                        end_place_id: placeEnd.place_id,
                        file: fileArr
                    };
                    form_1 = new FormData();
                    keys = Object.keys(bidRequest);
                    vals_1 = Object.values(bidRequest);
                    keys.forEach(function(key, inx) {
                        form_1.append(key, vals_1[inx]);
                    });
                    return [
                        4 /*yield*/ ,
                        querySender_1.sendRequest(form_1)
                    ];
                case 1:
                    bid = _l.sent();
                    // const bid: BidCreateResponse = { bid_id: 2, bid_number: 1, error_message: null }
                    if (bid.error_message == null) {
                        thankStr_1 = "<div class=\"thankyou__book\">\u0412\u0430\u0448\u0430 \u0437\u0430\u044F\u0432\u043A\u0430 \u043D\u0430 \u0431\u0440\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 " + jquery_1.default("#" + shared.domElementId.carNameId).html().split(':')[1] + " " + jquery_1.default("#" + shared.domElementId.periodRentId).html() + " \u043F\u0440\u0438\u043D\u044F\u0442\u0430. <br><br>\u0415\u0441\u043B\u0438 \u044D\u0442\u043E \u043F\u0435\u0440\u0432\u043E\u0435 \u0431\u0440\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0441 \u043D\u0430\u043C\u0438, \u043F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u044C\u0442\u0435 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B (\u043F\u0430\u0441\u043F\u043E\u0440\u0442 \u0438 \u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C\u0441\u043A\u043E\u0435 \u0443\u0434\u043E\u0441\u0442\u043E\u0432\u0435\u0440\u0435\u043D\u0438\u0435) \u043F\u043E <a href=\"https://wa.me/+79999151515\" target=\"_blank\">WhatsApp \u043D\u0430 \u043D\u043E\u043C\u0435\u0440 +7 (999) 915-15-15</a><br> </div><a href=\"https://wa.me/+79999151514\" target=\"_blank\"><div class=\"book__btn\" style=\"display: flex;\njustify-content: center;\nalign-items: center;text-decoration: none;\">\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B</div></a>";
                        jquery_1.default("#" + shared.domElementId.formInputId).html(thankStr_1);
                        jquery_1.default("#" + shared.domElementId.bookSelectDivId).html('');
                        jquery_1.default("#" + shared.domElementId.bidTextId).addClass(shared.domElementId.bigBidTextClass);
                        return [
                            2 /*return*/ 
                        ];
                    }
                    thankStr = "<div class=\"thankyou__book\" style=\"color: red;\">\u0412\u0430\u0448\u0430 \u0437\u0430\u044F\u0432\u043A\u0430 \u043D\u0430 \u0431\u0440\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 " + jquery_1.default("#" + shared.domElementId.carNameId).html().split(':')[1] + " " + jquery_1.default("#" + shared.domElementId.periodRentId).html() + " \u043D\u0435 \u043F\u0440\u0438\u043D\u044F\u0442\u0430. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u043F\u043E\u0437\u0434\u043D\u0435\u0435.";
                    jquery_1.default("#" + shared.domElementId.formInputId).html(thankStr);
                    jquery_1.default("#" + shared.domElementId.bookSelectDivId).html('');
                    jquery_1.default("#" + shared.domElementId.bidTextId).addClass(shared.domElementId.bigBidTextClass);
                    return [
                        2 /*return*/ 
                    ];
                case 2:
                    return [
                        2 /*return*/ 
                    ];
            }
        });
    });
}
exports.createBid = createBid;

},{"../shared/sharedData":"iUwdp","jquery":"igaHu","../CORS/querySender":"gaZqi","../shared/sharedActions":"htU3t"}]},["eJe8r","7Mc0f"], "7Mc0f", "parcelRequire2638")

//# sourceMappingURL=index.6be87d0b.js.map
