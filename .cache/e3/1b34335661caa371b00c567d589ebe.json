{"id":"WzA0","dependencies":[{"name":"/home/wlr/Desktop/work/renta_connect/calendar/1/package.json","includedInParent":true,"mtime":1626685643821}],"generated":{"js":"function n(n){return 12===(n=\"+\"+(n=n.replace(/[^\\d]/g,\"\"))).length}function r(n){var r=(n=n.trim()).split(\" \");if(2!=r.length)return!1;var t=!1;return r.forEach(function(n,r){n.match(/\\d|[!@#$%^&*()_+=1234567890\\[\\]\\{\\}:;\\'\\\"\\\\\\|<>,\\./]/)&&(t=!0)}),!t}"},"sourceMaps":{"js":{"mappings":[{"source":"static/validators.js","original":{"line":11,"column":0},"generated":{"line":1,"column":0}},{"source":"static/validators.js","name":"validationPhone","original":{"line":11,"column":9},"generated":{"line":1,"column":9}},{"source":"static/validators.js","name":"phone","original":{"line":11,"column":25},"generated":{"line":1,"column":11}},{"source":"static/validators.js","name":"phone","original":{"line":14,"column":5},"generated":{"line":1,"column":14}},{"source":"static/validators.js","original":{"line":14,"column":22},"generated":{"line":1,"column":21}},{"source":"static/validators.js","name":"phone","original":{"line":13,"column":1},"generated":{"line":1,"column":27}},{"source":"static/validators.js","original":{"line":13,"column":9},"generated":{"line":1,"column":29}},{"source":"static/validators.js","name":"phone","original":{"line":12,"column":1},"generated":{"line":1,"column":34}},{"source":"static/validators.js","name":"phone","original":{"line":12,"column":9},"generated":{"line":1,"column":36}},{"source":"static/validators.js","name":"replace","original":{"line":12,"column":15},"generated":{"line":1,"column":38}},{"source":"static/validators.js","original":{"line":12,"column":23},"generated":{"line":1,"column":46}},{"source":"static/validators.js","original":{"line":12,"column":33},"generated":{"line":1,"column":55}},{"source":"static/validators.js","name":"length","original":{"line":14,"column":11},"generated":{"line":1,"column":61}},{"source":"static/validators.js","original":{"line":25,"column":0},"generated":{"line":1,"column":68}},{"source":"static/validators.js","name":"validationName","original":{"line":25,"column":9},"generated":{"line":1,"column":77}},{"source":"static/validators.js","name":"name","original":{"line":25,"column":24},"generated":{"line":1,"column":79}},{"source":"static/validators.js","name":"names","original":{"line":27,"column":7},"generated":{"line":1,"column":82}},{"source":"static/validators.js","name":"names","original":{"line":27,"column":7},"generated":{"line":1,"column":86}},{"source":"static/validators.js","name":"name","original":{"line":26,"column":1},"generated":{"line":1,"column":89}},{"source":"static/validators.js","name":"name","original":{"line":26,"column":8},"generated":{"line":1,"column":91}},{"source":"static/validators.js","name":"trim","original":{"line":26,"column":13},"generated":{"line":1,"column":93}},{"source":"static/validators.js","name":"split","original":{"line":27,"column":20},"generated":{"line":1,"column":101}},{"source":"static/validators.js","original":{"line":27,"column":26},"generated":{"line":1,"column":107}},{"source":"static/validators.js","name":"names","original":{"line":28,"column":5},"generated":{"line":1,"column":112}},{"source":"static/validators.js","original":{"line":28,"column":21},"generated":{"line":1,"column":115}},{"source":"static/validators.js","name":"names","original":{"line":28,"column":5},"generated":{"line":1,"column":118}},{"source":"static/validators.js","name":"length","original":{"line":28,"column":11},"generated":{"line":1,"column":120}},{"source":"static/validators.js","original":{"line":29,"column":2},"generated":{"line":1,"column":127}},{"source":"static/validators.js","original":{"line":29,"column":9},"generated":{"line":1,"column":134}},{"source":"static/validators.js","name":"badName","original":{"line":31,"column":5},"generated":{"line":1,"column":136}},{"source":"static/validators.js","name":"badName","original":{"line":31,"column":5},"generated":{"line":1,"column":140}},{"source":"static/validators.js","original":{"line":31,"column":15},"generated":{"line":1,"column":143}},{"source":"static/validators.js","name":"badName","original":{"line":40,"column":8},"generated":{"line":1,"column":145}},{"source":"static/validators.js","name":"names","original":{"line":32,"column":1},"generated":{"line":1,"column":152}},{"source":"static/validators.js","name":"forEach","original":{"line":32,"column":7},"generated":{"line":1,"column":154}},{"source":"static/validators.js","original":{"line":32,"column":15},"generated":{"line":1,"column":162}},{"source":"static/validators.js","name":"el","original":{"line":32,"column":16},"generated":{"line":1,"column":171}},{"source":"static/validators.js","name":"inx","original":{"line":32,"column":19},"generated":{"line":1,"column":173}},{"source":"static/validators.js","name":"el","original":{"line":34,"column":5},"generated":{"line":1,"column":176}},{"source":"static/validators.js","name":"match","original":{"line":34,"column":8},"generated":{"line":1,"column":178}},{"source":"static/validators.js","original":{"line":34,"column":14},"generated":{"line":1,"column":184}},{"source":"static/validators.js","name":"badName","original":{"line":36,"column":3},"generated":{"line":1,"column":242}},{"source":"static/validators.js","original":{"line":36,"column":13},"generated":{"line":1,"column":245}},{"source":"static/validators.js","name":"badName","original":{"line":40,"column":8},"generated":{"line":1,"column":251}}],"sources":{"static/validators.js":"/**\n * @file validators.js\n * @module validators.js\n * @description include function to validate somes fields\n*/\n// ------------------------------------------------------------------------------------------------\n/**\n * @function\n * @param {string} phoneNumber\n*/\nfunction validationPhone(phone) {\n\tphone = phone.replace(/[^\\d]/g, '');\n\tphone = '+' + phone;\n\tif (phone.length === 12)\n\t\treturn true;\n\treturn false;\n}\n// ------------------------------------------------------------------------------------------------\n/**\n * @function\n * @param {string} name \n * @returns {boolean}\n * @description if name is valid - return true;\n*/\nfunction validationName(name) {\n\tname = name.trim();\n\tconst names = name.split(' ');\n\tif (names.length != 2)\n\t\treturn false;\n\n\tlet badName = false;\n\tnames.forEach((el,inx)=>{\n\n\tif (el.match(/\\d|[!@#$%^&*()_+=1234567890\\[\\]\\{\\}:;\\'\\\"\\\\\\|<>,\\./]/))\n\t\t{\n\t\t\tbadName = true;\n\t\t\treturn;\n\t\t}\n\t})\n\treturn badName ? false : true;\n}\n\n\n\n"},"lineCount":null}},"error":null,"hash":"c1701e8c6aaddb636d063118dbe4047c","cacheData":{"env":{}}}